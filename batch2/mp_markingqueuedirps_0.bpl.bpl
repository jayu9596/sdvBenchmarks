var {:scalar} alloc: int;

var {:scalar} queued: int;

var {:scalar} yogi_error: int;

var {:scalar} stack_location: int;

var {:scalar} locked: int;

var {:pointer} SLAM_guard_S_0: int;

var {:scalar} markedPending: int;

var {:scalar} queuedWithoutMarking: int;

var {:scalar} Mem_T.P_PACKED_DIRENT: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const FatNonPagedFcbLookasideList: int;

const FatJanOne1980: int;

const NlsMbOemCodePageTag: int;

const FatIrpContextLookasideList: int;

const FsRtlLegalAnsiCharacterArray: int;

const FatMaxLarge: int;

const FatEResourceLookasideList: int;

const FatData: int;

const FatCloseContextSList: int;

const FatLargeZero: int;

const FatReserveMdl: int;

const FatSecurityPrivilege: int;

const FatTimeJanOne1980: int;

const FatOneDay: int;

const FatDecThirtyOne1979: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const KdDebuggerNotPresent: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_Io_Removelock_release_wait_returned: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const KdDebuggerEnabled: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_harnessStackLocation: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const FatFastIoDispatch: int;

const FatDiskFileSystemDeviceObject: int;

const FatCdromFileSystemDeviceObject: int;

const FatReserveEvent: int;

const FatCloseQueueMutex: int;

const Fat30Milliseconds: int;

const IoFileObjectType: int;

const FatNoAsync: int;

const NlsOemLeadByteInfo: int;

const FatMagic86400000: int;

const Fat100Milliseconds: int;

const FatMagic10000: int;

const sdv_cancelFptr: int;

const SLAM_guard_S_0_init: int;

const SeExports: int;

procedure {:origName "FatDeleteVcb"} FatDeleteVcb(actual_IrpContext: int, actual_Vcb: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeleteVcb"} FatDeleteVcb(actual_IrpContext: int, actual_Vcb: int)
{
  var {:pointer} Fcb: int;
  var {:pointer} Tmp_14: int;
  var {:pointer} IrpContext: int;
  var {:pointer} Vcb: int;
  var vslice_dummy_var_0: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_1181: int;
  var vslice_dummy_var_1182: int;
  var vslice_dummy_var_1183: int;

  anon0:
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(4);
    IrpContext := actual_IrpContext;
    Vcb := actual_Vcb;
    assume {:nonnull} IrpContext != 0;
    assume IrpContext > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} IrpContext != 0;
    assume IrpContext > 0;
    goto L5;

  L5:
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 1} sdv_ExFreePool(0);
    goto L7;

  L7:
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 2} sdv_ExFreePool(0);
    goto L11;

  L11:
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 3} sdv_ExFreePool(0);
    goto L15;

  L15:
    call {:si_unique_call 4} vslice_dummy_var_1 := sdv_RemoveEntryList(0);
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L23;

  L23:
    call {:si_unique_call 5} KeBugCheckEx(35, 1835757, 0, 0, 0);
    goto L26;

  L26:
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    havoc Tmp_14;
    assume {:nonnull} Tmp_14 != 0;
    assume Tmp_14 > 0;
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    havoc vslice_dummy_var_1181;
    call {:si_unique_call 6} FatDeleteFcb_Real(IrpContext, vslice_dummy_var_1181);
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto L27;

  L27:
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L36;

  L36:
    call {:si_unique_call 7} Fcb := FatDeleteVcb_loop_L36(Fcb, IrpContext, Vcb);
    goto L36_last;

  L36_last:
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    havoc vslice_dummy_var_1183;
    call {:si_unique_call 19} Fcb := FatGetNextFcbBottomUp(IrpContext, 0, vslice_dummy_var_1183);
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 8} FatDeleteFcb_Real(IrpContext, Fcb);
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    assume false;
    return;

  anon31_Then:
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    havoc vslice_dummy_var_1182;
    call {:si_unique_call 9} FatDeleteFcb_Real(IrpContext, vslice_dummy_var_1182);
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto L33;

  L33:
    call {:si_unique_call 10} vslice_dummy_var_2 := ExDeleteResourceLite(0);
    call {:si_unique_call 11} vslice_dummy_var_3 := ExDeleteResourceLite(0);
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 12} FatTearDownAllocationSupport(IrpContext, Vcb);
    goto L55;

  L55:
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 13} sdv_ExFreePool(0);
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto L62;

  L62:
    call {:si_unique_call 14} vslice_dummy_var_4 := KeCancelTimer(0);
    call {:si_unique_call 15} vslice_dummy_var_5 := KeRemoveQueueDpc(0);
    call {:si_unique_call 16} sdv_ExFreePool(0);
    call {:si_unique_call 17} vslice_dummy_var_6 := sdv_ObDereferenceObject(0);
    call {:si_unique_call 18} sdv_RtlZeroMemory(0, 688);
    return;

  anon33_Then:
    goto L62;

  anon32_Then:
    goto L55;

  anon30_Then:
    goto L33;

  anon29_Then:
    goto L27;

  anon27_Then:
    assume {:nonnull} Vcb != 0;
    assume Vcb > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L26;

  anon28_Then:
    goto L23;

  anon26_Then:
    goto L15;

  anon25_Then:
    goto L11;

  anon24_Then:
    goto L7;

  anon23_Then:
    goto L5;
}



procedure {:origName "FatAllocateCcb"} FatAllocateCcb() returns (Tmp_16: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAllocateCcb"} FatAllocateCcb() returns (Tmp_16: int)
{
  var {:pointer} sdv_8: int;

  anon0:
    call {:si_unique_call 20} sdv_8 := ExAllocatePoolWithTag(17, 44, -1015783098);
    Tmp_16 := sdv_8;
    return;
}



procedure {:origName "FatFreeResource"} FatFreeResource(actual_Resource: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFreeResource"} FatFreeResource(actual_Resource: int)
{
  var {:pointer} Resource: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 21} vslice_dummy_var_7 := __HAVOC_malloc(4);
    Resource := actual_Resource;
    call {:si_unique_call 22} vslice_dummy_var_8 := ExDeleteResourceLite(0);
    call {:si_unique_call 23} ExFreeToNPagedLookasideList(FatEResourceLookasideList, Resource);
    return;
}



procedure {:origName "FatDeleteIrpContext_Real"} FatDeleteIrpContext_Real(actual_IrpContext_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeleteIrpContext_Real"} FatDeleteIrpContext_Real(actual_IrpContext_1: int)
{
  var {:pointer} Tmp_22: int;
  var {:pointer} IrpContext_1: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 24} vslice_dummy_var_9 := __HAVOC_malloc(4);
    IrpContext_1 := actual_IrpContext_1;
    assume {:nonnull} IrpContext_1 != 0;
    assume IrpContext_1 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} IrpContext_1 != 0;
    assume IrpContext_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} IrpContext_1 != 0;
    assume IrpContext_1 > 0;
    havoc Tmp_22;
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} IrpContext_1 != 0;
    assume IrpContext_1 > 0;
    call {:si_unique_call 25} IoFreeMdl(0);
    goto L9;

  L9:
    call {:si_unique_call 26} sdv_ExFreePool(0);
    goto L4;

  L4:
    call {:si_unique_call 27} FatFreeIrpContext(IrpContext_1);
    return;

  anon9_Then:
    goto L9;

  anon8_Then:
    goto L4;

  anon7_Then:
    goto L4;
}



procedure {:origName "FatPreallocateCloseContext"} FatPreallocateCloseContext(actual_Vcb_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPreallocateCloseContext"} FatPreallocateCloseContext(actual_Vcb_1: int)
{
  var {:pointer} sdv_10: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 28} vslice_dummy_var_10 := __HAVOC_malloc(4);
    call {:si_unique_call 29} sdv_10 := ExAllocatePoolWithTag(17, 32, -126590650);
    call {:si_unique_call 30} vslice_dummy_var_11 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    return;
}



procedure {:origName "FatConstructNamesInFcb"} FatConstructNamesInFcb(actual_IrpContext_2: int, actual_Fcb_1: int, actual_Dirent: int, actual_Lfn: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatConstructNamesInFcb"} FatConstructNamesInFcb(actual_IrpContext_2: int, actual_Fcb_1: int, actual_Dirent: int, actual_Lfn: int)
{
  var {:scalar} i: int;
  var {:pointer} LongOemName: int;
  var {:scalar} OemA: int;
  var {:scalar} Tmp_26: int;
  var {:scalar} Tmp_27: int;
  var {:pointer} Tmp_28: int;
  var {:pointer} Tmp_29: int;
  var {:scalar} Unicode: int;
  var {:pointer} sdv_12: int;
  var {:scalar} Tmp_30: int;
  var {:scalar} Tmp_31: int;
  var {:scalar} sdv_13: int;
  var {:pointer} Tmp_32: int;
  var {:scalar} Tmp_33: int;
  var {:scalar} OemB: int;
  var {:pointer} Tmp_34: int;
  var {:pointer} ShortName: int;
  var {:scalar} c: int;
  var {:pointer} sdv_15: int;
  var {:pointer} Tmp_36: int;
  var {:scalar} Tmp_37: int;
  var {:pointer} sdv_18: int;
  var {:pointer} sdv_19: int;
  var {:pointer} sdv_20: int;
  var {:pointer} Tmp_38: int;
  var {:scalar} Tmp_40: int;
  var {:scalar} Tmp_41: int;
  var {:scalar} sdv_21: int;
  var {:pointer} LongUniName: int;
  var {:scalar} Tmp_42: int;
  var {:pointer} Tmp_44: int;
  var {:scalar} Tmp_45: int;
  var {:scalar} Tmp_46: int;
  var {:pointer} IrpContext_2: int;
  var {:pointer} Fcb_1: int;
  var {:pointer} Dirent: int;
  var {:pointer} Lfn: int;
  var vslice_dummy_var_12: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;

  anon0:
    call {:si_unique_call 31} OemA := __HAVOC_malloc(12);
    call {:si_unique_call 32} Unicode := __HAVOC_malloc(12);
    call {:si_unique_call 33} OemB := __HAVOC_malloc(12);
    call {:si_unique_call 34} vslice_dummy_var_12 := __HAVOC_malloc(4);
    IrpContext_2 := actual_IrpContext_2;
    Fcb_1 := actual_Fcb_1;
    Dirent := actual_Dirent;
    Lfn := actual_Lfn;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    ShortName := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(ShortName__FCB(Fcb_1)));
    assume {:nonnull} Dirent != 0;
    assume Dirent > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto L15;

  L15:
    assume {:nonnull} Dirent != 0;
    assume Dirent > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto L18;

  L18:
    assume {:nonnull} ShortName != 0;
    assume ShortName > 0;
    call {:si_unique_call 35} sdv_12 := ExAllocatePoolWithTag(17, 16, -294362810);
    assume {:nonnull} ShortName != 0;
    assume ShortName > 0;
    call {:si_unique_call 36} Fat8dot3ToString(IrpContext_2, Dirent, 0, ShortName);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Lfn != 0;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    havoc Tmp_45;
    call {:si_unique_call 37} sdv_18 := ExAllocatePoolWithTag(17, Tmp_45, -294362810);
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    havoc Tmp_26;
    call {:si_unique_call 38} sdv_RtlCopyMemory(0, 0, Tmp_26);
    i := 0;
    goto L66;

  L66:
    call {:si_unique_call 39} i, Tmp_31, Tmp_38 := FatConstructNamesInFcb_loop_L66(i, Tmp_31, Tmp_38, Lfn);
    goto L66_last;

  L66_last:
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    Tmp_31 := i;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    havoc Tmp_38;
    assume {:nonnull} Tmp_38 != 0;
    assume Tmp_38 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    i := i + 1;
    goto anon51_Else_dummy;

  anon51_Else_dummy:
    assume false;
    return;

  anon51_Then:
    goto L67;

  L67:
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    LongOemName := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(Oem_unnamed_tag_71(LongName__FCB(Fcb_1))));
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    havoc Tmp_30;
    call {:si_unique_call 40} sdv_20 := ExAllocatePoolWithTag(17, Tmp_30, -294362810);
    assume {:nonnull} LongOemName != 0;
    assume LongOemName > 0;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    assume {:nonnull} LongOemName != 0;
    assume LongOemName > 0;
    assume {:nonnull} LongOemName != 0;
    assume LongOemName > 0;
    i := 0;
    goto L81;

  L81:
    call {:si_unique_call 41} i, Tmp_27, Tmp_32, Tmp_33, c, Tmp_41, Tmp_42, Tmp_44 := FatConstructNamesInFcb_loop_L81(i, LongOemName, Tmp_27, Tmp_32, Tmp_33, c, Tmp_41, Tmp_42, Tmp_44, Lfn);
    goto L81_last;

  L81_last:
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Tmp_33 := i;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    havoc Tmp_32;
    assume {:nonnull} Tmp_32 != 0;
    assume Tmp_32 > 0;
    havoc c;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} 97 > c;
    Tmp_41 := c;
    goto L88;

  L88:
    Tmp_42 := i;
    assume {:nonnull} LongOemName != 0;
    assume LongOemName > 0;
    havoc Tmp_44;
    assume {:nonnull} Tmp_44 != 0;
    assume Tmp_44 > 0;
    i := i + 1;
    goto L88_dummy;

  L88_dummy:
    assume false;
    return;

  anon52_Then:
    assume {:partition} c >= 97;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} 122 >= c;
    Tmp_27 := c - 32;
    goto L92;

  L92:
    Tmp_41 := Tmp_27;
    goto L88;

  anon45_Then:
    assume {:partition} c > 122;
    Tmp_27 := c;
    goto L92;

  anon43_Then:
    assume {:nonnull} LongOemName != 0;
    assume LongOemName > 0;
    assume {:nonnull} ShortName != 0;
    assume ShortName > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} LongOemName != 0;
    assume LongOemName > 0;
    assume {:nonnull} ShortName != 0;
    assume ShortName > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_13 == 0;
    goto L103;

  L103:
    call {:si_unique_call 42} sdv_ExFreePool(0);
    assume {:nonnull} LongOemName != 0;
    assume LongOemName > 0;
    assume {:nonnull} LongOemName != 0;
    assume LongOemName > 0;
    assume {:nonnull} LongOemName != 0;
    assume LongOemName > 0;
    goto L110;

  L110:
    call {:si_unique_call 43} sdv_21 := sdv_AbnormalTermination();
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_21 != 0;
    assume {:nonnull} ShortName != 0;
    assume ShortName > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 44} sdv_ExFreePool(0);
    assume {:nonnull} ShortName != 0;
    assume ShortName > 0;
    goto L1;

  L1:
    return;

  anon47_Then:
    goto L1;

  anon46_Then:
    assume {:partition} sdv_21 == 0;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    havoc Tmp_36;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    assume {:nonnull} Tmp_36 != 0;
    assume Tmp_36 > 0;
    call {:si_unique_call 45} FatInsertName(IrpContext_2, RootOemNode_unnamed_tag_68(Dcb_unnamed_tag_67(Specific__FCB(Tmp_36))), ShortName__FCB(Fcb_1));
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    havoc Tmp_28;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    call {:si_unique_call 46} FatInsertName(IrpContext_2, RootOemNode_unnamed_tag_68(Dcb_unnamed_tag_67(Specific__FCB(Tmp_28))), Oem_unnamed_tag_71(LongName__FCB(Fcb_1)));
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto L125;

  L125:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    havoc Tmp_29;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    call {:si_unique_call 47} FatInsertName(IrpContext_2, RootUnicodeNode_unnamed_tag_68(Dcb_unnamed_tag_67(Specific__FCB(Tmp_29))), Unicode_unnamed_tag_71(LongName__FCB(Fcb_1)));
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto L130;

  L130:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto L1;

  anon48_Then:
    goto L130;

  anon54_Then:
    goto L125;

  anon53_Then:
    assume {:partition} sdv_13 != 0;
    goto L93;

  L93:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    havoc Tmp_34;
    assume {:nonnull} Tmp_34 != 0;
    assume Tmp_34 > 0;
    call {:si_unique_call 48} sdv_19 := FatFindFcb(IrpContext_2, RootOemNode_unnamed_tag_68(Dcb_unnamed_tag_67(Specific__FCB(Tmp_34))), LongOemName, 0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_19 == 0;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto L110;

  anon49_Then:
    assume {:partition} sdv_19 != 0;
    goto L103;

  anon44_Then:
    goto L93;

  anon42_Then:
    assume {:nonnull} OemA != 0;
    assume OemA > 0;
    assume {:nonnull} OemB != 0;
    assume OemB > 0;
    assume {:nonnull} Unicode != 0;
    assume Unicode > 0;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    assume {:nonnull} Unicode != 0;
    assume Unicode > 0;
    assume {:nonnull} Unicode != 0;
    assume Unicode > 0;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    havoc Tmp_37;
    call {:si_unique_call 49} sdv_15 := ExAllocatePoolWithTag(17, Tmp_37, -294362810);
    assume {:nonnull} Unicode != 0;
    assume Unicode > 0;
    assume {:nonnull} Lfn != 0;
    assume Lfn > 0;
    havoc Tmp_46;
    call {:si_unique_call 50} sdv_RtlCopyMemory(0, 0, Tmp_46);
    call {:si_unique_call 51} vslice_dummy_var_14 := RtlDowncaseUnicodeString(0, 0, 0);
    call {:si_unique_call 52} vslice_dummy_var_13 := RtlUpcaseUnicodeString(0, 0, 0);
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    LongUniName := Unicode_unnamed_tag_70(Name__FILE_NAME_NODE(Unicode_unnamed_tag_71(LongName__FCB(Fcb_1))));
    assume {:nonnull} LongUniName != 0;
    assume LongUniName > 0;
    assume {:nonnull} Unicode != 0;
    assume Unicode > 0;
    assume {:nonnull} LongUniName != 0;
    assume LongUniName > 0;
    assume {:nonnull} LongUniName != 0;
    assume LongUniName > 0;
    assume {:nonnull} Unicode != 0;
    assume Unicode > 0;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto L110;

  anon41_Then:
    goto L67;

  anon40_Then:
    goto L51;

  L51:
    assume {:nonnull} NlsMbOemCodePageTag != 0;
    assume NlsMbOemCodePageTag > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    call {:si_unique_call 53} Tmp_40 := corral_nondet();
    goto L167;

  L167:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto L110;

  anon39_Then:
    assume {:nonnull} ShortName != 0;
    assume ShortName > 0;
    havoc Tmp_40;
    goto L167;

  anon38_Then:
    assume {:partition} Lfn == 0;
    goto L51;

  anon37_Then:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto L18;

  anon50_Then:
    assume {:nonnull} Fcb_1 != 0;
    assume Fcb_1 > 0;
    goto L15;
}



procedure {:origName "FatSwapVpb"} FatSwapVpb(actual_IrpContext_3: int, actual_Vcb_2: int) returns (Tmp_48: int);
  free ensures {:va_keep} Tmp_48 == 0 || Tmp_48 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSwapVpb"} FatSwapVpb(actual_IrpContext_3: int, actual_Vcb_2: int) returns (Tmp_48: int)
{
  var {:pointer} Tmp_49: int;
  var {:pointer} Tmp_50: int;
  var {:pointer} Tmp_51: int;
  var {:pointer} Tmp_52: int;
  var {:pointer} IrpSp: int;
  var {:pointer} Tmp_53: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} OldVpb: int;
  var {:scalar} Result: int;
  var {:pointer} Tmp_56: int;
  var {:pointer} IrpContext_3: int;
  var {:pointer} Vcb_2: int;
  var vslice_dummy_var_1184: int;

  anon0:
    IrpContext_3 := actual_IrpContext_3;
    Vcb_2 := actual_Vcb_2;
    Result := 0;
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    havoc OldVpb;
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L10;

  L10:
    Tmp_48 := Result;
    return;

  anon13_Then:
    assume {:nonnull} OldVpb != 0;
    assume OldVpb > 0;
    havoc Tmp_50;
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    havoc Tmp_49;
    assume {:nonnull} Tmp_49 != 0;
    assume Tmp_49 > 0;
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    havoc Tmp_51;
    assume {:nonnull} OldVpb != 0;
    assume OldVpb > 0;
    assume {:nonnull} Tmp_51 != 0;
    assume Tmp_51 > 0;
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    havoc Tmp_52;
    assume {:nonnull} Tmp_52 != 0;
    assume Tmp_52 > 0;
    havoc Tmp_55;
    assume {:nonnull} Tmp_55 != 0;
    assume Tmp_55 > 0;
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    havoc Tmp_53;
    assume {:nonnull} OldVpb != 0;
    assume OldVpb > 0;
    assume {:nonnull} Tmp_53 != 0;
    assume Tmp_53 > 0;
    assume {:nonnull} IrpContext_3 != 0;
    assume IrpContext_3 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} IrpContext_3 != 0;
    assume IrpContext_3 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} IrpContext_3 != 0;
    assume IrpContext_3 > 0;
    havoc vslice_dummy_var_1184;
    call {:si_unique_call 54} IrpSp := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1184);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    goto L17;

  L17:
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    assume {:nonnull} Vcb_2 != 0;
    assume Vcb_2 > 0;
    Result := 1;
    goto L10;

  anon12_Then:
    goto L17;

  anon11_Then:
    goto L17;

  anon15_Then:
    goto L17;

  anon14_Then:
    goto L10;
}



procedure {:origName "FatDeleteCcb_Real"} FatDeleteCcb_Real(actual_IrpContext_4: int, actual_Ccb: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeleteCcb_Real"} FatDeleteCcb_Real(actual_IrpContext_4: int, actual_Ccb: int)
{
  var {:pointer} Ccb: int;
  var vslice_dummy_var_15: int;

  anon0:
    call {:si_unique_call 55} vslice_dummy_var_15 := __HAVOC_malloc(4);
    Ccb := actual_Ccb;
    call {:si_unique_call 56} FatDeallocateCcbStrings(Ccb);
    call {:si_unique_call 57} FatFreeCcb(Ccb);
    return;
}



procedure {:origName "FatDeleteFcb_Real"} FatDeleteFcb_Real(actual_IrpContext_5: int, actual_Fcb_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeleteFcb_Real"} FatDeleteFcb_Real(actual_IrpContext_5: int, actual_Fcb_2: int)
{
  var {:pointer} Tmp_64: int;
  var {:pointer} Tmp_66: int;
  var {:pointer} IrpContext_5: int;
  var {:pointer} Fcb_2: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_1185: int;
  var vslice_dummy_var_1186: int;
  var vslice_dummy_var_1187: int;

  anon0:
    call {:si_unique_call 58} vslice_dummy_var_16 := __HAVOC_malloc(4);
    IrpContext_5 := actual_IrpContext_5;
    Fcb_2 := actual_Fcb_2;
    call {:si_unique_call 59} Tmp_66 := __HAVOC_malloc(4);
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 60} KeBugCheckEx(35, 1836844, 0, 0, 0);
    goto L4;

  L4:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L9;

  L9:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    havoc Tmp_66;
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    call {:si_unique_call 61} sdv_ExFreePool(0);
    goto L10;

  L10:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 62} vslice_dummy_var_17 := sdv_RemoveEntryList(0);
    goto L21;

  L21:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 63} FatRemoveNames(IrpContext_5, Fcb_2);
    goto L25;

  L25:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    call {:si_unique_call 64} sdv_ExFreePool(0);
    goto L31;

  L31:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    call {:si_unique_call 65} sdv_ExFreePool(0);
    goto L29;

  L29:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    call {:si_unique_call 66} sdv_ExFreePool(0);
    goto L38;

  L38:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    havoc vslice_dummy_var_1185;
    call {:si_unique_call 67} FatFreeResource(vslice_dummy_var_1185);
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    havoc vslice_dummy_var_1186;
    call {:si_unique_call 68} FatFreeResource(vslice_dummy_var_1186);
    goto L45;

  L45:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    havoc Tmp_64;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    call {:si_unique_call 69} sdv_ExFreePool(0);
    goto L49;

  L49:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    havoc vslice_dummy_var_1187;
    call {:si_unique_call 70} FatFreeNonPagedFcb(vslice_dummy_var_1187);
    call {:si_unique_call 71} FatFreeFcb(Fcb_2);
    return;

  anon39_Then:
    goto L49;

  anon37_Then:
    goto L45;

  anon34_Then:
    goto L38;

  anon36_Then:
    goto L29;

  anon35_Then:
    goto L31;

  anon33_Then:
    goto L29;

  anon32_Then:
    goto L25;

  anon31_Then:
    goto L21;

  anon38_Then:
    goto L10;

  anon30_Then:
    goto L10;

  anon28_Then:
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 72} FsRtlUninitializeFileLock(0);
    assume {:nonnull} Fcb_2 != 0;
    assume Fcb_2 > 0;
    goto L10;

  anon29_Then:
    goto L9;

  anon27_Then:
    goto L4;
}



procedure {:origName "FatGetNextFcbBottomUp"} FatGetNextFcbBottomUp(actual_IrpContext_6: int, actual_Fcb_3: int, actual_TerminationFcb: int) returns (Tmp_69: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetNextFcbBottomUp"} FatGetNextFcbBottomUp(actual_IrpContext_6: int, actual_Fcb_3: int, actual_TerminationFcb: int) returns (Tmp_69: int)
{
  var {:pointer} Tmp_70: int;
  var {:pointer} NextFcb: int;
  var {:pointer} Tmp_71: int;
  var {:pointer} sdv_25: int;
  var {:pointer} Tmp_72: int;
  var {:scalar} sdv_26: int;
  var {:pointer} Tmp_74: int;
  var {:pointer} sdv_27: int;
  var {:scalar} sdv_28: int;
  var {:pointer} sdv_29: int;
  var {:pointer} Fcb_3: int;
  var {:pointer} TerminationFcb: int;
  var vslice_dummy_var_1188: int;
  var vslice_dummy_var_1189: int;
  var vslice_dummy_var_1190: int;

  anon0:
    Fcb_3 := actual_Fcb_3;
    TerminationFcb := actual_TerminationFcb;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Fcb_3 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Fcb_3 == TerminationFcb;
    Tmp_69 := 0;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} Fcb_3 != TerminationFcb;
    assume {:nonnull} Fcb_3 != 0;
    assume Fcb_3 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    Tmp_71 := 0;
    goto L13;

  L13:
    NextFcb := Tmp_71;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} NextFcb != 0;
    goto L16;

  L16:
    call {:si_unique_call 73} Tmp_70, NextFcb, Tmp_72, sdv_26, Tmp_74, sdv_27, sdv_28, sdv_29 := FatGetNextFcbBottomUp_loop_L16(Tmp_70, NextFcb, Tmp_72, sdv_26, Tmp_74, sdv_27, sdv_28, sdv_29);
    goto L16_last;

  L16_last:
    Tmp_70 := NextFcb;
    assume {:nonnull} Tmp_70 != 0;
    assume Tmp_70 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 74} sdv_26 := sdv_IsListEmpty(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_26 != 0;
    Tmp_74 := 0;
    goto L26;

  L26:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Tmp_74 != 0;
    call {:si_unique_call 75} sdv_28 := sdv_IsListEmpty(0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_28 != 0;
    Tmp_72 := 0;
    goto L35;

  L35:
    NextFcb := Tmp_72;
    goto L35_dummy;

  L35_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} sdv_28 == 0;
    assume {:nonnull} NextFcb != 0;
    assume NextFcb > 0;
    havoc vslice_dummy_var_1188;
    call {:si_unique_call 76} sdv_29 := sdv_containing_record(vslice_dummy_var_1188, 72);
    Tmp_72 := sdv_29;
    goto L35;

  anon20_Then:
    assume {:partition} Tmp_74 == 0;
    goto L17;

  L17:
    Tmp_69 := NextFcb;
    goto L1;

  anon19_Then:
    assume {:partition} sdv_26 == 0;
    assume {:nonnull} NextFcb != 0;
    assume NextFcb > 0;
    havoc vslice_dummy_var_1189;
    call {:si_unique_call 77} sdv_27 := sdv_containing_record(vslice_dummy_var_1189, 72);
    Tmp_74 := sdv_27;
    goto L26;

  anon24_Then:
    goto L17;

  anon23_Then:
    assume {:partition} NextFcb == 0;
    assume {:nonnull} Fcb_3 != 0;
    assume Fcb_3 > 0;
    havoc Tmp_69;
    goto L1;

  anon22_Then:
    assume {:nonnull} Fcb_3 != 0;
    assume Fcb_3 > 0;
    havoc vslice_dummy_var_1190;
    call {:si_unique_call 78} sdv_25 := sdv_containing_record(vslice_dummy_var_1190, 72);
    Tmp_71 := sdv_25;
    goto L13;

  anon17_Then:
    assume {:partition} Fcb_3 == 0;
    NextFcb := TerminationFcb;
    goto L16;
}



procedure {:origName "FatAllocateNonPagedFcb"} FatAllocateNonPagedFcb() returns (Tmp_76: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAllocateNonPagedFcb"} FatAllocateNonPagedFcb() returns (Tmp_76: int)
{
  var {:pointer} sdv_30: int;

  anon0:
    call {:si_unique_call 79} sdv_30 := sdv_ExAllocateFromNPagedLookasideList(0);
    Tmp_76 := sdv_30;
    return;
}



procedure {:origName "FatFreeIrpContext"} FatFreeIrpContext(actual_IrpContext_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFreeIrpContext"} FatFreeIrpContext(actual_IrpContext_7: int)
{
  var {:pointer} IrpContext_7: int;
  var vslice_dummy_var_18: int;

  anon0:
    call {:si_unique_call 80} vslice_dummy_var_18 := __HAVOC_malloc(4);
    IrpContext_7 := actual_IrpContext_7;
    call {:si_unique_call 81} ExFreeToNPagedLookasideList(FatIrpContextLookasideList, IrpContext_7);
    return;
}



procedure {:origName "FatAllocateFcb"} FatAllocateFcb() returns (Tmp_80: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAllocateFcb"} FatAllocateFcb() returns (Tmp_80: int)
{
  var {:pointer} sdv_31: int;

  anon0:
    call {:si_unique_call 82} sdv_31 := ExAllocatePoolWithTag(17, 352, -965451450);
    Tmp_80 := sdv_31;
    return;
}



procedure {:origName "FatGetNextFcbTopDown"} FatGetNextFcbTopDown(actual_IrpContext_8: int, actual_Fcb_4: int, actual_TerminationFcb_1: int) returns (Tmp_82: int);
  free ensures {:va_keep} Tmp_82 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetNextFcbTopDown"} FatGetNextFcbTopDown(actual_IrpContext_8: int, actual_Fcb_4: int, actual_TerminationFcb_1: int) returns (Tmp_82: int)
{
  var {:pointer} Tmp_83: int;
  var {:pointer} Tmp_84: int;
  var {:scalar} sdv_32: int;
  var {:scalar} sdv_33: int;
  var {:pointer} sdv_34: int;
  var {:pointer} sdv_35: int;
  var {:pointer} sdv_36: int;
  var {:pointer} Tmp_86: int;
  var {:pointer} Tmp_89: int;
  var {:pointer} Sibling: int;
  var {:pointer} Tmp_90: int;
  var {:pointer} Tmp_91: int;
  var {:pointer} Fcb_4: int;
  var {:pointer} TerminationFcb_1: int;
  var vslice_dummy_var_1191: int;
  var vslice_dummy_var_1192: int;
  var vslice_dummy_var_1193: int;

  anon0:
    Fcb_4 := actual_Fcb_4;
    TerminationFcb_1 := actual_TerminationFcb_1;
    Tmp_91 := Fcb_4;
    assume {:nonnull} Tmp_91 != 0;
    assume Tmp_91 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L6;

  L6:
    call {:si_unique_call 83} sdv_32 := sdv_IsListEmpty(0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_32 != 0;
    goto L13;

  L13:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Fcb_4 == TerminationFcb_1;
    Tmp_82 := 0;
    goto L1;

  L1:
    return;

  anon22_Then:
    assume {:partition} Fcb_4 != TerminationFcb_1;
    assume {:nonnull} Fcb_4 != 0;
    assume Fcb_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    Tmp_86 := 0;
    goto L20;

  L20:
    Sibling := Tmp_86;
    goto L22;

  L22:
    call {:si_unique_call 84} Tmp_84, sdv_35, Sibling, Fcb_4 := FatGetNextFcbTopDown_loop_L22(Tmp_84, sdv_35, Sibling, Fcb_4, TerminationFcb_1);
    goto L22_last;

  L22_last:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Sibling != 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Sibling != TerminationFcb_1;
    Tmp_89 := Sibling;
    goto L27;

  L27:
    Tmp_82 := Tmp_89;
    goto L1;

  anon25_Then:
    assume {:partition} Sibling == TerminationFcb_1;
    Tmp_89 := 0;
    goto L27;

  anon23_Then:
    assume {:partition} Sibling == 0;
    assume {:nonnull} Fcb_4 != 0;
    assume Fcb_4 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_82 := 0;
    goto L1;

  anon24_Then:
    assume {:nonnull} Fcb_4 != 0;
    assume Fcb_4 > 0;
    havoc Fcb_4;
    assume {:nonnull} Fcb_4 != 0;
    assume Fcb_4 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    Tmp_84 := 0;
    goto L35;

  L35:
    Sibling := Tmp_84;
    goto L35_dummy;

  L35_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:nonnull} Fcb_4 != 0;
    assume Fcb_4 > 0;
    havoc vslice_dummy_var_1191;
    call {:si_unique_call 85} sdv_35 := sdv_containing_record(vslice_dummy_var_1191, 72);
    Tmp_84 := sdv_35;
    goto L35;

  anon28_Then:
    assume {:nonnull} Fcb_4 != 0;
    assume Fcb_4 > 0;
    havoc vslice_dummy_var_1192;
    call {:si_unique_call 86} sdv_34 := sdv_containing_record(vslice_dummy_var_1192, 72);
    Tmp_86 := sdv_34;
    goto L20;

  anon21_Then:
    assume {:partition} sdv_32 == 0;
    call {:si_unique_call 87} sdv_33 := sdv_IsListEmpty(0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_33 != 0;
    Tmp_90 := 0;
    goto L43;

  L43:
    Tmp_82 := Tmp_90;
    goto L1;

  anon26_Then:
    assume {:partition} sdv_33 == 0;
    assume {:nonnull} Fcb_4 != 0;
    assume Fcb_4 > 0;
    havoc vslice_dummy_var_1193;
    call {:si_unique_call 88} sdv_36 := sdv_containing_record(vslice_dummy_var_1193, 72);
    Tmp_90 := sdv_36;
    goto L43;

  anon27_Then:
    Tmp_83 := Fcb_4;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L13;

  anon30_Then:
    goto L6;
}



procedure {:origName "FatScanForDataTrack"} FatScanForDataTrack(actual_IrpContext_9: int, actual_TargetDeviceObject: int) returns (Tmp_92: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_92 == 0 || Tmp_92 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatScanForDataTrack"} FatScanForDataTrack(actual_IrpContext_9: int, actual_TargetDeviceObject: int) returns (Tmp_92: int)
{
  var {:pointer} CdromToc: int;
  var {:scalar} Tmp_93: int;
  var {:scalar} LocalTrackCount: int;
  var {:pointer} sdv_37: int;
  var {:scalar} Status_1: int;
  var {:scalar} Iosb_3: int;
  var {:scalar} Tmp_94: int;
  var {:pointer} Tmp_96: int;
  var {:scalar} LocalTocLength: int;
  var {:pointer} Tmp_97: int;
  var {:scalar} Result_1: int;
  var {:pointer} IrpContext_9: int;
  var {:pointer} TargetDeviceObject: int;

  anon0:
    call {:si_unique_call 89} Iosb_3 := __HAVOC_malloc(12);
    IrpContext_9 := actual_IrpContext_9;
    TargetDeviceObject := actual_TargetDeviceObject;
    call {:si_unique_call 90} Tmp_96 := __HAVOC_malloc(3600);
    call {:si_unique_call 91} Tmp_97 := __HAVOC_malloc(3600);
    Result_1 := 0;
    call {:si_unique_call 92} sdv_do_paged_code_check();
    call {:si_unique_call 93} sdv_37 := ExAllocatePoolWithTag(17, 804, -814456506);
    CdromToc := sdv_37;
    call {:si_unique_call 94} sdv_RtlZeroMemory(0, 804);
    call {:si_unique_call 95} Status_1 := FatPerformDevIoCtrl(IrpContext_9, 147456, TargetDeviceObject, CdromToc, 804, 0, 1, Iosb_3);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Status_1 != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Status_1 == -1073741435;
    goto L31;

  L31:
    Result_1 := 1;
    goto L33;

  L33:
    call {:si_unique_call 96} sdv_ExFreePool(0);
    Tmp_92 := Result_1;
    return;

  anon16_Then:
    assume {:partition} Status_1 != -1073741435;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Status_1 != -1073741808;
    goto L33;

  anon17_Then:
    assume {:partition} Status_1 == -1073741808;
    goto L31;

  anon15_Then:
    assume {:partition} Status_1 == 0;
    assume {:nonnull} CdromToc != 0;
    assume CdromToc > 0;
    havoc LocalTrackCount;
    Tmp_93 := LocalTrackCount + 1;
    assume {:nonnull} CdromToc != 0;
    assume CdromToc > 0;
    havoc Tmp_97;
    LocalTocLength := Tmp_97 + Tmp_93 * 36 - CdromToc;
    assume {:nonnull} Iosb_3 != 0;
    assume Iosb_3 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} CdromToc != 0;
    assume CdromToc > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} LocalTrackCount == 1;
    assume {:nonnull} CdromToc != 0;
    assume CdromToc > 0;
    havoc Tmp_96;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    havoc Tmp_94;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Tmp_94 == 0;
    Result_1 := 0;
    goto L63;

  L63:
    goto L33;

  anon21_Then:
    assume {:partition} Tmp_94 != 0;
    Result_1 := 1;
    goto L63;

  anon19_Then:
    assume {:partition} LocalTrackCount != 1;
    goto L33;

  anon18_Then:
    goto L33;

  anon20_Then:
    goto L33;
}



procedure {:origName "FatFreeFcb"} FatFreeFcb(actual_Fcb_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFreeFcb"} FatFreeFcb(actual_Fcb_5: int)
{
  var vslice_dummy_var_19: int;

  anon0:
    call {:si_unique_call 97} vslice_dummy_var_19 := __HAVOC_malloc(4);
    call {:si_unique_call 98} sdv_ExFreePool(0);
    return;
}



procedure {:origName "FatInitializeVcb"} FatInitializeVcb(actual_IrpContext_10: int, actual_Vcb_3: int, actual_TargetDeviceObject_1: int, actual_Vpb: int, actual_FsDeviceObject: int);
  modifies alloc, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatInitializeVcb"} FatInitializeVcb(actual_IrpContext_10: int, actual_Vcb_3: int, actual_TargetDeviceObject_1: int, actual_Vpb: int, actual_FsDeviceObject: int)
{
  var {:scalar} i_1: int;
  var {:pointer} UnwindStatistics: int;
  var {:scalar} Tmp_100: int;
  var {:scalar} UnwindWeAllocatedMcb: int;
  var {:scalar} Tmp_101: int;
  var {:pointer} UnwindCacheMap: int;
  var {:pointer} Tmp_102: int;
  var {:scalar} Tmp_103: int;
  var {:scalar} Status_2: int;
  var {:pointer} UnwindResource: int;
  var {:pointer} sdv_46: int;
  var {:scalar} FileSizes: int;
  var {:scalar} sdv_48: int;
  var {:pointer} Tmp_104: int;
  var {:pointer} Tmp_105: int;
  var {:scalar} Tmp_106: int;
  var {:pointer} sdv_53: int;
  var {:pointer} Tmp_108: int;
  var {:pointer} Tmp_109: int;
  var {:pointer} Tmp_110: int;
  var {:pointer} Tmp_111: int;
  var {:scalar} Tmp_112: int;
  var {:scalar} Tmp_113: int;
  var {:pointer} Tmp_114: int;
  var {:pointer} sdv_58: int;
  var {:pointer} Tmp_115: int;
  var {:scalar} Tmp_116: int;
  var {:pointer} UnwindFileObject: int;
  var {:pointer} UnwindResource2: int;
  var {:scalar} HotplugInfo: int;
  var {:pointer} Tmp_117: int;
  var {:scalar} Tmp_118: int;
  var {:scalar} Tmp_119: int;
  var {:pointer} IrpContext_10: int;
  var {:pointer} Vcb_3: int;
  var {:pointer} TargetDeviceObject_1: int;
  var {:pointer} Vpb: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_1194: int;

  anon0:
    call {:si_unique_call 99} FileSizes := __HAVOC_malloc(60);
    call {:si_unique_call 100} vslice_dummy_var_20 := __HAVOC_malloc(4);
    call {:si_unique_call 101} HotplugInfo := __HAVOC_malloc(20);
    IrpContext_10 := actual_IrpContext_10;
    Vcb_3 := actual_Vcb_3;
    TargetDeviceObject_1 := actual_TargetDeviceObject_1;
    Vpb := actual_Vpb;
    UnwindResource := 0;
    UnwindResource2 := 0;
    UnwindFileObject := 0;
    UnwindCacheMap := 0;
    UnwindWeAllocatedMcb := 0;
    UnwindStatistics := 0;
    call {:si_unique_call 102} sdv_RtlZeroMemory(0, 688);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    assume {:nonnull} IrpContext_10 != 0;
    assume IrpContext_10 > 0;
    havoc Tmp_112;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} Tmp_112 == 0;
    Tmp_116 := 0;
    goto L300;

  L300:
    call {:si_unique_call 103} vslice_dummy_var_26 := ExAcquireResourceExclusiveLite(0, Tmp_116);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 104} vslice_dummy_var_21 := sdv_InsertTailList(VcbQueue__FAT_DATA(FatData), VcbLinks__VCB(Vcb_3));
    call {:si_unique_call 105} ExReleaseResourceLite(0);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 106} vslice_dummy_var_27 := sdv_ObReferenceObject(0);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    assume {:nonnull} Vpb != 0;
    assume Vpb > 0;
    call {:si_unique_call 107} Status_2 := FatPerformDevIoCtrl(IrpContext_10, 2952212, TargetDeviceObject_1, HotplugInfo, 8, 0, 1, 0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Status_2 >= 0;
    assume {:nonnull} HotplugInfo != 0;
    assume HotplugInfo > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    goto L100;

  L100:
    assume {:nonnull} HotplugInfo != 0;
    assume HotplugInfo > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} HotplugInfo != 0;
    assume HotplugInfo > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L104;

  L104:
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    goto L98;

  L98:
    assume {:nonnull} Vpb != 0;
    assume Vpb > 0;
    havoc Tmp_111;
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    goto L117;

  L117:
    assume {:nonnull} Vpb != 0;
    assume Vpb > 0;
    havoc Tmp_102;
    assume {:nonnull} Tmp_102 != 0;
    assume Tmp_102 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    goto L119;

  L119:
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 108} vslice_dummy_var_28 := ExInitializeResourceLite(0);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    UnwindResource := Resource__VCB(Vcb_3);
    call {:si_unique_call 109} vslice_dummy_var_29 := ExInitializeResourceLite(0);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    UnwindResource2 := ChangeBitMapResource__VCB(Vcb_3);
    call {:si_unique_call 110} sdv_ExInitializeFastMutex(0);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    UnwindFileObject := 0;
    goto L137;

  L137:
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 111} sdv_58 := ExAllocatePoolWithTag(17, 32, -126590650);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    havoc vslice_dummy_var_1194;
    call {:si_unique_call 112} FatSetFileObject(vslice_dummy_var_1194, 5, Vcb_3, 0);
    call {:si_unique_call 113} Tmp_105 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_105 != 0;
    assume Tmp_105 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 114} vslice_dummy_var_30 := sdv_InterlockedIncrement(Tmp_105);
    assume {:nonnull} Tmp_105 != 0;
    assume Tmp_105 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 115} Tmp_105 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_105 != 0;
    assume Tmp_105 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 116} vslice_dummy_var_31 := sdv_InterlockedIncrement(Tmp_105);
    assume {:nonnull} Tmp_105 != 0;
    assume Tmp_105 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    havoc Tmp_114;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    havoc Tmp_117;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    havoc Tmp_110;
    assume {:nonnull} Tmp_110 != 0;
    assume Tmp_110 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    havoc Tmp_104;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 117} InitializeListHead(DirNotifyList__VCB(Vcb_3));
    assume {:nonnull} FileSizes != 0;
    assume FileSizes > 0;
    assume {:nonnull} FileSizes != 0;
    assume FileSizes > 0;
    assume {:nonnull} FileSizes != 0;
    assume FileSizes > 0;
    assume {:nonnull} FileSizes != 0;
    assume FileSizes > 0;
    assume {:nonnull} FileSizes != 0;
    assume FileSizes > 0;
    assume {:nonnull} FileSizes != 0;
    assume FileSizes > 0;
    assume {:nonnull} FileSizes != 0;
    assume FileSizes > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    havoc UnwindCacheMap;
    UnwindWeAllocatedMcb := 1;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 118} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 119} KeInitializeTimer(0);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 120} KeInitializeDpc(CleanVolumeDpc__VCB(Vcb_3), li2bplFunctionConstant532, 0);
    havoc Tmp_106;
    call {:si_unique_call 121} sdv_46 := ExAllocatePoolWithTag(16, Tmp_106, -697015994);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    havoc UnwindStatistics;
    havoc Tmp_103;
    call {:si_unique_call 122} sdv_RtlZeroMemory(0, Tmp_103);
    i_1 := 0;
    goto L193;

  L193:
    call {:si_unique_call 123} i_1, Tmp_101, Tmp_108, Tmp_109, Tmp_113, Tmp_115, Tmp_119 := FatInitializeVcb_loop_L193(i_1, Tmp_101, Tmp_108, Tmp_109, Tmp_113, Tmp_115, Tmp_119, Vcb_3);
    goto L193_last;

  L193_last:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_119 := i_1;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    havoc Tmp_108;
    assume {:nonnull} Tmp_108 != 0;
    assume Tmp_108 > 0;
    Tmp_113 := i_1;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    havoc Tmp_115;
    assume {:nonnull} Tmp_115 != 0;
    assume Tmp_115 > 0;
    Tmp_101 := i_1;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    havoc Tmp_109;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    i_1 := i_1 + 1;
    goto anon55_Else_dummy;

  anon55_Else_dummy:
    assume false;
    return;

  anon55_Then:
    call {:si_unique_call 124} sdv_53 := ExAllocatePoolWithTag(16, 88, -160145082);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 125} sdv_RtlZeroMemory(0, 88);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 126} InitializeListHead(AsyncCloseList__VCB(Vcb_3));
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 127} InitializeListHead(DelayedCloseList__VCB(Vcb_3));
    call {:si_unique_call 128} sdv_ExInitializeFastMutex(0);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    call {:si_unique_call 129} FsRtlSetupAdvancedHeader(VolumeFileHeader__VCB(Vcb_3), AdvancedFcbHeaderMutex__VCB(Vcb_3));
    assume {:nonnull} IrpContext_10 != 0;
    assume IrpContext_10 > 0;
    call {:si_unique_call 130} sdv_48 := sdv_AbnormalTermination();
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_48 != 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} UnwindCacheMap != 0;
    call {:si_unique_call 131} FatSyncUninitializeCacheMap(IrpContext_10, UnwindCacheMap);
    goto L224;

  L224:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} UnwindFileObject != 0;
    call {:si_unique_call 132} vslice_dummy_var_22 := sdv_ObDereferenceObject(0);
    goto L228;

  L228:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} UnwindResource != 0;
    call {:si_unique_call 133} vslice_dummy_var_23 := ExDeleteResourceLite(0);
    goto L232;

  L232:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} UnwindResource2 != 0;
    call {:si_unique_call 134} vslice_dummy_var_24 := ExDeleteResourceLite(0);
    goto L236;

  L236:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} UnwindWeAllocatedMcb != 0;
    goto L240;

  L240:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} IrpContext_10 != 0;
    assume IrpContext_10 > 0;
    havoc Tmp_118;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} Tmp_118 == 0;
    Tmp_100 := 0;
    goto L356;

  L356:
    call {:si_unique_call 135} vslice_dummy_var_32 := ExAcquireResourceExclusiveLite(0, Tmp_100);
    call {:si_unique_call 136} vslice_dummy_var_25 := sdv_RemoveEntryList(0);
    call {:si_unique_call 137} ExReleaseResourceLite(0);
    goto L244;

  L244:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} UnwindStatistics != 0;
    call {:si_unique_call 138} sdv_ExFreePool(0);
    goto L256;

  L256:
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 139} sdv_ExFreePool(0);
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    goto L1;

  L1:
    return;

  anon64_Then:
    goto L1;

  anon63_Then:
    assume {:partition} UnwindStatistics == 0;
    goto L256;

  anon69_Then:
    assume {:partition} Tmp_118 != 0;
    Tmp_100 := 1;
    goto L356;

  anon62_Then:
    goto L244;

  anon61_Then:
    assume {:partition} UnwindWeAllocatedMcb == 0;
    goto L240;

  anon60_Then:
    assume {:partition} UnwindResource2 == 0;
    goto L236;

  anon59_Then:
    assume {:partition} UnwindResource == 0;
    goto L232;

  anon58_Then:
    assume {:partition} UnwindFileObject == 0;
    goto L228;

  anon57_Then:
    assume {:partition} UnwindCacheMap == 0;
    goto L224;

  anon56_Then:
    assume {:partition} sdv_48 == 0;
    goto L1;

  anon68_Then:
    call {:si_unique_call 140} UnwindFileObject := __HAVOC_malloc(1);
    goto L137;

  anon67_Then:
    goto L119;

  anon66_Then:
    goto L117;

  anon50_Then:
    assume {:nonnull} HotplugInfo != 0;
    assume HotplugInfo > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} HotplugInfo != 0;
    assume HotplugInfo > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} HotplugInfo != 0;
    assume HotplugInfo > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    call {:si_unique_call 141} Status_2 := FatToggleMediaEjectDisable(IrpContext_10, Vcb_3, 1);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Status_2 >= 0;
    goto L113;

  L113:
    call {:si_unique_call 142} Status_2 := FatToggleMediaEjectDisable(IrpContext_10, Vcb_3, 0);
    goto L98;

  anon54_Then:
    assume {:partition} 0 > Status_2;
    assume {:nonnull} Vcb_3 != 0;
    assume Vcb_3 > 0;
    goto L113;

  anon53_Then:
    goto L98;

  anon52_Then:
    goto L98;

  anon51_Then:
    goto L104;

  anon49_Then:
    goto L98;

  anon48_Then:
    goto L100;

  anon47_Then:
    assume {:partition} 0 > Status_2;
    goto L98;

  anon65_Then:
    assume {:partition} Tmp_112 != 0;
    Tmp_116 := 1;
    goto L300;
}



procedure {:origName "FatCreateCcb"} FatCreateCcb(actual_IrpContext_11: int) returns (Tmp_120: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCreateCcb"} FatCreateCcb(actual_IrpContext_11: int) returns (Tmp_120: int)
{
  var {:pointer} Ccb_1: int;

  anon0:
    call {:si_unique_call 143} Ccb_1 := FatAllocateCcb();
    call {:si_unique_call 144} sdv_RtlZeroMemory(0, 44);
    assume {:nonnull} Ccb_1 != 0;
    assume Ccb_1 > 0;
    assume {:nonnull} Ccb_1 != 0;
    assume Ccb_1 > 0;
    Tmp_120 := Ccb_1;
    return;
}



procedure {:origName "FatFreeCcb"} FatFreeCcb(actual_Ccb_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFreeCcb"} FatFreeCcb(actual_Ccb_2: int)
{
  var vslice_dummy_var_33: int;

  anon0:
    call {:si_unique_call 145} vslice_dummy_var_33 := __HAVOC_malloc(4);
    call {:si_unique_call 146} sdv_ExFreePool(0);
    return;
}



procedure {:origName "FatCheckFreeDirentBitmap"} FatCheckFreeDirentBitmap(actual_IrpContext_12: int, actual_Dcb: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCheckFreeDirentBitmap"} FatCheckFreeDirentBitmap(actual_IrpContext_12: int, actual_Dcb: int)
{
  var {:scalar} BytesInOldBitmapBuffer: int;
  var {:scalar} NewNumberOfDirents: int;
  var {:pointer} sdv_65: int;
  var {:scalar} OldNumberOfDirents: int;
  var {:scalar} BytesInBitmapBuffer: int;
  var {:pointer} OldBitmapBuffer: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:pointer} Tmp_130: int;
  var {:pointer} BitmapBuffer: int;
  var {:scalar} Tmp_132: int;
  var {:pointer} Dcb: int;
  var vslice_dummy_var_34: int;

  anon0:
    call {:si_unique_call 147} vslice_dummy_var_34 := __HAVOC_malloc(4);
    Dcb := actual_Dcb;
    call {:si_unique_call 148} Tmp_127 := __HAVOC_malloc(4);
    call {:si_unique_call 149} Tmp_128 := __HAVOC_malloc(4);
    call {:si_unique_call 150} Tmp_130 := __HAVOC_malloc(4);
    assume {:nonnull} Dcb != 0;
    assume Dcb > 0;
    havoc OldNumberOfDirents;
    assume {:nonnull} Dcb != 0;
    assume Dcb > 0;
    havoc NewNumberOfDirents;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} NewNumberOfDirents > OldNumberOfDirents;
    assume {:nonnull} Dcb != 0;
    assume Dcb > 0;
    call {:si_unique_call 151} ExAcquireFastMutexUnsafe(0);
    assume {:nonnull} Dcb != 0;
    assume Dcb > 0;
    havoc OldNumberOfDirents;
    assume {:nonnull} Dcb != 0;
    assume Dcb > 0;
    havoc NewNumberOfDirents;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} NewNumberOfDirents > OldNumberOfDirents;
    assume {:nonnull} Dcb != 0;
    assume Dcb > 0;
    havoc OldBitmapBuffer;
    BytesInBitmapBuffer := INTDIV(NewNumberOfDirents, 8);
    BytesInOldBitmapBuffer := INTDIV(OldNumberOfDirents, 8);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} 32 >= BytesInBitmapBuffer;
    assume {:nonnull} Dcb != 0;
    assume Dcb > 0;
    havoc Tmp_128;
    BitmapBuffer := Tmp_128;
    goto L29;

  L29:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} OldNumberOfDirents != 0;
    assume {:nonnull} Dcb != 0;
    assume Dcb > 0;
    havoc Tmp_127;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} BitmapBuffer != Tmp_127;
    call {:si_unique_call 152} sdv_RtlCopyMemory(0, 0, BytesInOldBitmapBuffer);
    assume {:nonnull} Dcb != 0;
    assume Dcb > 0;
    havoc Tmp_130;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} OldBitmapBuffer != Tmp_130;
    call {:si_unique_call 153} sdv_ExFreePool(0);
    goto L30;

  L30:
    Tmp_132 := BytesInBitmapBuffer - BytesInOldBitmapBuffer;
    call {:si_unique_call 154} sdv_RtlZeroMemory(0, Tmp_132);
    goto L18;

  L18:
    assume {:nonnull} Dcb != 0;
    assume Dcb > 0;
    call {:si_unique_call 155} ExReleaseFastMutexUnsafe(0);
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} OldBitmapBuffer == Tmp_130;
    goto L30;

  anon17_Then:
    assume {:partition} BitmapBuffer == Tmp_127;
    goto L30;

  anon13_Then:
    assume {:partition} OldNumberOfDirents == 0;
    goto L30;

  anon16_Then:
    assume {:partition} BytesInBitmapBuffer > 32;
    call {:si_unique_call 156} sdv_65 := ExAllocatePoolWithTag(17, BytesInBitmapBuffer, -730570426);
    BitmapBuffer := sdv_65;
    goto L29;

  anon15_Then:
    assume {:partition} OldNumberOfDirents >= NewNumberOfDirents;
    goto L18;

  anon14_Then:
    assume {:partition} OldNumberOfDirents >= NewNumberOfDirents;
    goto L1;
}



procedure {:origName "FatDeallocateCcbStrings"} FatDeallocateCcbStrings(actual_Ccb_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeallocateCcbStrings"} FatDeallocateCcbStrings(actual_Ccb_3: int)
{
  var {:pointer} Ccb_3: int;
  var vslice_dummy_var_35: int;

  anon0:
    call {:si_unique_call 157} vslice_dummy_var_35 := __HAVOC_malloc(4);
    Ccb_3 := actual_Ccb_3;
    assume {:nonnull} Ccb_3 != 0;
    assume Ccb_3 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 158} RtlFreeUnicodeString(0);
    goto L4;

  L4:
    assume {:nonnull} Ccb_3 != 0;
    assume Ccb_3 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L8;

  L8:
    assume {:nonnull} Ccb_3 != 0;
    assume Ccb_3 > 0;
    return;

  anon6_Then:
    goto L8;

  anon5_Then:
    goto L4;
}



procedure {:origName "FatEnsureStringBufferEnough"} FatEnsureStringBufferEnough(actual_String: int, actual_DesiredBufferSize: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatEnsureStringBufferEnough"} FatEnsureStringBufferEnough(actual_String: int, actual_DesiredBufferSize: int)
{
  var {:pointer} sdv_66: int;
  var {:pointer} LocalString: int;
  var {:scalar} Tmp_137: int;
  var {:pointer} String: int;
  var {:scalar} DesiredBufferSize: int;
  var vslice_dummy_var_36: int;

  anon0:
    call {:si_unique_call 159} vslice_dummy_var_36 := __HAVOC_malloc(4);
    String := actual_String;
    DesiredBufferSize := actual_DesiredBufferSize;
    LocalString := String;
    assume {:nonnull} LocalString != 0;
    assume LocalString > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 160} FatFreeStringBuffer(LocalString);
    Tmp_137 := DesiredBufferSize;
    call {:si_unique_call 161} sdv_66 := ExAllocatePoolWithTag(17, Tmp_137, -478912186);
    assume {:nonnull} LocalString != 0;
    assume LocalString > 0;
    assume {:nonnull} LocalString != 0;
    assume LocalString > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "FatCreateDcb"} FatCreateDcb(actual_IrpContext_13: int, actual_Vcb_4: int, actual_ParentDcb: int, actual_LfnOffsetWithinDirectory: int, actual_DirentOffsetWithinDirectory: int, actual_Dirent_1: int, actual_Lfn_1: int) returns (Tmp_138: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCreateDcb"} FatCreateDcb(actual_IrpContext_13: int, actual_Vcb_4: int, actual_ParentDcb: int, actual_LfnOffsetWithinDirectory: int, actual_DirentOffsetWithinDirectory: int, actual_Dirent_1: int, actual_Lfn_1: int) returns (Tmp_138: int)
{
  var {:scalar} i_2: int;
  var {:pointer} Tmp_139: int;
  var {:pointer} UnwindStorage: int;
  var {:pointer} Tmp_140: int;
  var {:pointer} UnwindResource_1: int;
  var {:scalar} FatSystemJanOne1980: int;
  var {:pointer} Tmp_141: int;
  var {:pointer} Tmp_143: int;
  var {:pointer} Dcb_1: int;
  var {:pointer} Tmp_145: int;
  var {:scalar} Tmp_146: int;
  var {:pointer} UnwindResource2_1: int;
  var {:scalar} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:scalar} sdv_77: int;
  var {:pointer} UnwindMcb: int;
  var {:pointer} IrpContext_13: int;
  var {:pointer} Vcb_4: int;
  var {:pointer} ParentDcb: int;
  var {:scalar} LfnOffsetWithinDirectory: int;
  var {:scalar} DirentOffsetWithinDirectory: int;
  var {:pointer} Dirent_1: int;
  var {:pointer} Lfn_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_1195: int;
  var vslice_dummy_var_1196: int;
  var vslice_dummy_var_1197: int;
  var vslice_dummy_var_1198: int;

  anon0:
    call {:si_unique_call 162} FatSystemJanOne1980 := __HAVOC_malloc(20);
    call {:si_unique_call 163} vslice_dummy_var_37 := __HAVOC_malloc(20);
    call {:si_unique_call 164} vslice_dummy_var_38 := __HAVOC_malloc(20);
    call {:si_unique_call 165} vslice_dummy_var_39 := __HAVOC_malloc(20);
    IrpContext_13 := actual_IrpContext_13;
    Vcb_4 := actual_Vcb_4;
    ParentDcb := actual_ParentDcb;
    LfnOffsetWithinDirectory := actual_LfnOffsetWithinDirectory;
    DirentOffsetWithinDirectory := actual_DirentOffsetWithinDirectory;
    Dirent_1 := actual_Dirent_1;
    Lfn_1 := actual_Lfn_1;
    call {:si_unique_call 166} UnwindStorage := __HAVOC_malloc(8);
    assume {:nonnull} UnwindStorage != 0;
    assume UnwindStorage > 0;
    UnwindResource_1 := 0;
    UnwindResource2_1 := 0;
    UnwindMcb := 0;
    call {:si_unique_call 167} Dcb_1 := FatAllocateFcb();
    assume {:nonnull} UnwindStorage != 0;
    assume UnwindStorage > 0;
    call {:si_unique_call 168} sdv_RtlZeroMemory(0, 352);
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    call {:si_unique_call 169} boogieTmp := FatAllocateNonPagedFcb();
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} UnwindStorage != 0;
    assume UnwindStorage > 0;
    call {:si_unique_call 170} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    call {:si_unique_call 171} boogieTmp := FatAllocateResource();
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    havoc UnwindResource_1;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    call {:si_unique_call 172} boogieTmp := FatAllocateResource();
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    havoc UnwindResource2_1;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} ParentDcb != 0;
    assume ParentDcb > 0;
    call {:si_unique_call 173} InsertHeadList(ParentDcbQueue_unnamed_tag_68(Dcb_unnamed_tag_67(Specific__FCB(ParentDcb))), ParentDcbLinks__FCB(Dcb_1));
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dirent_1 != 0;
    assume Dirent_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dirent_1 != 0;
    assume Dirent_1 > 0;
    havoc vslice_dummy_var_1195;
    call {:si_unique_call 174} boogieTmp := FatFatTimeToNtTime(IrpContext_13, vslice_dummy_var_1195, 0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    Tmp_139 := Dirent_1;
    Tmp_140 := Dirent_1;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    assume {:nonnull} Tmp_140 != 0;
    assume Tmp_140 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L94;

  L94:
    Tmp_141 := Dirent_1;
    assume {:nonnull} Tmp_141 != 0;
    assume Tmp_141 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dirent_1 != 0;
    assume Dirent_1 > 0;
    havoc vslice_dummy_var_1196;
    call {:si_unique_call 175} boogieTmp := FatFatDateToNtTime(IrpContext_13, vslice_dummy_var_1196);
    goto L100;

  L100:
    Tmp_143 := Dirent_1;
    assume {:nonnull} Tmp_143 != 0;
    assume Tmp_143 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dirent_1 != 0;
    assume Dirent_1 > 0;
    havoc vslice_dummy_var_1197;
    havoc vslice_dummy_var_1198;
    call {:si_unique_call 176} boogieTmp := FatFatTimeToNtTime(IrpContext_13, vslice_dummy_var_1197, vslice_dummy_var_1198);
    goto L86;

  L86:
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    call {:si_unique_call 177} sdv_ExInitializeFastMutex(0);
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    havoc Tmp_148;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    call {:si_unique_call 178} FsRtlSetupAdvancedHeader(Header__FCB(Dcb_1), AdvancedFcbHeaderMutex__NON_PAGED_FCB(Tmp_148));
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    UnwindMcb := Mcb__FCB(Dcb_1);
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dirent_1 != 0;
    assume Dirent_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    havoc Tmp_145;
    assume {:nonnull} Tmp_145 != 0;
    assume Tmp_145 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    call {:si_unique_call 179} boogieTmp := corral_nondet();
    goto L115;

  L115:
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    goto L119;

  L119:
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    call {:si_unique_call 180} InitializeListHead(ParentDcbQueue_unnamed_tag_68(Dcb_unnamed_tag_67(Specific__FCB(Dcb_1))));
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    call {:si_unique_call 181} FatConstructNamesInFcb(IrpContext_13, Dcb_1, Dirent_1, Lfn_1);
    call {:si_unique_call 182} sdv_77 := sdv_AbnormalTermination();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_77 != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} UnwindMcb != 0;
    goto L137;

  L137:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 183} vslice_dummy_var_40 := sdv_RemoveEntryList(0);
    goto L141;

  L141:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} UnwindResource_1 != 0;
    call {:si_unique_call 184} FatFreeResource(UnwindResource_1);
    goto L145;

  L145:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} UnwindResource2_1 != 0;
    call {:si_unique_call 185} FatFreeResource(UnwindResource2_1);
    goto L149;

  L149:
    i_2 := 0;
    goto L153;

  L153:
    call {:si_unique_call 186} i_2, Tmp_146, Tmp_147 := FatCreateDcb_loop_L153(i_2, UnwindStorage, Tmp_146, Tmp_147);
    goto L153_last;

  L153_last:
    assume {:CounterLoop 2} {:Counter "i_2"} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} 2 > i_2;
    Tmp_147 := i_2;
    assume {:nonnull} UnwindStorage != 0;
    assume UnwindStorage > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Tmp_146 := i_2;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume Tmp_146 != 1;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume Tmp_146 != 0;
    goto L171;

  L171:
    call {:si_unique_call 187} sdv_ExFreePool(0);
    goto L155;

  L155:
    i_2 := i_2 + 1;
    goto L155_dummy;

  L155_dummy:
    assume false;
    return;

  anon45_Then:
    assume Tmp_146 == 0;
    Tmp_146 := 0;
    assume {:nonnull} UnwindStorage != 0;
    assume UnwindStorage > 0;
    goto L171;

  anon44_Then:
    assume Tmp_146 == 1;
    Tmp_146 := 1;
    assume {:nonnull} UnwindStorage != 0;
    assume UnwindStorage > 0;
    goto L171;

  anon43_Then:
    goto L155;

  anon38_Then:
    assume {:partition} i_2 >= 2;
    goto L134;

  L134:
    Tmp_138 := Dcb_1;
    return;

  anon37_Then:
    assume {:partition} UnwindResource2_1 == 0;
    goto L149;

  anon36_Then:
    assume {:partition} UnwindResource_1 == 0;
    goto L145;

  anon35_Then:
    goto L141;

  anon34_Then:
    assume {:partition} UnwindMcb == 0;
    goto L137;

  anon33_Then:
    assume {:partition} sdv_77 == 0;
    goto L134;

  anon32_Then:
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    goto L119;

  anon42_Then:
    goto L115;

  anon41_Then:
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} FatSystemJanOne1980 != 0;
    assume FatSystemJanOne1980 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} FatSystemJanOne1980 != 0;
    assume FatSystemJanOne1980 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} FatSystemJanOne1980 != 0;
    assume FatSystemJanOne1980 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} FatSystemJanOne1980 != 0;
    assume FatSystemJanOne1980 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} FatSystemJanOne1980 != 0;
    assume FatSystemJanOne1980 > 0;
    goto L86;

  anon40_Then:
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} FatSystemJanOne1980 != 0;
    assume FatSystemJanOne1980 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} FatSystemJanOne1980 != 0;
    assume FatSystemJanOne1980 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} FatSystemJanOne1980 != 0;
    assume FatSystemJanOne1980 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} FatSystemJanOne1980 != 0;
    assume FatSystemJanOne1980 > 0;
    assume {:nonnull} Dcb_1 != 0;
    assume Dcb_1 > 0;
    assume {:nonnull} FatSystemJanOne1980 != 0;
    assume FatSystemJanOne1980 > 0;
    goto L100;

  anon39_Then:
    goto L94;

  anon31_Then:
    goto L86;
}



procedure {:origName "FatFreeStringBuffer"} FatFreeStringBuffer(actual_String_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFreeStringBuffer"} FatFreeStringBuffer(actual_String_1: int)
{
  var {:pointer} LocalString_1: int;
  var {:scalar} Low: int;
  var {:scalar} High: int;
  var {:pointer} String_1: int;
  var vslice_dummy_var_41: int;

  anon0:
    call {:si_unique_call 188} vslice_dummy_var_41 := __HAVOC_malloc(4);
    String_1 := actual_String_1;
    LocalString_1 := String_1;
    assume {:nonnull} LocalString_1 != 0;
    assume LocalString_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 189} IoGetStackLimits(0, 0);
    assume {:nonnull} LocalString_1 != 0;
    assume LocalString_1 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto L14;

  L14:
    call {:si_unique_call 190} sdv_ExFreePool(0);
    goto L17;

  L17:
    assume {:nonnull} LocalString_1 != 0;
    assume LocalString_1 > 0;
    goto L8;

  L8:
    assume {:nonnull} LocalString_1 != 0;
    assume LocalString_1 > 0;
    assume {:nonnull} LocalString_1 != 0;
    assume LocalString_1 > 0;
    return;

  anon7_Then:
    assume {:nonnull} LocalString_1 != 0;
    assume LocalString_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L17;

  anon8_Then:
    goto L14;

  anon9_Then:
    goto L8;
}



procedure {:origName "FatCreateFcb"} FatCreateFcb(actual_IrpContext_14: int, actual_Vcb_5: int, actual_ParentDcb_1: int, actual_LfnOffsetWithinDirectory_1: int, actual_DirentOffsetWithinDirectory_1: int, actual_Dirent_2: int, actual_Lfn_2: int, actual_IsPagingFile: int, actual_SingleResource: int) returns (Tmp_152: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCreateFcb"} FatCreateFcb(actual_IrpContext_14: int, actual_Vcb_5: int, actual_ParentDcb_1: int, actual_LfnOffsetWithinDirectory_1: int, actual_DirentOffsetWithinDirectory_1: int, actual_Dirent_2: int, actual_Lfn_2: int, actual_IsPagingFile: int, actual_SingleResource: int) returns (Tmp_152: int)
{
  var {:scalar} i_3: int;
  var {:pointer} sdv_78: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Fcb_6: int;
  var {:pointer} UnwindStorage_1: int;
  var {:scalar} Tmp_155: int;
  var {:pointer} sdv_79: int;
  var {:pointer} UnwindResource_2: int;
  var {:scalar} FatSystemJanOne1980_1: int;
  var {:pointer} Tmp_157: int;
  var {:pointer} UnwindFileLock: int;
  var {:pointer} Tmp_158: int;
  var {:pointer} Tmp_160: int;
  var {:pointer} UnwindResource2_2: int;
  var {:pointer} Tmp_161: int;
  var {:scalar} sdv_89: int;
  var {:pointer} UnwindOplock: int;
  var {:pointer} UnwindMcb_1: int;
  var {:scalar} Tmp_163: int;
  var {:pointer} IrpContext_14: int;
  var {:pointer} Vcb_5: int;
  var {:pointer} ParentDcb_1: int;
  var {:scalar} LfnOffsetWithinDirectory_1: int;
  var {:scalar} DirentOffsetWithinDirectory_1: int;
  var {:pointer} Dirent_2: int;
  var {:pointer} Lfn_2: int;
  var {:scalar} IsPagingFile: int;
  var {:scalar} SingleResource: int;
  var boogieTmp: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_1199: int;
  var vslice_dummy_var_1200: int;
  var vslice_dummy_var_1201: int;
  var vslice_dummy_var_1202: int;

  anon0:
    call {:si_unique_call 191} FatSystemJanOne1980_1 := __HAVOC_malloc(20);
    call {:si_unique_call 192} vslice_dummy_var_42 := __HAVOC_malloc(20);
    call {:si_unique_call 193} vslice_dummy_var_43 := __HAVOC_malloc(20);
    call {:si_unique_call 194} vslice_dummy_var_44 := __HAVOC_malloc(20);
    IrpContext_14 := actual_IrpContext_14;
    Vcb_5 := actual_Vcb_5;
    ParentDcb_1 := actual_ParentDcb_1;
    LfnOffsetWithinDirectory_1 := actual_LfnOffsetWithinDirectory_1;
    DirentOffsetWithinDirectory_1 := actual_DirentOffsetWithinDirectory_1;
    Dirent_2 := actual_Dirent_2;
    Lfn_2 := actual_Lfn_2;
    IsPagingFile := actual_IsPagingFile;
    SingleResource := actual_SingleResource;
    call {:si_unique_call 195} UnwindStorage_1 := __HAVOC_malloc(8);
    assume {:nonnull} UnwindStorage_1 != 0;
    assume UnwindStorage_1 > 0;
    UnwindResource_2 := 0;
    UnwindResource2_2 := 0;
    UnwindMcb_1 := 0;
    UnwindFileLock := 0;
    UnwindOplock := 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} IsPagingFile != 0;
    call {:si_unique_call 196} sdv_79 := ExAllocatePoolWithTag(16, 352, -965451450);
    assume {:nonnull} UnwindStorage_1 != 0;
    assume UnwindStorage_1 > 0;
    assume {:nonnull} UnwindStorage_1 != 0;
    assume UnwindStorage_1 > 0;
    havoc Fcb_6;
    goto L63;

  L63:
    call {:si_unique_call 197} sdv_RtlZeroMemory(0, 352);
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    call {:si_unique_call 198} boogieTmp := FatAllocateNonPagedFcb();
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} UnwindStorage_1 != 0;
    assume UnwindStorage_1 > 0;
    call {:si_unique_call 199} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} IsPagingFile != 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    goto L78;

  L78:
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    call {:si_unique_call 200} boogieTmp := FatAllocateResource();
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    havoc UnwindResource_2;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} SingleResource != 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    goto L89;

  L89:
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} ParentDcb_1 != 0;
    assume ParentDcb_1 > 0;
    call {:si_unique_call 201} vslice_dummy_var_45 := sdv_InsertTailList(ParentDcbQueue_unnamed_tag_68(Dcb_unnamed_tag_67(Specific__FCB(ParentDcb_1))), ParentDcbLinks__FCB(Fcb_6));
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Dirent_2 != 0;
    assume Dirent_2 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Dirent_2 != 0;
    assume Dirent_2 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    havoc vslice_dummy_var_1199;
    call {:si_unique_call 202} boogieTmp := FatFatTimeToNtTime(IrpContext_14, vslice_dummy_var_1199, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Tmp_157 := Dirent_2;
    Tmp_154 := Dirent_2;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    assume {:nonnull} Tmp_157 != 0;
    assume Tmp_157 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L111;

  L111:
    Tmp_158 := Dirent_2;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Dirent_2 != 0;
    assume Dirent_2 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    havoc vslice_dummy_var_1200;
    call {:si_unique_call 203} boogieTmp := FatFatDateToNtTime(IrpContext_14, vslice_dummy_var_1200);
    goto L117;

  L117:
    Tmp_160 := Dirent_2;
    assume {:nonnull} Tmp_160 != 0;
    assume Tmp_160 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Dirent_2 != 0;
    assume Dirent_2 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    havoc vslice_dummy_var_1201;
    havoc vslice_dummy_var_1202;
    call {:si_unique_call 204} boogieTmp := FatFatTimeToNtTime(IrpContext_14, vslice_dummy_var_1201, vslice_dummy_var_1202);
    goto L103;

  L103:
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    call {:si_unique_call 205} sdv_ExInitializeFastMutex(0);
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    havoc Tmp_161;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Tmp_161 != 0;
    assume Tmp_161 > 0;
    call {:si_unique_call 206} FsRtlSetupAdvancedHeader(Header__FCB(Fcb_6), AdvancedFcbHeaderMutex__NON_PAGED_FCB(Tmp_161));
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} IsPagingFile != 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    goto L127;

  L127:
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    UnwindMcb_1 := Mcb__FCB(Fcb_6);
    assume {:nonnull} Dirent_2 != 0;
    assume Dirent_2 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Dirent_2 != 0;
    assume Dirent_2 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Dirent_2 != 0;
    assume Dirent_2 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Dirent_2 != 0;
    assume Dirent_2 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Vcb_5 != 0;
    assume Vcb_5 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    call {:si_unique_call 207} boogieTmp := corral_nondet();
    goto L137;

  L137:
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    goto L141;

  L141:
    call {:si_unique_call 208} FsRtlInitializeFileLock(0, 0, 0);
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    UnwindFileLock := FileLock_unnamed_tag_69(Fcb_unnamed_tag_67(Specific__FCB(Fcb_6)));
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    UnwindOplock := Oplock_unnamed_tag_69(Fcb_unnamed_tag_67(Specific__FCB(Fcb_6)));
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    call {:si_unique_call 209} FatConstructNamesInFcb(IrpContext_14, Fcb_6, Dirent_2, Lfn_2);
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    call {:si_unique_call 210} sdv_89 := sdv_AbnormalTermination();
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_89 != 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} UnwindOplock != 0;
    goto L161;

  L161:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} UnwindFileLock != 0;
    call {:si_unique_call 211} FsRtlUninitializeFileLock(0);
    goto L165;

  L165:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} UnwindMcb_1 != 0;
    goto L169;

  L169:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 212} vslice_dummy_var_46 := sdv_RemoveEntryList(0);
    goto L173;

  L173:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} UnwindResource_2 != 0;
    call {:si_unique_call 213} FatFreeResource(UnwindResource_2);
    goto L177;

  L177:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} UnwindResource2_2 != 0;
    call {:si_unique_call 214} FatFreeResource(UnwindResource2_2);
    goto L181;

  L181:
    i_3 := 0;
    goto L185;

  L185:
    call {:si_unique_call 215} i_3, Tmp_155, Tmp_163 := FatCreateFcb_loop_L185(i_3, UnwindStorage_1, Tmp_155, Tmp_163);
    goto L185_last;

  L185_last:
    assume {:CounterLoop 2} {:Counter "i_3"} true;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} 2 > i_3;
    Tmp_155 := i_3;
    assume {:nonnull} UnwindStorage_1 != 0;
    assume UnwindStorage_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_163 := i_3;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume Tmp_163 != 1;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume Tmp_163 != 0;
    goto L213;

  L213:
    call {:si_unique_call 216} sdv_ExFreePool(0);
    goto L187;

  L187:
    i_3 := i_3 + 1;
    goto L187_dummy;

  L187_dummy:
    assume false;
    return;

  anon63_Then:
    assume Tmp_163 == 0;
    Tmp_163 := 0;
    assume {:nonnull} UnwindStorage_1 != 0;
    assume UnwindStorage_1 > 0;
    goto L213;

  anon62_Then:
    assume Tmp_163 == 1;
    Tmp_163 := 1;
    assume {:nonnull} UnwindStorage_1 != 0;
    assume UnwindStorage_1 > 0;
    goto L213;

  anon61_Then:
    goto L187;

  anon53_Then:
    assume {:partition} i_3 >= 2;
    goto L158;

  L158:
    Tmp_152 := Fcb_6;
    return;

  anon52_Then:
    assume {:partition} UnwindResource2_2 == 0;
    goto L181;

  anon51_Then:
    assume {:partition} UnwindResource_2 == 0;
    goto L177;

  anon50_Then:
    goto L173;

  anon49_Then:
    assume {:partition} UnwindMcb_1 == 0;
    goto L169;

  anon48_Then:
    assume {:partition} UnwindFileLock == 0;
    goto L165;

  anon47_Then:
    assume {:partition} UnwindOplock == 0;
    goto L161;

  anon46_Then:
    assume {:partition} sdv_89 == 0;
    goto L158;

  anon45_Then:
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    goto L141;

  anon60_Then:
    goto L137;

  anon44_Then:
    assume {:partition} IsPagingFile == 0;
    goto L127;

  anon59_Then:
    assume {:nonnull} FatSystemJanOne1980_1 != 0;
    assume FatSystemJanOne1980_1 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} FatSystemJanOne1980_1 != 0;
    assume FatSystemJanOne1980_1 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} FatSystemJanOne1980_1 != 0;
    assume FatSystemJanOne1980_1 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} FatSystemJanOne1980_1 != 0;
    assume FatSystemJanOne1980_1 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} FatSystemJanOne1980_1 != 0;
    assume FatSystemJanOne1980_1 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    goto L103;

  anon58_Then:
    assume {:nonnull} FatSystemJanOne1980_1 != 0;
    assume FatSystemJanOne1980_1 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} FatSystemJanOne1980_1 != 0;
    assume FatSystemJanOne1980_1 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} FatSystemJanOne1980_1 != 0;
    assume FatSystemJanOne1980_1 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} FatSystemJanOne1980_1 != 0;
    assume FatSystemJanOne1980_1 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    assume {:nonnull} FatSystemJanOne1980_1 != 0;
    assume FatSystemJanOne1980_1 > 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    goto L117;

  anon57_Then:
    goto L111;

  anon43_Then:
    goto L103;

  anon56_Then:
    assume {:partition} SingleResource == 0;
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    call {:si_unique_call 217} boogieTmp := FatAllocateResource();
    assume {:nonnull} Fcb_6 != 0;
    assume Fcb_6 > 0;
    havoc UnwindResource2_2;
    goto L89;

  anon55_Then:
    assume {:partition} IsPagingFile == 0;
    goto L78;

  anon54_Then:
    assume {:partition} IsPagingFile == 0;
    call {:si_unique_call 218} sdv_78 := FatAllocateFcb();
    assume {:nonnull} UnwindStorage_1 != 0;
    assume UnwindStorage_1 > 0;
    assume {:nonnull} UnwindStorage_1 != 0;
    assume UnwindStorage_1 > 0;
    havoc Fcb_6;
    goto L63;
}



procedure {:origName "FatAllocateResource"} FatAllocateResource() returns (Tmp_164: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAllocateResource"} FatAllocateResource() returns (Tmp_164: int)
{
  var {:pointer} sdv_90: int;
  var {:pointer} Resource_1: int;
  var vslice_dummy_var_47: int;

  anon0:
    call {:si_unique_call 219} sdv_90 := sdv_ExAllocateFromNPagedLookasideList(0);
    Resource_1 := sdv_90;
    call {:si_unique_call 220} vslice_dummy_var_47 := ExInitializeResourceLite(0);
    Tmp_164 := Resource_1;
    return;
}



procedure {:origName "FatAllocateIrpContext"} FatAllocateIrpContext() returns (Tmp_166: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAllocateIrpContext"} FatAllocateIrpContext() returns (Tmp_166: int)
{
  var {:pointer} sdv_92: int;

  anon0:
    call {:si_unique_call 221} sdv_92 := sdv_ExAllocateFromNPagedLookasideList(0);
    Tmp_166 := sdv_92;
    return;
}



procedure {:origName "FatAllocateCloseContext"} FatAllocateCloseContext(actual_Vcb_6: int) returns (Tmp_168: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAllocateCloseContext"} FatAllocateCloseContext(actual_Vcb_6: int) returns (Tmp_168: int)
{
  var {:pointer} sdv_93: int;

  anon0:
    call {:si_unique_call 222} sdv_93 := sdv_ExInterlockedPopEntrySList(0, 0);
    Tmp_168 := sdv_93;
    return;
}



procedure {:origName "FatCreateIrpContext"} FatCreateIrpContext(actual_Irp: int, actual_Wait: int) returns (Tmp_175: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCreateIrpContext"} FatCreateIrpContext(actual_Irp: int, actual_Wait: int) returns (Tmp_175: int)
{
  var {:pointer} Tmp_177: int;
  var {:pointer} FileObject: int;
  var {:scalar} Tmp_178: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} sdv_99: int;
  var {:pointer} IrpContext_16: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Irp: int;
  var {:scalar} Wait: int;

  anon0:
    Irp := actual_Irp;
    Wait := actual_Wait;
    call {:si_unique_call 223} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(Irp);
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L11;

  L11:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 224} ExRaiseStatus(-1073741808);
    goto L12;

  L12:
    call {:si_unique_call 225} IrpContext_16 := FatAllocateIrpContext();
    call {:si_unique_call 226} sdv_RtlZeroMemory(0, 68);
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc FileObject;
    assume {:nonnull} FileObject != 0;
    assume FileObject > 0;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_179;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    assume {:nonnull} Tmp_179 != 0;
    assume Tmp_179 > 0;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    assume {:nonnull} FileObject != 0;
    assume FileObject > 0;
    havoc Tmp_178;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Tmp_178 != 0;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    goto L40;

  L40:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Wait != 0;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    goto L42;

  L42:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    sdv_99 := 0;
    goto L46;

  L46:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_99 != Irp;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    goto L47;

  L47:
    Tmp_175 := IrpContext_16;
    return;

  anon34_Then:
    assume {:partition} sdv_99 == Irp;
    goto L47;

  anon33_Then:
    call {:si_unique_call 227} sdv_99 := __HAVOC_malloc(1);
    goto L46;

  anon32_Then:
    assume {:partition} Wait == 0;
    goto L42;

  anon36_Then:
    assume {:partition} Tmp_178 == 0;
    goto L40;

  anon35_Then:
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_177;
    assume {:nonnull} IrpContext_16 != 0;
    assume IrpContext_16 > 0;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    goto L40;

  anon31_Then:
    goto L40;

  anon30_Then:
    goto L12;

  anon29_Then:
    goto L12;

  anon28_Then:
    goto L12;

  anon27_Then:
    goto L12;

  anon25_Then:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L12;

  anon26_Then:
    goto L11;
}



procedure {:origName "FatCreateRootDcb"} FatCreateRootDcb(actual_IrpContext_17: int, actual_Vcb_9: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCreateRootDcb"} FatCreateRootDcb(actual_IrpContext_17: int, actual_Vcb_9: int)
{
  var {:scalar} i_4: int;
  var {:pointer} UnwindStorage_2: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} sdv_100: int;
  var {:pointer} UnwindResource_3: int;
  var {:pointer} Tmp_182: int;
  var {:scalar} Tmp_183: int;
  var {:pointer} Tmp_184: int;
  var {:scalar} Tmp_185: int;
  var {:pointer} Dcb_2: int;
  var {:pointer} Tmp_186: int;
  var {:pointer} Tmp_187: int;
  var {:pointer} Tmp_188: int;
  var {:pointer} Tmp_189: int;
  var {:pointer} Tmp_190: int;
  var {:pointer} Tmp_191: int;
  var {:pointer} Tmp_192: int;
  var {:pointer} UnwindFileObject_1: int;
  var {:pointer} UnwindResource2_3: int;
  var {:scalar} sdv_108: int;
  var {:scalar} Tmp_195: int;
  var {:pointer} Tmp_196: int;
  var {:scalar} Tmp_197: int;
  var {:scalar} Tmp_199: int;
  var {:pointer} UnwindMcb_2: int;
  var {:pointer} IrpContext_17: int;
  var {:pointer} Vcb_9: int;
  var boogieTmp: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 228} vslice_dummy_var_48 := __HAVOC_malloc(4);
    IrpContext_17 := actual_IrpContext_17;
    Vcb_9 := actual_Vcb_9;
    call {:si_unique_call 229} UnwindStorage_2 := __HAVOC_malloc(8);
    assume {:nonnull} UnwindStorage_2 != 0;
    assume UnwindStorage_2 > 0;
    UnwindResource_3 := 0;
    UnwindResource2_3 := 0;
    UnwindMcb_2 := 0;
    UnwindFileObject_1 := 0;
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 230} KeBugCheckEx(35, 1835935, 0, 0, 0);
    goto L15;

  L15:
    call {:si_unique_call 231} sdv_100 := ExAllocatePoolWithTag(16, 352, -965451450);
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    havoc Dcb_2;
    assume {:nonnull} UnwindStorage_2 != 0;
    assume UnwindStorage_2 > 0;
    call {:si_unique_call 232} sdv_RtlZeroMemory(0, 352);
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    call {:si_unique_call 233} boogieTmp := FatAllocateNonPagedFcb();
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} UnwindStorage_2 != 0;
    assume UnwindStorage_2 > 0;
    call {:si_unique_call 234} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    call {:si_unique_call 235} boogieTmp := FatAllocateResource();
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    havoc UnwindResource_3;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    call {:si_unique_call 236} boogieTmp := FatAllocateResource();
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    havoc UnwindResource2_3;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    call {:si_unique_call 237} InitializeListHead(ParentDcbLinks__FCB(Dcb_2));
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    call {:si_unique_call 238} InitializeListHead(ParentDcbQueue_unnamed_tag_68(Dcb_unnamed_tag_67(Specific__FCB(Dcb_2))));
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    call {:si_unique_call 239} sdv_ExInitializeFastMutex(0);
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    havoc Tmp_180;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    call {:si_unique_call 240} FsRtlSetupAdvancedHeader(Header__FCB(Dcb_2), AdvancedFcbHeaderMutex__NON_PAGED_FCB(Tmp_180));
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    UnwindMcb_2 := Mcb__FCB(Dcb_2);
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    goto L105;

  L105:
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    call {:si_unique_call 241} FatLookupFileAllocationSize#1(IrpContext_17, Dcb_2);
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    goto L112;

  L112:
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    call {:si_unique_call 242} FatCheckFreeDirentBitmap(IrpContext_17, Dcb_2);
    call {:si_unique_call 243} sdv_108 := sdv_AbnormalTermination();
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_108 != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} UnwindFileObject_1 != 0;
    call {:si_unique_call 244} vslice_dummy_var_49 := sdv_ObDereferenceObject(0);
    goto L127;

  L127:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UnwindMcb_2 != 0;
    goto L131;

  L131:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} UnwindResource_3 != 0;
    call {:si_unique_call 245} FatFreeResource(UnwindResource_3);
    goto L135;

  L135:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} UnwindResource2_3 != 0;
    call {:si_unique_call 246} FatFreeResource(UnwindResource2_3);
    goto L139;

  L139:
    i_4 := 0;
    goto L143;

  L143:
    call {:si_unique_call 247} i_4, Tmp_185, Tmp_195 := FatCreateRootDcb_loop_L143(i_4, UnwindStorage_2, Tmp_185, Tmp_195);
    goto L143_last;

  L143_last:
    assume {:CounterLoop 2} {:Counter "i_4"} true;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} 2 > i_4;
    Tmp_195 := i_4;
    assume {:nonnull} UnwindStorage_2 != 0;
    assume UnwindStorage_2 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_185 := i_4;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume Tmp_185 != 1;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume Tmp_185 != 0;
    goto L167;

  L167:
    call {:si_unique_call 248} sdv_ExFreePool(0);
    goto L146;

  L146:
    i_4 := i_4 + 1;
    goto L146_dummy;

  L146_dummy:
    assume false;
    return;

  anon38_Then:
    assume Tmp_185 == 0;
    Tmp_185 := 0;
    assume {:nonnull} UnwindStorage_2 != 0;
    assume UnwindStorage_2 > 0;
    goto L167;

  anon37_Then:
    assume Tmp_185 == 1;
    Tmp_185 := 1;
    assume {:nonnull} UnwindStorage_2 != 0;
    assume UnwindStorage_2 > 0;
    goto L167;

  anon36_Then:
    goto L146;

  anon33_Then:
    assume {:partition} i_4 >= 2;
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    goto L1;

  L1:
    return;

  anon32_Then:
    assume {:partition} UnwindResource2_3 == 0;
    goto L139;

  anon31_Then:
    assume {:partition} UnwindResource_3 == 0;
    goto L135;

  anon30_Then:
    assume {:partition} UnwindMcb_2 == 0;
    goto L131;

  anon29_Then:
    assume {:partition} UnwindFileObject_1 == 0;
    goto L127;

  anon28_Then:
    assume {:partition} sdv_108 == 0;
    goto L1;

  anon27_Then:
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    Tmp_186 := Bpb__VCB(Vcb_9);
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    assume {:nonnull} Tmp_186 != 0;
    assume Tmp_186 > 0;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    goto L112;

  anon35_Then:
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    Tmp_196 := Bpb__VCB(Vcb_9);
    assume {:nonnull} Tmp_196 != 0;
    assume Tmp_196 > 0;
    havoc Tmp_199;
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    Tmp_192 := Bpb__VCB(Vcb_9);
    assume {:nonnull} Tmp_192 != 0;
    assume Tmp_192 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    Tmp_184 := Bpb__VCB(Vcb_9);
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    Tmp_187 := Bpb__VCB(Vcb_9);
    assume {:nonnull} Tmp_184 != 0;
    assume Tmp_184 > 0;
    assume {:nonnull} Tmp_187 != 0;
    assume Tmp_187 > 0;
    havoc Tmp_183;
    goto L155;

  L155:
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    Tmp_190 := Bpb__VCB(Vcb_9);
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    Tmp_191 := Bpb__VCB(Vcb_9);
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    Tmp_188 := Bpb__VCB(Vcb_9);
    assume {:nonnull} Tmp_188 != 0;
    assume Tmp_188 > 0;
    assume {:nonnull} Tmp_190 != 0;
    assume Tmp_190 > 0;
    assume {:nonnull} Tmp_191 != 0;
    assume Tmp_191 > 0;
    havoc Tmp_197;
    assume {:nonnull} Dcb_2 != 0;
    assume Dcb_2 > 0;
    call {:si_unique_call 249} vslice_dummy_var_50 := FatAddMcbEntry(Vcb_9, Mcb__FCB(Dcb_2), 0, Tmp_197, Tmp_199);
    goto L105;

  anon39_Then:
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    Tmp_189 := Bpb__VCB(Vcb_9);
    assume {:nonnull} Vcb_9 != 0;
    assume Vcb_9 > 0;
    Tmp_182 := Bpb__VCB(Vcb_9);
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    havoc Tmp_183;
    goto L155;

  anon34_Then:
    goto L15;
}



procedure {:origName "FatTearDownVcb"} FatTearDownVcb(actual_IrpContext_18: int, actual_Vcb_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatTearDownVcb"} FatTearDownVcb(actual_IrpContext_18: int, actual_Vcb_10: int)
{
  var {:pointer} DirectoryFileObject: int;
  var {:pointer} Tmp_200: int;
  var {:pointer} Tmp_201: int;
  var {:pointer} IrpContext_18: int;
  var {:pointer} Vcb_10: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_1203: int;

  anon0:
    call {:si_unique_call 250} vslice_dummy_var_51 := __HAVOC_malloc(4);
    IrpContext_18 := actual_IrpContext_18;
    Vcb_10 := actual_Vcb_10;
    call {:si_unique_call 251} sdv_do_paged_code_check();
    assume {:nonnull} Vcb_10 != 0;
    assume Vcb_10 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Vcb_10 != 0;
    assume Vcb_10 > 0;
    havoc vslice_dummy_var_1203;
    call {:si_unique_call 252} FatSyncUninitializeCacheMap(IrpContext_18, vslice_dummy_var_1203);
    call {:si_unique_call 253} vslice_dummy_var_52 := sdv_ObDereferenceObject(0);
    assume {:nonnull} Vcb_10 != 0;
    assume Vcb_10 > 0;
    goto L8;

  L8:
    call {:si_unique_call 254} FatCloseEaFile(IrpContext_18, Vcb_10, 0);
    assume {:nonnull} Vcb_10 != 0;
    assume Vcb_10 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} Vcb_10 != 0;
    assume Vcb_10 > 0;
    havoc Tmp_200;
    assume {:nonnull} Tmp_200 != 0;
    assume Tmp_200 > 0;
    havoc DirectoryFileObject;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} DirectoryFileObject != 0;
    call {:si_unique_call 255} FatSyncUninitializeCacheMap(IrpContext_18, DirectoryFileObject);
    assume {:nonnull} Vcb_10 != 0;
    assume Vcb_10 > 0;
    havoc Tmp_201;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    call {:si_unique_call 256} vslice_dummy_var_53 := sdv_ObDereferenceObject(0);
    goto L22;

  L22:
    assume {:nonnull} Vcb_10 != 0;
    assume Vcb_10 > 0;
    return;

  anon9_Then:
    assume {:partition} DirectoryFileObject == 0;
    goto L22;

  anon8_Then:
    goto L22;

  anon7_Then:
    goto L8;
}



procedure {:origName "_sdv_init20"} _sdv_init20();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init20"} _sdv_init20()
{
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 257} vslice_dummy_var_54 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatIsHandleCountZero"} FatIsHandleCountZero(actual_IrpContext_19: int, actual_Vcb_11: int) returns (Tmp_206: int);
  free ensures {:va_keep} Tmp_206 == 0 || Tmp_206 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsHandleCountZero"} FatIsHandleCountZero(actual_IrpContext_19: int, actual_Vcb_11: int) returns (Tmp_206: int)
{
  var {:pointer} Fcb_7: int;
  var {:pointer} IrpContext_19: int;
  var {:pointer} Vcb_11: int;
  var vslice_dummy_var_1204: int;

  anon0:
    IrpContext_19 := actual_IrpContext_19;
    Vcb_11 := actual_Vcb_11;
    assume {:nonnull} Vcb_11 != 0;
    assume Vcb_11 > 0;
    havoc Fcb_7;
    goto L5;

  L5:
    call {:si_unique_call 258} Fcb_7 := FatIsHandleCountZero_loop_L5(Fcb_7, IrpContext_19, Vcb_11);
    goto L5_last;

  L5_last:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Fcb_7 != 0;
    assume {:nonnull} Fcb_7 != 0;
    assume Fcb_7 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_206 := 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:nonnull} Vcb_11 != 0;
    assume Vcb_11 > 0;
    havoc vslice_dummy_var_1204;
    call {:si_unique_call 259} Fcb_7 := FatGetNextFcbTopDown(IrpContext_19, Fcb_7, vslice_dummy_var_1204);
    goto anon6_Then_dummy;

  anon6_Then_dummy:
    assume false;
    return;

  anon5_Then:
    assume {:partition} Fcb_7 == 0;
    Tmp_206 := 1;
    goto L1;
}



procedure {:origName "FatFreeNonPagedFcb"} FatFreeNonPagedFcb(actual_NonPagedFcb: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFreeNonPagedFcb"} FatFreeNonPagedFcb(actual_NonPagedFcb: int)
{
  var {:pointer} NonPagedFcb: int;
  var vslice_dummy_var_55: int;

  anon0:
    call {:si_unique_call 260} vslice_dummy_var_55 := __HAVOC_malloc(4);
    NonPagedFcb := actual_NonPagedFcb;
    call {:si_unique_call 261} ExFreeToNPagedLookasideList(FatNonPagedFcbLookasideList, NonPagedFcb);
    return;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_56: int;

  anon0:
    call {:si_unique_call 262} vslice_dummy_var_56 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatSplitAllocation"} FatSplitAllocation(actual_IrpContext_20: int, actual_Vcb_12: int, actual_Mcb: int, actual_SplitAtVbo: int, actual_RemainingMcb: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSplitAllocation"} FatSplitAllocation(actual_IrpContext_20: int, actual_Vcb_12: int, actual_Mcb: int, actual_SplitAtVbo: int, actual_RemainingMcb: int)
{
  var {:dopa} {:scalar} Lbo: int;
  var {:scalar} Tmp_213: int;
  var {:scalar} sdv_112: int;
  var {:scalar} SourceVbo: int;
  var {:scalar} sdv_113: int;
  var {:scalar} sdv_115: int;
  var {:dopa} {:scalar} DontCare: int;
  var {:scalar} TargetVbo: int;
  var {:dopa} {:scalar} ByteCount: int;
  var {:pointer} IrpContext_20: int;
  var {:pointer} Vcb_12: int;
  var {:pointer} Mcb: int;
  var {:scalar} SplitAtVbo: int;
  var {:pointer} RemainingMcb: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_1205: int;
  var vslice_dummy_var_1206: int;
  var vslice_dummy_var_1207: int;
  var vslice_dummy_var_1208: int;
  var vslice_dummy_var_1209: int;
  var vslice_dummy_var_1210: int;

  anon0:
    call {:si_unique_call 263} Lbo := __HAVOC_malloc(4);
    call {:si_unique_call 264} vslice_dummy_var_57 := __HAVOC_malloc(4);
    call {:si_unique_call 265} DontCare := __HAVOC_malloc(4);
    call {:si_unique_call 266} ByteCount := __HAVOC_malloc(4);
    IrpContext_20 := actual_IrpContext_20;
    Vcb_12 := actual_Vcb_12;
    Mcb := actual_Mcb;
    SplitAtVbo := actual_SplitAtVbo;
    RemainingMcb := actual_RemainingMcb;
    call {:si_unique_call 267} sdv_do_paged_code_check();
    call {:si_unique_call 268} vslice_dummy_var_58 := corral_nondet();
    SourceVbo := SplitAtVbo;
    TargetVbo := 0;
    goto L15;

  L15:
    call {:si_unique_call 269} sdv_112, SourceVbo, TargetVbo, vslice_dummy_var_59 := FatSplitAllocation_loop_L15(Lbo, sdv_112, SourceVbo, TargetVbo, ByteCount, Vcb_12, Mcb, RemainingMcb, vslice_dummy_var_59);
    goto L15_last;

  L15_last:
    call {:si_unique_call 280} sdv_112 := FatLookupMcbEntry(Vcb_12, Mcb, SourceVbo, Lbo, ByteCount, 0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_112 != 0;
    assume {:nonnull} ByteCount != 0;
    assume ByteCount > 0;
    assume {:nonnull} Lbo != 0;
    assume Lbo > 0;
    havoc vslice_dummy_var_1205;
    havoc vslice_dummy_var_1206;
    call {:si_unique_call 270} vslice_dummy_var_59 := FatAddMcbEntry(Vcb_12, RemainingMcb, TargetVbo, vslice_dummy_var_1205, vslice_dummy_var_1206);
    assume {:nonnull} ByteCount != 0;
    assume ByteCount > 0;
    havoc vslice_dummy_var_1207;
    call {:si_unique_call 271} FatRemoveMcbEntry(Vcb_12, Mcb, SourceVbo, vslice_dummy_var_1207);
    assume {:nonnull} ByteCount != 0;
    assume ByteCount > 0;
    havoc TargetVbo;
    assume {:nonnull} ByteCount != 0;
    assume ByteCount > 0;
    havoc SourceVbo;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} SourceVbo == 0;
    goto L37;

  L37:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} SplitAtVbo != 0;
    call {:si_unique_call 272} vslice_dummy_var_60 := FatLookupLastMcbEntry(Vcb_12, Mcb, DontCare, Lbo, 0);
    call {:si_unique_call 273} Tmp_213 := corral_nondet();
    call {:si_unique_call 274} FatSetFatEntry#1(IrpContext_20, Vcb_12, Tmp_213, 268435455);
    goto L48;

  L48:
    call {:si_unique_call 275} sdv_113 := sdv_AbnormalTermination();
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_113 != 0;
    TargetVbo := SplitAtVbo;
    SourceVbo := 0;
    goto L62;

  L62:
    call {:si_unique_call 276} SourceVbo, sdv_115, TargetVbo, vslice_dummy_var_61 := FatSplitAllocation_loop_L62(Lbo, SourceVbo, sdv_115, TargetVbo, ByteCount, Vcb_12, Mcb, RemainingMcb, vslice_dummy_var_61);
    goto L62_last;

  L62_last:
    call {:si_unique_call 279} sdv_115 := FatLookupMcbEntry(Vcb_12, RemainingMcb, SourceVbo, Lbo, ByteCount, 0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_115 != 0;
    assume {:nonnull} ByteCount != 0;
    assume ByteCount > 0;
    assume {:nonnull} Lbo != 0;
    assume Lbo > 0;
    havoc vslice_dummy_var_1208;
    havoc vslice_dummy_var_1209;
    call {:si_unique_call 277} vslice_dummy_var_61 := FatAddMcbEntry(Vcb_12, Mcb, TargetVbo, vslice_dummy_var_1208, vslice_dummy_var_1209);
    assume {:nonnull} ByteCount != 0;
    assume ByteCount > 0;
    havoc vslice_dummy_var_1210;
    call {:si_unique_call 278} FatRemoveMcbEntry(Vcb_12, RemainingMcb, SourceVbo, vslice_dummy_var_1210);
    assume {:nonnull} ByteCount != 0;
    assume ByteCount > 0;
    havoc TargetVbo;
    assume {:nonnull} ByteCount != 0;
    assume ByteCount > 0;
    havoc SourceVbo;
    goto anon14_Else_dummy;

  anon14_Else_dummy:
    assume false;
    return;

  anon14_Then:
    assume {:partition} sdv_115 == 0;
    goto L1;

  L1:
    return;

  anon13_Then:
    assume {:partition} sdv_113 == 0;
    goto L1;

  anon12_Then:
    assume {:partition} SplitAtVbo == 0;
    goto L48;

  anon15_Then:
    assume {:partition} SourceVbo != 0;
    goto anon15_Then_dummy;

  anon15_Then_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} sdv_112 == 0;
    goto L37;
}



procedure {:origName "FatLogOf"} FatLogOf(actual_Value: int) returns (Tmp_215: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLogOf"} FatLogOf(actual_Value: int) returns (Tmp_215: int)
{
  var {:scalar} Tmp_216: int;
  var {:scalar} Log: int;
  var {:scalar} Value: int;

  anon0:
    Value := actual_Value;
    Log := 0;
    call {:si_unique_call 281} sdv_do_paged_code_check();
    goto L8;

  L8:
    call {:si_unique_call 282} Log, Value := FatLogOf_loop_L8(Log, Value);
    goto L8_last;

  L8_last:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} BAND(Value, -2) != 0;
    Log := Log + 1;
    call {:si_unique_call 283} Value := corral_nondet();
    goto anon5_Else_dummy;

  anon5_Else_dummy:
    assume false;
    return;

  anon5_Then:
    assume {:partition} BAND(Value, -2) == 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Value != 1;
    Tmp_216 := Log;
    call {:si_unique_call 284} KeBugCheckEx(35, 135588, Value, Tmp_216, 0);
    goto L12;

  L12:
    Tmp_215 := Log;
    return;

  anon6_Then:
    assume {:partition} Value == 1;
    goto L12;
}



procedure {:origName "FatExamineFatEntries"} FatExamineFatEntries(actual_IrpContext_21: int, actual_Vcb_13: int, actual_StartIndex: int, actual_EndIndex: int, actual_SetupWindows: int, actual_SwitchToWindow: int, actual_BitMapBuffer: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatExamineFatEntries"} FatExamineFatEntries(actual_IrpContext_21: int, actual_Vcb_13: int, actual_StartIndex: int, actual_EndIndex: int, actual_SetupWindows: int, actual_SwitchToWindow: int, actual_BitMapBuffer: int)
{
  var {:pointer} FatBuffer: int;
  var {:scalar} Offset: int;
  var {:scalar} Tmp_219: int;
  var {:scalar} PrivateBitMap: int;
  var {:scalar} Tmp_222: int;
  var {:pointer} NewBitMapBuffer: int;
  var {:scalar} StartIndexOfThisRun: int;
  var {:pointer} CurrentWindow: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} Tmp_225: int;
  var {:scalar} EntriesPerWindow: int;
  var {:pointer} Tmp_226: int;
  var {:pointer} Tmp_228: int;
  var {:pointer} Tmp_229: int;
  var {:pointer} Tmp_230: int;
  var {:scalar} FatIndexBitSize: int;
  var {:pointer} Bcb: int;
  var {:pointer} Tmp_233: int;
  var {:scalar} FatIndex: int;
  var {:scalar} BytesPerEntry: int;
  var {:pointer} Tmp_234: int;
  var {:scalar} Tmp_235: int;
  var {:pointer} Tmp_236: int;
  var {:scalar} Tmp_237: int;
  var {:pointer} FreeClusterCount: int;
  var {:scalar} CurrentRun: int;
  var {:scalar} Page: int;
  var {:pointer} pv: int;
  var {:scalar} Tmp_240: int;
  var {:pointer} Tmp_242: int;
  var {:scalar} FirstFatEntry: int;
  var {:scalar} Tmp_243: int;
  var {:scalar} Tmp_245: int;
  var {:scalar} FatEntry: int;
  var {:pointer} Tmp_246: int;
  var {:pointer} BitMap: int;
  var {:pointer} Tmp_248: int;
  var {:scalar} ClustersThisRun: int;
  var {:pointer} Tmp_250: int;
  var {:pointer} Tmp_251: int;
  var {:pointer} Tmp_252: int;
  var {:pointer} IrpContext_21: int;
  var {:pointer} Vcb_13: int;
  var {:scalar} StartIndex: int;
  var {:scalar} EndIndex: int;
  var {:scalar} SetupWindows: int;
  var {:pointer} SwitchToWindow: int;
  var {:pointer} BitMapBuffer: int;
  var vslice_dummy_var_62: int;

  anon0:
    call {:si_unique_call 285} FatBuffer := __HAVOC_malloc(4);
    call {:si_unique_call 286} PrivateBitMap := __HAVOC_malloc(8);
    call {:si_unique_call 287} Bcb := __HAVOC_malloc(4);
    call {:si_unique_call 288} pv := __HAVOC_malloc(4);
    call {:si_unique_call 289} vslice_dummy_var_62 := __HAVOC_malloc(4);
    IrpContext_21 := actual_IrpContext_21;
    Vcb_13 := actual_Vcb_13;
    StartIndex := actual_StartIndex;
    EndIndex := actual_EndIndex;
    SetupWindows := actual_SetupWindows;
    SwitchToWindow := actual_SwitchToWindow;
    BitMapBuffer := actual_BitMapBuffer;
    FatEntry := 0;
    FirstFatEntry := 0;
    FreeClusterCount := 0;
    CurrentWindow := 0;
    NewBitMapBuffer := 0;
    BitMap := 0;
    call {:si_unique_call 290} sdv_do_paged_code_check();
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    havoc FatIndexBitSize;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    EntriesPerWindow := 65536;
    goto L35;

  L35:
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    FreeClusterCount := NumberOfFreeClusters_unnamed_tag_65(AllocationSupport__VCB(Vcb_13));
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} SetupWindows != 0;
    BitMap := 0;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    havoc Tmp_252;
    CurrentWindow := Tmp_252;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    goto L42;

  L42:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} FatIndexBitSize != 12;
    call {:si_unique_call 291} BytesPerEntry := corral_nondet();
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    Tmp_226 := Bpb__VCB(Vcb_13);
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    Tmp_225 := Bpb__VCB(Vcb_13);
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} Tmp_226 != 0;
    assume Tmp_226 > 0;
    havoc Page;
    Offset := Page * 4096;
    call {:si_unique_call 292} FatReadVolumeFile(IrpContext_21, Vcb_13, Offset, 4096, Bcb, pv);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} FatIndexBitSize == 32;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    assume {:nonnull} pv != 0;
    assume pv > 0;
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    havoc Tmp_234;
    assume {:nonnull} Tmp_234 != 0;
    assume Tmp_234 > 0;
    havoc FirstFatEntry;
    FirstFatEntry := BAND(FirstFatEntry, BNOT(BOR(BOR(BOR(268435456, 536870912), 1073741824), -2147483648)));
    goto L56;

  L56:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} FirstFatEntry != 0;
    Tmp_240 := 1;
    goto L59;

  L59:
    CurrentRun := Tmp_240;
    StartIndexOfThisRun := StartIndex;
    FatIndex := StartIndex;
    goto L62;

  L62:
    call {:si_unique_call 293} Offset, Tmp_219, StartIndexOfThisRun, Tmp_233, FatIndex, Tmp_237, CurrentRun, Page, FatEntry, ClustersThisRun, Tmp_251 := FatExamineFatEntries_loop_L62(FatBuffer, Offset, Tmp_219, StartIndexOfThisRun, CurrentWindow, EntriesPerWindow, FatIndexBitSize, Bcb, Tmp_233, FatIndex, Tmp_237, FreeClusterCount, CurrentRun, Page, pv, FatEntry, BitMap, ClustersThisRun, Tmp_251, IrpContext_21, Vcb_13, StartIndex, EndIndex, SetupWindows);
    goto L62_last;

  L62_last:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} EndIndex >= FatIndex;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} FatIndexBitSize == 12;
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    havoc Tmp_251;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    havoc FatEntry;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} BAND(FatIndex, 1) != 0;
    call {:si_unique_call 294} Tmp_219 := corral_nondet();
    goto L70;

  L70:
    FatEntry := BAND(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048), Tmp_219);
    goto L71;

  L71:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} CurrentRun == 2;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} FatEntry != 0;
    Tmp_237 := 1;
    goto L76;

  L76:
    CurrentRun := Tmp_237;
    goto L72;

  L72:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} CurrentRun != 0;
    goto L78;

  L78:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} CurrentRun == 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} FatEntry == 0;
    ClustersThisRun := FatIndex - StartIndexOfThisRun;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} BitMap != 0;
    goto L83;

  L83:
    CurrentRun := 0;
    StartIndexOfThisRun := FatIndex;
    goto L79;

  L79:
    FatIndex := FatIndex + 1;
    goto L79_dummy;

  L79_dummy:
    assume false;
    return;

  anon109_Then:
    assume {:partition} BitMap == 0;
    goto L83;

  anon88_Then:
    assume {:partition} FatEntry != 0;
    goto L79;

  anon87_Then:
    assume {:partition} CurrentRun != 1;
    goto L79;

  anon84_Then:
    assume {:partition} CurrentRun == 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} FatEntry != 0;
    ClustersThisRun := FatIndex - StartIndexOfThisRun;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} FreeClusterCount != 0;
    assume {:nonnull} FreeClusterCount != 0;
    assume FreeClusterCount > 0;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    goto L100;

  L100:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} BitMap != 0;
    goto L103;

  L103:
    CurrentRun := 1;
    StartIndexOfThisRun := FatIndex;
    goto L78;

  anon89_Then:
    assume {:partition} BitMap == 0;
    goto L103;

  anon110_Then:
    assume {:partition} FreeClusterCount == 0;
    goto L100;

  anon86_Then:
    assume {:partition} FatEntry == 0;
    goto L78;

  anon85_Then:
    assume {:partition} FatEntry == 0;
    Tmp_237 := 0;
    goto L76;

  anon83_Then:
    assume {:partition} CurrentRun != 2;
    goto L72;

  anon108_Then:
    assume {:partition} BAND(FatIndex, 1) == 0;
    Tmp_219 := FatEntry;
    goto L70;

  anon81_Then:
    assume {:partition} FatIndexBitSize != 12;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} SetupWindows != 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} FatIndex > StartIndex;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} INTMOD(FatIndex - 2, EntriesPerWindow) == 0;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} CurrentRun != 0;
    ClustersThisRun := FatIndex - StartIndexOfThisRun;
    goto L116;

  L116:
    StartIndexOfThisRun := FatIndex;
    CurrentRun := 2;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    goto L109;

  L109:
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto L125;

  L125:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} FatIndexBitSize == 32;
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    havoc Tmp_233;
    assume {:nonnull} Tmp_233 != 0;
    assume Tmp_233 > 0;
    havoc FatEntry;
    FatEntry := BAND(FatEntry, BNOT(BOR(BOR(BOR(268435456, 536870912), 1073741824), -2147483648)));
    goto L71;

  anon94_Then:
    assume {:partition} FatIndexBitSize != 32;
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    havoc FatEntry;
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    goto L71;

  anon90_Then:
    assume {:nonnull} Bcb != 0;
    assume Bcb > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Bcb != 0;
    assume Bcb > 0;
    goto L130;

  L130:
    Page := Page + 1;
    Offset := Offset + 4096;
    call {:si_unique_call 295} FatReadVolumeFile(IrpContext_21, Vcb_13, Offset, 4096, Bcb, pv);
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    assume {:nonnull} pv != 0;
    assume pv > 0;
    goto L125;

  anon93_Then:
    goto L130;

  anon111_Then:
    assume {:partition} CurrentRun == 0;
    ClustersThisRun := FatIndex - StartIndexOfThisRun;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} FreeClusterCount != 0;
    assume {:nonnull} FreeClusterCount != 0;
    assume FreeClusterCount > 0;
    goto L116;

  anon112_Then:
    assume {:partition} FreeClusterCount == 0;
    goto L116;

  anon92_Then:
    assume {:partition} INTMOD(FatIndex - 2, EntriesPerWindow) != 0;
    goto L109;

  anon91_Then:
    assume {:partition} StartIndex >= FatIndex;
    goto L109;

  anon82_Then:
    assume {:partition} SetupWindows == 0;
    goto L109;

  anon80_Then:
    assume {:partition} FatIndex > EndIndex;
    ClustersThisRun := FatIndex - StartIndexOfThisRun;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} CurrentRun != 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} BitMap != 0;
    goto L143;

  L143:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} SetupWindows != 0;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    goto L148;

  L148:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} SwitchToWindow != 0;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    call {:si_unique_call 296} sdv_ExFreePool(0);
    goto L152;

  L152:
    NewBitMapBuffer := 0;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} FreeClusterCount != 0;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    havoc Tmp_236;
    assume {:nonnull} FreeClusterCount != 0;
    assume FreeClusterCount > 0;
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    goto L150;

  L150:
    assume {:nonnull} Bcb != 0;
    assume Bcb > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} Bcb != 0;
    assume Bcb > 0;
    goto L166;

  L166:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} NewBitMapBuffer != 0;
    call {:si_unique_call 297} sdv_ExFreePool(0);
    goto L1;

  L1:
    return;

  anon101_Then:
    assume {:partition} NewBitMapBuffer == 0;
    goto L1;

  anon100_Then:
    goto L166;

  anon114_Then:
    assume {:partition} FreeClusterCount == 0;
    goto L150;

  anon99_Then:
    goto L152;

  anon98_Then:
    assume {:partition} SwitchToWindow == 0;
    goto L150;

  anon97_Then:
    assume {:partition} SetupWindows == 0;
    goto L148;

  anon96_Then:
    assume {:partition} BitMap == 0;
    goto L143;

  anon113_Then:
    assume {:partition} CurrentRun == 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} FreeClusterCount != 0;
    assume {:nonnull} FreeClusterCount != 0;
    assume FreeClusterCount > 0;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    goto L174;

  L174:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} BitMap != 0;
    goto L143;

  anon102_Then:
    assume {:partition} BitMap == 0;
    goto L143;

  anon95_Then:
    assume {:partition} FreeClusterCount == 0;
    goto L174;

  anon79_Then:
    assume {:partition} FirstFatEntry == 0;
    Tmp_240 := 0;
    goto L59;

  anon103_Then:
    assume {:partition} FatIndexBitSize != 32;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    assume {:nonnull} pv != 0;
    assume pv > 0;
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    havoc FirstFatEntry;
    goto L56;

  anon78_Then:
    assume {:partition} FatIndexBitSize == 12;
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    Tmp_250 := Bpb__VCB(Vcb_13);
    assume {:nonnull} Tmp_250 != 0;
    assume Tmp_250 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    Tmp_246 := Bpb__VCB(Vcb_13);
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    Tmp_248 := Bpb__VCB(Vcb_13);
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc Tmp_235;
    goto L47;

  L47:
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    Tmp_229 := Bpb__VCB(Vcb_13);
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    Tmp_224 := Bpb__VCB(Vcb_13);
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} Tmp_229 != 0;
    assume Tmp_229 > 0;
    havoc Tmp_243;
    call {:si_unique_call 298} FatReadVolumeFile(IrpContext_21, Vcb_13, Tmp_243, Tmp_235, Bcb, FatBuffer);
    assume {:nonnull} FatBuffer != 0;
    assume FatBuffer > 0;
    havoc Tmp_242;
    assume {:nonnull} Tmp_242 != 0;
    assume Tmp_242 > 0;
    havoc FirstFatEntry;
    Tmp_222 := FirstFatEntry;
    FirstFatEntry := BAND(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048), Tmp_222);
    goto L56;

  anon107_Then:
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    Tmp_228 := Bpb__VCB(Vcb_13);
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    Tmp_230 := Bpb__VCB(Vcb_13);
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    assume {:nonnull} Tmp_230 != 0;
    assume Tmp_230 > 0;
    havoc Tmp_235;
    goto L47;

  anon106_Then:
    assume {:partition} SetupWindows == 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} BitMapBuffer != 0;
    BitMap := PrivateBitMap;
    FreeClusterCount := 0;
    goto L42;

  anon77_Then:
    assume {:partition} BitMapBuffer == 0;
    CurrentWindow := SwitchToWindow;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    havoc StartIndex;
    assume {:nonnull} CurrentWindow != 0;
    assume CurrentWindow > 0;
    havoc EndIndex;
    BitMap := PrivateBitMap;
    Tmp_245 := INTDIV(EntriesPerWindow + 7, 8);
    call {:si_unique_call 299} NewBitMapBuffer := ExAllocatePoolWithTag(17, Tmp_245, -1032560314);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} FatIndexBitSize == 32;
    FreeClusterCount := 0;
    goto L42;

  anon104_Then:
    assume {:partition} FatIndexBitSize != 32;
    goto L42;

  anon105_Then:
    assume {:nonnull} Vcb_13 != 0;
    assume Vcb_13 > 0;
    havoc EntriesPerWindow;
    goto L35;
}



procedure {:origName "FatInterpretClusterType"} FatInterpretClusterType(actual_Vcb_14: int, actual_Entry: int) returns (Tmp_254: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_254 == 4 || Tmp_254 == 1 || Tmp_254 == 2 || Tmp_254 == 3 || Tmp_254 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatInterpretClusterType"} FatInterpretClusterType(actual_Vcb_14: int, actual_Entry: int) returns (Tmp_254: int)
{
  var {:pointer} Vcb_14: int;
  var {:scalar} Entry: int;

  anon0:
    Vcb_14 := actual_Vcb_14;
    Entry := actual_Entry;
    call {:si_unique_call 300} sdv_do_paged_code_check();
    assume {:nonnull} Vcb_14 != 0;
    assume Vcb_14 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Vcb_14 != 0;
    assume Vcb_14 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Vcb_14 != 0;
    assume Vcb_14 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Entry := BAND(Entry, BNOT(BOR(BOR(BOR(268435456, 536870912), 1073741824), -2147483648)));
    goto L11;

  L11:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Entry != 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} 268435440 > Entry;
    Tmp_254 := 4;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} Entry >= 268435440;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} 268435447 > Entry;
    Tmp_254 := 1;
    goto L1;

  anon24_Then:
    assume {:partition} Entry >= 268435447;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Entry == 268435447;
    Tmp_254 := 2;
    goto L1;

  anon25_Then:
    assume {:partition} Entry != 268435447;
    Tmp_254 := 3;
    goto L1;

  anon22_Then:
    assume {:partition} Entry == 0;
    Tmp_254 := 0;
    goto L1;

  anon26_Then:
    goto L7;

  L7:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Entry >= 65520;
    Entry := BOR(Entry, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(65536, 131072), 262144), 524288), 1048576), 2097152), 4194304), 8388608), 16777216), 33554432), 67108864), 134217728));
    goto L11;

  anon20_Then:
    assume {:partition} 65520 > Entry;
    goto L11;

  anon27_Then:
    goto L7;

  anon19_Then:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Entry >= 4080;
    Entry := BOR(Entry, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(4096, 8192), 16384), 32768), 65536), 131072), 262144), 524288), 1048576), 2097152), 4194304), 8388608), 16777216), 33554432), 67108864), 134217728));
    goto L11;

  anon21_Then:
    assume {:partition} 4080 > Entry;
    goto L11;
}



procedure {:origName "FatSelectBestWindow"} FatSelectBestWindow(actual_Vcb_16: int) returns (Tmp_260: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSelectBestWindow"} FatSelectBestWindow(actual_Vcb_16: int) returns (Tmp_260: int)
{
  var {:scalar} MaxFree: int;
  var {:scalar} i_5: int;
  var {:pointer} Tmp_261: int;
  var {:scalar} Tmp_263: int;
  var {:scalar} FirstEmpty: int;
  var {:pointer} Tmp_264: int;
  var {:scalar} Fave: int;
  var {:pointer} Tmp_265: int;
  var {:scalar} ClustersPerWindow: int;
  var {:scalar} Tmp_266: int;
  var {:scalar} Tmp_267: int;
  var {:pointer} Vcb_16: int;

  anon0:
    Vcb_16 := actual_Vcb_16;
    Fave := 0;
    MaxFree := 0;
    FirstEmpty := -1;
    ClustersPerWindow := 65536;
    i_5 := 0;
    goto L13;

  L13:
    call {:si_unique_call 301} MaxFree, i_5, Tmp_261, Tmp_263, FirstEmpty, Tmp_264, Fave, Tmp_265, Tmp_266, Tmp_267 := FatSelectBestWindow_loop_L13(MaxFree, i_5, Tmp_261, Tmp_263, FirstEmpty, Tmp_264, Fave, Tmp_265, ClustersPerWindow, Tmp_266, Tmp_267, Vcb_16);
    goto L13_last;

  L13_last:
    assume {:nonnull} Vcb_16 != 0;
    assume Vcb_16 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Tmp_267 := i_5;
    assume {:nonnull} Vcb_16 != 0;
    assume Vcb_16 > 0;
    havoc Tmp_264;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} -1 == FirstEmpty;
    FirstEmpty := i_5;
    goto L18;

  L18:
    i_5 := i_5 + 1;
    goto L18_dummy;

  L18_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} -1 != FirstEmpty;
    goto L18;

  anon19_Then:
    Tmp_266 := i_5;
    assume {:nonnull} Vcb_16 != 0;
    assume Vcb_16 > 0;
    havoc Tmp_261;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    Tmp_263 := i_5;
    assume {:nonnull} Vcb_16 != 0;
    assume Vcb_16 > 0;
    havoc Tmp_265;
    assume {:nonnull} Tmp_265 != 0;
    assume Tmp_265 > 0;
    havoc MaxFree;
    Fave := i_5;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L18;

  anon21_Then:
    goto L14;

  L14:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} -1 != FirstEmpty;
    Fave := FirstEmpty;
    goto L24;

  L24:
    Tmp_260 := Fave;
    return;

  anon18_Then:
    assume {:partition} -1 == FirstEmpty;
    goto L24;

  anon16_Then:
    goto L24;

  anon20_Then:
    goto L18;

  anon15_Then:
    goto L14;
}



procedure {:origName "FatAddFileAllocation"} FatAddFileAllocation(actual_IrpContext_25: int, actual_FcbOrDcb_2: int, actual_FileObject_1: int, actual_DesiredAllocationSize: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAddFileAllocation"} FatAddFileAllocation(actual_IrpContext_25: int, actual_FcbOrDcb_2: int, actual_FileObject_1: int, actual_DesiredAllocationSize: int)
{
  var {:scalar} UnwindWeAllocatedDiskSpace: int;
  var {:scalar} Tmp_299: int;
  var {:dopa} {:scalar} FirstLboOfFile: int;
  var {:pointer} Dirent_3: int;
  var {:pointer} Bcb_2: int;
  var {:dopa} {:scalar} NewAllocation: int;
  var {:pointer} McbToCleanup: int;
  var {:dopa} {:scalar} DontCare_2: int;
  var {:scalar} UnwindAllocationSizeSet: int;
  var {:scalar} sdv_133: int;
  var {:pointer} Vcb_18: int;
  var {:scalar} UnwindWeInitializedMcb: int;
  var {:pointer} Tmp_302: int;
  var {:dopa} {:scalar} LastAllocatedLbo: int;
  var {:scalar} UnwindCacheManagerInformed: int;
  var {:scalar} NewMcb: int;
  var {:pointer} IrpContext_25: int;
  var {:pointer} FcbOrDcb_2: int;
  var {:pointer} FileObject_1: int;
  var {:scalar} DesiredAllocationSize: int;
  var boogieTmp: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_1211: int;
  var vslice_dummy_var_1212: int;
  var vslice_dummy_var_1213: int;

  anon0:
    call {:si_unique_call 302} FirstLboOfFile := __HAVOC_malloc(4);
    call {:si_unique_call 303} Dirent_3 := __HAVOC_malloc(4);
    call {:si_unique_call 304} Bcb_2 := __HAVOC_malloc(4);
    call {:si_unique_call 305} NewAllocation := __HAVOC_malloc(4);
    call {:si_unique_call 306} vslice_dummy_var_63 := __HAVOC_malloc(4);
    call {:si_unique_call 307} DontCare_2 := __HAVOC_malloc(4);
    call {:si_unique_call 308} LastAllocatedLbo := __HAVOC_malloc(4);
    call {:si_unique_call 309} NewMcb := __HAVOC_malloc(24);
    IrpContext_25 := actual_IrpContext_25;
    FcbOrDcb_2 := actual_FcbOrDcb_2;
    FileObject_1 := actual_FileObject_1;
    call {:si_unique_call 310} DesiredAllocationSize := __HAVOC_malloc(4);
    McbToCleanup := 0;
    assume {:nonnull} Dirent_3 != 0;
    assume Dirent_3 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_3] := 0;
    assume {:nonnull} Bcb_2 != 0;
    assume Bcb_2 > 0;
    UnwindWeAllocatedDiskSpace := 0;
    UnwindAllocationSizeSet := 0;
    UnwindCacheManagerInformed := 0;
    UnwindWeInitializedMcb := 0;
    call {:si_unique_call 311} sdv_do_paged_code_check();
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 312} FatLookupFileAllocationSize#1(IrpContext_25, FcbOrDcb_2);
    goto L24;

  L24:
    assume {:nonnull} DesiredAllocationSize != 0;
    assume DesiredAllocationSize > 0;
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    havoc Vcb_18;
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 313} FatGetDirentFromFcbOrDcb(IrpContext_25, FcbOrDcb_2, Dirent_3, Bcb_2);
    assume {:nonnull} Bcb_2 != 0;
    assume Bcb_2 > 0;
    havoc vslice_dummy_var_1211;
    call {:si_unique_call 314} FatSetDirtyBcb#1(IrpContext_25, vslice_dummy_var_1211, Vcb_18, 1);
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    call {:si_unique_call 315} FatAllocateDiskSpace(IrpContext_25, Vcb_18, 0, DesiredAllocationSize, 0, Mcb__FCB(FcbOrDcb_2));
    UnwindWeAllocatedDiskSpace := 1;
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    McbToCleanup := Mcb__FCB(FcbOrDcb_2);
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    havoc vslice_dummy_var_1212;
    call {:si_unique_call 316} vslice_dummy_var_65 := FatLookupMcbEntry(vslice_dummy_var_1212, Mcb__FCB(FcbOrDcb_2), 0, FirstLboOfFile, 0, 0);
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    call {:si_unique_call 317} boogieTmp := corral_nondet();
    assume {:nonnull} Dirent_3 != 0;
    assume Dirent_3 > 0;
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_3] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_3] > 0;
    assume {:nonnull} Vcb_18 != 0;
    assume Vcb_18 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Dirent_3 != 0;
    assume Dirent_3 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_3] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_3] > 0;
    call {:si_unique_call 318} boogieTmp := corral_nondet();
    goto L176;

  L176:
    assume {:nonnull} DesiredAllocationSize != 0;
    assume DesiredAllocationSize > 0;
    assume {:nonnull} NewAllocation != 0;
    assume NewAllocation > 0;
    goto L92;

  L92:
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    assume {:nonnull} NewAllocation != 0;
    assume NewAllocation > 0;
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L95;

  L95:
    UnwindAllocationSizeSet := 1;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} FileObject_1 != 0;
    assume {:nonnull} FileObject_1 != 0;
    assume FileObject_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} FileObject_1 != 0;
    assume FileObject_1 > 0;
    havoc Tmp_302;
    assume {:nonnull} Tmp_302 != 0;
    assume Tmp_302 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    UnwindCacheManagerInformed := 1;
    goto L97;

  L97:
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    assume {:nonnull} NewAllocation != 0;
    assume NewAllocation > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    call {:si_unique_call 319} FatMergeAllocation(IrpContext_25, Vcb_18, Mcb__FCB(FcbOrDcb_2), NewMcb);
    goto L104;

  L104:
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    call {:si_unique_call 320} sdv_133 := sdv_AbnormalTermination();
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_133 != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} UnwindAllocationSizeSet != 0;
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    assume {:nonnull} NewAllocation != 0;
    assume NewAllocation > 0;
    goto L114;

  L114:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} UnwindCacheManagerInformed != 0;
    goto L116;

  L116:
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto L121;

  L121:
    assume {:nonnull} Bcb_2 != 0;
    assume Bcb_2 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Bcb_2 != 0;
    assume Bcb_2 > 0;
    goto L122;

  L122:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} UnwindWeAllocatedDiskSpace != 0;
    call {:si_unique_call 321} FatDeallocateDiskSpace(IrpContext_25, Vcb_18, McbToCleanup);
    goto L127;

  L127:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} UnwindWeInitializedMcb == 1;
    goto L112;

  L112:
    assume {:nonnull} Bcb_2 != 0;
    assume Bcb_2 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Bcb_2 != 0;
    assume Bcb_2 > 0;
    goto L150;

  L150:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} UnwindWeInitializedMcb == 1;
    goto L1;

  L1:
    return;

  anon59_Then:
    assume {:partition} UnwindWeInitializedMcb != 1;
    goto L1;

  anon50_Then:
    goto L150;

  anon57_Then:
    assume {:partition} UnwindWeInitializedMcb != 1;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} McbToCleanup != 0;
    goto L112;

  anon58_Then:
    assume {:partition} McbToCleanup == 0;
    goto L112;

  anon56_Then:
    assume {:partition} UnwindWeAllocatedDiskSpace == 0;
    goto L127;

  anon55_Then:
    goto L122;

  anon53_Then:
    assume {:nonnull} Dirent_3 != 0;
    assume Dirent_3 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_3] != 0;
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    assume {:nonnull} Dirent_3 != 0;
    assume Dirent_3 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_3] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_3] > 0;
    assume {:nonnull} Vcb_18 != 0;
    assume Vcb_18 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Dirent_3 != 0;
    assume Dirent_3 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_3] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_3] > 0;
    goto L121;

  anon65_Then:
    goto L121;

  anon54_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_3] == 0;
    goto L121;

  anon52_Then:
    assume {:partition} UnwindCacheManagerInformed == 0;
    goto L116;

  anon51_Then:
    assume {:partition} UnwindAllocationSizeSet == 0;
    goto L114;

  anon49_Then:
    assume {:partition} sdv_133 == 0;
    goto L112;

  anon47_Then:
    goto L104;

  anon64_Then:
    goto L97;

  anon48_Then:
    goto L97;

  anon63_Then:
    assume {:partition} FileObject_1 == 0;
    goto L97;

  anon62_Then:
    assume {:nonnull} NewAllocation != 0;
    assume NewAllocation > 0;
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    goto L95;

  anon66_Then:
    goto L176;

  anon60_Then:
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    havoc vslice_dummy_var_1213;
    call {:si_unique_call 322} vslice_dummy_var_64 := FatLookupLastMcbEntry(vslice_dummy_var_1213, Mcb__FCB(FcbOrDcb_2), DontCare_2, LastAllocatedLbo, 0);
    assume {:nonnull} DesiredAllocationSize != 0;
    assume DesiredAllocationSize > 0;
    assume {:nonnull} FcbOrDcb_2 != 0;
    assume FcbOrDcb_2 > 0;
    assume {:nonnull} NewAllocation != 0;
    assume NewAllocation > 0;
    UnwindWeInitializedMcb := 1;
    McbToCleanup := NewMcb;
    assume {:nonnull} LastAllocatedLbo != 0;
    assume LastAllocatedLbo > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 323} Tmp_299 := corral_nondet();
    goto L88;

  L88:
    call {:si_unique_call 324} FatAllocateDiskSpace(IrpContext_25, Vcb_18, Tmp_299, NewAllocation, 0, NewMcb);
    UnwindWeAllocatedDiskSpace := 1;
    goto L92;

  anon61_Then:
    Tmp_299 := 0;
    goto L88;

  anon46_Then:
    goto L1;

  anon45_Then:
    goto L24;
}



procedure {:origName "FatTearDownAllocationSupport"} FatTearDownAllocationSupport(actual_IrpContext_26: int, actual_Vcb_19: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatTearDownAllocationSupport"} FatTearDownAllocationSupport(actual_IrpContext_26: int, actual_Vcb_19: int)
{
  var {:pointer} Vcb_19: int;
  var vslice_dummy_var_66: int;

  anon0:
    call {:si_unique_call 325} vslice_dummy_var_66 := __HAVOC_malloc(4);
    Vcb_19 := actual_Vcb_19;
    call {:si_unique_call 326} sdv_do_paged_code_check();
    assume {:nonnull} Vcb_19 != 0;
    assume Vcb_19 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 327} sdv_ExFreePool(0);
    assume {:nonnull} Vcb_19 != 0;
    assume Vcb_19 > 0;
    goto L7;

  L7:
    assume {:nonnull} Vcb_19 != 0;
    assume Vcb_19 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Vcb_19 != 0;
    assume Vcb_19 > 0;
    call {:si_unique_call 328} sdv_ExFreePool(0);
    assume {:nonnull} Vcb_19 != 0;
    assume Vcb_19 > 0;
    goto L12;

  L12:
    assume {:nonnull} Vcb_19 != 0;
    assume Vcb_19 > 0;
    call {:si_unique_call 329} FatRemoveMcbEntry(Vcb_19, DirtyFatMcb__VCB(Vcb_19), 0, -1);
    return;

  anon6_Then:
    goto L12;

  anon5_Then:
    goto L7;
}



procedure {:origName "FatTruncateFileAllocation"} FatTruncateFileAllocation(actual_IrpContext_27: int, actual_FcbOrDcb_3: int, actual_DesiredAllocationSize_1: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatTruncateFileAllocation"} FatTruncateFileAllocation(actual_IrpContext_27: int, actual_FcbOrDcb_3: int, actual_DesiredAllocationSize_1: int)
{
  var {:scalar} UnwindWeAllocatedMcb_1: int;
  var {:scalar} UnwindInitialAllocationSize: int;
  var {:pointer} Dirent_4: int;
  var {:pointer} Bcb_3: int;
  var {:scalar} sdv_136: int;
  var {:scalar} UpdatedDirent: int;
  var {:pointer} Vcb_20: int;
  var {:scalar} RemainingMcb_1: int;
  var {:scalar} BytesPerCluster_2: int;
  var {:scalar} UnwindInitialFirstClusterOfFile: int;
  var {:pointer} IrpContext_27: int;
  var {:pointer} FcbOrDcb_3: int;
  var {:scalar} DesiredAllocationSize_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_1214: int;
  var vslice_dummy_var_1215: int;

  anon0:
    call {:si_unique_call 330} Dirent_4 := __HAVOC_malloc(4);
    call {:si_unique_call 331} Bcb_3 := __HAVOC_malloc(4);
    call {:si_unique_call 332} RemainingMcb_1 := __HAVOC_malloc(24);
    call {:si_unique_call 333} vslice_dummy_var_67 := __HAVOC_malloc(4);
    IrpContext_27 := actual_IrpContext_27;
    FcbOrDcb_3 := actual_FcbOrDcb_3;
    DesiredAllocationSize_1 := actual_DesiredAllocationSize_1;
    assume {:nonnull} Bcb_3 != 0;
    assume Bcb_3 > 0;
    assume {:nonnull} Dirent_4 != 0;
    assume Dirent_4 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_4] := 0;
    UpdatedDirent := 0;
    UnwindWeAllocatedMcb_1 := 0;
    call {:si_unique_call 334} sdv_do_paged_code_check();
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 335} FatLookupFileAllocationSize#1(IrpContext_27, FcbOrDcb_3);
    goto L20;

  L20:
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    havoc Vcb_20;
    call {:si_unique_call 336} BytesPerCluster_2 := corral_nondet();
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} DesiredAllocationSize_1 != 0;
    DesiredAllocationSize_1 := BAND(DesiredAllocationSize_1 + BytesPerCluster_2 - 1, BNOT(BytesPerCluster_2 - 1));
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} DesiredAllocationSize_1 != 0;
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L26;

  L26:
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    havoc UnwindInitialAllocationSize;
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    havoc UnwindInitialFirstClusterOfFile;
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} DesiredAllocationSize_1 != 0;
    UnwindWeAllocatedMcb_1 := 1;
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    call {:si_unique_call 337} FatSplitAllocation(IrpContext_27, Vcb_20, Mcb__FCB(FcbOrDcb_3), DesiredAllocationSize_1, RemainingMcb_1);
    call {:si_unique_call 338} FatDeallocateDiskSpace(IrpContext_27, Vcb_20, RemainingMcb_1);
    goto L76;

  L76:
    call {:si_unique_call 339} sdv_136 := sdv_AbnormalTermination();
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} sdv_136 != 0;
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} DesiredAllocationSize_1 != 0;
    goto L84;

  L84:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} UnwindWeAllocatedMcb_1 != 0;
    goto L80;

  L80:
    assume {:nonnull} Bcb_3 != 0;
    assume Bcb_3 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Bcb_3 != 0;
    assume Bcb_3 > 0;
    goto L97;

  L97:
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    goto L1;

  L1:
    return;

  anon30_Then:
    goto L97;

  anon32_Then:
    assume {:partition} UnwindWeAllocatedMcb_1 == 0;
    goto L80;

  anon37_Then:
    assume {:partition} DesiredAllocationSize_1 == 0;
    assume {:nonnull} Dirent_4 != 0;
    assume Dirent_4 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_4] != 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} UpdatedDirent != 0;
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    call {:si_unique_call 340} FatRemoveMcbEntry(Vcb_20, Mcb__FCB(FcbOrDcb_3), 0, -1);
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    goto L84;

  anon33_Then:
    assume {:partition} UpdatedDirent == 0;
    assume {:nonnull} Dirent_4 != 0;
    assume Dirent_4 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_4] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_4] > 0;
    assume {:nonnull} Vcb_20 != 0;
    assume Vcb_20 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Dirent_4 != 0;
    assume Dirent_4 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_4] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_4] > 0;
    call {:si_unique_call 341} boogieTmp := corral_nondet();
    goto L95;

  L95:
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    goto L84;

  anon38_Then:
    goto L95;

  anon31_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_4] == 0;
    goto L84;

  anon29_Then:
    assume {:partition} sdv_136 == 0;
    goto L80;

  anon36_Then:
    assume {:partition} DesiredAllocationSize_1 == 0;
    call {:si_unique_call 342} FatGetDirentFromFcbOrDcb(IrpContext_27, FcbOrDcb_3, Dirent_4, Bcb_3);
    assume {:nonnull} Dirent_4 != 0;
    assume Dirent_4 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_4] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_4] > 0;
    assume {:nonnull} Vcb_20 != 0;
    assume Vcb_20 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Dirent_4 != 0;
    assume Dirent_4 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_4] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_4] > 0;
    goto L104;

  L104:
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    assume {:nonnull} Bcb_3 != 0;
    assume Bcb_3 > 0;
    havoc vslice_dummy_var_1214;
    call {:si_unique_call 343} FatSetDirtyBcb#1(IrpContext_27, vslice_dummy_var_1214, Vcb_20, 1);
    UpdatedDirent := 1;
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    call {:si_unique_call 344} FatDeallocateDiskSpace(IrpContext_27, Vcb_20, Mcb__FCB(FcbOrDcb_3));
    assume {:nonnull} FcbOrDcb_3 != 0;
    assume FcbOrDcb_3 > 0;
    havoc vslice_dummy_var_1215;
    call {:si_unique_call 345} FatRemoveMcbEntry(vslice_dummy_var_1215, Mcb__FCB(FcbOrDcb_3), 0, -1);
    goto L76;

  anon39_Then:
    goto L104;

  anon28_Then:
    goto L1;

  anon35_Then:
    assume {:partition} DesiredAllocationSize_1 == 0;
    goto L1;

  anon34_Then:
    assume {:partition} DesiredAllocationSize_1 == 0;
    goto L26;

  anon27_Then:
    goto L20;
}



procedure {:origName "FatMergeAllocation"} FatMergeAllocation(actual_IrpContext_28: int, actual_Vcb_21: int, actual_Mcb_1: int, actual_SecondMcb: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatMergeAllocation"} FatMergeAllocation(actual_IrpContext_28: int, actual_Vcb_21: int, actual_Mcb_1: int, actual_SecondMcb: int)
{
  var {:scalar} Tmp_308: int;
  var {:dopa} {:scalar} SpliceVbo: int;
  var {:dopa} {:scalar} Lbo_4: int;
  var {:scalar} CutLength: int;
  var {:scalar} SourceVbo_1: int;
  var {:scalar} sdv_138: int;
  var {:dopa} {:scalar} SpliceLbo: int;
  var {:scalar} sdv_140: int;
  var {:scalar} Tmp_311: int;
  var {:scalar} Tmp_312: int;
  var {:scalar} TargetVbo_1: int;
  var {:dopa} {:scalar} ByteCount_3: int;
  var {:pointer} IrpContext_28: int;
  var {:pointer} Vcb_21: int;
  var {:pointer} Mcb_1: int;
  var {:pointer} SecondMcb: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_1216: int;
  var vslice_dummy_var_1217: int;

  anon0:
    call {:si_unique_call 346} SpliceVbo := __HAVOC_malloc(4);
    call {:si_unique_call 347} Lbo_4 := __HAVOC_malloc(4);
    call {:si_unique_call 348} SpliceLbo := __HAVOC_malloc(4);
    call {:si_unique_call 349} vslice_dummy_var_68 := __HAVOC_malloc(4);
    call {:si_unique_call 350} ByteCount_3 := __HAVOC_malloc(4);
    IrpContext_28 := actual_IrpContext_28;
    Vcb_21 := actual_Vcb_21;
    Mcb_1 := actual_Mcb_1;
    SecondMcb := actual_SecondMcb;
    call {:si_unique_call 351} sdv_do_paged_code_check();
    call {:si_unique_call 352} vslice_dummy_var_69 := FatLookupLastMcbEntry(Vcb_21, Mcb_1, SpliceVbo, SpliceLbo, 0);
    SourceVbo_1 := 0;
    assume {:nonnull} SpliceVbo != 0;
    assume SpliceVbo > 0;
    havoc TargetVbo_1;
    goto L28;

  L28:
    call {:si_unique_call 353} SourceVbo_1, sdv_140, TargetVbo_1, vslice_dummy_var_71 := FatMergeAllocation_loop_L28(Lbo_4, SourceVbo_1, sdv_140, TargetVbo_1, ByteCount_3, Vcb_21, Mcb_1, SecondMcb, vslice_dummy_var_71);
    goto L28_last;

  L28_last:
    call {:si_unique_call 361} sdv_140 := FatLookupMcbEntry(Vcb_21, SecondMcb, SourceVbo_1, Lbo_4, ByteCount_3, 0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_140 != 0;
    assume {:nonnull} ByteCount_3 != 0;
    assume ByteCount_3 > 0;
    assume {:nonnull} Lbo_4 != 0;
    assume Lbo_4 > 0;
    havoc vslice_dummy_var_1216;
    havoc vslice_dummy_var_1217;
    call {:si_unique_call 354} vslice_dummy_var_71 := FatAddMcbEntry(Vcb_21, Mcb_1, TargetVbo_1, vslice_dummy_var_1216, vslice_dummy_var_1217);
    assume {:nonnull} ByteCount_3 != 0;
    assume ByteCount_3 > 0;
    havoc SourceVbo_1;
    assume {:nonnull} ByteCount_3 != 0;
    assume ByteCount_3 > 0;
    havoc TargetVbo_1;
    goto anon7_Else_dummy;

  anon7_Else_dummy:
    assume false;
    return;

  anon7_Then:
    assume {:partition} sdv_140 == 0;
    call {:si_unique_call 355} vslice_dummy_var_70 := FatLookupMcbEntry(Vcb_21, SecondMcb, 0, Lbo_4, 0, 0);
    call {:si_unique_call 356} Tmp_308 := corral_nondet();
    call {:si_unique_call 357} Tmp_311 := corral_nondet();
    call {:si_unique_call 358} FatSetFatEntry#1(IrpContext_28, Vcb_21, Tmp_311, Tmp_308);
    call {:si_unique_call 359} sdv_138 := sdv_AbnormalTermination();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_138 != 0;
    assume {:nonnull} SpliceVbo != 0;
    assume SpliceVbo > 0;
    havoc CutLength;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} CutLength != 0;
    assume {:nonnull} SpliceVbo != 0;
    assume SpliceVbo > 0;
    havoc Tmp_312;
    call {:si_unique_call 360} FatRemoveMcbEntry(Vcb_21, Mcb_1, Tmp_312, CutLength);
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} CutLength == 0;
    goto L1;

  anon8_Then:
    assume {:partition} sdv_138 == 0;
    goto L1;
}



procedure {:origName "FatSetupAllocationSupport"} FatSetupAllocationSupport(actual_IrpContext_29: int, actual_Vcb_22: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetupAllocationSupport"} FatSetupAllocationSupport(actual_IrpContext_29: int, actual_Vcb_22: int)
{
  var {:scalar} Tmp_313: int;
  var {:scalar} Tmp_314: int;
  var {:pointer} Tmp_315: int;
  var {:pointer} Tmp_316: int;
  var {:pointer} Tmp_317: int;
  var {:pointer} Tmp_318: int;
  var {:pointer} Tmp_319: int;
  var {:pointer} Tmp_320: int;
  var {:scalar} Tmp_321: int;
  var {:scalar} ClustersDescribableByFat: int;
  var {:pointer} Tmp_322: int;
  var {:pointer} Tmp_323: int;
  var {:pointer} Tmp_324: int;
  var {:scalar} Tmp_325: int;
  var {:pointer} Tmp_326: int;
  var {:pointer} Tmp_327: int;
  var {:pointer} Tmp_328: int;
  var {:pointer} Tmp_329: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} Tmp_332: int;
  var {:scalar} Tmp_333: int;
  var {:pointer} Tmp_334: int;
  var {:pointer} Tmp_335: int;
  var {:scalar} Tmp_336: int;
  var {:scalar} Tmp_337: int;
  var {:scalar} Tmp_338: int;
  var {:scalar} Tmp_339: int;
  var {:scalar} Tmp_340: int;
  var {:pointer} Tmp_341: int;
  var {:pointer} Tmp_342: int;
  var {:pointer} Tmp_343: int;
  var {:pointer} Tmp_344: int;
  var {:pointer} Tmp_345: int;
  var {:pointer} Tmp_346: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} Tmp_348: int;
  var {:scalar} Tmp_349: int;
  var {:pointer} Tmp_350: int;
  var {:pointer} Tmp_351: int;
  var {:pointer} Tmp_352: int;
  var {:pointer} Tmp_353: int;
  var {:pointer} Tmp_354: int;
  var {:pointer} Tmp_355: int;
  var {:pointer} Tmp_356: int;
  var {:pointer} Tmp_357: int;
  var {:pointer} Tmp_358: int;
  var {:pointer} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} Tmp_361: int;
  var {:pointer} Tmp_362: int;
  var {:pointer} Tmp_363: int;
  var {:scalar} Tmp_364: int;
  var {:pointer} Tmp_365: int;
  var {:pointer} Tmp_366: int;
  var {:scalar} FileSizes_1: int;
  var {:scalar} Tmp_367: int;
  var {:pointer} Tmp_368: int;
  var {:pointer} Tmp_369: int;
  var {:pointer} Tmp_370: int;
  var {:pointer} Tmp_371: int;
  var {:pointer} Tmp_372: int;
  var {:pointer} Tmp_373: int;
  var {:pointer} Tmp_374: int;
  var {:scalar} Tmp_375: int;
  var {:pointer} sdv_146: int;
  var {:pointer} Tmp_376: int;
  var {:pointer} Tmp_377: int;
  var {:pointer} Tmp_379: int;
  var {:pointer} Tmp_380: int;
  var {:scalar} sdv_147: int;
  var {:pointer} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} Tmp_384: int;
  var {:scalar} BitIndex: int;
  var {:pointer} Tmp_385: int;
  var {:pointer} Tmp_386: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} Tmp_391: int;
  var {:pointer} Tmp_392: int;
  var {:pointer} Tmp_393: int;
  var {:pointer} Tmp_394: int;
  var {:scalar} Tmp_395: int;
  var {:pointer} Tmp_396: int;
  var {:pointer} Tmp_397: int;
  var {:pointer} Tmp_398: int;
  var {:pointer} Tmp_399: int;
  var {:pointer} Tmp_400: int;
  var {:scalar} Tmp_401: int;
  var {:scalar} sdv_149: int;
  var {:pointer} Tmp_402: int;
  var {:scalar} Tmp_403: int;
  var {:pointer} Tmp_404: int;
  var {:scalar} Tmp_405: int;
  var {:pointer} Tmp_406: int;
  var {:pointer} Tmp_407: int;
  var {:scalar} Tmp_408: int;
  var {:pointer} Tmp_409: int;
  var {:pointer} Tmp_410: int;
  var {:pointer} Tmp_411: int;
  var {:scalar} Tmp_412: int;
  var {:scalar} Tmp_413: int;
  var {:pointer} Tmp_414: int;
  var {:pointer} Tmp_415: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} Tmp_417: int;
  var {:pointer} Tmp_418: int;
  var {:pointer} Tmp_419: int;
  var {:pointer} Tmp_420: int;
  var {:scalar} Tmp_421: int;
  var {:pointer} Tmp_422: int;
  var {:pointer} IrpContext_29: int;
  var {:pointer} Vcb_22: int;
  var boogieTmp: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_1218: int;

  anon0:
    call {:si_unique_call 362} vslice_dummy_var_72 := __HAVOC_malloc(4);
    call {:si_unique_call 363} FileSizes_1 := __HAVOC_malloc(60);
    IrpContext_29 := actual_IrpContext_29;
    Vcb_22 := actual_Vcb_22;
    call {:si_unique_call 364} sdv_do_paged_code_check();
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_330 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_330 != 0;
    assume Tmp_330 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_380 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_323 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_323 != 0;
    assume Tmp_323 > 0;
    assume {:nonnull} Tmp_380 != 0;
    assume Tmp_380 > 0;
    havoc Tmp_349;
    goto L17;

  L17:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_316 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_404 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_389 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    assume {:nonnull} Tmp_404 != 0;
    assume Tmp_404 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_356 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_356 != 0;
    assume Tmp_356 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_352 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_372 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_358 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    assume {:nonnull} Tmp_372 != 0;
    assume Tmp_372 > 0;
    havoc Tmp_421;
    goto L22;

  L22:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_393 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_360 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_320 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_361 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_320 != 0;
    assume Tmp_320 > 0;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    assume {:nonnull} Tmp_361 != 0;
    assume Tmp_361 > 0;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_388 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_327 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_327 != 0;
    assume Tmp_327 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_369 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_369 != 0;
    assume Tmp_369 > 0;
    havoc Tmp_337;
    goto L28;

  L28:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_359 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_366 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_345 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_342 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_347 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_420 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_342 != 0;
    assume Tmp_342 > 0;
    assume {:nonnull} Tmp_345 != 0;
    assume Tmp_345 > 0;
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    assume {:nonnull} Tmp_359 != 0;
    assume Tmp_359 > 0;
    assume {:nonnull} Tmp_366 != 0;
    assume Tmp_366 > 0;
    assume {:nonnull} Tmp_420 != 0;
    assume Tmp_420 > 0;
    havoc Tmp_412;
    goto L29;

  L29:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_374 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_374 != 0;
    assume Tmp_374 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_341 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_353 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_399 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    havoc Tmp_340;
    goto L37;

  L37:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_351 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_355 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_317 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_322 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_396 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_406 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_317 != 0;
    assume Tmp_317 > 0;
    assume {:nonnull} Tmp_322 != 0;
    assume Tmp_322 > 0;
    assume {:nonnull} Tmp_351 != 0;
    assume Tmp_351 > 0;
    assume {:nonnull} Tmp_355 != 0;
    assume Tmp_355 > 0;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    assume {:nonnull} Tmp_406 != 0;
    assume Tmp_406 > 0;
    havoc Tmp_403;
    goto L38;

  L38:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} 4087 > Tmp_403;
    Tmp_382 := 12;
    goto L41;

  L41:
    Tmp_336 := Tmp_382;
    goto L42;

  L42:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc Tmp_401;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    call {:si_unique_call 365} boogieTmp := FatLogOf(Tmp_401);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_326 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_400 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    havoc Tmp_314;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    call {:si_unique_call 366} boogieTmp := FatLogOf(Tmp_314);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc Tmp_325;
    goto L57;

  L57:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_418 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_418 != 0;
    assume Tmp_418 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_335 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_335 != 0;
    assume Tmp_335 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_387 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_362 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_362 != 0;
    assume Tmp_362 > 0;
    havoc Tmp_367;
    goto L64;

  L64:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_379 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_346 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_334 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_350 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_416 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_407 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    assume {:nonnull} Tmp_346 != 0;
    assume Tmp_346 > 0;
    assume {:nonnull} Tmp_350 != 0;
    assume Tmp_350 > 0;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    assume {:nonnull} Tmp_407 != 0;
    assume Tmp_407 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    havoc Tmp_375;
    goto L65;

  L65:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} 4087 > Tmp_375;
    Tmp_408 := 12;
    goto L68;

  L68:
    Tmp_413 := Tmp_408;
    goto L69;

  L69:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc ClustersDescribableByFat;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L73;

  L73:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_391 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_391 != 0;
    assume Tmp_391 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_324 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_377 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    havoc Tmp_338;
    goto L76;

  L76:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_398 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_318 := Bpb__VCB(Vcb_22);
    assume {:nonnull} FileSizes_1 != 0;
    assume FileSizes_1 > 0;
    assume {:nonnull} Tmp_318 != 0;
    assume Tmp_318 > 0;
    assume {:nonnull} Tmp_398 != 0;
    assume Tmp_398 > 0;
    assume {:nonnull} FileSizes_1 != 0;
    assume FileSizes_1 > 0;
    assume {:nonnull} FileSizes_1 != 0;
    assume FileSizes_1 > 0;
    assume {:nonnull} FileSizes_1 != 0;
    assume FileSizes_1 > 0;
    assume {:nonnull} FileSizes_1 != 0;
    assume FileSizes_1 > 0;
    assume {:nonnull} FileSizes_1 != 0;
    assume FileSizes_1 > 0;
    assume {:nonnull} FileSizes_1 != 0;
    assume FileSizes_1 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc Tmp_409;
    assume {:nonnull} Tmp_409 != 0;
    assume Tmp_409 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L86;

  L86:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    goto L91;

  L91:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc Tmp_364;
    call {:si_unique_call 367} sdv_146 := ExAllocatePoolWithTag(17, Tmp_364, -680238778);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc Tmp_333;
    call {:si_unique_call 368} FatExamineFatEntries(IrpContext_29, Vcb_22, 2, Tmp_333, 1, 0, 0);
    call {:si_unique_call 369} sdv_147 := FatSelectBestWindow(Vcb_22);
    Tmp_313 := sdv_147;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc Tmp_371;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    goto L116;

  L116:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc vslice_dummy_var_1218;
    call {:si_unique_call 370} FatExamineFatEntries(IrpContext_29, Vcb_22, 0, 0, 0, vslice_dummy_var_1218, 0);
    call {:si_unique_call 371} BitIndex := corral_nondet();
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} BitIndex != -1;
    Tmp_405 := BitIndex + 2;
    goto L126;

  L126:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    call {:si_unique_call 372} sdv_149 := sdv_AbnormalTermination();
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_149 != 0;
    call {:si_unique_call 373} FatTearDownAllocationSupport(IrpContext_29, Vcb_22);
    goto L1;

  L1:
    return;

  anon55_Then:
    assume {:partition} sdv_149 == 0;
    goto L1;

  anon54_Then:
    assume {:partition} BitIndex == -1;
    Tmp_405 := 2;
    goto L126;

  anon53_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc Tmp_363;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc Tmp_319;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc Tmp_354;
    assume {:nonnull} Tmp_354 != 0;
    assume Tmp_354 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    goto L116;

  anon52_Then:
    goto L87;

  L87:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    goto L91;

  anon51_Then:
    goto L87;

  anon69_Then:
    goto L86;

  anon68_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_417 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_315 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    havoc Tmp_338;
    goto L76;

  anon67_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    goto L73;

  anon50_Then:
    assume {:partition} Tmp_375 >= 4087;
    Tmp_408 := 16;
    goto L68;

  anon66_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_402 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    havoc Tmp_367;
    goto L64;

  anon65_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_411 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_422 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    havoc Tmp_395;
    goto L140;

  L140:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_384 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_343 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_383 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_376 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    assume {:nonnull} Tmp_376 != 0;
    assume Tmp_376 > 0;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc Tmp_375;
    goto L65;

  anon70_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_373 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    havoc Tmp_395;
    goto L140;

  anon64_Then:
    Tmp_413 := 32;
    goto L69;

  anon63_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    havoc Tmp_325;
    goto L57;

  anon49_Then:
    assume {:partition} Tmp_403 >= 4087;
    Tmp_382 := 16;
    goto L41;

  anon62_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_344 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    havoc Tmp_340;
    goto L37;

  anon61_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_365 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_365 != 0;
    assume Tmp_365 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_381 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    havoc Tmp_339;
    goto L143;

  L143:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_392 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_419 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_414 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_390 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    assume {:nonnull} Tmp_392 != 0;
    assume Tmp_392 > 0;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    havoc Tmp_403;
    goto L38;

  anon71_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_329 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_329 != 0;
    assume Tmp_329 > 0;
    havoc Tmp_339;
    goto L143;

  anon60_Then:
    Tmp_336 := 32;
    goto L42;

  anon59_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_415 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_415 != 0;
    assume Tmp_415 > 0;
    havoc Tmp_337;
    goto L28;

  anon58_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_397 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_410 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    havoc Tmp_321;
    goto L146;

  L146:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_386 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_385 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_357 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_368 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    assume {:nonnull} Tmp_368 != 0;
    assume Tmp_368 > 0;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    havoc Tmp_412;
    goto L29;

  anon72_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_332 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_332 != 0;
    assume Tmp_332 > 0;
    havoc Tmp_321;
    goto L146;

  anon57_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_328 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_370 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_328 != 0;
    assume Tmp_328 > 0;
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    havoc Tmp_421;
    goto L22;

  anon56_Then:
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_394 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Vcb_22 != 0;
    assume Vcb_22 > 0;
    Tmp_348 := Bpb__VCB(Vcb_22);
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    havoc Tmp_349;
    goto L17;
}



procedure {:origName "FatSetFatRun"} FatSetFatRun(actual_IrpContext_30: int, actual_Vcb_23: int, actual_StartingFatIndex: int, actual_ClusterCount: int, actual_ChainTogether: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetFatRun"} FatSetFatRun(actual_IrpContext_30: int, actual_Vcb_23: int, actual_StartingFatIndex: int, actual_ClusterCount: int, actual_ChainTogether: int)
{
  var {:scalar} NumberOfPages: int;
  var {:pointer} Tmp_424: int;
  var {:scalar} Tmp_425: int;
  var {:dopa} {:scalar} TmpFatEntry_1: int;
  var {:scalar} Tmp_426: int;
  var {:scalar} Lbo_5: int;
  var {:scalar} FinalCluster: int;
  var {:pointer} Tmp_427: int;
  var {:scalar} Tmp_428: int;
  var {:scalar} StartSectorLbo: int;
  var {:pointer} Tmp_429: int;
  var {:scalar} Tmp_430: int;
  var {:scalar} Tmp_431: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:pointer} Tmp_434: int;
  var {:scalar} Tmp_435: int;
  var {:pointer} Tmp_436: int;
  var {:pointer} Tmp_437: int;
  var {:scalar} Tmp_439: int;
  var {:pointer} Tmp_440: int;
  var {:scalar} Cluster: int;
  var {:pointer} Tmp_442: int;
  var {:scalar} FinalOffsetInVolume: int;
  var {:pointer} Tmp_443: int;
  var {:scalar} Tmp_444: int;
  var {:pointer} Tmp_445: int;
  var {:scalar} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} Tmp_448: int;
  var {:scalar} sdv_150: int;
  var {:pointer} Tmp_449: int;
  var {:pointer} Tmp_450: int;
  var {:pointer} FatEntry_3: int;
  var {:pointer} Tmp_453: int;
  var {:scalar} Tmp_454: int;
  var {:pointer} Tmp_455: int;
  var {:pointer} Tmp_456: int;
  var {:pointer} Tmp_457: int;
  var {:pointer} FatEntry_4: int;
  var {:scalar} Tmp_458: int;
  var {:scalar} Tmp_459: int;
  var {:scalar} Tmp_461: int;
  var {:scalar} FinalSectorLbo: int;
  var {:scalar} Tmp_463: int;
  var {:pointer} Tmp_464: int;
  var {:pointer} Tmp_465: int;
  var {:pointer} Tmp_466: int;
  var {:scalar} i_6: int;
  var {:scalar} Tmp_467: int;
  var {:scalar} StartOffsetInVolume: int;
  var {:pointer} Tmp_469: int;
  var {:scalar} Tmp_470: int;
  var {:scalar} i_7: int;
  var {:scalar} Offset_1: int;
  var {:pointer} Tmp_471: int;
  var {:pointer} Tmp_472: int;
  var {:pointer} Tmp_473: int;
  var {:scalar} Tmp_474: int;
  var {:pointer} Tmp_475: int;
  var {:scalar} Offset_2: int;
  var {:pointer} Tmp_476: int;
  var {:scalar} Tmp_477: int;
  var {:scalar} Tmp_478: int;
  var {:scalar} Tmp_479: int;
  var {:pointer} Tmp_480: int;
  var {:pointer} Tmp_481: int;
  var {:scalar} Tmp_482: int;
  var {:scalar} StartOffsetInVolume_1: int;
  var {:pointer} Tmp_483: int;
  var {:pointer} PinnedFat_1: int;
  var {:scalar} Tmp_484: int;
  var {:pointer} Tmp_485: int;
  var {:pointer} Tmp_486: int;
  var {:scalar} Tmp_487: int;
  var {:scalar} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:scalar} Page_1: int;
  var {:pointer} SavedBcbs: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_491: int;
  var {:scalar} Page_2: int;
  var {:scalar} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} Tmp_494: int;
  var {:scalar} Tmp_495: int;
  var {:pointer} Tmp_497: int;
  var {:pointer} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:scalar} Tmp_500: int;
  var {:scalar} SectorSize_1: int;
  var {:pointer} Tmp_503: int;
  var {:pointer} Tmp_504: int;
  var {:dopa} {:scalar} TmpFatEntry_2: int;
  var {:scalar} SavedStartingFatIndex: int;
  var {:scalar} Tmp_505: int;
  var {:scalar} NumberOfPages_1: int;
  var {:pointer} Tmp_506: int;
  var {:scalar} Tmp_507: int;
  var {:scalar} ClusterCountThisRun: int;
  var {:scalar} FinalOffsetInVolume_1: int;
  var {:scalar} Tmp_508: int;
  var {:pointer} Tmp_509: int;
  var {:pointer} Tmp_510: int;
  var {:scalar} FinalCluster_1: int;
  var {:pointer} Tmp_511: int;
  var {:scalar} ReleaseMutex_1: int;
  var {:pointer} IrpContext_30: int;
  var {:pointer} Vcb_23: int;
  var {:scalar} StartingFatIndex: int;
  var {:scalar} ClusterCount: int;
  var {:scalar} ChainTogether: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;

  anon0:
    call {:si_unique_call 374} TmpFatEntry_1 := __HAVOC_malloc(4);
    call {:si_unique_call 375} PinnedFat_1 := __HAVOC_malloc(4);
    call {:si_unique_call 376} vslice_dummy_var_73 := __HAVOC_malloc(4);
    call {:si_unique_call 377} TmpFatEntry_2 := __HAVOC_malloc(4);
    IrpContext_30 := actual_IrpContext_30;
    Vcb_23 := actual_Vcb_23;
    StartingFatIndex := actual_StartingFatIndex;
    ClusterCount := actual_ClusterCount;
    ChainTogether := actual_ChainTogether;
    call {:si_unique_call 378} Tmp_424 := __HAVOC_malloc(8);
    call {:si_unique_call 379} Tmp_429 := __HAVOC_malloc(8);
    call {:si_unique_call 380} Tmp_434 := __HAVOC_malloc(8);
    call {:si_unique_call 381} Tmp_437 := __HAVOC_malloc(8);
    call {:si_unique_call 382} Tmp_442 := __HAVOC_malloc(8);
    call {:si_unique_call 383} Tmp_450 := __HAVOC_malloc(8);
    call {:si_unique_call 384} Tmp_455 := __HAVOC_malloc(8);
    call {:si_unique_call 385} Tmp_456 := __HAVOC_malloc(8);
    call {:si_unique_call 386} Tmp_457 := __HAVOC_malloc(8);
    call {:si_unique_call 387} Tmp_464 := __HAVOC_malloc(8);
    call {:si_unique_call 388} Tmp_469 := __HAVOC_malloc(8);
    call {:si_unique_call 389} Tmp_471 := __HAVOC_malloc(8);
    call {:si_unique_call 390} Tmp_472 := __HAVOC_malloc(8);
    call {:si_unique_call 391} Tmp_475 := __HAVOC_malloc(8);
    call {:si_unique_call 392} Tmp_476 := __HAVOC_malloc(8);
    call {:si_unique_call 393} Tmp_485 := __HAVOC_malloc(8);
    call {:si_unique_call 394} Tmp_486 := __HAVOC_malloc(8);
    call {:si_unique_call 395} Tmp_489 := __HAVOC_malloc(8);
    call {:si_unique_call 396} SavedBcbs := __HAVOC_malloc(528);
    call {:si_unique_call 397} Tmp_493 := __HAVOC_malloc(8);
    call {:si_unique_call 398} Tmp_497 := __HAVOC_malloc(8);
    call {:si_unique_call 399} Tmp_503 := __HAVOC_malloc(8);
    ReleaseMutex_1 := 0;
    SavedStartingFatIndex := StartingFatIndex;
    call {:si_unique_call 400} sdv_do_paged_code_check();
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} 2 > StartingFatIndex;
    goto L20;

  L20:
    assume {:nonnull} IrpContext_30 != 0;
    assume IrpContext_30 > 0;
    call {:si_unique_call 401} ExRaiseStatus(-1073741566);
    goto L24;

  L24:
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} 2 > StartingFatIndex + ClusterCount - 1;
    goto L26;

  L26:
    assume {:nonnull} IrpContext_30 != 0;
    assume IrpContext_30 > 0;
    call {:si_unique_call 402} ExRaiseStatus(-1073741566);
    goto L30;

  L30:
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} ClusterCount != 0;
    call {:si_unique_call 403} SectorSize_1 := corral_nondet();
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_455;
    call {:si_unique_call 404} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_493;
    Tmp_499 := Tmp_493;
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_491 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Tmp_491 != 0;
    assume Tmp_491 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_433 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_506 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Tmp_433 != 0;
    assume Tmp_433 > 0;
    assume {:nonnull} Tmp_506 != 0;
    assume Tmp_506 > 0;
    havoc Tmp_435;
    goto L71;

  L71:
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_427 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_453 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Tmp_427 != 0;
    assume Tmp_427 > 0;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    havoc Tmp_425;
    call {:si_unique_call 405} FatPrepareWriteVolumeFile#1(IrpContext_30, Vcb_23, Tmp_425, Tmp_435, Tmp_499, PinnedFat_1, 1, 0);
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_511 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_483 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    assume {:nonnull} Tmp_511 != 0;
    assume Tmp_511 > 0;
    havoc StartSectorLbo;
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_436 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_498 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    havoc FinalSectorLbo;
    Lbo_5 := StartSectorLbo;
    goto L78;

  L78:
    call {:si_unique_call 406} Lbo_5, Tmp_463, vslice_dummy_var_74 := FatSetFatRun_loop_L78(Lbo_5, FinalSectorLbo, Tmp_463, SectorSize_1, Vcb_23, vslice_dummy_var_74);
    goto L78_last;

  L78_last:
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} FinalSectorLbo >= Lbo_5;
    Tmp_463 := Lbo_5;
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    call {:si_unique_call 407} vslice_dummy_var_74 := FatAddMcbEntry(Vcb_23, DirtyFatMcb__VCB(Vcb_23), Tmp_463, Lbo_5, SectorSize_1);
    Lbo_5 := Lbo_5 + SectorSize_1;
    goto anon215_Else_dummy;

  anon215_Else_dummy:
    assume false;
    return;

  anon215_Then:
    assume {:partition} Lbo_5 > FinalSectorLbo;
    call {:si_unique_call 408} ExAcquireFastMutexUnsafe(0);
    ReleaseMutex_1 := 1;
    Cluster := StartingFatIndex;
    goto L89;

  L89:
    call {:si_unique_call 409} Tmp_426, Cluster, Tmp_466, Tmp_479, Tmp_481, Tmp_492, Tmp_494 := FatSetFatRun_loop_L89(Tmp_426, Cluster, Tmp_466, Tmp_479, Tmp_481, PinnedFat_1, Tmp_492, Tmp_494, TmpFatEntry_2, StartingFatIndex, ClusterCount, ChainTogether);
    goto L89_last;

  L89_last:
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} StartingFatIndex + ClusterCount - 1 <= Cluster;
    assume {:nonnull} PinnedFat_1 != 0;
    assume PinnedFat_1 > 0;
    havoc Tmp_443;
    assume {:nonnull} TmpFatEntry_1 != 0;
    assume TmpFatEntry_1 > 0;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} BAND(Cluster, 1) != 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} ChainTogether != 0;
    goto L113;

  L113:
    assume {:nonnull} TmpFatEntry_1 != 0;
    assume TmpFatEntry_1 > 0;
    call {:si_unique_call 410} Tmp_461 := corral_nondet();
    goto L115;

  L115:
    assume {:nonnull} TmpFatEntry_1 != 0;
    assume TmpFatEntry_1 > 0;
    assume {:nonnull} PinnedFat_1 != 0;
    assume PinnedFat_1 > 0;
    havoc Tmp_490;
    Tmp_440 := TmpFatEntry_1;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    call {:si_unique_call 411} ExReleaseFastMutexUnsafe(0);
    ReleaseMutex_1 := 0;
    goto L122;

  L122:
    i_6 := 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} ReleaseMutex_1 != 0;
    call {:si_unique_call 412} ExReleaseFastMutexUnsafe(0);
    goto L124;

  L124:
    call {:si_unique_call 413} Tmp_424, Tmp_429, Tmp_431, Tmp_432, Tmp_439, i_6, Tmp_469, Tmp_470, Tmp_486 := FatSetFatRun_loop_L124(Tmp_424, Tmp_429, Tmp_431, Tmp_432, Tmp_439, i_6, Tmp_469, Tmp_470, Tmp_486, SavedBcbs);
    goto L124_last;

  L124_last:
    Tmp_470 := i_6;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume Tmp_470 <= 2;
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume Tmp_470 != 2;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume Tmp_470 != 1;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume Tmp_470 != 0;
    goto L308;

  L308:
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    Tmp_431 := i_6;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume Tmp_431 <= 2;
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume Tmp_431 != 2;
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume Tmp_431 != 1;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume Tmp_431 != 0;
    goto L318;

  L318:
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    Tmp_439 := i_6;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume Tmp_439 <= 2;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume Tmp_439 != 2;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume Tmp_439 != 1;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume Tmp_439 != 0;
    goto L328;

  L328:
    assume {:nonnull} Tmp_469 != 0;
    assume Tmp_469 > 0;
    Tmp_432 := i_6;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume Tmp_432 <= 2;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume Tmp_432 != 2;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume Tmp_432 != 1;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume Tmp_432 != 0;
    goto L338;

  L338:
    assume {:nonnull} Tmp_486 != 0;
    assume Tmp_486 > 0;
    goto L132;

  L132:
    i_6 := i_6 + 1;
    goto L132_dummy;

  L132_dummy:
    assume false;
    return;

  anon257_Then:
    assume Tmp_432 == 0;
    Tmp_432 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_486;
    goto L338;

  anon256_Then:
    assume Tmp_432 == 1;
    Tmp_432 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_486;
    goto L338;

  anon255_Then:
    assume Tmp_432 == 2;
    Tmp_432 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_486;
    goto L338;

  anon254_Then:
    assume Tmp_432 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_486;
    goto L338;

  anon260_Then:
    assume Tmp_439 == 0;
    Tmp_439 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_469;
    goto L328;

  anon259_Then:
    assume Tmp_439 == 1;
    Tmp_439 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_469;
    goto L328;

  anon258_Then:
    assume Tmp_439 == 2;
    Tmp_439 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_469;
    goto L328;

  anon253_Then:
    assume Tmp_439 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_469;
    goto L328;

  anon243_Then:
    goto L132;

  anon263_Then:
    assume Tmp_431 == 0;
    Tmp_431 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_429;
    goto L318;

  anon262_Then:
    assume Tmp_431 == 1;
    Tmp_431 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_429;
    goto L318;

  anon261_Then:
    assume Tmp_431 == 2;
    Tmp_431 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_429;
    goto L318;

  anon252_Then:
    assume Tmp_431 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_429;
    goto L318;

  anon242_Then:
    call {:si_unique_call 414} sdv_150 := sdv_AbnormalTermination();
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} sdv_150 != 0;
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    goto L141;

  L141:
    call {:si_unique_call 415} Tmp_507, StartingFatIndex := FatSetFatRun_loop_L141(SavedStartingFatIndex, Tmp_507, IrpContext_30, Vcb_23, StartingFatIndex, ChainTogether);
    goto L141_last;

  L141_last:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} StartingFatIndex > SavedStartingFatIndex;
    StartingFatIndex := StartingFatIndex - 1;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:partition} ChainTogether != 0;
    Tmp_507 := StartingFatIndex + 1;
    goto L146;

  L146:
    call {:si_unique_call 416} FatSetFatEntry#1(IrpContext_30, Vcb_23, StartingFatIndex, Tmp_507);
    goto L146_dummy;

  L146_dummy:
    assume false;
    return;

  anon264_Then:
    assume {:partition} ChainTogether == 0;
    Tmp_507 := 0;
    goto L146;

  anon223_Then:
    assume {:partition} SavedStartingFatIndex >= StartingFatIndex;
    goto L1;

  L1:
    return;

  anon222_Then:
    goto L1;

  anon221_Then:
    assume {:partition} sdv_150 == 0;
    goto L1;

  anon267_Then:
    assume Tmp_470 == 0;
    Tmp_470 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_424;
    goto L308;

  anon266_Then:
    assume Tmp_470 == 1;
    Tmp_470 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_424;
    goto L308;

  anon265_Then:
    assume Tmp_470 == 2;
    Tmp_470 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_424;
    goto L308;

  anon251_Then:
    assume Tmp_470 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_424;
    goto L308;

  anon250_Then:
    assume {:partition} ReleaseMutex_1 == 0;
    goto L124;

  anon220_Then:
    assume {:partition} ChainTogether == 0;
    goto L113;

  anon249_Then:
    assume {:partition} BAND(Cluster, 1) == 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} ChainTogether != 0;
    Tmp_505 := 4095;
    goto L151;

  L151:
    assume {:nonnull} TmpFatEntry_1 != 0;
    assume TmpFatEntry_1 > 0;
    havoc Tmp_458;
    Tmp_461 := BOR(Tmp_505, Tmp_458);
    goto L115;

  anon219_Then:
    assume {:partition} ChainTogether == 0;
    Tmp_505 := 0;
    goto L151;

  anon216_Then:
    assume {:partition} Cluster < StartingFatIndex + ClusterCount - 1;
    assume {:nonnull} PinnedFat_1 != 0;
    assume PinnedFat_1 > 0;
    havoc Tmp_466;
    assume {:nonnull} TmpFatEntry_2 != 0;
    assume TmpFatEntry_2 > 0;
    assume {:nonnull} Tmp_466 != 0;
    assume Tmp_466 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:partition} BAND(Cluster, 1) != 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} ChainTogether != 0;
    goto L98;

  L98:
    assume {:nonnull} TmpFatEntry_2 != 0;
    assume TmpFatEntry_2 > 0;
    call {:si_unique_call 417} Tmp_479 := corral_nondet();
    goto L100;

  L100:
    assume {:nonnull} TmpFatEntry_2 != 0;
    assume TmpFatEntry_2 > 0;
    assume {:nonnull} PinnedFat_1 != 0;
    assume PinnedFat_1 > 0;
    havoc Tmp_494;
    Tmp_481 := TmpFatEntry_2;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    Cluster := Cluster + 1;
    goto L100_dummy;

  L100_dummy:
    assume false;
    return;

  anon218_Then:
    assume {:partition} ChainTogether == 0;
    goto L98;

  anon248_Then:
    assume {:partition} BAND(Cluster, 1) == 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} ChainTogether != 0;
    Tmp_426 := Cluster + 1;
    goto L105;

  L105:
    assume {:nonnull} TmpFatEntry_2 != 0;
    assume TmpFatEntry_2 > 0;
    havoc Tmp_492;
    Tmp_479 := BOR(Tmp_426, Tmp_492);
    goto L100;

  anon217_Then:
    assume {:partition} ChainTogether == 0;
    Tmp_426 := 0;
    goto L105;

  anon247_Then:
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_448 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_447 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Tmp_447 != 0;
    assume Tmp_447 > 0;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    havoc Tmp_435;
    goto L71;

  anon246_Then:
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_449 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_473 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Tmp_449 != 0;
    assume Tmp_449 > 0;
    assume {:nonnull} Tmp_473 != 0;
    assume Tmp_473 > 0;
    havoc StartOffsetInVolume;
    FinalOffsetInVolume_1 := StartOffsetInVolume + (ClusterCount - 1) * 2;
    NumberOfPages := INTDIV(FinalOffsetInVolume_1, 4096) - INTDIV(StartOffsetInVolume, 4096) + 1;
    Tmp_488 := (NumberOfPages + 1) * 4 * 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_485;
    call {:si_unique_call 418} sdv_RtlZeroMemory(0, Tmp_488);
    Page_1 := 0;
    Offset_2 := BAND(StartOffsetInVolume, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    goto L246;

  L246:
    call {:si_unique_call 419} Tmp_445, Tmp_450, FatEntry_3, Tmp_459, Tmp_464, Offset_2, Tmp_480, Tmp_482, Tmp_489, Page_1 := FatSetFatRun_loop_L246(NumberOfPages, Tmp_445, Tmp_450, FatEntry_3, Tmp_459, Tmp_464, Offset_2, Tmp_480, Tmp_482, Tmp_489, Page_1, SavedBcbs, IrpContext_30, Vcb_23);
    goto L246_last;

  L246_last:
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} NumberOfPages > Page_1;
    Tmp_459 := Page_1;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume Tmp_459 <= 2;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    assume Tmp_459 != 2;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    assume Tmp_459 != 1;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume Tmp_459 != 0;
    goto L428;

  L428:
    Tmp_445 := Tmp_464 + 1 * 4;
    Tmp_482 := Page_1;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume Tmp_482 <= 2;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    assume Tmp_482 != 2;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    assume Tmp_482 != 1;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume Tmp_482 != 0;
    goto L438;

  L438:
    Tmp_480 := Tmp_450;
    call {:si_unique_call 420} FatPrepareWriteVolumeFile#1(IrpContext_30, Vcb_23, Offset_2, 4096, Tmp_480, Tmp_445, 1, 0);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} Page_1 == 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_489;
    assume {:nonnull} Tmp_489 != 0;
    assume Tmp_489 > 0;
    havoc FatEntry_3;
    goto L255;

  L255:
    Page_1 := Page_1 + 1;
    Offset_2 := Offset_2 + 4096;
    goto L255_dummy;

  L255_dummy:
    assume false;
    return;

  anon235_Then:
    assume {:partition} Page_1 != 0;
    goto L255;

  anon305_Then:
    assume Tmp_482 == 0;
    Tmp_482 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_450;
    goto L438;

  anon304_Then:
    assume Tmp_482 == 1;
    Tmp_482 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_450;
    goto L438;

  anon303_Then:
    assume Tmp_482 == 2;
    Tmp_482 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_450;
    goto L438;

  anon302_Then:
    assume Tmp_482 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_450;
    goto L438;

  anon308_Then:
    assume Tmp_459 == 0;
    Tmp_459 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_464;
    goto L428;

  anon307_Then:
    assume Tmp_459 == 1;
    Tmp_459 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_464;
    goto L428;

  anon306_Then:
    assume Tmp_459 == 2;
    Tmp_459 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_464;
    goto L428;

  anon301_Then:
    assume Tmp_459 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_464;
    goto L428;

  anon234_Then:
    assume {:partition} Page_1 >= NumberOfPages;
    StartSectorLbo := BAND(StartOffsetInVolume, BNOT(SectorSize_1 - 1));
    FinalSectorLbo := BAND(FinalOffsetInVolume_1, BNOT(SectorSize_1 - 1));
    Lbo_5 := StartSectorLbo;
    goto L260;

  L260:
    call {:si_unique_call 421} Lbo_5, Tmp_487, vslice_dummy_var_76 := FatSetFatRun_loop_L260(Lbo_5, FinalSectorLbo, Tmp_487, SectorSize_1, Vcb_23, vslice_dummy_var_76);
    goto L260_last;

  L260_last:
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} FinalSectorLbo >= Lbo_5;
    Tmp_487 := Lbo_5;
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    call {:si_unique_call 422} vslice_dummy_var_76 := FatAddMcbEntry(Vcb_23, DirtyFatMcb__VCB(Vcb_23), Tmp_487, Lbo_5, SectorSize_1);
    Lbo_5 := Lbo_5 + SectorSize_1;
    goto anon236_Else_dummy;

  anon236_Else_dummy:
    assume false;
    return;

  anon236_Then:
    assume {:partition} Lbo_5 > FinalSectorLbo;
    FinalCluster_1 := StartingFatIndex + ClusterCount - 1;
    Page_1 := 0;
    Cluster := StartingFatIndex;
    goto L269;

  L269:
    call {:si_unique_call 423} Cluster, FatEntry_3, Tmp_457, Tmp_467, Page_1, Tmp_508 := FatSetFatRun_loop_L269(Cluster, FatEntry_3, Tmp_457, Tmp_467, Page_1, SavedBcbs, Tmp_508, FinalCluster_1, StartingFatIndex, ChainTogether);
    goto L269_last;

  L269_last:
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} FinalCluster_1 >= Cluster;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} BAND(FatEntry_3, 4095) != 0;
    goto L273;

  L273:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} ChainTogether != 0;
    Tmp_467 := Cluster + 1;
    goto L276;

  L276:
    assume {:nonnull} FatEntry_3 != 0;
    assume FatEntry_3 > 0;
    Cluster := Cluster + 1;
    goto L276_dummy;

  L276_dummy:
    assume false;
    return;

  anon241_Then:
    assume {:partition} ChainTogether == 0;
    Tmp_467 := 0;
    goto L276;

  anon239_Then:
    assume {:partition} BAND(FatEntry_3, 4095) == 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} Cluster != StartingFatIndex;
    Page_1 := Page_1 + 1;
    Tmp_508 := Page_1;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume Tmp_508 <= 2;
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume Tmp_508 != 2;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume Tmp_508 != 1;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume Tmp_508 != 0;
    goto L448;

  L448:
    assume {:nonnull} Tmp_457 != 0;
    assume Tmp_457 > 0;
    havoc FatEntry_3;
    goto L273;

  anon312_Then:
    assume Tmp_508 == 0;
    Tmp_508 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_457;
    goto L448;

  anon311_Then:
    assume Tmp_508 == 1;
    Tmp_508 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_457;
    goto L448;

  anon310_Then:
    assume Tmp_508 == 2;
    Tmp_508 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_457;
    goto L448;

  anon309_Then:
    assume Tmp_508 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_457;
    goto L448;

  anon240_Then:
    assume {:partition} Cluster == StartingFatIndex;
    goto L273;

  anon237_Then:
    assume {:partition} Cluster > FinalCluster_1;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} ChainTogether != 0;
    assume {:nonnull} FatEntry_3 != 0;
    assume FatEntry_3 > 0;
    goto L122;

  anon238_Then:
    assume {:partition} ChainTogether == 0;
    goto L122;

  anon214_Then:
    goto L161;

  L161:
    call {:si_unique_call 424} Lbo_5, FinalCluster, Tmp_428, StartSectorLbo, Tmp_430, Tmp_434, Tmp_437, Cluster, Tmp_442, FinalOffsetInVolume, Tmp_444, Tmp_446, Tmp_454, Tmp_456, FatEntry_4, FinalSectorLbo, Tmp_465, i_7, Offset_1, Tmp_471, Tmp_472, Tmp_474, Tmp_475, Tmp_476, Tmp_477, Tmp_478, StartOffsetInVolume_1, Tmp_484, Page_2, Tmp_495, Tmp_497, Tmp_500, Tmp_503, Tmp_504, NumberOfPages_1, ClusterCountThisRun, Tmp_509, Tmp_510, StartingFatIndex, ClusterCount, vslice_dummy_var_75 := FatSetFatRun_loop_L161(Lbo_5, FinalCluster, Tmp_428, StartSectorLbo, Tmp_430, Tmp_434, Tmp_437, Cluster, Tmp_442, FinalOffsetInVolume, Tmp_444, Tmp_446, Tmp_454, Tmp_456, FatEntry_4, FinalSectorLbo, Tmp_465, i_7, Offset_1, Tmp_471, Tmp_472, Tmp_474, Tmp_475, Tmp_476, Tmp_477, Tmp_478, StartOffsetInVolume_1, Tmp_484, SavedBcbs, Page_2, Tmp_495, Tmp_497, Tmp_500, SectorSize_1, Tmp_503, Tmp_504, NumberOfPages_1, ClusterCountThisRun, Tmp_509, Tmp_510, IrpContext_30, Vcb_23, StartingFatIndex, ClusterCount, ChainTogether, vslice_dummy_var_75);
    goto L161_last;

  L161_last:
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_509 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    Tmp_510 := Bpb__VCB(Vcb_23);
    assume {:nonnull} Tmp_509 != 0;
    assume Tmp_509 > 0;
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    havoc StartOffsetInVolume_1;
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:partition} ClusterCount > 65536;
    ClusterCountThisRun := 65536;
    goto L165;

  L165:
    FinalOffsetInVolume := StartOffsetInVolume_1 + (ClusterCountThisRun - 1) * 4;
    NumberOfPages_1 := INTDIV(FinalOffsetInVolume, 4096) - INTDIV(StartOffsetInVolume_1, 4096) + 1;
    Tmp_500 := (NumberOfPages_1 + 1) * 4 * 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_475;
    call {:si_unique_call 425} sdv_RtlZeroMemory(0, Tmp_500);
    Page_2 := 0;
    Offset_1 := BAND(StartOffsetInVolume_1, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    goto L177;

  L177:
    call {:si_unique_call 426} Tmp_430, Tmp_434, FatEntry_4, Tmp_465, Offset_1, Tmp_472, Page_2, Tmp_495, Tmp_497, Tmp_504 := FatSetFatRun_loop_L177(Tmp_430, Tmp_434, FatEntry_4, Tmp_465, Offset_1, Tmp_472, SavedBcbs, Page_2, Tmp_495, Tmp_497, Tmp_504, NumberOfPages_1, IrpContext_30, Vcb_23);
    goto L177_last;

  L177_last:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} NumberOfPages_1 > Page_2;
    Tmp_430 := Page_2;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume Tmp_430 <= 2;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume Tmp_430 != 2;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume Tmp_430 != 1;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume Tmp_430 != 0;
    goto L348;

  L348:
    Tmp_465 := Tmp_434 + 1 * 4;
    Tmp_495 := Page_2;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume Tmp_495 <= 2;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume Tmp_495 != 2;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume Tmp_495 != 1;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume Tmp_495 != 0;
    goto L358;

  L358:
    Tmp_504 := Tmp_472;
    call {:si_unique_call 427} FatPrepareWriteVolumeFile#1(IrpContext_30, Vcb_23, Offset_1, 4096, Tmp_504, Tmp_465, 1, 0);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Page_2 == 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_497;
    assume {:nonnull} Tmp_497 != 0;
    assume Tmp_497 > 0;
    havoc FatEntry_4;
    goto L186;

  L186:
    Page_2 := Page_2 + 1;
    Offset_1 := Offset_1 + 4096;
    goto L186_dummy;

  L186_dummy:
    assume false;
    return;

  anon225_Then:
    assume {:partition} Page_2 != 0;
    goto L186;

  anon273_Then:
    assume Tmp_495 == 0;
    Tmp_495 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_472;
    goto L358;

  anon272_Then:
    assume Tmp_495 == 1;
    Tmp_495 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_472;
    goto L358;

  anon271_Then:
    assume Tmp_495 == 2;
    Tmp_495 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_472;
    goto L358;

  anon270_Then:
    assume Tmp_495 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_472;
    goto L358;

  anon276_Then:
    assume Tmp_430 == 0;
    Tmp_430 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_434;
    goto L348;

  anon275_Then:
    assume Tmp_430 == 1;
    Tmp_430 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_434;
    goto L348;

  anon274_Then:
    assume Tmp_430 == 2;
    Tmp_430 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_434;
    goto L348;

  anon269_Then:
    assume Tmp_430 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_434;
    goto L348;

  anon224_Then:
    assume {:partition} Page_2 >= NumberOfPages_1;
    StartSectorLbo := BAND(StartOffsetInVolume_1, BNOT(SectorSize_1 - 1));
    FinalSectorLbo := BAND(FinalOffsetInVolume, BNOT(SectorSize_1 - 1));
    Lbo_5 := StartSectorLbo;
    goto L191;

  L191:
    call {:si_unique_call 428} Lbo_5, Tmp_446, vslice_dummy_var_75 := FatSetFatRun_loop_L191(Lbo_5, Tmp_446, FinalSectorLbo, SectorSize_1, Vcb_23, vslice_dummy_var_75);
    goto L191_last;

  L191_last:
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} FinalSectorLbo >= Lbo_5;
    Tmp_446 := Lbo_5;
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    call {:si_unique_call 429} vslice_dummy_var_75 := FatAddMcbEntry(Vcb_23, DirtyFatMcb__VCB(Vcb_23), Tmp_446, Lbo_5, SectorSize_1);
    Lbo_5 := Lbo_5 + SectorSize_1;
    goto anon226_Else_dummy;

  anon226_Else_dummy:
    assume false;
    return;

  anon226_Then:
    assume {:partition} Lbo_5 > FinalSectorLbo;
    FinalCluster := StartingFatIndex + ClusterCountThisRun - 1;
    Page_2 := 0;
    Cluster := StartingFatIndex;
    goto L200;

  L200:
    call {:si_unique_call 430} Tmp_428, Cluster, FatEntry_4, Tmp_471, Tmp_474, Page_2 := FatSetFatRun_loop_L200(FinalCluster, Tmp_428, Cluster, FatEntry_4, Tmp_471, Tmp_474, SavedBcbs, Page_2, StartingFatIndex, ChainTogether);
    goto L200_last;

  L200_last:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} FinalCluster >= Cluster;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} BAND(FatEntry_4, 4095) != 0;
    goto L204;

  L204:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} ChainTogether != 0;
    Tmp_428 := Cluster + 1;
    goto L207;

  L207:
    assume {:nonnull} FatEntry_4 != 0;
    assume FatEntry_4 > 0;
    Cluster := Cluster + 1;
    goto L207_dummy;

  L207_dummy:
    assume false;
    return;

  anon231_Then:
    assume {:partition} ChainTogether == 0;
    Tmp_428 := 0;
    goto L207;

  anon229_Then:
    assume {:partition} BAND(FatEntry_4, 4095) == 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} Cluster != StartingFatIndex;
    Page_2 := Page_2 + 1;
    Tmp_474 := Page_2;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume Tmp_474 <= 2;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume Tmp_474 != 2;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume Tmp_474 != 1;
    goto anon280_Then, anon280_Else;

  anon280_Else:
    assume Tmp_474 != 0;
    goto L368;

  L368:
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    havoc FatEntry_4;
    goto L204;

  anon280_Then:
    assume Tmp_474 == 0;
    Tmp_474 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_471;
    goto L368;

  anon279_Then:
    assume Tmp_474 == 1;
    Tmp_474 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_471;
    goto L368;

  anon278_Then:
    assume Tmp_474 == 2;
    Tmp_474 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_471;
    goto L368;

  anon277_Then:
    assume Tmp_474 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_471;
    goto L368;

  anon230_Then:
    assume {:partition} Cluster == StartingFatIndex;
    goto L204;

  anon227_Then:
    assume {:partition} Cluster > FinalCluster;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} 65536 < ClusterCount;
    goto L215;

  L215:
    i_7 := 0;
    goto L216;

  L216:
    call {:si_unique_call 431} Tmp_437, Tmp_442, Tmp_444, Tmp_454, Tmp_456, i_7, Tmp_476, Tmp_477, Tmp_478, Tmp_484, Tmp_503 := FatSetFatRun_loop_L216(Tmp_437, Tmp_442, Tmp_444, Tmp_454, Tmp_456, i_7, Tmp_476, Tmp_477, Tmp_478, Tmp_484, SavedBcbs, Tmp_503);
    goto L216_last;

  L216_last:
    Tmp_484 := i_7;
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume Tmp_484 <= 2;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume Tmp_484 != 2;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume Tmp_484 != 1;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume Tmp_484 != 0;
    goto L378;

  L378:
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    Tmp_444 := i_7;
    goto anon282_Then, anon282_Else;

  anon282_Else:
    assume Tmp_444 <= 2;
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume Tmp_444 != 2;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume Tmp_444 != 1;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume Tmp_444 != 0;
    goto L388;

  L388:
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    Tmp_477 := i_7;
    goto anon283_Then, anon283_Else;

  anon283_Else:
    assume Tmp_477 <= 2;
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume Tmp_477 != 2;
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume Tmp_477 != 1;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume Tmp_477 != 0;
    goto L398;

  L398:
    assume {:nonnull} Tmp_503 != 0;
    assume Tmp_503 > 0;
    Tmp_478 := i_7;
    goto anon284_Then, anon284_Else;

  anon284_Else:
    assume Tmp_478 <= 2;
    goto anon289_Then, anon289_Else;

  anon289_Else:
    assume Tmp_478 != 2;
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume Tmp_478 != 1;
    goto anon291_Then, anon291_Else;

  anon291_Else:
    assume Tmp_478 != 0;
    goto L408;

  L408:
    assume {:nonnull} Tmp_476 != 0;
    assume Tmp_476 > 0;
    goto L219;

  L219:
    Tmp_454 := i_7;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    assume Tmp_454 <= 2;
    goto anon286_Then, anon286_Else;

  anon286_Else:
    assume Tmp_454 != 2;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    assume Tmp_454 != 1;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    assume Tmp_454 != 0;
    goto L418;

  L418:
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    i_7 := i_7 + 1;
    goto L418_dummy;

  L418_dummy:
    assume false;
    return;

  anon288_Then:
    assume Tmp_454 == 0;
    Tmp_454 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_456;
    goto L418;

  anon287_Then:
    assume Tmp_454 == 1;
    Tmp_454 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_456;
    goto L418;

  anon286_Then:
    assume Tmp_454 == 2;
    Tmp_454 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_456;
    goto L418;

  anon285_Then:
    assume Tmp_454 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_456;
    goto L418;

  anon291_Then:
    assume Tmp_478 == 0;
    Tmp_478 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_476;
    goto L408;

  anon290_Then:
    assume Tmp_478 == 1;
    Tmp_478 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_476;
    goto L408;

  anon289_Then:
    assume Tmp_478 == 2;
    Tmp_478 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_476;
    goto L408;

  anon284_Then:
    assume Tmp_478 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_476;
    goto L408;

  anon294_Then:
    assume Tmp_477 == 0;
    Tmp_477 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_503;
    goto L398;

  anon293_Then:
    assume Tmp_477 == 1;
    Tmp_477 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_503;
    goto L398;

  anon292_Then:
    assume Tmp_477 == 2;
    Tmp_477 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_503;
    goto L398;

  anon283_Then:
    assume Tmp_477 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_503;
    goto L398;

  anon245_Then:
    goto L219;

  anon297_Then:
    assume Tmp_444 == 0;
    Tmp_444 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_437;
    goto L388;

  anon296_Then:
    assume Tmp_444 == 1;
    Tmp_444 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_437;
    goto L388;

  anon295_Then:
    assume Tmp_444 == 2;
    Tmp_444 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_437;
    goto L388;

  anon282_Then:
    assume Tmp_444 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_437;
    goto L388;

  anon244_Then:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} 65536 < ClusterCount;
    StartingFatIndex := StartingFatIndex + 65536;
    ClusterCount := ClusterCount - 65536;
    goto anon233_Else_dummy;

  anon233_Else_dummy:
    assume false;
    return;

  anon233_Then:
    assume {:partition} ClusterCount <= 65536;
    goto L122;

  anon300_Then:
    assume Tmp_484 == 0;
    Tmp_484 := 0;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_442;
    goto L378;

  anon299_Then:
    assume Tmp_484 == 1;
    Tmp_484 := 1;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_442;
    goto L378;

  anon298_Then:
    assume Tmp_484 == 2;
    Tmp_484 := 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_442;
    goto L378;

  anon281_Then:
    assume Tmp_484 > 2;
    assume {:nonnull} SavedBcbs != 0;
    assume SavedBcbs > 0;
    havoc Tmp_442;
    goto L378;

  anon228_Then:
    assume {:partition} ClusterCount <= 65536;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} ChainTogether == 0;
    goto L215;

  anon232_Then:
    assume {:partition} ChainTogether != 0;
    assume {:nonnull} FatEntry_4 != 0;
    assume FatEntry_4 > 0;
    goto L215;

  anon268_Then:
    assume {:partition} 65536 >= ClusterCount;
    ClusterCountThisRun := ClusterCount;
    goto L165;

  anon213_Then:
    assume {:partition} ClusterCount == 0;
    goto L1;

  anon211_Then:
    assume {:partition} StartingFatIndex + ClusterCount - 1 >= 2;
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto L30;

  anon212_Then:
    goto L26;

  anon209_Then:
    assume {:partition} StartingFatIndex >= 2;
    assume {:nonnull} Vcb_23 != 0;
    assume Vcb_23 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L24;

  anon210_Then:
    goto L20;
}



procedure {:origName "FatLookupFatEntry"} FatLookupFatEntry(actual_IrpContext_31: int, actual_Vcb_24: int, actual_FatIndex_2: int, actual_FatEntry_5: int, actual_Context_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLookupFatEntry"} FatLookupFatEntry(actual_IrpContext_31: int, actual_Vcb_24: int, actual_FatIndex_2: int, actual_FatEntry_5: int, actual_Context_1: int)
{
  var {:pointer} Tmp_512: int;
  var {:scalar} Tmp_513: int;
  var {:scalar} Tmp_514: int;
  var {:scalar} OffsetIntoVolumeFile_1: int;
  var {:pointer} Tmp_515: int;
  var {:scalar} PageEntryOffset: int;
  var {:pointer} Tmp_516: int;
  var {:scalar} Tmp_517: int;
  var {:pointer} Tmp_519: int;
  var {:pointer} Tmp_520: int;
  var {:scalar} OffsetIntoVolumeFile_2: int;
  var {:pointer} Tmp_521: int;
  var {:pointer} Tmp_522: int;
  var {:scalar} PageEntryOffset_1: int;
  var {:scalar} Tmp_523: int;
  var {:scalar} Tmp_524: int;
  var {:pointer} Tmp_525: int;
  var {:pointer} Tmp_526: int;
  var {:pointer} Tmp_527: int;
  var {:pointer} Tmp_528: int;
  var {:scalar} Tmp_529: int;
  var {:scalar} Tmp_530: int;
  var {:scalar} Tmp_531: int;
  var {:pointer} Tmp_532: int;
  var {:pointer} Tmp_533: int;
  var {:pointer} Tmp_534: int;
  var {:scalar} Tmp_535: int;
  var {:pointer} Tmp_536: int;
  var {:pointer} IrpContext_31: int;
  var {:pointer} Vcb_24: int;
  var {:scalar} FatIndex_2: int;
  var {:pointer} FatEntry_5: int;
  var {:pointer} Context_1: int;
  var vslice_dummy_var_77: int;

  anon0:
    call {:si_unique_call 432} vslice_dummy_var_77 := __HAVOC_malloc(4);
    IrpContext_31 := actual_IrpContext_31;
    Vcb_24 := actual_Vcb_24;
    FatIndex_2 := actual_FatIndex_2;
    FatEntry_5 := actual_FatEntry_5;
    Context_1 := actual_Context_1;
    call {:si_unique_call 433} sdv_do_paged_code_check();
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} 2 > FatIndex_2;
    goto L8;

  L8:
    assume {:nonnull} IrpContext_31 != 0;
    assume IrpContext_31 > 0;
    call {:si_unique_call 434} ExRaiseStatus(-1073741566);
    goto L12;

  L12:
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L16;

  L16:
    Tmp_521 := FatEntry_5;
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    havoc Tmp_532;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} BAND(FatIndex_2, 1) != 0;
    call {:si_unique_call 435} Tmp_514 := corral_nondet();
    goto L20;

  L20:
    assume {:nonnull} FatEntry_5 != 0;
    assume FatEntry_5 > 0;
    goto L1;

  L1:
    return;

  anon36_Then:
    assume {:partition} BAND(FatIndex_2, 1) == 0;
    assume {:nonnull} FatEntry_5 != 0;
    assume FatEntry_5 > 0;
    havoc Tmp_514;
    goto L20;

  anon31_Then:
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_528 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Tmp_528 != 0;
    assume Tmp_528 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_519 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_525 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    havoc Tmp_530;
    goto L24;

  L24:
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_536 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_515 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Tmp_515 != 0;
    assume Tmp_515 > 0;
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    havoc Tmp_524;
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    call {:si_unique_call 436} FatReadVolumeFile(IrpContext_31, Vcb_24, Tmp_524, Tmp_530, Bcb__FAT_ENUMERATION_CONTEXT(Context_1), PinnedPage__FAT_ENUMERATION_CONTEXT(Context_1));
    goto L16;

  anon37_Then:
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_533 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_512 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Tmp_512 != 0;
    assume Tmp_512 > 0;
    assume {:nonnull} Tmp_533 != 0;
    assume Tmp_533 > 0;
    havoc Tmp_530;
    goto L24;

  anon29_Then:
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_520 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_527 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} Tmp_527 != 0;
    assume Tmp_527 > 0;
    havoc OffsetIntoVolumeFile_2;
    Tmp_513 := INTMOD(OffsetIntoVolumeFile_2, 4096);
    PageEntryOffset_1 := INTDIV(Tmp_513, 2);
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L54;

  L54:
    Tmp_517 := PageEntryOffset_1;
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    havoc Tmp_526;
    assume {:nonnull} FatEntry_5 != 0;
    assume FatEntry_5 > 0;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    goto L1;

  anon35_Then:
    goto L52;

  L52:
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto L55;

  L55:
    Tmp_523 := BAND(OffsetIntoVolumeFile_2, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    call {:si_unique_call 437} FatReadVolumeFile(IrpContext_31, Vcb_24, Tmp_523, 4096, Bcb__FAT_ENUMERATION_CONTEXT(Context_1), PinnedPage__FAT_ENUMERATION_CONTEXT(Context_1));
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto L54;

  anon34_Then:
    goto L55;

  anon39_Then:
    goto L52;

  anon30_Then:
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_522 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    Tmp_534 := Bpb__VCB(Vcb_24);
    assume {:nonnull} Tmp_522 != 0;
    assume Tmp_522 > 0;
    assume {:nonnull} Tmp_534 != 0;
    assume Tmp_534 > 0;
    havoc OffsetIntoVolumeFile_1;
    Tmp_535 := INTMOD(OffsetIntoVolumeFile_1, 4096);
    PageEntryOffset := INTDIV(Tmp_535, 4);
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L37;

  L37:
    Tmp_529 := PageEntryOffset;
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    havoc Tmp_516;
    assume {:nonnull} FatEntry_5 != 0;
    assume FatEntry_5 > 0;
    assume {:nonnull} Tmp_516 != 0;
    assume Tmp_516 > 0;
    goto L1;

  anon33_Then:
    goto L35;

  L35:
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto L38;

  L38:
    Tmp_531 := BAND(OffsetIntoVolumeFile_1, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    call {:si_unique_call 438} FatReadVolumeFile(IrpContext_31, Vcb_24, Tmp_531, 4096, Bcb__FAT_ENUMERATION_CONTEXT(Context_1), PinnedPage__FAT_ENUMERATION_CONTEXT(Context_1));
    assume {:nonnull} Context_1 != 0;
    assume Context_1 > 0;
    goto L37;

  anon32_Then:
    goto L38;

  anon38_Then:
    goto L35;

  anon27_Then:
    assume {:partition} FatIndex_2 >= 2;
    assume {:nonnull} Vcb_24 != 0;
    assume Vcb_24 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L12;

  anon28_Then:
    goto L8;
}



procedure {:origName "FatAllocateDiskSpace"} FatAllocateDiskSpace(actual_IrpContext_32: int, actual_Vcb_25: int, actual_AbsoluteClusterHint: int, actual_ByteCount_4: int, actual_ExactMatchRequired: int, actual_Mcb_2: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAllocateDiskSpace"} FatAllocateDiskSpace(actual_IrpContext_32: int, actual_Vcb_25: int, actual_AbsoluteClusterHint: int, actual_ByteCount_4: int, actual_ExactMatchRequired: int, actual_Mcb_2: int)
{
  var {:scalar} s_p_e_c_i_a_l_1: int;
  var {:scalar} SelectNextContigWindow: int;
  var {:scalar} sdv_156: int;
  var {:pointer} Window: int;
  var {:scalar} Tmp_544: int;
  var {:scalar} Tmp_545: int;
  var {:scalar} Tmp_546: int;
  var {:scalar} Desired: int;
  var {:pointer} Tmp_548: int;
  var {:pointer} Tmp_549: int;
  var {:scalar} ClustersRemaining: int;
  var {:scalar} NextWindow: int;
  var {:scalar} LockedBitMap: int;
  var {:scalar} s_p_e_c_i_a_l_2: int;
  var {:scalar} sdv_159: int;
  var {:pointer} Tmp_552: int;
  var {:scalar} Tmp_553: int;
  var {:pointer} Tmp_554: int;
  var {:scalar} Cluster_1: int;
  var {:scalar} Tmp_555: int;
  var {:pointer} Tmp_556: int;
  var {:scalar} Wait_1: int;
  var {:scalar} FaveWindow: int;
  var {:pointer} Tmp_557: int;
  var {:pointer} Tmp_559: int;
  var {:scalar} ClustersFound: int;
  var {:scalar} sdv_162: int;
  var {:scalar} Tmp_560: int;
  var {:scalar} StartingCluster: int;
  var {:scalar} BytesFound: int;
  var {:pointer} Tmp_562: int;
  var {:scalar} Tmp_563: int;
  var {:pointer} Tmp_564: int;
  var {:scalar} sdv_166: int;
  var {:scalar} sdv_167: int;
  var {:scalar} BucketNum: int;
  var {:scalar} SelectedWindow: int;
  var {:scalar} sdv_169: int;
  var {:scalar} WindowRelativeHint: int;
  var {:pointer} Tmp_569: int;
  var {:pointer} Tmp_571: int;
  var {:scalar} Tmp_573: int;
  var {:scalar} Tmp_576: int;
  var {:scalar} PriorLastCluster: int;
  var {:scalar} CurrentVbo_1: int;
  var {:pointer} Tmp_577: int;
  var {:scalar} Index_1: int;
  var {:scalar} BytesPerCluster_3: int;
  var {:scalar} Result_2: int;
  var {:scalar} sdv_172: int;
  var {:scalar} ClusterCount_1: int;
  var {:pointer} IrpContext_32: int;
  var {:pointer} Vcb_25: int;
  var {:scalar} AbsoluteClusterHint: int;
  var {:pointer} ByteCount_4: int;
  var {:scalar} ExactMatchRequired: int;
  var {:pointer} Mcb_2: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_1219: int;
  var vslice_dummy_var_1220: int;

  anon0:
    call {:si_unique_call 439} vslice_dummy_var_78 := __HAVOC_malloc(4);
    IrpContext_32 := actual_IrpContext_32;
    Vcb_25 := actual_Vcb_25;
    AbsoluteClusterHint := actual_AbsoluteClusterHint;
    ByteCount_4 := actual_ByteCount_4;
    ExactMatchRequired := actual_ExactMatchRequired;
    Mcb_2 := actual_Mcb_2;
    Result_2 := 1;
    call {:si_unique_call 440} sdv_do_paged_code_check();
    assume {:nonnull} ByteCount_4 != 0;
    assume ByteCount_4 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    call {:si_unique_call 441} BytesPerCluster_3 := corral_nondet();
    assume {:nonnull} ByteCount_4 != 0;
    assume ByteCount_4 > 0;
    assume {:nonnull} ByteCount_4 != 0;
    assume ByteCount_4 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    call {:si_unique_call 442} ClusterCount_1 := corral_nondet();
    goto L23;

  L23:
    call {:si_unique_call 443} vslice_dummy_var_79 := ExAcquireResourceSharedLite(0, 1);
    call {:si_unique_call 444} ExAcquireFastMutexUnsafe(0);
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto L34;

  L34:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} AbsoluteClusterHint != 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Tmp_554;
    assume {:nonnull} Tmp_554 != 0;
    assume Tmp_554 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    goto L42;

  L42:
    BucketNum := INTDIV(AbsoluteClusterHint - 2, 65536);
    call {:si_unique_call 445} ExReleaseFastMutexUnsafe(0);
    call {:si_unique_call 446} ExReleaseResourceLite(0);
    call {:si_unique_call 447} vslice_dummy_var_80 := ExAcquireResourceExclusiveLite(0, 1);
    call {:si_unique_call 448} ExAcquireFastMutexUnsafe(0);
    Tmp_576 := BucketNum;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Tmp_548;
    Window := Tmp_548 + Tmp_576 * 12;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} IrpContext_32 != 0;
    assume IrpContext_32 > 0;
    havoc Tmp_546;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} Tmp_546 == 0;
    Wait_1 := 0;
    goto L509;

  L509:
    assume {:nonnull} IrpContext_32 != 0;
    assume IrpContext_32 > 0;
    call {:si_unique_call 449} FatExamineFatEntries(IrpContext_32, Vcb_25, 0, 0, 0, Window, 0);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} Wait_1 != 0;
    goto L79;

  L79:
    call {:si_unique_call 450} sdv_167 := sdv_AbnormalTermination();
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} sdv_167 != 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    call {:si_unique_call 451} ExReleaseFastMutexUnsafe(0);
    call {:si_unique_call 452} ExReleaseResourceLite(0);
    goto L57;

  L57:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Tmp_577;
    assume {:nonnull} Tmp_577 != 0;
    assume Tmp_577 > 0;
    havoc WindowRelativeHint;
    goto L90;

  L90:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Window;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} ClusterCount_1 == 1;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    Tmp_557 := FreeClusterBitMap__VCB(Vcb_25);
    assume {:nonnull} Tmp_557 != 0;
    assume Tmp_557 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    Tmp_560 := WindowRelativeHint;
    goto L96;

  L96:
    StartingCluster := Tmp_560;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} StartingCluster == 1;
    goto L192;

  L192:
    ClustersFound := 0;
    LockedBitMap := 0;
    SelectNextContigWindow := 0;
    call {:si_unique_call 453} ExReleaseFastMutexUnsafe(0);
    call {:si_unique_call 454} ExReleaseResourceLite(0);
    call {:si_unique_call 455} vslice_dummy_var_81 := ExAcquireResourceExclusiveLite(0, 1);
    call {:si_unique_call 456} ExAcquireFastMutexUnsafe(0);
    LockedBitMap := 1;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} ExactMatchRequired != 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    Result_2 := 0;
    goto L216;

  L216:
    call {:si_unique_call 457} ExReleaseResourceLite(0);
    call {:si_unique_call 458} sdv_172 := sdv_AbnormalTermination();
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} sdv_172 != 0;
    goto L224;

  L224:
    assume {:nonnull} ByteCount_4 != 0;
    assume ByteCount_4 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} LockedBitMap != 0;
    call {:si_unique_call 459} ExReleaseFastMutexUnsafe(0);
    goto L232;

  L232:
    call {:si_unique_call 460} FatDeallocateDiskSpace(IrpContext_32, Vcb_25, Mcb_2);
    call {:si_unique_call 461} FatRemoveMcbEntry(Vcb_25, Mcb_2, 0, -1);
    goto L1;

  L1:
    return;

  anon175_Then:
    assume {:partition} LockedBitMap == 0;
    call {:si_unique_call 462} ExAcquireFastMutexUnsafe(0);
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} Window != 0;
    assume Window > 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    assume {:nonnull} Window != 0;
    assume Window > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    assume {:nonnull} Window != 0;
    assume Window > 0;
    goto L242;

  L242:
    assume {:nonnull} Window != 0;
    assume Window > 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    call {:si_unique_call 463} ExReleaseFastMutexUnsafe(0);
    call {:si_unique_call 464} FatRemoveMcbEntry(Vcb_25, Mcb_2, CurrentVbo_1, BytesFound);
    goto L232;

  anon145_Then:
    goto L242;

  anon144_Then:
    goto L242;

  anon142_Then:
    assume {:partition} sdv_172 == 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Result_2 == 0;
    goto L224;

  anon143_Then:
    assume {:partition} Result_2 != 0;
    goto L1;

  anon141_Then:
    goto L212;

  L212:
    ClustersRemaining := ClusterCount_1;
    CurrentVbo_1 := 0;
    PriorLastCluster := 0;
    goto L258;

  L258:
    call {:si_unique_call 465} SelectNextContigWindow, sdv_156, Window, Tmp_544, Tmp_545, Desired, ClustersRemaining, NextWindow, LockedBitMap, s_p_e_c_i_a_l_2, Tmp_553, Cluster_1, Tmp_555, Tmp_556, Wait_1, FaveWindow, Tmp_559, ClustersFound, BytesFound, Tmp_562, Tmp_564, SelectedWindow, sdv_169, WindowRelativeHint, Tmp_569, Tmp_571, Tmp_573, PriorLastCluster, CurrentVbo_1, Index_1, vslice_dummy_var_83 := FatAllocateDiskSpace_loop_L258(SelectNextContigWindow, sdv_156, Window, Tmp_544, Tmp_545, Desired, ClustersRemaining, NextWindow, LockedBitMap, s_p_e_c_i_a_l_2, Tmp_553, Cluster_1, Tmp_555, Tmp_556, Wait_1, FaveWindow, Tmp_559, ClustersFound, BytesFound, Tmp_562, Tmp_564, SelectedWindow, sdv_169, WindowRelativeHint, Tmp_569, Tmp_571, Tmp_573, PriorLastCluster, CurrentVbo_1, Index_1, IrpContext_32, Vcb_25, ExactMatchRequired, Mcb_2, vslice_dummy_var_83);
    goto L258_last;

  L258_last:
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} ClustersRemaining != 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} LockedBitMap != 0;
    goto L263;

  L263:
    ClustersFound := 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} SelectNextContigWindow != 0;
    goto L266;

  L266:
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} ClustersFound == 0;
    FaveWindow := 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    call {:si_unique_call 466} KeBugCheckEx(35, 133472, 0, 5, 0);
    goto L355;

  L355:
    SelectedWindow := 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} SelectNextContigWindow != 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc NextWindow;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    Tmp_555 := NextWindow;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Tmp_569;
    assume {:nonnull} Tmp_569 != 0;
    assume Tmp_569 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    FaveWindow := NextWindow;
    SelectedWindow := 1;
    goto L368;

  L368:
    SelectNextContigWindow := 0;
    goto L360;

  L360:
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} SelectedWindow != 0;
    goto L375;

  L375:
    Tmp_544 := FaveWindow;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Tmp_571;
    assume {:nonnull} Tmp_571 != 0;
    assume Tmp_571 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L379;

  L379:
    assume {:nonnull} IrpContext_32 != 0;
    assume IrpContext_32 > 0;
    havoc Tmp_545;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} Tmp_545 == 0;
    Wait_1 := 0;
    goto L588;

  L588:
    assume {:nonnull} IrpContext_32 != 0;
    assume IrpContext_32 > 0;
    Tmp_573 := FaveWindow;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Tmp_562;
    Tmp_556 := Tmp_562 + Tmp_573 * 12;
    call {:si_unique_call 467} FatExamineFatEntries(IrpContext_32, Vcb_25, 0, 0, 0, Tmp_556, 0);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} Wait_1 == 0;
    assume {:nonnull} IrpContext_32 != 0;
    assume IrpContext_32 > 0;
    goto anon155_Else_dummy;

  anon155_Else_dummy:
    assume false;
    return;

  anon155_Then:
    assume {:partition} Wait_1 != 0;
    goto anon155_Then_dummy;

  anon155_Then_dummy:
    assume false;
    return;

  anon184_Then:
    assume {:partition} Tmp_545 != 0;
    Wait_1 := 1;
    goto L588;

  anon183_Then:
    call {:si_unique_call 468} KeBugCheckEx(35, 133531, 0, 5, 1);
    goto L379;

  anon153_Then:
    assume {:partition} SelectedWindow == 0;
    call {:si_unique_call 469} FaveWindow := FatSelectBestWindow(Vcb_25);
    goto L375;

  anon182_Then:
    goto L364;

  L364:
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} ExactMatchRequired != 0;
    Result_2 := 0;
    goto L216;

  anon154_Then:
    assume {:partition} ExactMatchRequired == 0;
    WindowRelativeHint := 0;
    goto L368;

  anon181_Then:
    goto L364;

  anon180_Then:
    assume {:partition} SelectNextContigWindow == 0;
    goto L360;

  anon179_Then:
    goto L355;

  anon149_Then:
    assume {:partition} ClustersFound != 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Window;
    s_p_e_c_i_a_l_2 := Index_1 + 2 + ClustersFound;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    s_p_e_c_i_a_l_2 := 2;
    goto L316;

  L316:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    Tmp_559 := FreeClusterBitMap__VCB(Vcb_25);
    assume {:nonnull} Tmp_559 != 0;
    assume Tmp_559 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 470} sdv_156 := corral_nondet();
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto L326;

  L326:
    assume {:nonnull} Window != 0;
    assume Window > 0;
    havoc Cluster_1;
    assume {:nonnull} Window != 0;
    assume Window > 0;
    call {:si_unique_call 471} ExReleaseFastMutexUnsafe(0);
    LockedBitMap := 0;
    call {:si_unique_call 472} BytesFound := corral_nondet();
    call {:si_unique_call 473} Tmp_553 := corral_nondet();
    call {:si_unique_call 474} vslice_dummy_var_83 := FatAddMcbEntry(Vcb_25, Mcb_2, CurrentVbo_1, Tmp_553, BytesFound);
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} PriorLastCluster != 0;
    call {:si_unique_call 475} FatSetFatEntry#1(IrpContext_32, Vcb_25, PriorLastCluster, Cluster_1);
    goto L339;

  L339:
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} ClustersFound == 1;
    call {:si_unique_call 476} FatSetFatEntry#1(IrpContext_32, Vcb_25, Cluster_1, 268435455);
    goto L349;

  L349:
    CurrentVbo_1 := CurrentVbo_1 + BytesFound;
    ClustersRemaining := ClustersRemaining - ClustersFound;
    PriorLastCluster := Cluster_1 + ClustersFound - 1;
    goto L349_dummy;

  L349_dummy:
    assume false;
    return;

  anon152_Then:
    assume {:partition} ClustersFound != 1;
    call {:si_unique_call 477} FatSetFatRun(IrpContext_32, Vcb_25, Cluster_1, ClustersFound, 1);
    goto L349;

  anon151_Then:
    assume {:partition} PriorLastCluster == 0;
    goto L339;

  anon178_Then:
    goto L326;

  anon177_Then:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto L326;

  anon150_Then:
    goto L316;

  anon176_Then:
    assume {:partition} SelectNextContigWindow == 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} WindowRelativeHint != 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Desired;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} Desired > ClustersRemaining;
    Desired := ClustersRemaining;
    goto L393;

  L393:
    call {:si_unique_call 478} sdv_169 := corral_nondet();
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} sdv_169 != 0;
    Index_1 := WindowRelativeHint - 2;
    ClustersFound := Desired;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    SelectNextContigWindow := 1;
    WindowRelativeHint := 2;
    goto L389;

  L389:
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} WindowRelativeHint == 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} ClustersFound == 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Tmp_564;
    assume {:nonnull} Tmp_564 != 0;
    assume Tmp_564 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    call {:si_unique_call 479} Index_1 := corral_nondet();
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} -1 != Index_1;
    ClustersFound := ClustersRemaining;
    goto L411;

  L411:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} ClustersFound != 0;
    goto L421;

  L421:
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} ClustersFound >= ClustersRemaining;
    ClustersFound := ClustersRemaining;
    goto L266;

  anon162_Then:
    assume {:partition} ClustersRemaining > ClustersFound;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    SelectNextContigWindow := 1;
    WindowRelativeHint := 2;
    goto L266;

  anon164_Then:
    goto L266;

  anon163_Then:
    goto L266;

  anon160_Then:
    assume {:partition} ClustersFound == 0;
    call {:si_unique_call 480} ClustersFound := corral_nondet();
    goto L421;

  anon161_Then:
    assume {:partition} -1 == Index_1;
    goto L411;

  anon187_Then:
    goto L411;

  anon159_Then:
    assume {:partition} ClustersFound != 0;
    goto L266;

  anon156_Then:
    assume {:partition} WindowRelativeHint != 0;
    goto L266;

  anon186_Then:
    WindowRelativeHint := 0;
    goto L389;

  anon157_Then:
    assume {:partition} sdv_169 == 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} ExactMatchRequired != 0;
    Result_2 := 0;
    goto L216;

  anon158_Then:
    assume {:partition} ExactMatchRequired == 0;
    WindowRelativeHint := 0;
    goto L389;

  anon185_Then:
    assume {:partition} ClustersRemaining >= Desired;
    goto L393;

  anon148_Then:
    assume {:partition} WindowRelativeHint == 0;
    goto L389;

  anon147_Then:
    assume {:partition} LockedBitMap == 0;
    call {:si_unique_call 481} ExAcquireFastMutexUnsafe(0);
    LockedBitMap := 1;
    goto L263;

  anon146_Then:
    assume {:partition} ClustersRemaining == 0;
    goto L216;

  anon174_Then:
    assume {:partition} ExactMatchRequired == 0;
    goto L212;

  anon171_Then:
    assume {:partition} StartingCluster != 1;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} AbsoluteClusterHint == 0;
    goto L102;

  L102:
    s_p_e_c_i_a_l_1 := StartingCluster + ClusterCount_1;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    s_p_e_c_i_a_l_1 := 2;
    goto L108;

  L108:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    Tmp_552 := FreeClusterBitMap__VCB(Vcb_25);
    assume {:nonnull} Tmp_552 != 0;
    assume Tmp_552 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    call {:si_unique_call 482} sdv_166 := corral_nondet();
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto L118;

  L118:
    assume {:nonnull} Window != 0;
    assume Window > 0;
    assume {:nonnull} Window != 0;
    assume Window > 0;
    havoc StartingCluster;
    StartingCluster := StartingCluster - 2;
    call {:si_unique_call 483} ExReleaseFastMutexUnsafe(0);
    call {:si_unique_call 484} Tmp_563 := corral_nondet();
    assume {:nonnull} ByteCount_4 != 0;
    assume ByteCount_4 > 0;
    havoc vslice_dummy_var_1219;
    call {:si_unique_call 485} vslice_dummy_var_82 := FatAddMcbEntry(Vcb_25, Mcb_2, 0, Tmp_563, vslice_dummy_var_1219);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} ClusterCount_1 == 1;
    call {:si_unique_call 486} FatSetFatEntry#1(IrpContext_32, Vcb_25, StartingCluster, 268435455);
    goto L161;

  L161:
    call {:si_unique_call 487} sdv_162 := sdv_AbnormalTermination();
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} sdv_162 != 0;
    assume {:nonnull} ByteCount_4 != 0;
    assume ByteCount_4 > 0;
    havoc vslice_dummy_var_1220;
    call {:si_unique_call 488} FatRemoveMcbEntry(Vcb_25, Mcb_2, 0, vslice_dummy_var_1220);
    call {:si_unique_call 489} ExAcquireFastMutexUnsafe(0);
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} Window != 0;
    assume Window > 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    assume {:nonnull} Window != 0;
    assume Window > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    assume {:nonnull} Window != 0;
    assume Window > 0;
    goto L175;

  L175:
    assume {:nonnull} Window != 0;
    assume Window > 0;
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    call {:si_unique_call 490} ExReleaseFastMutexUnsafe(0);
    goto L165;

  L165:
    call {:si_unique_call 491} ExReleaseResourceLite(0);
    goto L1;

  anon140_Then:
    goto L175;

  anon139_Then:
    goto L175;

  anon138_Then:
    assume {:partition} sdv_162 == 0;
    goto L165;

  anon137_Then:
    assume {:partition} ClusterCount_1 != 1;
    call {:si_unique_call 492} FatSetFatRun(IrpContext_32, Vcb_25, StartingCluster, ClusterCount_1, 1);
    goto L161;

  anon173_Then:
    goto L118;

  anon172_Then:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    goto L118;

  anon136_Then:
    goto L108;

  anon134_Then:
    assume {:partition} AbsoluteClusterHint != 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} StartingCluster != WindowRelativeHint;
    goto L192;

  anon135_Then:
    assume {:partition} StartingCluster == WindowRelativeHint;
    goto L102;

  anon170_Then:
    goto L92;

  L92:
    call {:si_unique_call 493} sdv_159 := corral_nondet();
    Tmp_560 := sdv_159 + 2;
    goto L96;

  anon169_Then:
    assume {:partition} ClusterCount_1 != 1;
    goto L92;

  anon133_Then:
    assume {:partition} sdv_167 == 0;
    goto L57;

  anon132_Then:
    assume {:partition} Wait_1 == 0;
    assume {:nonnull} IrpContext_32 != 0;
    assume IrpContext_32 > 0;
    goto L79;

  anon168_Then:
    assume {:partition} Tmp_546 != 0;
    Wait_1 := 1;
    goto L509;

  anon167_Then:
    goto L57;

  anon166_Then:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc Tmp_549;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L57;

  anon188_Then:
    goto L42;

  anon131_Then:
    WindowRelativeHint := AbsoluteClusterHint;
    goto L90;

  anon130_Then:
    goto L35;

  L35:
    assume {:nonnull} Vcb_25 != 0;
    assume Vcb_25 > 0;
    havoc WindowRelativeHint;
    AbsoluteClusterHint := 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} -1 == WindowRelativeHint;
    WindowRelativeHint := 2;
    goto L90;

  anon189_Then:
    assume {:partition} -1 != WindowRelativeHint;
    goto L90;

  anon129_Then:
    assume {:partition} AbsoluteClusterHint == 0;
    goto L35;

  anon128_Then:
    call {:si_unique_call 494} ExReleaseFastMutexUnsafe(0);
    call {:si_unique_call 495} ExReleaseResourceLite(0);
    assume {:nonnull} IrpContext_32 != 0;
    assume IrpContext_32 > 0;
    call {:si_unique_call 496} ExRaiseStatus(-1073741697);
    goto L34;

  anon165_Then:
    assume {:nonnull} ByteCount_4 != 0;
    assume ByteCount_4 > 0;
    call {:si_unique_call 497} ClusterCount_1 := corral_nondet();
    goto L23;

  anon127_Then:
    goto L1;
}



procedure {:origName "FatDeallocateDiskSpace"} FatDeallocateDiskSpace(actual_IrpContext_33: int, actual_Vcb_26: int, actual_Mcb_3: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeallocateDiskSpace"} FatDeallocateDiskSpace(actual_IrpContext_33: int, actual_Vcb_26: int, actual_Mcb_3: int)
{
  var {:scalar} count: int;
  var {:scalar} McbIndex: int;
  var {:dopa} {:scalar} Lbo_6: int;
  var {:dopa} {:scalar} Vbo_1: int;
  var {:pointer} Tmp_579: int;
  var {:pointer} Window_1: int;
  var {:scalar} RunsInMcb: int;
  var {:dopa} {:scalar} LocalLbo: int;
  var {:scalar} Clusters: int;
  var {:scalar} ClusterEnd: int;
  var {:scalar} FatIndex_3: int;
  var {:scalar} Tmp_580: int;
  var {:scalar} sdv_176: int;
  var {:scalar} Tmp_582: int;
  var {:pointer} Tmp_583: int;
  var {:scalar} MyLength: int;
  var {:scalar} MyStart: int;
  var {:scalar} PriorLastIndex: int;
  var {:scalar} ClusterIndex: int;
  var {:scalar} Index_2: int;
  var {:dopa} {:scalar} LocalVbo: int;
  var {:scalar} ClusterCount_2: int;
  var {:dopa} {:scalar} ByteCount_5: int;
  var {:pointer} IrpContext_33: int;
  var {:pointer} Vcb_26: int;
  var {:pointer} Mcb_3: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;

  anon0:
    call {:si_unique_call 498} vslice_dummy_var_84 := __HAVOC_malloc(4);
    call {:si_unique_call 499} Lbo_6 := __HAVOC_malloc(4);
    call {:si_unique_call 500} Vbo_1 := __HAVOC_malloc(4);
    call {:si_unique_call 501} LocalLbo := __HAVOC_malloc(4);
    call {:si_unique_call 502} LocalVbo := __HAVOC_malloc(4);
    call {:si_unique_call 503} ByteCount_5 := __HAVOC_malloc(4);
    IrpContext_33 := actual_IrpContext_33;
    Vcb_26 := actual_Vcb_26;
    Mcb_3 := actual_Mcb_3;
    ClusterCount_2 := 0;
    ClusterIndex := 0;
    call {:si_unique_call 504} sdv_do_paged_code_check();
    assume {:nonnull} Vcb_26 != 0;
    assume Vcb_26 > 0;
    call {:si_unique_call 505} RunsInMcb := corral_nondet();
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} RunsInMcb != 0;
    call {:si_unique_call 506} vslice_dummy_var_85 := ExAcquireResourceSharedLite(0, 1);
    call {:si_unique_call 507} RunsInMcb := corral_nondet();
    McbIndex := 0;
    goto L67;

  L67:
    call {:si_unique_call 508} McbIndex, ClusterIndex, ClusterCount_2, vslice_dummy_var_86 := FatDeallocateDiskSpace_loop_L67(McbIndex, Lbo_6, Vbo_1, RunsInMcb, ClusterIndex, ClusterCount_2, ByteCount_5, IrpContext_33, Vcb_26, Mcb_3, vslice_dummy_var_86);
    goto L67_last;

  L67_last:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} RunsInMcb > McbIndex;
    call {:si_unique_call 509} vslice_dummy_var_86 := FatGetNextMcbEntry(Vcb_26, Mcb_3, McbIndex, Vbo_1, Lbo_6, ByteCount_5);
    call {:si_unique_call 510} ClusterCount_2 := corral_nondet();
    call {:si_unique_call 511} ClusterIndex := corral_nondet();
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} ClusterCount_2 == 1;
    call {:si_unique_call 512} FatSetFatEntry#1(IrpContext_33, Vcb_26, ClusterIndex, 0);
    goto L83;

  L83:
    McbIndex := McbIndex + 1;
    goto L83_dummy;

  L83_dummy:
    assume false;
    return;

  anon59_Then:
    assume {:partition} ClusterCount_2 != 1;
    call {:si_unique_call 513} FatSetFatRun(IrpContext_33, Vcb_26, ClusterIndex, ClusterCount_2, 0);
    goto L83;

  anon44_Then:
    assume {:partition} McbIndex >= RunsInMcb;
    call {:si_unique_call 514} ExAcquireFastMutexUnsafe(0);
    McbIndex := 0;
    goto L85;

  L85:
    call {:si_unique_call 515} count, McbIndex, Tmp_579, Window_1, ClusterEnd, Tmp_580, Tmp_582, Tmp_583, MyLength, MyStart, ClusterIndex, ClusterCount_2, vslice_dummy_var_87 := FatDeallocateDiskSpace_loop_L85(count, McbIndex, Lbo_6, Vbo_1, Tmp_579, Window_1, RunsInMcb, ClusterEnd, Tmp_580, Tmp_582, Tmp_583, MyLength, MyStart, ClusterIndex, ClusterCount_2, ByteCount_5, Vcb_26, Mcb_3, vslice_dummy_var_87);
    goto L85_last;

  L85_last:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} RunsInMcb > McbIndex;
    call {:si_unique_call 516} vslice_dummy_var_87 := FatGetNextMcbEntry(Vcb_26, Mcb_3, McbIndex, Vbo_1, Lbo_6, ByteCount_5);
    call {:si_unique_call 517} ClusterCount_2 := corral_nondet();
    call {:si_unique_call 518} ClusterIndex := corral_nondet();
    assume {:nonnull} Vcb_26 != 0;
    assume Vcb_26 > 0;
    havoc Window_1;
    ClusterEnd := ClusterIndex + ClusterCount_2 - 1;
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L102;

  L102:
    assume {:nonnull} Vcb_26 != 0;
    assume Vcb_26 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    Tmp_580 := INTDIV(ClusterIndex - 2, 65536);
    assume {:nonnull} Vcb_26 != 0;
    assume Vcb_26 > 0;
    havoc Tmp_583;
    Window_1 := Tmp_583 + Tmp_580 * 12;
    goto L105;

  L105:
    MyStart := ClusterIndex;
    MyLength := ClusterCount_2;
    goto L107;

  L107:
    call {:si_unique_call 519} count, Tmp_582, MyLength, MyStart := FatDeallocateDiskSpace_loop_L107(count, Window_1, Tmp_582, MyLength, MyStart);
    goto L107_last;

  L107_last:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} MyLength > 0;
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    havoc Tmp_582;
    goto L112;

  L112:
    count := Tmp_582;
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} MyLength != count;
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    havoc MyStart;
    goto L115;

  L115:
    MyLength := MyLength - count;
    goto L115_dummy;

  L115_dummy:
    assume false;
    return;

  anon61_Then:
    assume {:partition} MyLength == count;
    goto L115;

  anon49_Then:
    Tmp_582 := MyLength;
    goto L112;

  anon48_Then:
    assume {:partition} 0 >= MyLength;
    assume {:nonnull} Vcb_26 != 0;
    assume Vcb_26 > 0;
    goto L118;

  L118:
    McbIndex := McbIndex + 1;
    goto L118_dummy;

  L118_dummy:
    assume false;
    return;

  anon47_Then:
    assume {:nonnull} Vcb_26 != 0;
    assume Vcb_26 > 0;
    havoc Tmp_579;
    Window_1 := Tmp_579;
    goto L105;

  anon60_Then:
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    havoc MyStart;
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    havoc MyLength;
    goto L124;

  L124:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} MyLength != 0;
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    assume {:nonnull} Vcb_26 != 0;
    assume Vcb_26 > 0;
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Vcb_26 != 0;
    assume Vcb_26 > 0;
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    goto L102;

  anon54_Then:
    goto L102;

  anon53_Then:
    assume {:partition} MyLength == 0;
    goto L118;

  anon52_Then:
    goto L120;

  L120:
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    havoc MyStart;
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    havoc MyLength;
    goto L124;

  anon51_Then:
    MyStart := ClusterIndex;
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    MyLength := ClusterCount_2;
    goto L124;

  anon62_Then:
    assume {:nonnull} Window_1 != 0;
    assume Window_1 > 0;
    havoc MyLength;
    goto L124;

  anon50_Then:
    goto L120;

  anon46_Then:
    goto L102;

  anon45_Then:
    assume {:partition} McbIndex >= RunsInMcb;
    call {:si_unique_call 520} ExReleaseFastMutexUnsafe(0);
    call {:si_unique_call 521} ExReleaseResourceLite(0);
    call {:si_unique_call 522} sdv_176 := sdv_AbnormalTermination();
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_176 != 0;
    PriorLastIndex := 0;
    Index_2 := 0;
    goto L154;

  L154:
    call {:si_unique_call 523} Clusters, FatIndex_3, PriorLastIndex, Index_2, vslice_dummy_var_88 := FatDeallocateDiskSpace_loop_L154(McbIndex, LocalLbo, Clusters, FatIndex_3, PriorLastIndex, Index_2, LocalVbo, ByteCount_5, IrpContext_33, Vcb_26, Mcb_3, vslice_dummy_var_88);
    goto L154_last;

  L154_last:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} McbIndex >= Index_2;
    call {:si_unique_call 524} vslice_dummy_var_88 := FatGetNextMcbEntry(Vcb_26, Mcb_3, Index_2, LocalVbo, LocalLbo, ByteCount_5);
    call {:si_unique_call 525} FatIndex_3 := corral_nondet();
    call {:si_unique_call 526} Clusters := corral_nondet();
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} PriorLastIndex != 0;
    call {:si_unique_call 527} FatSetFatEntry#1(IrpContext_33, Vcb_26, PriorLastIndex, FatIndex_3);
    goto L161;

  L161:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} McbIndex > Index_2;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Clusters == 1;
    call {:si_unique_call 528} FatSetFatEntry#1(IrpContext_33, Vcb_26, FatIndex_3, 268435455);
    goto L173;

  L173:
    PriorLastIndex := FatIndex_3 + Clusters - 1;
    goto L165;

  L165:
    Index_2 := Index_2 + 1;
    goto L165_dummy;

  L165_dummy:
    assume false;
    return;

  anon58_Then:
    assume {:partition} Clusters != 1;
    call {:si_unique_call 529} FatSetFatRun(IrpContext_33, Vcb_26, FatIndex_3, Clusters, 1);
    goto L173;

  anon57_Then:
    assume {:partition} Index_2 >= McbIndex;
    goto L165;

  anon63_Then:
    assume {:partition} PriorLastIndex == 0;
    goto L161;

  anon56_Then:
    assume {:partition} Index_2 > McbIndex;
    goto L1;

  L1:
    return;

  anon55_Then:
    assume {:partition} sdv_176 == 0;
    goto L1;

  anon43_Then:
    assume {:partition} RunsInMcb == 0;
    goto L1;
}



procedure {:origName "FatSetFullNameInFcb"} FatSetFullNameInFcb(actual_IrpContext_34: int, actual_Fcb_8: int, actual_FinalName: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetFullNameInFcb"} FatSetFullNameInFcb(actual_IrpContext_34: int, actual_Fcb_8: int, actual_FinalName: int)
{
  var {:scalar} Tmp_585: int;
  var {:pointer} Prefix: int;
  var {:pointer} Tmp_587: int;
  var {:pointer} Tmp_588: int;
  var {:pointer} Tmp_590: int;
  var {:pointer} sdv_182: int;
  var {:pointer} Tmp_592: int;
  var {:scalar} Tmp_593: int;
  var {:scalar} Tmp_595: int;
  var {:pointer} Tmp_597: int;
  var {:pointer} sdv_183: int;
  var {:pointer} Tmp_598: int;
  var {:scalar} Tmp_599: int;
  var {:scalar} Tmp_600: int;
  var {:pointer} Tmp_603: int;
  var {:pointer} Tmp_604: int;
  var {:pointer} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:scalar} Tmp_608: int;
  var {:scalar} Tmp_609: int;
  var {:pointer} Fcb_8: int;
  var {:pointer} FinalName: int;
  var vslice_dummy_var_89: int;

  anon0:
    call {:si_unique_call 530} vslice_dummy_var_89 := __HAVOC_malloc(4);
    Fcb_8 := actual_Fcb_8;
    FinalName := actual_FinalName;
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    FinalName := ExactCaseLongName__FCB(Fcb_8);
    goto L4;

  L4:
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    havoc Tmp_607;
    assume {:nonnull} Tmp_607 != 0;
    assume Tmp_607 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    havoc Tmp_588;
    assume {:nonnull} Tmp_588 != 0;
    assume Tmp_588 > 0;
    Prefix := FullFileName__FCB(Tmp_588);
    assume {:nonnull} Prefix != 0;
    assume Prefix > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    assume {:nonnull} FinalName != 0;
    assume FinalName > 0;
    assume {:nonnull} Prefix != 0;
    assume Prefix > 0;
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    havoc Tmp_599;
    call {:si_unique_call 531} sdv_183 := ExAllocatePoolWithTag(17, Tmp_599, -294362810);
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    assume {:nonnull} Prefix != 0;
    assume Prefix > 0;
    havoc Tmp_585;
    assume {:nonnull} Prefix != 0;
    assume Prefix > 0;
    havoc Tmp_603;
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    havoc Tmp_590;
    call {:si_unique_call 532} sdv_RtlCopyMemory(0, 0, Tmp_585);
    assume {:nonnull} Prefix != 0;
    assume Prefix > 0;
    havoc Tmp_609;
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    havoc Tmp_598;
    assume {:nonnull} Tmp_598 != 0;
    assume Tmp_598 > 0;
    assume {:nonnull} FinalName != 0;
    assume FinalName > 0;
    havoc Tmp_593;
    assume {:nonnull} FinalName != 0;
    assume FinalName > 0;
    havoc Tmp_597;
    assume {:nonnull} Prefix != 0;
    assume Prefix > 0;
    havoc Tmp_600;
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    havoc Tmp_604;
    call {:si_unique_call 533} sdv_RtlCopyMemory(0, 0, Tmp_593);
    goto L1;

  L1:
    return;

  anon9_Then:
    goto L1;

  anon8_Then:
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    assume {:nonnull} FinalName != 0;
    assume FinalName > 0;
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    havoc Tmp_608;
    call {:si_unique_call 534} sdv_182 := ExAllocatePoolWithTag(17, Tmp_608, -294362810);
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    havoc Tmp_592;
    assume {:nonnull} Tmp_592 != 0;
    assume Tmp_592 > 0;
    assume {:nonnull} FinalName != 0;
    assume FinalName > 0;
    havoc Tmp_595;
    assume {:nonnull} FinalName != 0;
    assume FinalName > 0;
    havoc Tmp_587;
    assume {:nonnull} Fcb_8 != 0;
    assume Fcb_8 > 0;
    havoc Tmp_606;
    call {:si_unique_call 535} sdv_RtlCopyMemory(0, 0, Tmp_595);
    goto L1;

  anon7_Then:
    goto L4;
}



procedure {:origName "FatOpenExistingFile"} FatOpenExistingFile(actual_IrpContext_35: int, actual_FileObject_2: int, actual_Vcb_27: int, actual_ParentDcb_2: int, actual_Dirent_5: int, actual_LfnByteOffset: int, actual_DirentByteOffset: int, actual_Lfn_3: int, actual_DesiredAccess: int, actual_ShareAccess: int, actual_AllocationSize: int, actual_EaBuffer: int, actual_EaLength: int, actual_FileAttributes: int, actual_CreateDisposition: int, actual_IsPagingFile_1: int, actual_NoEaKnowledge: int, actual_DeleteOnClose: int, actual_FileNameOpenedDos: int) returns (SD12: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOpenExistingFile"} FatOpenExistingFile(actual_IrpContext_35: int, actual_FileObject_2: int, actual_Vcb_27: int, actual_ParentDcb_2: int, actual_Dirent_5: int, actual_LfnByteOffset: int, actual_DirentByteOffset: int, actual_Lfn_3: int, actual_DesiredAccess: int, actual_ShareAccess: int, actual_AllocationSize: int, actual_EaBuffer: int, actual_EaLength: int, actual_FileAttributes: int, actual_CreateDisposition: int, actual_IsPagingFile_1: int, actual_NoEaKnowledge: int, actual_DeleteOnClose: int, actual_FileNameOpenedDos: int) returns (SD12: int)
{
  var {:pointer} SD2: int;
  var {:pointer} Tmp_610: int;
  var {:scalar} Tmp_611: int;
  var {:scalar} AddedAccess: int;
  var {:scalar} Tmp_612: int;
  var {:pointer} UnwindFcb: int;
  var {:dopa} {:scalar} NeedEaCount: int;
  var {:pointer} Ccb_4: int;
  var {:scalar} Tmp_12: int;
  var {:pointer} Fcb_9: int;
  var {:pointer} Tmp_614: int;
  var {:pointer} Tmp_615: int;
  var {:scalar} Iosb_2: int;
  var {:pointer} UnwindCcb: int;
  var {:scalar} sdv_186: int;
  var {:scalar} System: int;
  var {:scalar} sdv_187: int;
  var {:scalar} Tmp_617: int;
  var {:scalar} Hidden: int;
  var {:pointer} Tmp_618: int;
  var {:pointer} Tmp_619: int;
  var {:pointer} IrpContext_35: int;
  var {:pointer} FileObject_2: int;
  var {:pointer} Vcb_27: int;
  var {:pointer} ParentDcb_2: int;
  var {:pointer} Dirent_5: int;
  var {:scalar} LfnByteOffset: int;
  var {:scalar} DirentByteOffset: int;
  var {:pointer} Lfn_3: int;
  var {:pointer} DesiredAccess: int;
  var {:scalar} ShareAccess: int;
  var {:scalar} AllocationSize: int;
  var {:pointer} EaBuffer: int;
  var {:scalar} EaLength: int;
  var {:scalar} FileAttributes: int;
  var {:scalar} CreateDisposition: int;
  var {:scalar} IsPagingFile_1: int;
  var {:scalar} NoEaKnowledge: int;
  var {:scalar} DeleteOnClose: int;
  var {:scalar} FileNameOpenedDos: int;
  var boogieTmp: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_1221: int;
  var vslice_dummy_var_1222: int;

  anon0:
    call {:si_unique_call 536} NeedEaCount := __HAVOC_malloc(4);
    call {:si_unique_call 537} Tmp_12 := __HAVOC_malloc(12);
    call {:si_unique_call 538} Iosb_2 := __HAVOC_malloc(12);
    call {:si_unique_call 539} vslice_dummy_var_90 := __HAVOC_malloc(12);
    IrpContext_35 := actual_IrpContext_35;
    FileObject_2 := actual_FileObject_2;
    Vcb_27 := actual_Vcb_27;
    ParentDcb_2 := actual_ParentDcb_2;
    Dirent_5 := actual_Dirent_5;
    LfnByteOffset := actual_LfnByteOffset;
    DirentByteOffset := actual_DirentByteOffset;
    Lfn_3 := actual_Lfn_3;
    DesiredAccess := actual_DesiredAccess;
    ShareAccess := actual_ShareAccess;
    AllocationSize := actual_AllocationSize;
    EaBuffer := actual_EaBuffer;
    EaLength := actual_EaLength;
    FileAttributes := actual_FileAttributes;
    CreateDisposition := actual_CreateDisposition;
    IsPagingFile_1 := actual_IsPagingFile_1;
    NoEaKnowledge := actual_NoEaKnowledge;
    DeleteOnClose := actual_DeleteOnClose;
    FileNameOpenedDos := actual_FileNameOpenedDos;
    Fcb_9 := 0;
    AddedAccess := 0;
    UnwindFcb := 0;
    UnwindCcb := 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} CreateDisposition == 2;
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    goto L16;

  L16:
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L43;

  L43:
    assume {:nonnull} FileObject_2 != 0;
    assume FileObject_2 > 0;
    havoc Ccb_4;
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} DeleteOnClose != 0;
    assume {:nonnull} Ccb_4 != 0;
    assume Ccb_4 > 0;
    goto L49;

  L49:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} FileNameOpenedDos != 0;
    assume {:nonnull} Ccb_4 != 0;
    assume Ccb_4 > 0;
    goto L45;

  L45:
    call {:si_unique_call 540} sdv_186 := sdv_AbnormalTermination();
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} sdv_186 != 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} UnwindFcb != 0;
    call {:si_unique_call 541} FatDeleteFcb_Real(IrpContext_35, UnwindFcb);
    goto L55;

  L55:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} UnwindCcb != 0;
    call {:si_unique_call 542} FatDeleteCcb_Real(IrpContext_35, UnwindCcb);
    goto L53;

  L53:
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    assume {:nonnull} Tmp_12 != 0;
    assume Tmp_12 > 0;
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    assume {:nonnull} Tmp_12 != 0;
    assume Tmp_12 > 0;
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    assume {:nonnull} Tmp_12 != 0;
    assume Tmp_12 > 0;
    SD12 := Tmp_12;
    return;

  anon88_Then:
    assume {:partition} UnwindCcb == 0;
    goto L53;

  anon87_Then:
    assume {:partition} UnwindFcb == 0;
    goto L55;

  anon86_Then:
    assume {:partition} sdv_186 == 0;
    goto L53;

  anon85_Then:
    assume {:partition} FileNameOpenedDos == 0;
    goto L45;

  anon84_Then:
    assume {:partition} DeleteOnClose == 0;
    goto L49;

  anon116_Then:
    goto L45;

  anon82_Then:
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    goto L43;

  anon83_Then:
    assume {:nonnull} DesiredAccess != 0;
    assume DesiredAccess > 0;
    Tmp_617 := ShareAccess;
    assume {:nonnull} DesiredAccess != 0;
    assume DesiredAccess > 0;
    havoc vslice_dummy_var_1221;
    call {:si_unique_call 543} IoSetShareAccess(vslice_dummy_var_1221, Tmp_617, 0, 0);
    assume {:nonnull} Fcb_9 != 0;
    assume Fcb_9 > 0;
    assume {:nonnull} Fcb_9 != 0;
    assume Fcb_9 > 0;
    assume {:nonnull} FileObject_2 != 0;
    assume FileObject_2 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Fcb_9 != 0;
    assume Fcb_9 > 0;
    goto L39;

  L39:
    assume {:nonnull} Vcb_27 != 0;
    assume Vcb_27 > 0;
    assume {:nonnull} FileObject_2 != 0;
    assume FileObject_2 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    goto L43;

  anon115_Then:
    assume {:nonnull} Vcb_27 != 0;
    assume Vcb_27 > 0;
    goto L43;

  anon114_Then:
    goto L39;

  anon113_Then:
    assume {:partition} CreateDisposition != 2;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} CreateDisposition != 0;
    goto L63;

  L63:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} CreateDisposition == 4;
    goto L65;

  L65:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} IsPagingFile_1 != 0;
    goto L67;

  L67:
    assume {:nonnull} Dirent_5 != 0;
    assume Dirent_5 > 0;
    havoc vslice_dummy_var_1222;
    call {:si_unique_call 544} sdv_187 := FatCheckFileAccess(IrpContext_35, vslice_dummy_var_1222, DesiredAccess);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} sdv_187 != 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} DeleteOnClose != 0;
    assume {:nonnull} Dirent_5 != 0;
    assume Dirent_5 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    goto L16;

  anon96_Then:
    goto L73;

  L73:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} CreateDisposition == 0;
    goto L128;

  L128:
    assume {:nonnull} Dirent_5 != 0;
    assume Dirent_5 > 0;
    havoc Tmp_612;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Tmp_612 == 0;
    Hidden := 0;
    goto L218;

  L218:
    assume {:nonnull} Dirent_5 != 0;
    assume Dirent_5 > 0;
    havoc Tmp_611;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} Tmp_611 == 0;
    System := 0;
    goto L222;

  L222:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} Hidden != 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} BAND(FileAttributes, 2) == 0;
    goto L135;

  L135:
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} IsPagingFile_1 != 0;
    goto L137;

  L137:
    assume {:nonnull} Vcb_27 != 0;
    assume Vcb_27 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Vcb_27 != 0;
    assume Vcb_27 > 0;
    call {:si_unique_call 545} IoSetHardErrorOrVerifyDevice(0, 0);
    assume {:nonnull} Vcb_27 != 0;
    assume Vcb_27 > 0;
    havoc Tmp_619;
    assume {:nonnull} Tmp_619 != 0;
    assume Tmp_619 > 0;
    havoc Tmp_615;
    assume {:nonnull} Vcb_27 != 0;
    assume Vcb_27 > 0;
    havoc Tmp_618;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    havoc Tmp_614;
    assume {:nonnull} Tmp_614 != 0;
    assume Tmp_614 > 0;
    assume {:nonnull} Tmp_615 != 0;
    assume Tmp_615 > 0;
    assume {:nonnull} IrpContext_35 != 0;
    assume IrpContext_35 > 0;
    call {:si_unique_call 546} ExRaiseStatus(-1073741662);
    goto L80;

  L80:
    call {:si_unique_call 547} UnwindFcb := FatCreateFcb(IrpContext_35, Vcb_27, ParentDcb_2, LfnByteOffset, DirentByteOffset, Dirent_5, Lfn_3, IsPagingFile_1, 0);
    Fcb_9 := UnwindFcb;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} IsPagingFile_1 != 0;
    call {:si_unique_call 548} FatLookupFileAllocationSize#1(IrpContext_35, Fcb_9);
    goto L86;

  L86:
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} CreateDisposition != 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} CreateDisposition != 1;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} CreateDisposition != 3;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} CreateDisposition != 4;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} CreateDisposition == 5;
    goto L93;

  L93:
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    call {:si_unique_call 549} boogieTmp := FatCheckSystemSecurityAccess(IrpContext_35);
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    call {:si_unique_call 550} SD2 := FatSupersedeOrOverwriteFile(IrpContext_35, FileObject_2, Fcb_9, AllocationSize, EaBuffer, EaLength, FileAttributes, CreateDisposition, NoEaKnowledge);
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    goto L16;

  anon103_Then:
    goto L16;

  anon109_Then:
    assume {:partition} CreateDisposition != 5;
    call {:si_unique_call 551} KeBugCheckEx(35, 397111, CreateDisposition, 0, 0);
    goto L16;

  anon110_Then:
    assume {:partition} CreateDisposition == 4;
    goto L93;

  anon111_Then:
    assume {:partition} CreateDisposition == 3;
    goto L96;

  L96:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} NoEaKnowledge != 0;
    assume {:nonnull} Vcb_27 != 0;
    assume Vcb_27 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    call {:si_unique_call 552} FatGetNeedEaCount(IrpContext_35, Vcb_27, Dirent_5, NeedEaCount);
    assume {:nonnull} NeedEaCount != 0;
    assume NeedEaCount > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} IrpContext_35 != 0;
    assume IrpContext_35 > 0;
    call {:si_unique_call 553} ExRaiseStatus(-1073741790);
    goto L97;

  L97:
    call {:si_unique_call 554} UnwindCcb := FatCreateCcb(IrpContext_35);
    call {:si_unique_call 555} FatSetFileObject(FileObject_2, 2, Fcb_9, UnwindCcb);
    assume {:nonnull} Fcb_9 != 0;
    assume Fcb_9 > 0;
    havoc Tmp_610;
    assume {:nonnull} FileObject_2 != 0;
    assume FileObject_2 > 0;
    assume {:nonnull} Tmp_610 != 0;
    assume Tmp_610 > 0;
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    goto L16;

  anon102_Then:
    goto L97;

  anon101_Then:
    goto L97;

  anon100_Then:
    assume {:partition} NoEaKnowledge == 0;
    goto L97;

  anon112_Then:
    assume {:partition} CreateDisposition == 1;
    goto L96;

  anon99_Then:
    assume {:partition} CreateDisposition == 0;
    goto L93;

  anon120_Then:
    assume {:partition} IsPagingFile_1 == 0;
    goto L86;

  anon107_Then:
    goto L80;

  anon106_Then:
    assume {:partition} IsPagingFile_1 == 0;
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    goto L16;

  anon105_Then:
    assume {:partition} BAND(FileAttributes, 2) != 0;
    goto L133;

  L133:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} System != 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} BAND(FileAttributes, 4) != 0;
    goto L137;

  anon108_Then:
    assume {:partition} BAND(FileAttributes, 4) == 0;
    goto L135;

  anon104_Then:
    assume {:partition} System == 0;
    goto L137;

  anon119_Then:
    assume {:partition} Hidden == 0;
    goto L133;

  anon118_Then:
    assume {:partition} Tmp_611 != 0;
    System := 1;
    goto L222;

  anon117_Then:
    assume {:partition} Tmp_612 != 0;
    Hidden := 1;
    goto L218;

  anon95_Then:
    assume {:partition} CreateDisposition != 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} CreateDisposition == 4;
    goto L128;

  anon97_Then:
    assume {:partition} CreateDisposition != 4;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} CreateDisposition == 5;
    goto L128;

  anon98_Then:
    assume {:partition} CreateDisposition != 5;
    goto L80;

  anon94_Then:
    assume {:partition} DeleteOnClose == 0;
    goto L73;

  anon93_Then:
    assume {:partition} sdv_187 == 0;
    assume {:nonnull} Iosb_2 != 0;
    assume Iosb_2 > 0;
    goto L16;

  anon92_Then:
    assume {:partition} IsPagingFile_1 == 0;
    assume {:nonnull} DesiredAccess != 0;
    assume DesiredAccess > 0;
    havoc AddedAccess;
    assume {:nonnull} DesiredAccess != 0;
    assume DesiredAccess > 0;
    goto L67;

  anon90_Then:
    assume {:partition} CreateDisposition != 4;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} CreateDisposition != 5;
    goto L67;

  anon91_Then:
    assume {:partition} CreateDisposition == 5;
    goto L65;

  anon81_Then:
    assume {:partition} CreateDisposition == 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} IsPagingFile_1 == 0;
    assume {:nonnull} DesiredAccess != 0;
    assume DesiredAccess > 0;
    havoc AddedAccess;
    assume {:nonnull} DesiredAccess != 0;
    assume DesiredAccess > 0;
    goto L67;

  anon89_Then:
    assume {:partition} IsPagingFile_1 != 0;
    goto L63;
}



procedure {:origName "FatFsdCreate"} FatFsdCreate(actual_VolumeDeviceObject: int, actual_Irp_1: int) returns (Tmp_620: int);
  modifies alloc, yogi_error, Mem_T.P_PACKED_DIRENT, queued, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdCreate"} FatFsdCreate(actual_VolumeDeviceObject: int, actual_Irp_1: int) returns (Tmp_620: int)
{
  var {:scalar} TopLevel: int;
  var {:scalar} Status_3: int;
  var {:pointer} IrpContext_36: int;
  var {:pointer} VolumeDeviceObject_1: int;
  var {:pointer} VolumeDeviceObject: int;
  var {:pointer} Irp_1: int;

  anon0:
    VolumeDeviceObject := actual_VolumeDeviceObject;
    Irp_1 := actual_Irp_1;
    IrpContext_36 := 0;
    VolumeDeviceObject_1 := VolumeDeviceObject;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L11;

  L11:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 556} sdv_IoCompleteRequest(0, 1);
    Tmp_620 := 0;
    goto L1;

  L1:
    call {:si_unique_call 557} SLIC_FatFsdCreate_exit(strConst__li2bpl2, Tmp_620);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 558} KeEnterCriticalRegion();
    call {:si_unique_call 559} TopLevel := FatIsIrpTopLevel(Irp_1);
    call {:si_unique_call 560} IrpContext_36 := FatCreateIrpContext(Irp_1, 1);
    call {:si_unique_call 561} Status_3 := FatCommonCreate(IrpContext_36, Irp_1);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} TopLevel != 0;
    goto L42;

  L42:
    call {:si_unique_call 562} KeLeaveCriticalRegion();
    Tmp_620 := Status_3;
    goto L1;

  anon10_Then:
    assume {:partition} TopLevel == 0;
    goto L42;

  anon9_Then:
    goto L11;
}



procedure {:origName "FatSupersedeOrOverwriteFile"} FatSupersedeOrOverwriteFile(actual_IrpContext_37: int, actual_FileObject_3: int, actual_Fcb_10: int, actual_AllocationSize_1: int, actual_EaBuffer_1: int, actual_EaLength_1: int, actual_FileAttributes_1: int, actual_CreateDisposition_1: int, actual_NoEaKnowledge_1: int) returns (SD11: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSupersedeOrOverwriteFile"} FatSupersedeOrOverwriteFile(actual_IrpContext_37: int, actual_FileObject_3: int, actual_Fcb_10: int, actual_AllocationSize_1: int, actual_EaBuffer_1: int, actual_EaLength_1: int, actual_FileAttributes_1: int, actual_CreateDisposition_1: int, actual_NoEaKnowledge_1: int) returns (SD11: int)
{
  var {:scalar} UnwindEa: int;
  var {:pointer} Tmp_622: int;
  var {:pointer} Ccb_5: int;
  var {:scalar} sdv_198: int;
  var {:pointer} Tmp_623: int;
  var {:pointer} Dirent_6: int;
  var {:scalar} Iosb_4: int;
  var {:pointer} DirentBcb: int;
  var {:pointer} UnwindCcb_1: int;
  var {:pointer} Tmp_625: int;
  var {:pointer} Tmp_626: int;
  var {:pointer} Tmp_627: int;
  var {:scalar} Tmp_628: int;
  var {:dopa} {:scalar} EaHandle: int;
  var {:scalar} NotifyFilter: int;
  var {:scalar} sdv_204: int;
  var {:scalar} ReleasePaging: int;
  var {:scalar} EaChange: int;
  var {:pointer} Tmp_632: int;
  var {:scalar} Tmp_11: int;
  var {:pointer} IrpContext_37: int;
  var {:pointer} FileObject_3: int;
  var {:pointer} Fcb_10: int;
  var {:scalar} AllocationSize_1: int;
  var {:pointer} EaBuffer_1: int;
  var {:scalar} EaLength_1: int;
  var {:scalar} FileAttributes_1: int;
  var {:scalar} CreateDisposition_1: int;
  var {:scalar} NoEaKnowledge_1: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_1223: int;
  var vslice_dummy_var_1224: int;
  var vslice_dummy_var_1225: int;
  var vslice_dummy_var_1226: int;
  var vslice_dummy_var_1227: int;
  var vslice_dummy_var_1228: int;

  anon0:
    call {:si_unique_call 563} Dirent_6 := __HAVOC_malloc(4);
    call {:si_unique_call 564} Iosb_4 := __HAVOC_malloc(12);
    call {:si_unique_call 565} DirentBcb := __HAVOC_malloc(4);
    call {:si_unique_call 566} EaHandle := __HAVOC_malloc(4);
    call {:si_unique_call 567} Tmp_11 := __HAVOC_malloc(12);
    IrpContext_37 := actual_IrpContext_37;
    FileObject_3 := actual_FileObject_3;
    Fcb_10 := actual_Fcb_10;
    AllocationSize_1 := actual_AllocationSize_1;
    EaBuffer_1 := actual_EaBuffer_1;
    EaLength_1 := actual_EaLength_1;
    FileAttributes_1 := actual_FileAttributes_1;
    CreateDisposition_1 := actual_CreateDisposition_1;
    NoEaKnowledge_1 := actual_NoEaKnowledge_1;
    assume {:nonnull} EaHandle != 0;
    assume EaHandle > 0;
    EaChange := 0;
    ReleasePaging := 0;
    UnwindCcb_1 := 0;
    UnwindEa := 0;
    assume {:nonnull} DirentBcb != 0;
    assume DirentBcb > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} NoEaKnowledge_1 != 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} EaLength_1 > 0;
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    assume {:nonnull} Tmp_11 != 0;
    assume Tmp_11 > 0;
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    assume {:nonnull} Tmp_11 != 0;
    assume Tmp_11 > 0;
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    assume {:nonnull} Tmp_11 != 0;
    assume Tmp_11 > 0;
    goto L1;

  L1:
    SD11 := Tmp_11;
    return;

  anon33_Then:
    assume {:partition} 0 >= EaLength_1;
    goto L20;

  L20:
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    call {:si_unique_call 568} sdv_198 := corral_nondet();
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_198 != 0;
    call {:si_unique_call 569} UnwindCcb_1 := FatCreateCcb(IrpContext_37);
    Ccb_5 := UnwindCcb_1;
    call {:si_unique_call 570} FatSetFileObject(FileObject_3, 2, Fcb_10, Ccb_5);
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    havoc Tmp_622;
    assume {:nonnull} FileObject_3 != 0;
    assume FileObject_3 > 0;
    assume {:nonnull} Tmp_622 != 0;
    assume Tmp_622 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    havoc Tmp_625;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    havoc Tmp_626;
    assume {:nonnull} Tmp_625 != 0;
    assume Tmp_625 > 0;
    assume {:nonnull} Tmp_626 != 0;
    assume Tmp_626 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    call {:si_unique_call 571} vslice_dummy_var_93 := corral_nondet();
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} EaLength_1 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    havoc vslice_dummy_var_1223;
    call {:si_unique_call 572} FatCreateEa(IrpContext_37, vslice_dummy_var_1223, EaBuffer_1, EaLength_1, Oem_unnamed_tag_70(Name__FILE_NAME_NODE(ShortName__FCB(Fcb_10))), EaHandle);
    assume {:nonnull} EaHandle != 0;
    assume EaHandle > 0;
    havoc UnwindEa;
    EaChange := 1;
    goto L64;

  L64:
    call {:si_unique_call 573} vslice_dummy_var_91 := ExAcquireResourceExclusiveLite(0, 1);
    ReleasePaging := 1;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    call {:si_unique_call 574} FatTruncateFileAllocation(IrpContext_37, Fcb_10, AllocationSize_1);
    call {:si_unique_call 575} ExReleaseResourceLite(0);
    ReleasePaging := 0;
    call {:si_unique_call 576} FatAddFileAllocation(IrpContext_37, Fcb_10, FileObject_3, AllocationSize_1);
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    call {:si_unique_call 577} FatGetDirentFromFcbOrDcb(IrpContext_37, Fcb_10, Dirent_6, DirentBcb);
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    FileAttributes_1 := BOR(FileAttributes_1, 32);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} CreateDisposition_1 != 0;
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    goto L98;

  L98:
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    call {:si_unique_call 578} vslice_dummy_var_92 := FatNtTimeToFatTime(IrpContext_37, LastWriteTime__FCB(Fcb_10), 1, LastWriteTime__PACKED_DIRENT(Mem_T.P_PACKED_DIRENT[Dirent_6]), 0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    goto L106;

  L106:
    NotifyFilter := 28;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    havoc Tmp_623;
    assume {:nonnull} Tmp_623 != 0;
    assume Tmp_623 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L110;

  L110:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} EaChange != 0;
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} EaHandle != 0;
    assume EaHandle > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    NotifyFilter := BOR(NotifyFilter, 128);
    goto L111;

  L111:
    assume {:nonnull} DirentBcb != 0;
    assume DirentBcb > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    havoc vslice_dummy_var_1224;
    havoc vslice_dummy_var_1225;
    call {:si_unique_call 579} FatSetDirtyBcb#1(IrpContext_37, vslice_dummy_var_1224, vslice_dummy_var_1225, 1);
    UnwindEa := 0;
    assume {:nonnull} Ccb_5 != 0;
    assume Ccb_5 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L122;

  L122:
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    havoc Tmp_628;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    call {:si_unique_call 580} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_628, 0, 0, NotifyFilter, 3, 0);
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} CreateDisposition_1 != 0;
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    goto L130;

  L130:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} ReleasePaging != 0;
    call {:si_unique_call 581} ExReleaseResourceLite(0);
    goto L131;

  L131:
    call {:si_unique_call 582} sdv_204 := sdv_AbnormalTermination();
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} sdv_204 != 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} UnwindEa != 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    havoc vslice_dummy_var_1226;
    call {:si_unique_call 583} FatDeleteEa#1(IrpContext_37, vslice_dummy_var_1226, UnwindEa, Oem_unnamed_tag_70(Name__FILE_NAME_NODE(ShortName__FCB(Fcb_10))));
    goto L140;

  L140:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} UnwindCcb_1 != 0;
    call {:si_unique_call 584} FatDeleteCcb_Real(IrpContext_37, UnwindCcb_1);
    goto L138;

  L138:
    assume {:nonnull} DirentBcb != 0;
    assume DirentBcb > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} DirentBcb != 0;
    assume DirentBcb > 0;
    goto L147;

  L147:
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    havoc Tmp_632;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    havoc Tmp_627;
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    assume {:nonnull} Tmp_632 != 0;
    assume Tmp_632 > 0;
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    assume {:nonnull} Tmp_11 != 0;
    assume Tmp_11 > 0;
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    assume {:nonnull} Tmp_11 != 0;
    assume Tmp_11 > 0;
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    assume {:nonnull} Tmp_11 != 0;
    assume Tmp_11 > 0;
    goto L1;

  anon41_Then:
    goto L147;

  anon43_Then:
    assume {:partition} UnwindCcb_1 == 0;
    goto L138;

  anon42_Then:
    assume {:partition} UnwindEa == 0;
    goto L140;

  anon40_Then:
    assume {:partition} sdv_204 == 0;
    goto L138;

  anon39_Then:
    assume {:partition} ReleasePaging == 0;
    goto L131;

  anon48_Then:
    assume {:partition} CreateDisposition_1 == 0;
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    goto L130;

  anon47_Then:
    call {:si_unique_call 585} FatSetFullFileNameInFcb#1(IrpContext_37, Fcb_10);
    goto L122;

  anon38_Then:
    assume {:partition} EaChange == 0;
    goto L111;

  anon46_Then:
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    EaChange := 1;
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} Fcb_10 != 0;
    assume Fcb_10 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    havoc vslice_dummy_var_1227;
    havoc vslice_dummy_var_1228;
    call {:si_unique_call 586} FatDeleteEa#1(IrpContext_37, vslice_dummy_var_1227, vslice_dummy_var_1228, Oem_unnamed_tag_70(Name__FILE_NAME_NODE(ShortName__FCB(Fcb_10))));
    goto L110;

  anon37_Then:
    goto L110;

  anon36_Then:
    goto L106;

  anon45_Then:
    assume {:partition} CreateDisposition_1 == 0;
    assume {:nonnull} Dirent_6 != 0;
    assume Dirent_6 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_6] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_6] > 0;
    goto L98;

  anon35_Then:
    assume {:partition} 0 >= EaLength_1;
    goto L64;

  anon34_Then:
    assume {:partition} sdv_198 == 0;
    assume {:nonnull} Iosb_4 != 0;
    assume Iosb_4 > 0;
    goto L130;

  anon44_Then:
    assume {:partition} NoEaKnowledge_1 == 0;
    goto L20;
}



procedure {:origName "FatCheckSystemSecurityAccess"} FatCheckSystemSecurityAccess(actual_IrpContext_38: int) returns (Tmp_634: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_634 == -1073741790 || Tmp_634 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCheckSystemSecurityAccess"} FatCheckSystemSecurityAccess(actual_IrpContext_38: int) returns (Tmp_634: int)
{
  var {:pointer} IrpSp_2: int;
  var {:scalar} sdv_206: int;
  var {:pointer} AccessState: int;
  var {:pointer} Tmp_636: int;
  var {:pointer} IrpContext_38: int;
  var vslice_dummy_var_1229: int;

  anon0:
    IrpContext_38 := actual_IrpContext_38;
    assume {:nonnull} IrpContext_38 != 0;
    assume IrpContext_38 > 0;
    havoc vslice_dummy_var_1229;
    call {:si_unique_call 587} IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1229);
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    havoc Tmp_636;
    assume {:nonnull} Tmp_636 != 0;
    assume Tmp_636 > 0;
    havoc AccessState;
    assume {:nonnull} AccessState != 0;
    assume AccessState > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    call {:si_unique_call 588} sdv_206 := SeSinglePrivilegeCheck(FatSecurityPrivilege, 1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} sdv_206 != 0;
    assume {:nonnull} AccessState != 0;
    assume AccessState > 0;
    assume {:nonnull} AccessState != 0;
    assume AccessState > 0;
    goto L11;

  L11:
    Tmp_634 := 0;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} sdv_206 == 0;
    Tmp_634 := -1073741790;
    goto L1;

  anon6_Then:
    goto L11;
}



procedure {:origName "FatCommonCreate"} FatCommonCreate(actual_IrpContext_39: int, actual_Irp_2: int) returns (Tmp_637: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, queued, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonCreate"} FatCommonCreate(actual_IrpContext_39: int, actual_Irp_2: int) returns (Tmp_637: int)
{
  var {:pointer} SD1: int;
  var {:scalar} sdv_209: int;
  var {:scalar} Tmp_638: int;
  var {:scalar} FirstLoop: int;
  var {:scalar} LfnByteOffset_1: int;
  var {:scalar} Options: int;
  var {:scalar} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:scalar} sdv_213: int;
  var {:pointer} Ccb_6: int;
  var {:scalar} Tmp_642: int;
  var {:scalar} sdv_214: int;
  var {:pointer} Tmp_643: int;
  var {:pointer} RelatedVcb: int;
  var {:scalar} Tmp_644: int;
  var {:scalar} OemFinalName: int;
  var {:pointer} Tmp_645: int;
  var {:pointer} Tmp_646: int;
  var {:scalar} sdv_219: int;
  var {:scalar} Lfn_4: int;
  var {:pointer} Stats: int;
  var {:pointer} Stats_1: int;
  var {:pointer} Tmp_647: int;
  var {:pointer} Dirent_7: int;
  var {:scalar} Status_4: int;
  var {:scalar} Tmp_648: int;
  var {:pointer} Tmp_649: int;
  var {:scalar} Iosb_1: int;
  var {:scalar} DirectoryFile: int;
  var {:pointer} Tmp_650: int;
  var {:scalar} sdv_220: int;
  var {:pointer} Stats_2: int;
  var {:scalar} TypeOfOpen: int;
  var {:scalar} Tmp_651: int;
  var {:pointer} Tmp_652: int;
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} IrpSp_3: int;
  var {:scalar} IsPagingFile_2: int;
  var {:scalar} sdv_222: int;
  var {:scalar} FileAttributes_2: int;
  var {:pointer} EaBuffer_2: int;
  var {:scalar} Tmp_655: int;
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:scalar} Tmp_659: int;
  var {:pointer} Tmp_660: int;
  var {:scalar} Tmp_661: int;
  var {:pointer} Tmp_662: int;
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Vcb_28: int;
  var {:pointer} Stats_3: int;
  var {:scalar} RemainingPart: int;
  var {:pointer} Tmp_666: int;
  var {:pointer} Tmp_667: int;
  var {:scalar} sdv_230: int;
  var {:scalar} Tmp_668: int;
  var {:pointer} Tmp_669: int;
  var {:scalar} TrailingBackslash: int;
  var {:scalar} Tmp_670: int;
  var {:dopa} {:scalar} DirentByteOffset_1: int;
  var {:scalar} sdv_233: int;
  var {:scalar} SavedFlags: int;
  var {:scalar} ShareAccess_1: int;
  var {:scalar} Tmp_671: int;
  var {:scalar} AllocationSize_2: int;
  var {:pointer} Tmp_672: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} DesiredAccess_1: int;
  var {:scalar} Tmp_674: int;
  var {:scalar} Tmp_675: int;
  var {:scalar} DeleteOnClose_1: int;
  var {:scalar} CreateDisposition_2: int;
  var {:pointer} LfnBuffer: int;
  var {:scalar} OpenDirectory: int;
  var {:pointer} Tmp_676: int;
  var {:pointer} Tmp_677: int;
  var {:pointer} ParentDcb_3: int;
  var {:pointer} UpcasedBuffer: int;
  var {:scalar} UpcasedFinalName: int;
  var {:scalar} Tmp_678: int;
  var {:pointer} Tmp_679: int;
  var {:pointer} LocalFcb: int;
  var {:scalar} sdv_239: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} NextFcb_1: int;
  var {:pointer} Tmp_681: int;
  var {:pointer} Tmp_682: int;
  var {:scalar} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:pointer} Stats_4: int;
  var {:dopa} {:scalar} FileNameOpenedDos_1: int;
  var {:scalar} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} LocalFcb_1: int;
  var {:pointer} Fcb_11: int;
  var {:scalar} Tmp_687: int;
  var {:pointer} Tmp_688: int;
  var {:scalar} Tmp_689: int;
  var {:pointer} Tmp_690: int;
  var {:pointer} FinalDcb: int;
  var {:pointer} Tmp_691: int;
  var {:scalar} NonDirectoryFile: int;
  var {:scalar} sdv_244: int;
  var {:pointer} Tmp_692: int;
  var {:pointer} Tmp_693: int;
  var {:scalar} FileName: int;
  var {:scalar} CreateDirectory: int;
  var {:scalar} Tmp_694: int;
  var {:scalar} OpenTargetDirectory: int;
  var {:pointer} RelatedFileObject: int;
  var {:pointer} FileObject_4: int;
  var {:pointer} Tmp_696: int;
  var {:scalar} NextRemainingPart: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:scalar} TemporaryFile: int;
  var {:pointer} RelatedDcb: int;
  var {:scalar} Tmp_699: int;
  var {:pointer} DirentBcb_1: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} LocalVcb: int;
  var {:pointer} ReserveMdl: int;
  var {:pointer} LocalCcb2: int;
  var {:pointer} Tmp_701: int;
  var {:pointer} DecodeVcb: int;
  var {:scalar} sdv_250: int;
  var {:scalar} Tmp_702: int;
  var {:scalar} NoEaKnowledge_2: int;
  var {:scalar} sdv_253: int;
  var {:scalar} PostIrp: int;
  var {:pointer} Tmp_703: int;
  var {:scalar} sdv_255: int;
  var {:pointer} Tmp_704: int;
  var {:scalar} NoIntermediateBuffering: int;
  var {:pointer} OemBuffer: int;
  var {:scalar} sdv_258: int;
  var {:scalar} sdv_259: int;
  var {:pointer} Tmp_707: int;
  var {:scalar} Tmp_708: int;
  var {:scalar} LocalCcb: int;
  var {:pointer} Tmp_709: int;
  var {:dopa} {:scalar} OplockPostIrp: int;
  var {:pointer} RelatedCcb: int;
  var {:pointer} Tmp_710: int;
  var {:pointer} Tmp_711: int;
  var {:pointer} Stats_5: int;
  var {:scalar} sdv_261: int;
  var {:scalar} FinalName_1: int;
  var {:pointer} Tmp_712: int;
  var {:pointer} Tmp_714: int;
  var {:scalar} Tmp_715: int;
  var {:scalar} EaLength_2: int;
  var {:scalar} Tmp_716: int;
  var {:pointer} Tmp_717: int;
  var {:scalar} sdv_266: int;
  var {:pointer} Tmp_718: int;
  var {:pointer} Tmp_719: int;
  var {:pointer} IrpContext_39: int;
  var {:pointer} Irp_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_1230: int;
  var vslice_dummy_var_1231: int;
  var vslice_dummy_var_1232: int;
  var vslice_dummy_var_1233: int;
  var vslice_dummy_var_1234: int;
  var vslice_dummy_var_1235: int;
  var vslice_dummy_var_1236: int;
  var vslice_dummy_var_1237: int;
  var vslice_dummy_var_1238: int;
  var vslice_dummy_var_1239: int;
  var vslice_dummy_var_1240: int;
  var vslice_dummy_var_1241: int;
  var vslice_dummy_var_1242: int;
  var vslice_dummy_var_1243: int;
  var vslice_dummy_var_1244: int;
  var vslice_dummy_var_1245: int;
  var vslice_dummy_var_1246: int;
  var vslice_dummy_var_1247: int;
  var vslice_dummy_var_1248: int;
  var vslice_dummy_var_1249: int;
  var vslice_dummy_var_1250: int;
  var vslice_dummy_var_1251: int;

  anon0:
    call {:si_unique_call 589} vslice_dummy_var_94 := __HAVOC_malloc(12);
    call {:si_unique_call 590} Ccb_6 := __HAVOC_malloc(4);
    call {:si_unique_call 591} RelatedVcb := __HAVOC_malloc(4);
    call {:si_unique_call 592} vslice_dummy_var_95 := __HAVOC_malloc(12);
    call {:si_unique_call 593} OemFinalName := __HAVOC_malloc(12);
    call {:si_unique_call 594} Lfn_4 := __HAVOC_malloc(12);
    call {:si_unique_call 595} Dirent_7 := __HAVOC_malloc(4);
    call {:si_unique_call 596} Iosb_1 := __HAVOC_malloc(12);
    call {:si_unique_call 597} Tmp_655 := __HAVOC_malloc(12);
    call {:si_unique_call 598} RemainingPart := __HAVOC_malloc(12);
    call {:si_unique_call 599} vslice_dummy_var_96 := __HAVOC_malloc(12);
    call {:si_unique_call 600} vslice_dummy_var_97 := __HAVOC_malloc(12);
    call {:si_unique_call 601} DirentByteOffset_1 := __HAVOC_malloc(4);
    call {:si_unique_call 602} vslice_dummy_var_98 := __HAVOC_malloc(12);
    call {:si_unique_call 603} UpcasedFinalName := __HAVOC_malloc(12);
    call {:si_unique_call 604} FileNameOpenedDos_1 := __HAVOC_malloc(4);
    call {:si_unique_call 605} LocalFcb_1 := __HAVOC_malloc(4);
    call {:si_unique_call 606} Fcb_11 := __HAVOC_malloc(4);
    call {:si_unique_call 607} FileName := __HAVOC_malloc(12);
    call {:si_unique_call 608} NextRemainingPart := __HAVOC_malloc(12);
    call {:si_unique_call 609} RelatedDcb := __HAVOC_malloc(4);
    call {:si_unique_call 610} DirentBcb_1 := __HAVOC_malloc(4);
    call {:si_unique_call 611} LocalVcb := __HAVOC_malloc(4);
    call {:si_unique_call 612} LocalCcb2 := __HAVOC_malloc(4);
    call {:si_unique_call 613} vslice_dummy_var_99 := __HAVOC_malloc(12);
    call {:si_unique_call 614} DecodeVcb := __HAVOC_malloc(4);
    call {:si_unique_call 615} vslice_dummy_var_100 := __HAVOC_malloc(12);
    call {:si_unique_call 616} vslice_dummy_var_101 := __HAVOC_malloc(12);
    call {:si_unique_call 617} LocalCcb := __HAVOC_malloc(88);
    call {:si_unique_call 618} OplockPostIrp := __HAVOC_malloc(4);
    call {:si_unique_call 619} RelatedCcb := __HAVOC_malloc(4);
    call {:si_unique_call 620} vslice_dummy_var_102 := __HAVOC_malloc(12);
    call {:si_unique_call 621} FinalName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 622} vslice_dummy_var_103 := __HAVOC_malloc(12);
    IrpContext_39 := actual_IrpContext_39;
    Irp_2 := actual_Irp_2;
    call {:si_unique_call 623} LfnBuffer := __HAVOC_malloc(128);
    call {:si_unique_call 624} UpcasedBuffer := __HAVOC_malloc(128);
    call {:si_unique_call 625} OemBuffer := __HAVOC_malloc(256);
    assume {:nonnull} FileNameOpenedDos_1 != 0;
    assume FileNameOpenedDos_1 > 0;
    FinalDcb := 0;
    assume {:nonnull} DirentBcb_1 != 0;
    assume DirentBcb_1 > 0;
    PostIrp := 0;
    assume {:nonnull} OplockPostIrp != 0;
    assume OplockPostIrp > 0;
    FirstLoop := 1;
    call {:si_unique_call 626} IrpSp_3 := sdv_IoGetCurrentIrpStackLocation(Irp_2);
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_688;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_660;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_714;
    assume {:nonnull} Tmp_714 != 0;
    assume Tmp_714 > 0;
    havoc Tmp_701;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_698;
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_696;
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_700;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    havoc Tmp_661;
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_657;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    havoc Tmp_719;
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_718;
    assume {:nonnull} Tmp_718 != 0;
    assume Tmp_718 > 0;
    havoc Tmp_693;
    call {:si_unique_call 627} sdv_RtlMoveMemory(0, 0, Tmp_661);
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_711;
    assume {:nonnull} Tmp_711 != 0;
    assume Tmp_711 > 0;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_712;
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    havoc Tmp_690;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_662;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    havoc Tmp_656;
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    call {:si_unique_call 628} FatCompleteRequest_Real(IrpContext_39, Irp_2, -1073741773);
    Tmp_637 := -1073741773;
    goto L1;

  L1:
    return;

  anon433_Then:
    goto L65;

  L65:
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc FileObject_4;
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    havoc RelatedFileObject;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc AllocationSize_2;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc EaBuffer_2;
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_679;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    DesiredAccess_1 := DesiredAccess__IO_SECURITY_CONTEXT(Tmp_679);
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Options;
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc FileAttributes_2;
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc ShareAccess_1;
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc EaLength_2;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} RelatedFileObject != 0;
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    assume {:nonnull} RelatedFileObject != 0;
    assume RelatedFileObject > 0;
    goto L92;

  L92:
    FileAttributes_2 := BAND(FileAttributes_2, BOR(BOR(BOR(1, 2), 4), 32));
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_680;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    Vcb_28 := Vcb__VOLUME_DEVICE_OBJECT(Tmp_680);
    Tmp_648 := BAND(Options, 8192);
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} Tmp_648 != 0;
    call {:si_unique_call 629} FatCompleteRequest_Real(IrpContext_39, Irp_2, -1073741822);
    Tmp_637 := -1073741822;
    goto L1;

  anon435_Then:
    assume {:partition} Tmp_648 == 0;
    Tmp_678 := BAND(Options, 1);
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:partition} Tmp_678 == 0;
    DirectoryFile := 0;
    goto L1050;

  L1050:
    Tmp_638 := BAND(Options, 64);
    goto anon437_Then, anon437_Else;

  anon437_Else:
    assume {:partition} Tmp_638 == 0;
    NonDirectoryFile := 0;
    goto L1054;

  L1054:
    Tmp_716 := BAND(Options, 4);
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:partition} Tmp_716 == 0;
    goto L1058;

  L1058:
    Tmp_674 := BAND(Options, 8);
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} Tmp_674 == 0;
    NoIntermediateBuffering := 0;
    goto L1062;

  L1062:
    Tmp_683 := BAND(Options, 512);
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:partition} Tmp_683 == 0;
    NoEaKnowledge_2 := 0;
    goto L1066;

  L1066:
    Tmp_671 := BAND(Options, 4096);
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:partition} Tmp_671 == 0;
    DeleteOnClose_1 := 0;
    goto L1070;

  L1070:
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_715;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:partition} Tmp_715 == 0;
    TemporaryFile := 0;
    goto L1074;

  L1074:
    call {:si_unique_call 630} CreateDisposition_2 := corral_nondet();
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_651;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:partition} Tmp_651 == 0;
    IsPagingFile_2 := 0;
    goto L1079;

  L1079:
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    havoc Tmp_670;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:partition} Tmp_670 == 0;
    OpenTargetDirectory := 0;
    goto L1083;

  L1083:
    goto anon445_Then, anon445_Else;

  anon445_Else:
    assume {:partition} DirectoryFile != 0;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    assume {:partition} CreateDisposition_2 == 2;
    goto L124;

  L124:
    Tmp_689 := 1;
    goto L125;

  L125:
    CreateDirectory := Tmp_689;
    goto anon446_Then, anon446_Else;

  anon446_Else:
    assume {:partition} DirectoryFile != 0;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    assume {:partition} CreateDisposition_2 == 1;
    goto L130;

  L130:
    Tmp_685 := 1;
    goto L131;

  L131:
    OpenDirectory := Tmp_685;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon447_Then, anon447_Else;

  anon447_Else:
    goto L134;

  L134:
    call {:si_unique_call 631} FatCompleteRequest_Real(IrpContext_39, Irp_2, -1073741811);
    Tmp_637 := -1073741811;
    goto L1;

  anon447_Then:
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} DirectoryFile != 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    assume {:partition} NonDirectoryFile == 0;
    goto L138;

  L138:
    call {:si_unique_call 632} sdv_253 := FatAcquireExclusiveVcb(IrpContext_39, Vcb_28);
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} sdv_253 != 0;
    assume {:nonnull} DirentBcb_1 != 0;
    assume DirentBcb_1 > 0;
    assume {:nonnull} OemFinalName != 0;
    assume OemFinalName > 0;
    assume {:nonnull} OemFinalName != 0;
    assume OemFinalName > 0;
    assume {:nonnull} OemFinalName != 0;
    assume OemFinalName > 0;
    assume {:nonnull} UpcasedFinalName != 0;
    assume UpcasedFinalName > 0;
    assume {:nonnull} UpcasedFinalName != 0;
    assume UpcasedFinalName > 0;
    assume {:nonnull} UpcasedFinalName != 0;
    assume UpcasedFinalName > 0;
    assume {:nonnull} Lfn_4 != 0;
    assume Lfn_4 > 0;
    assume {:nonnull} Lfn_4 != 0;
    assume Lfn_4 > 0;
    assume {:nonnull} Lfn_4 != 0;
    assume Lfn_4 > 0;
    call {:si_unique_call 633} FatVerifyVcb(IrpContext_39, Vcb_28);
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    Status_4 := -1073741790;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    goto anon448_Then, anon448_Else;

  anon448_Else:
    Status_4 := -1073741202;
    goto L213;

  L213:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  L216:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:partition} OpenTargetDirectory == 0;
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    havoc LocalFcb;
    goto anon455_Then, anon455_Else;

  anon455_Else:
    assume {:partition} LocalFcb != 0;
    Tmp_650 := LocalFcb;
    assume {:nonnull} Tmp_650 != 0;
    assume Tmp_650 > 0;
    goto anon456_Then, anon456_Else;

  anon456_Else:
    goto L224;

  L224:
    assume {:nonnull} LocalFcb != 0;
    assume LocalFcb > 0;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    call {:si_unique_call 634} FatSetFullNameInFcb(IrpContext_39, LocalFcb, FinalName_1);
    goto L217;

  L217:
    assume {:nonnull} DirentBcb_1 != 0;
    assume DirentBcb_1 > 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:nonnull} DirentBcb_1 != 0;
    assume DirentBcb_1 > 0;
    goto L228;

  L228:
    call {:si_unique_call 635} sdv_222 := sdv_AbnormalTermination();
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:partition} sdv_222 != 0;
    goto L237;

  L237:
    goto anon330_Then, anon330_Else;

  anon330_Else:
    assume {:partition} FinalDcb != 0;
    Tmp_667 := FinalDcb;
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    goto anon449_Then, anon449_Else;

  anon449_Else:
    call {:si_unique_call 636} sdv_255 := sdv_IsListEmpty(0);
    goto anon331_Then, anon331_Else;

  anon331_Else:
    assume {:partition} sdv_255 != 0;
    assume {:nonnull} FinalDcb != 0;
    assume FinalDcb > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    assume {:nonnull} FinalDcb != 0;
    assume FinalDcb > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume {:nonnull} IrpContext_39 != 0;
    assume IrpContext_39 > 0;
    havoc SavedFlags;
    assume {:nonnull} IrpContext_39 != 0;
    assume IrpContext_39 > 0;
    call {:si_unique_call 637} FatUnpinRepinnedBcbs(IrpContext_39);
    assume {:nonnull} FinalDcb != 0;
    assume FinalDcb > 0;
    assume {:nonnull} FinalDcb != 0;
    assume FinalDcb > 0;
    call {:si_unique_call 638} vslice_dummy_var_108 := corral_nondet();
    call {:si_unique_call 639} vslice_dummy_var_104 := sdv_ObDereferenceObject(0);
    assume {:nonnull} IrpContext_39 != 0;
    assume IrpContext_39 > 0;
    goto L238;

  L238:
    call {:si_unique_call 640} sdv_266 := sdv_AbnormalTermination();
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:partition} sdv_266 != 0;
    call {:si_unique_call 641} ExReleaseResourceLite(0);
    goto L265;

  L265:
    call {:si_unique_call 642} FatFreeStringBuffer(OemFinalName);
    call {:si_unique_call 643} FatFreeStringBuffer(UpcasedFinalName);
    call {:si_unique_call 644} FatFreeStringBuffer(Lfn_4);
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} PostIrp != 0;
    assume {:nonnull} OplockPostIrp != 0;
    assume OplockPostIrp > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    goto L285;

  L285:
    call {:si_unique_call 645} sdv_230 := sdv_AbnormalTermination();
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:partition} sdv_230 != 0;
    call {:si_unique_call 646} vslice_dummy_var_105 := FatDecodeFileObject(FileObject_4, LocalVcb, LocalFcb_1, LocalCcb2);
    assume {:nonnull} LocalFcb_1 != 0;
    assume LocalFcb_1 > 0;
    assume {:nonnull} LocalFcb_1 != 0;
    assume LocalFcb_1 > 0;
    assume {:nonnull} LocalVcb != 0;
    assume LocalVcb > 0;
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    goto anon450_Then, anon450_Else;

  anon450_Else:
    goto L304;

  L304:
    assume {:nonnull} LocalFcb_1 != 0;
    assume LocalFcb_1 > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    goto L306;

  L306:
    assume {:nonnull} LocalCcb2 != 0;
    assume LocalCcb2 > 0;
    havoc vslice_dummy_var_1230;
    call {:si_unique_call 647} FatDeleteCcb_Real(IrpContext_39, vslice_dummy_var_1230);
    call {:si_unique_call 648} ExReleaseResourceLite(0);
    goto L313;

  L313:
    call {:si_unique_call 649} sdv_213 := KeGetCurrentProcessorNumber();
    Tmp_699 := sdv_213;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_691;
    Stats_5 := Tmp_691 + Tmp_699 * 240;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto anon451_Then, anon451_Else;

  anon451_Else:
    assume {:nonnull} Stats_5 != 0;
    assume Stats_5 > 0;
    goto L320;

  L320:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    havoc Tmp_637;
    goto L1;

  anon451_Then:
    assume {:nonnull} Stats_5 != 0;
    assume Stats_5 > 0;
    goto L320;

  anon338_Then:
    assume {:nonnull} LocalFcb_1 != 0;
    assume LocalFcb_1 > 0;
    havoc Tmp_647;
    assume {:nonnull} Tmp_647 != 0;
    assume Tmp_647 > 0;
    goto anon452_Then, anon452_Else;

  anon452_Else:
    goto L324;

  L324:
    assume {:nonnull} LocalFcb_1 != 0;
    assume LocalFcb_1 > 0;
    havoc Tmp_682;
    assume {:nonnull} Tmp_682 != 0;
    assume Tmp_682 > 0;
    goto anon453_Then, anon453_Else;

  anon453_Else:
    assume {:nonnull} LocalFcb_1 != 0;
    assume LocalFcb_1 > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:nonnull} LocalFcb_1 != 0;
    assume LocalFcb_1 > 0;
    havoc vslice_dummy_var_1231;
    call {:si_unique_call 650} FatSyncUninitializeCacheMap(IrpContext_39, vslice_dummy_var_1231);
    assume {:nonnull} LocalFcb_1 != 0;
    assume LocalFcb_1 > 0;
    assume {:nonnull} LocalFcb_1 != 0;
    assume LocalFcb_1 > 0;
    call {:si_unique_call 651} vslice_dummy_var_107 := sdv_ObDereferenceObject(0);
    goto L306;

  anon339_Then:
    goto L325;

  L325:
    assume {:nonnull} LocalFcb_1 != 0;
    assume LocalFcb_1 > 0;
    havoc vslice_dummy_var_1232;
    call {:si_unique_call 652} FatDeleteFcb_Real(IrpContext_39, vslice_dummy_var_1232);
    goto L306;

  anon453_Then:
    goto L325;

  anon452_Then:
    call {:si_unique_call 653} sdv_220 := sdv_IsListEmpty(0);
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:partition} sdv_220 != 0;
    goto L324;

  anon340_Then:
    assume {:partition} sdv_220 == 0;
    goto L306;

  anon450_Then:
    assume {:nonnull} LocalVcb != 0;
    assume LocalVcb > 0;
    goto L304;

  anon337_Then:
    assume {:partition} sdv_230 == 0;
    call {:si_unique_call 654} ExReleaseResourceLite(0);
    goto anon341_Then, anon341_Else;

  anon341_Else:
    assume {:partition} PostIrp == 0;
    assume {:nonnull} DesiredAccess_1 != 0;
    assume DesiredAccess_1 > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    goto L340;

  L340:
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} IsPagingFile_2 != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    goto anon345_Then, anon345_Else;

  anon345_Else:
    assume {:partition} FatReserveMdl == 0;
    call {:si_unique_call 655} ReserveMdl := IoAllocateMdl(0, 65536, 1, 0, 0);
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} FatReserveMdl != ReserveMdl;
    call {:si_unique_call 656} IoFreeMdl(0);
    goto L348;

  L348:
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    goto anon454_Then, anon454_Else;

  anon454_Else:
    call {:si_unique_call 657} vslice_dummy_var_106 := FatToggleMediaEjectDisable(IrpContext_39, Vcb_28, 1);
    goto L342;

  L342:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    havoc vslice_dummy_var_1233;
    call {:si_unique_call 658} FatCompleteRequest_Real(IrpContext_39, Irp_2, vslice_dummy_var_1233);
    goto L313;

  anon454_Then:
    goto L342;

  anon346_Then:
    assume {:partition} FatReserveMdl == ReserveMdl;
    goto L348;

  anon345_Then:
    assume {:partition} FatReserveMdl != 0;
    goto L348;

  anon344_Then:
    goto L342;

  anon343_Then:
    assume {:partition} IsPagingFile_2 == 0;
    goto L342;

  anon342_Then:
    goto L340;

  anon341_Then:
    assume {:partition} PostIrp != 0;
    goto L313;

  anon336_Then:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    call {:si_unique_call 659} boogieTmp := FatFsdPostRequest(IrpContext_39, Irp_2);
    goto L285;

  anon335_Then:
    assume {:partition} PostIrp == 0;
    call {:si_unique_call 660} FatUnpinRepinnedBcbs(IrpContext_39);
    goto L285;

  anon334_Then:
    assume {:partition} sdv_266 == 0;
    goto L265;

  anon333_Then:
    goto L238;

  anon332_Then:
    goto L238;

  anon331_Then:
    assume {:partition} sdv_255 == 0;
    goto L238;

  anon449_Then:
    goto L238;

  anon330_Then:
    assume {:partition} FinalDcb == 0;
    goto L238;

  anon328_Then:
    assume {:partition} sdv_222 == 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    goto L238;

  anon329_Then:
    goto L237;

  anon325_Then:
    goto L228;

  anon327_Then:
    goto L217;

  anon456_Then:
    Tmp_717 := LocalFcb;
    assume {:nonnull} Tmp_717 != 0;
    assume Tmp_717 > 0;
    goto anon457_Then, anon457_Else;

  anon457_Else:
    goto L224;

  anon457_Then:
    goto L217;

  anon455_Then:
    assume {:partition} LocalFcb == 0;
    goto L217;

  anon326_Then:
    assume {:partition} OpenTargetDirectory != 0;
    goto L217;

  anon324_Then:
    goto L217;

  anon448_Then:
    goto L213;

  anon322_Then:
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} DeleteOnClose_1 != 0;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    call {:si_unique_call 661} IoSetHardErrorOrVerifyDevice(0, 0);
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_654;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    havoc Tmp_709;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_677;
    assume {:nonnull} Tmp_677 != 0;
    assume Tmp_677 > 0;
    havoc Tmp_643;
    assume {:nonnull} Tmp_643 != 0;
    assume Tmp_643 > 0;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    assume {:nonnull} IrpContext_39 != 0;
    assume IrpContext_39 > 0;
    call {:si_unique_call 662} ExRaiseStatus(-1073741662);
    goto L437;

  L437:
    goto anon347_Then, anon347_Else;

  anon347_Else:
    assume {:partition} EaBuffer_2 != 0;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon350_Then:
    goto L447;

  L447:
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} RelatedFileObject != 0;
    call {:si_unique_call 663} sdv_261 := FatDecodeFileObject(RelatedFileObject, DecodeVcb, Fcb_11, Ccb_6);
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:partition} sdv_261 == 4;
    goto L858;

  L858:
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} DirectoryFile != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon425_Then:
    assume {:partition} DirectoryFile == 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:partition} OpenTargetDirectory == 0;
    call {:si_unique_call 664} sdv_250 := KeGetCurrentProcessorNumber();
    Tmp_642 := sdv_250;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_645;
    Stats_1 := Tmp_645 + Tmp_642 * 240;
    assume {:nonnull} Stats_1 != 0;
    assume Stats_1 > 0;
    call {:si_unique_call 665} SD1 := FatOpenVolume(IrpContext_39, FileObject_4, Vcb_28, DesiredAccess_1, ShareAccess_1, CreateDisposition_2);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L216;

  anon427_Then:
    assume {:partition} OpenTargetDirectory != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon426_Then:
    assume {:partition} sdv_261 != 4;
    goto L452;

  L452:
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} RelatedFileObject != 0;
    call {:si_unique_call 666} TypeOfOpen := FatDecodeFileObject(RelatedFileObject, RelatedVcb, RelatedDcb, RelatedCcb);
    goto anon353_Then, anon353_Else;

  anon353_Else:
    assume {:partition} TypeOfOpen != 2;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    assume {:partition} TypeOfOpen != 3;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon355_Then:
    assume {:partition} TypeOfOpen == 3;
    goto L463;

  L463:
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon356_Then:
    goto L467;

  L467:
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    assume {:nonnull} RelatedFileObject != 0;
    assume RelatedFileObject > 0;
    assume {:nonnull} RelatedDcb != 0;
    assume RelatedDcb > 0;
    havoc vslice_dummy_var_1234;
    call {:si_unique_call 667} FatVerifyFcb(IrpContext_39, vslice_dummy_var_1234);
    assume {:nonnull} RelatedDcb != 0;
    assume RelatedDcb > 0;
    havoc ParentDcb_3;
    goto L475;

  L475:
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    havoc Tmp_687;
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    goto anon458_Then, anon458_Else;

  anon458_Else:
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    TrailingBackslash := 1;
    goto L480;

  L480:
    assume {:nonnull} ParentDcb_3 != 0;
    assume ParentDcb_3 > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    goto L484;

  L484:
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    assume {:nonnull} ParentDcb_3 != 0;
    assume ParentDcb_3 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    goto L489;

  L489:
    call {:si_unique_call 668} FirstLoop, sdv_214, Status_4, Tmp_658, NextFcb_1, sdv_244, Tmp_710 := FatCommonCreate_loop_L489(FirstLoop, sdv_214, OemFinalName, Status_4, IsPagingFile_2, Tmp_658, Vcb_28, RemainingPart, ParentDcb_3, UpcasedFinalName, NextFcb_1, FileNameOpenedDos_1, Fcb_11, sdv_244, FileName, NextRemainingPart, Tmp_710, FinalName_1, IrpContext_39);
    goto L489_last;

  L489_last:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    goto L491;

  L491:
    call {:si_unique_call 669} Status_4, Tmp_658, NextFcb_1 := FatCommonCreate_loop_L491(OemFinalName, Status_4, Tmp_658, RemainingPart, UpcasedFinalName, NextFcb_1, FileNameOpenedDos_1, Fcb_11, NextRemainingPart, FinalName_1, IrpContext_39);
    goto L491_last;

  L491_last:
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    call {:si_unique_call 670} FsRtlDissectName(RemainingPart, 0, 0);
    assume {:nonnull} NextRemainingPart != 0;
    assume NextRemainingPart > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} NextRemainingPart != 0;
    assume NextRemainingPart > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    goto L500;

  L500:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon365_Then:
    goto L498;

  L498:
    assume {:nonnull} FinalName_1 != 0;
    assume FinalName_1 > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:nonnull} FinalName_1 != 0;
    assume FinalName_1 > 0;
    havoc vslice_dummy_var_1235;
    call {:si_unique_call 671} FatEnsureStringBufferEnough(OemFinalName, vslice_dummy_var_1235);
    call {:si_unique_call 672} Status_4 := RtlUpcaseUnicodeStringToCountedOemString(0, 0, 0);
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} Status_4 >= 0;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc vslice_dummy_var_1236;
    call {:si_unique_call 673} NextFcb_1 := FatFindFcb(IrpContext_39, vslice_dummy_var_1236, OemFinalName, FileNameOpenedDos_1);
    goto L515;

  L515:
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:partition} NextFcb_1 != 0;
    goto L517;

  L517:
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} NextFcb_1 != 0;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    assume {:nonnull} NextRemainingPart != 0;
    assume NextRemainingPart > 0;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    assume {:nonnull} NextRemainingPart != 0;
    assume NextRemainingPart > 0;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    assume {:nonnull} NextRemainingPart != 0;
    assume NextRemainingPart > 0;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    goto L518;

  L518:
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:partition} NextFcb_1 != 0;
    Tmp_658 := NextFcb_1;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    goto anon459_Then, anon459_Else;

  anon459_Else:
    assume {:nonnull} NextRemainingPart != 0;
    assume NextRemainingPart > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    goto L492;

  L492:
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    goto L543;

  L543:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc vslice_dummy_var_1237;
    call {:si_unique_call 674} FatVerifyFcb(IrpContext_39, vslice_dummy_var_1237);
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:partition} IsPagingFile_2 != 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:partition} FirstLoop != 0;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc Tmp_710;
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    goto anon460_Then, anon460_Else;

  anon460_Else:
    call {:si_unique_call 675} sdv_244 := sdv_IsListEmpty(0);
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:partition} sdv_244 != 0;
    call {:si_unique_call 676} sdv_214 := sdv_IsListEmpty(0);
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:partition} sdv_214 == 0;
    goto L569;

  L569:
    call {:si_unique_call 677} FatFspClose#1(Vcb_28);
    FirstLoop := 0;
    goto L569_dummy;

  L569_dummy:
    assume false;
    return;

  anon377_Then:
    assume {:partition} sdv_214 != 0;
    goto L488;

  L488:
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} IsPagingFile_2 != 0;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc Tmp_673;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    goto anon461_Then, anon461_Else;

  anon461_Else:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon380_Then:
    goto L580;

  L580:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon379_Then:
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    goto L588;

  L588:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc Tmp_669;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    goto anon462_Then, anon462_Else;

  anon462_Else:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    goto anon463_Then, anon463_Else;

  anon463_Else:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon463_Then:
    goto L589;

  L589:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc ParentDcb_3;
    FirstLoop := 1;
    goto L596;

  L596:
    call {:si_unique_call 678} sdv_209, FirstLoop, LfnByteOffset_1, Tmp_640, Status_4, ParentDcb_3, FinalDcb, sdv_258 := FatCommonCreate_loop_L596(sdv_209, FirstLoop, LfnByteOffset_1, Tmp_640, OemFinalName, Lfn_4, Dirent_7, Status_4, Tmp_655, Vcb_28, RemainingPart, DirentByteOffset_1, ParentDcb_3, UpcasedFinalName, FileNameOpenedDos_1, FinalDcb, NextRemainingPart, DirentBcb_1, sdv_258, LocalCcb, FinalName_1, IrpContext_39);
    goto L596_last;

  L596_last:
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:partition} FirstLoop != 0;
    FirstLoop := 0;
    assume {:nonnull} NextRemainingPart != 0;
    assume NextRemainingPart > 0;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    assume {:nonnull} NextRemainingPart != 0;
    assume NextRemainingPart > 0;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    assume {:nonnull} NextRemainingPart != 0;
    assume NextRemainingPart > 0;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    assume {:nonnull} OemFinalName != 0;
    assume OemFinalName > 0;
    goto anon464_Then, anon464_Else;

  anon464_Else:
    Tmp_640 := 0;
    goto L605;

  L605:
    Status_4 := Tmp_640;
    goto L606;

  L606:
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:partition} Status_4 >= 0;
    assume {:nonnull} OemFinalName != 0;
    assume OemFinalName > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} OemFinalName != 0;
    assume OemFinalName > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} OemFinalName != 0;
    assume OemFinalName > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    call {:si_unique_call 679} sdv_258 := corral_nondet();
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} sdv_258 != 0;
    assume {:nonnull} LocalCcb != 0;
    assume LocalCcb > 0;
    call {:si_unique_call 680} FatStringTo8dot3(IrpContext_39, OemFinalName, Constant_unnamed_tag_72(OemQueryTemplate__CCB(LocalCcb)));
    assume {:nonnull} LocalCcb != 0;
    assume LocalCcb > 0;
    goto L618;

  L618:
    goto anon387_Then, anon387_Else;

  anon387_Else:
    call {:si_unique_call 681} sdv_209 := FatIsNameLongUnicodeValid(IrpContext_39, FinalName_1, 0, 0, 0);
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:partition} sdv_209 != 0;
    goto L625;

  L625:
    assume {:nonnull} FinalName_1 != 0;
    assume FinalName_1 > 0;
    havoc vslice_dummy_var_1238;
    call {:si_unique_call 682} FatEnsureStringBufferEnough(UpcasedFinalName, vslice_dummy_var_1238);
    call {:si_unique_call 683} Status_4 := RtlUpcaseUnicodeString(0, 0, 0);
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:partition} Status_4 >= 0;
    assume {:nonnull} LocalCcb != 0;
    assume LocalCcb > 0;
    assume {:nonnull} UpcasedFinalName != 0;
    assume UpcasedFinalName > 0;
    assume {:nonnull} LocalCcb != 0;
    assume LocalCcb > 0;
    assume {:nonnull} UpcasedFinalName != 0;
    assume UpcasedFinalName > 0;
    assume {:nonnull} LocalCcb != 0;
    assume LocalCcb > 0;
    assume {:nonnull} UpcasedFinalName != 0;
    assume UpcasedFinalName > 0;
    assume {:nonnull} LocalCcb != 0;
    assume LocalCcb > 0;
    assume {:nonnull} Lfn_4 != 0;
    assume Lfn_4 > 0;
    call {:si_unique_call 684} FatLocateDirent#1(IrpContext_39, ParentDcb_3, LocalCcb, 0, Dirent_7, DirentBcb_1, DirentByteOffset_1, FileNameOpenedDos_1, Lfn_4);
    FinalDcb := ParentDcb_3;
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    goto anon465_Then, anon465_Else;

  anon465_Else:
    assume {:nonnull} Dirent_7 != 0;
    assume Dirent_7 > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_7] != 0;
    assume {:nonnull} Dirent_7 != 0;
    assume Dirent_7 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_7] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_7] > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} DirentByteOffset_1 != 0;
    assume DirentByteOffset_1 > 0;
    assume {:nonnull} Lfn_4 != 0;
    assume Lfn_4 > 0;
    havoc LfnByteOffset_1;
    assume {:nonnull} DirentByteOffset_1 != 0;
    assume DirentByteOffset_1 > 0;
    assume {:nonnull} Dirent_7 != 0;
    assume Dirent_7 > 0;
    havoc vslice_dummy_var_1239;
    call {:si_unique_call 685} ParentDcb_3 := FatCreateDcb(IrpContext_39, Vcb_28, ParentDcb_3, LfnByteOffset_1, vslice_dummy_var_1239, Mem_T.P_PACKED_DIRENT[Dirent_7], Lfn_4);
    FinalDcb := ParentDcb_3;
    call {:si_unique_call 686} FatSetFullNameInFcb(IrpContext_39, ParentDcb_3, FinalName_1);
    goto anon392_Else_dummy;

  anon392_Else_dummy:
    assume false;
    return;

  anon392_Then:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon391_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_7] == 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon465_Then:
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:partition} OpenTargetDirectory != 0;
    assume {:nonnull} Dirent_7 != 0;
    assume Dirent_7 > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_7] != 0;
    Tmp_694 := 1;
    goto L683;

  L683:
    Tmp_702 := Tmp_694;
    call {:si_unique_call 687} SD1 := FatOpenTargetDirectory(IrpContext_39, FileObject_4, ParentDcb_3, DesiredAccess_1, ShareAccess_1, Tmp_702);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L216;

  anon397_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_7] == 0;
    Tmp_694 := 0;
    goto L683;

  anon383_Then:
    assume {:partition} OpenTargetDirectory == 0;
    assume {:nonnull} Dirent_7 != 0;
    assume Dirent_7 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_7] != 0;
    assume {:nonnull} DirentByteOffset_1 != 0;
    assume DirentByteOffset_1 > 0;
    assume {:nonnull} Lfn_4 != 0;
    assume Lfn_4 > 0;
    havoc LfnByteOffset_1;
    assume {:nonnull} Dirent_7 != 0;
    assume Dirent_7 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_7] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_7] > 0;
    goto anon466_Then, anon466_Else;

  anon466_Else:
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:partition} NonDirectoryFile != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon400_Then:
    assume {:partition} NonDirectoryFile == 0;
    assume {:nonnull} DirentByteOffset_1 != 0;
    assume DirentByteOffset_1 > 0;
    assume {:nonnull} Dirent_7 != 0;
    assume Dirent_7 > 0;
    havoc vslice_dummy_var_1240;
    call {:si_unique_call 688} SD1 := FatOpenExistingDirectory(IrpContext_39, FileObject_4, Vcb_28, ParentDcb_3, Mem_T.P_PACKED_DIRENT[Dirent_7], LfnByteOffset_1, vslice_dummy_var_1240, Lfn_4, DesiredAccess_1, ShareAccess_1, CreateDisposition_2, NoEaKnowledge_2, DeleteOnClose_1);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L216;

  anon466_Then:
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:partition} OpenDirectory != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon399_Then:
    assume {:partition} OpenDirectory == 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:partition} TrailingBackslash != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon401_Then:
    assume {:partition} TrailingBackslash == 0;
    assume {:nonnull} DirentByteOffset_1 != 0;
    assume DirentByteOffset_1 > 0;
    assume {:nonnull} Dirent_7 != 0;
    assume Dirent_7 > 0;
    assume {:nonnull} FileNameOpenedDos_1 != 0;
    assume FileNameOpenedDos_1 > 0;
    havoc vslice_dummy_var_1241;
    havoc vslice_dummy_var_1242;
    call {:si_unique_call 689} SD1 := FatOpenExistingFile(IrpContext_39, FileObject_4, Vcb_28, ParentDcb_3, Mem_T.P_PACKED_DIRENT[Dirent_7], LfnByteOffset_1, vslice_dummy_var_1241, Lfn_4, DesiredAccess_1, ShareAccess_1, AllocationSize_2, EaBuffer_2, EaLength_2, FileAttributes_2, CreateDisposition_2, IsPagingFile_2, NoEaKnowledge_2, DeleteOnClose_1, vslice_dummy_var_1242);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:partition} NoIntermediateBuffering == 0;
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    goto L715;

  L715:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L216;

  anon403_Then:
    assume {:partition} NoIntermediateBuffering != 0;
    goto L715;

  anon402_Then:
    goto L715;

  anon396_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_7] == 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} CreateDisposition_2 == 1;
    goto L721;

  L721:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon398_Then:
    assume {:partition} CreateDisposition_2 != 1;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} CreateDisposition_2 != 4;
    assume {:nonnull} LocalCcb != 0;
    assume LocalCcb > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:nonnull} OemFinalName != 0;
    assume OemFinalName > 0;
    goto L724;

  L724:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    call {:si_unique_call 690} boogieTmp := FatCheckSystemSecurityAccess(IrpContext_39);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:partition} CreateDirectory != 0;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    call {:si_unique_call 691} IoSetHardErrorOrVerifyDevice(0, 0);
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_672;
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    havoc Tmp_649;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    havoc Tmp_697;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} IrpContext_39 != 0;
    assume IrpContext_39 > 0;
    call {:si_unique_call 692} ExRaiseStatus(-1073741662);
    goto L734;

  L734:
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:partition} TemporaryFile != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon410_Then:
    assume {:partition} TemporaryFile == 0;
    call {:si_unique_call 693} SD1 := FatCreateNewDirectory(IrpContext_39, FileObject_4, Vcb_28, ParentDcb_3, OemFinalName, FinalName_1, DesiredAccess_1, ShareAccess_1, EaBuffer_2, EaLength_2, FileAttributes_2, NoEaKnowledge_2, DeleteOnClose_1);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L216;

  anon409_Then:
    goto L734;

  anon407_Then:
    assume {:partition} CreateDirectory == 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:partition} TrailingBackslash != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon408_Then:
    assume {:partition} TrailingBackslash == 0;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    call {:si_unique_call 694} IoSetHardErrorOrVerifyDevice(0, 0);
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_666;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    havoc Tmp_681;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    havoc Tmp_641;
    assume {:nonnull} Tmp_641 != 0;
    assume Tmp_641 > 0;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    assume {:nonnull} IrpContext_39 != 0;
    assume IrpContext_39 > 0;
    call {:si_unique_call 695} ExRaiseStatus(-1073741662);
    goto L755;

  L755:
    call {:si_unique_call 696} SD1 := FatCreateNewFile(IrpContext_39, FileObject_4, Vcb_28, ParentDcb_3, OemFinalName, FinalName_1, DesiredAccess_1, ShareAccess_1, AllocationSize_2, EaBuffer_2, EaLength_2, FileAttributes_2, Lfn_4, IsPagingFile_2, NoEaKnowledge_2, DeleteOnClose_1, TemporaryFile);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:partition} NoIntermediateBuffering == 0;
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    goto L768;

  L768:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L216;

  anon413_Then:
    assume {:partition} NoIntermediateBuffering != 0;
    goto L768;

  anon412_Then:
    goto L768;

  anon411_Then:
    goto L755;

  anon406_Then:
    goto L216;

  anon405_Then:
    goto L724;

  anon404_Then:
    assume {:partition} CreateDisposition_2 == 4;
    goto L721;

  anon390_Then:
    assume {:partition} 0 > Status_4;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon389_Then:
    assume {:partition} sdv_209 == 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon387_Then:
    assume {:nonnull} LocalCcb != 0;
    assume LocalCcb > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon388_Then:
    goto L625;

  anon386_Then:
    assume {:partition} sdv_258 == 0;
    assume {:nonnull} LocalCcb != 0;
    assume LocalCcb > 0;
    goto L618;

  anon385_Then:
    assume {:partition} 0 > Status_4;
    assume {:nonnull} LocalCcb != 0;
    assume LocalCcb > 0;
    goto anon467_Then, anon467_Else;

  anon467_Else:
    assume {:partition} Status_4 != -1073741470;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon467_Then:
    assume {:partition} Status_4 == -1073741470;
    goto L618;

  anon464_Then:
    Tmp_640 := -1073741470;
    goto L605;

  anon384_Then:
    assume {:partition} FirstLoop == 0;
    call {:si_unique_call 697} FsRtlDissectName(RemainingPart, 0, 0);
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} RemainingPart != 0;
    assume RemainingPart > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    goto L670;

  L670:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon395_Then:
    goto L668;

  L668:
    assume {:nonnull} FinalName_1 != 0;
    assume FinalName_1 > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:nonnull} FinalName_1 != 0;
    assume FinalName_1 > 0;
    havoc vslice_dummy_var_1243;
    call {:si_unique_call 698} FatEnsureStringBufferEnough(OemFinalName, vslice_dummy_var_1243);
    call {:si_unique_call 699} Status_4 := RtlUpcaseUnicodeStringToCountedOemString(0, 0, 0);
    goto L606;

  anon394_Then:
    goto L670;

  anon393_Then:
    goto L668;

  anon462_Then:
    goto L589;

  anon381_Then:
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} OpenTargetDirectory != 0;
    call {:si_unique_call 700} sdv_239 := KeGetCurrentProcessorNumber();
    Tmp_668 := sdv_239;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_692;
    Stats_3 := Tmp_692 + Tmp_668 * 240;
    assume {:nonnull} Stats_3 != 0;
    assume Stats_3 > 0;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc vslice_dummy_var_1244;
    call {:si_unique_call 701} SD1 := FatOpenTargetDirectory(IrpContext_39, FileObject_4, vslice_dummy_var_1244, DesiredAccess_1, ShareAccess_1, 1);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L216;

  anon382_Then:
    assume {:partition} OpenTargetDirectory == 0;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc Tmp_652;
    assume {:nonnull} Tmp_652 != 0;
    assume Tmp_652 > 0;
    goto anon468_Then, anon468_Else;

  anon468_Else:
    goto L786;

  L786:
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:partition} NonDirectoryFile == 0;
    call {:si_unique_call 702} sdv_219 := KeGetCurrentProcessorNumber();
    Tmp_659 := sdv_219;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_707;
    Stats := Tmp_707 + Tmp_659 * 240;
    assume {:nonnull} Stats != 0;
    assume Stats > 0;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc vslice_dummy_var_1245;
    call {:si_unique_call 703} SD1 := FatOpenExistingDcb(IrpContext_39, FileObject_4, Vcb_28, vslice_dummy_var_1245, DesiredAccess_1, ShareAccess_1, CreateDisposition_2, NoEaKnowledge_2, DeleteOnClose_1);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L216;

  anon414_Then:
    assume {:partition} NonDirectoryFile != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon468_Then:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc Tmp_676;
    assume {:nonnull} Tmp_676 != 0;
    assume Tmp_676 > 0;
    goto anon469_Then, anon469_Else;

  anon469_Else:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    goto anon470_Then, anon470_Else;

  anon470_Else:
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:partition} OpenDirectory != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon415_Then:
    assume {:partition} OpenDirectory == 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:partition} TrailingBackslash == 0;
    call {:si_unique_call 704} sdv_259 := KeGetCurrentProcessorNumber();
    Tmp_675 := sdv_259;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_684;
    Stats_2 := Tmp_684 + Tmp_675 * 240;
    assume {:nonnull} Stats_2 != 0;
    assume Stats_2 > 0;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    assume {:nonnull} FileNameOpenedDos_1 != 0;
    assume FileNameOpenedDos_1 > 0;
    havoc vslice_dummy_var_1246;
    havoc vslice_dummy_var_1247;
    call {:si_unique_call 705} SD1 := FatOpenExistingFcb(IrpContext_39, FileObject_4, Vcb_28, vslice_dummy_var_1246, DesiredAccess_1, ShareAccess_1, AllocationSize_2, EaBuffer_2, EaLength_2, FileAttributes_2, CreateDisposition_2, NoEaKnowledge_2, DeleteOnClose_1, vslice_dummy_var_1247, OplockPostIrp);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} NoIntermediateBuffering == 0;
    assume {:nonnull} FileObject_4 != 0;
    assume FileObject_4 > 0;
    goto L823;

  L823:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L216;

  anon419_Then:
    assume {:partition} NoIntermediateBuffering != 0;
    goto L823;

  anon418_Then:
    goto L823;

  anon417_Then:
    PostIrp := 1;
    goto L216;

  anon416_Then:
    assume {:partition} TrailingBackslash != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon470_Then:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc Tmp_686;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    havoc Tmp_644;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc vslice_dummy_var_1248;
    call {:si_unique_call 706} KeBugCheckEx(35, 394438, Tmp_644, vslice_dummy_var_1248, 0);
    goto L588;

  anon469_Then:
    goto L786;

  anon461_Then:
    goto L580;

  anon360_Then:
    assume {:partition} IsPagingFile_2 == 0;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon378_Then:
    goto L580;

  anon376_Then:
    assume {:partition} sdv_244 == 0;
    goto L569;

  anon460_Then:
    goto L488;

  anon375_Then:
    assume {:partition} FirstLoop == 0;
    goto L488;

  anon374_Then:
    assume {:partition} IsPagingFile_2 == 0;
    goto L488;

  anon373_Then:
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc vslice_dummy_var_1249;
    call {:si_unique_call 707} FatRemoveNames(IrpContext_39, vslice_dummy_var_1249);
    goto anon373_Then_dummy;

  anon373_Then_dummy:
    assume false;
    return;

  anon372_Then:
    goto L543;

  anon362_Then:
    goto L543;

  anon371_Then:
    goto anon371_Then_dummy;

  anon371_Then_dummy:
    assume false;
    return;

  anon459_Then:
    goto L492;

  anon370_Then:
    assume {:partition} NextFcb_1 == 0;
    goto L492;

  anon369_Then:
    assume {:partition} NextFcb_1 == 0;
    goto L518;

  anon367_Then:
    assume {:partition} NextFcb_1 == 0;
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} FinalName_1 != 0;
    assume FinalName_1 > 0;
    havoc vslice_dummy_var_1250;
    call {:si_unique_call 708} FatEnsureStringBufferEnough(UpcasedFinalName, vslice_dummy_var_1250);
    call {:si_unique_call 709} Status_4 := RtlDowncaseUnicodeString(0, 0, 0);
    call {:si_unique_call 710} Status_4 := RtlUpcaseUnicodeString(0, 0, 0);
    assume {:nonnull} Fcb_11 != 0;
    assume Fcb_11 > 0;
    havoc vslice_dummy_var_1251;
    call {:si_unique_call 711} NextFcb_1 := FatFindFcb(IrpContext_39, vslice_dummy_var_1251, UpcasedFinalName, FileNameOpenedDos_1);
    goto L517;

  anon368_Then:
    goto L517;

  anon366_Then:
    assume {:partition} 0 > Status_4;
    NextFcb_1 := 0;
    assume {:nonnull} OemFinalName != 0;
    assume OemFinalName > 0;
    goto anon471_Then, anon471_Else;

  anon471_Else:
    assume {:partition} Status_4 != -1073741470;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon471_Then:
    assume {:partition} Status_4 == -1073741470;
    goto L515;

  anon364_Then:
    goto L500;

  anon363_Then:
    goto L498;

  anon361_Then:
    goto L492;

  anon359_Then:
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon358_Then:
    call {:si_unique_call 712} FatSetFullFileNameInFcb#1(IrpContext_39, ParentDcb_3);
    goto L484;

  anon458_Then:
    goto L476;

  L476:
    TrailingBackslash := 0;
    goto L480;

  anon357_Then:
    goto L476;

  anon354_Then:
    goto L467;

  anon353_Then:
    assume {:partition} TypeOfOpen == 2;
    goto L463;

  anon351_Then:
    assume {:partition} RelatedFileObject == 0;
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    assume {:nonnull} FileName != 0;
    assume FileName > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:partition} NonDirectoryFile != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon421_Then:
    assume {:partition} NonDirectoryFile == 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:partition} OpenTargetDirectory != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon422_Then:
    assume {:partition} OpenTargetDirectory == 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:partition} DeleteOnClose_1 == 0;
    call {:si_unique_call 713} sdv_233 := KeGetCurrentProcessorNumber();
    Tmp_708 := sdv_233;
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc Tmp_665;
    Stats_4 := Tmp_665 + Tmp_708 * 240;
    assume {:nonnull} Stats_4 != 0;
    assume Stats_4 > 0;
    call {:si_unique_call 714} SD1 := FatOpenRootDcb(IrpContext_39, FileObject_4, Vcb_28, DesiredAccess_1, ShareAccess_1, CreateDisposition_2);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L216;

  anon423_Then:
    assume {:partition} DeleteOnClose_1 != 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    goto L216;

  anon420_Then:
    goto L833;

  L833:
    assume {:nonnull} Vcb_28 != 0;
    assume Vcb_28 > 0;
    havoc ParentDcb_3;
    goto L475;

  anon352_Then:
    goto L833;

  anon424_Then:
    assume {:partition} RelatedFileObject == 0;
    goto L858;

  anon349_Then:
    goto L452;

  anon347_Then:
    assume {:partition} EaBuffer_2 == 0;
    goto L447;

  anon348_Then:
    goto L437;

  anon323_Then:
    assume {:partition} DeleteOnClose_1 == 0;
    goto L437;

  anon321_Then:
    assume {:partition} sdv_253 == 0;
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    call {:si_unique_call 715} boogieTmp := FatFsdPostRequest(IrpContext_39, Irp_2);
    assume {:nonnull} Iosb_1 != 0;
    assume Iosb_1 > 0;
    havoc Tmp_637;
    goto L1;

  anon320_Then:
    assume {:partition} NonDirectoryFile != 0;
    goto L134;

  anon319_Then:
    assume {:partition} DirectoryFile == 0;
    goto L138;

  anon317_Then:
    assume {:partition} CreateDisposition_2 != 1;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume {:partition} CreateDisposition_2 == 3;
    goto L130;

  anon318_Then:
    assume {:partition} CreateDisposition_2 != 3;
    goto L127;

  L127:
    Tmp_685 := 0;
    goto L131;

  anon446_Then:
    assume {:partition} DirectoryFile == 0;
    goto L127;

  anon315_Then:
    assume {:partition} CreateDisposition_2 != 2;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume {:partition} CreateDisposition_2 == 3;
    goto L124;

  anon316_Then:
    assume {:partition} CreateDisposition_2 != 3;
    goto L121;

  L121:
    Tmp_689 := 0;
    goto L125;

  anon445_Then:
    assume {:partition} DirectoryFile == 0;
    goto L121;

  anon444_Then:
    assume {:partition} Tmp_670 != 0;
    OpenTargetDirectory := 1;
    goto L1083;

  anon443_Then:
    assume {:partition} Tmp_651 != 0;
    IsPagingFile_2 := 1;
    goto L1079;

  anon442_Then:
    assume {:partition} Tmp_715 != 0;
    TemporaryFile := 1;
    goto L1074;

  anon441_Then:
    assume {:partition} Tmp_671 != 0;
    DeleteOnClose_1 := 1;
    goto L1070;

  anon440_Then:
    assume {:partition} Tmp_683 != 0;
    NoEaKnowledge_2 := 1;
    goto L1066;

  anon439_Then:
    assume {:partition} Tmp_674 != 0;
    NoIntermediateBuffering := 1;
    goto L1062;

  anon438_Then:
    assume {:partition} Tmp_716 != 0;
    goto L1058;

  anon437_Then:
    assume {:partition} Tmp_638 != 0;
    NonDirectoryFile := 1;
    goto L1054;

  anon436_Then:
    assume {:partition} Tmp_678 != 0;
    DirectoryFile := 1;
    goto L1050;

  anon434_Then:
    assume {:partition} RelatedFileObject == 0;
    goto L92;

  anon432_Then:
    goto L65;

  anon431_Then:
    goto L65;

  anon430_Then:
    goto L65;

  anon429_Then:
    goto L65;

  anon428_Then:
    goto L65;
}



procedure {:origName "FatOpenTargetDirectory"} FatOpenTargetDirectory(actual_IrpContext_40: int, actual_FileObject_5: int, actual_Dcb_3: int, actual_DesiredAccess_2: int, actual_ShareAccess_2: int, actual_DoesNameExist: int) returns (SD10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOpenTargetDirectory"} FatOpenTargetDirectory(actual_IrpContext_40: int, actual_FileObject_5: int, actual_Dcb_3: int, actual_DesiredAccess_2: int, actual_ShareAccess_2: int, actual_DoesNameExist: int) returns (SD10: int)
{
  var {:scalar} i_8: int;
  var {:scalar} Tmp_720: int;
  var {:scalar} Tmp_721: int;
  var {:scalar} Tmp_722: int;
  var {:scalar} DcbAcquired: int;
  var {:pointer} Tmp_723: int;
  var {:scalar} Tmp_724: int;
  var {:scalar} Tmp_725: int;
  var {:pointer} Tmp_726: int;
  var {:scalar} Iosb_5: int;
  var {:scalar} Tmp_727: int;
  var {:pointer} Tmp_728: int;
  var {:pointer} Tmp_729: int;
  var {:pointer} UnwindCcb_2: int;
  var {:pointer} Tmp_732: int;
  var {:scalar} sdv_271: int;
  var {:pointer} Tmp_733: int;
  var {:pointer} Tmp_734: int;
  var {:scalar} UnwindShareAccess: int;
  var {:pointer} Tmp_735: int;
  var {:scalar} Tmp_10: int;
  var {:scalar} Tmp_736: int;
  var {:pointer} IrpContext_40: int;
  var {:pointer} FileObject_5: int;
  var {:pointer} Dcb_3: int;
  var {:pointer} DesiredAccess_2: int;
  var {:scalar} ShareAccess_2: int;
  var {:scalar} DoesNameExist: int;
  var boogieTmp: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_1252: int;
  var vslice_dummy_var_1253: int;

  anon0:
    call {:si_unique_call 716} Iosb_5 := __HAVOC_malloc(12);
    call {:si_unique_call 717} Tmp_10 := __HAVOC_malloc(12);
    IrpContext_40 := actual_IrpContext_40;
    FileObject_5 := actual_FileObject_5;
    Dcb_3 := actual_Dcb_3;
    DesiredAccess_2 := actual_DesiredAccess_2;
    ShareAccess_2 := actual_ShareAccess_2;
    DoesNameExist := actual_DoesNameExist;
    UnwindShareAccess := 0;
    UnwindCcb_2 := 0;
    DcbAcquired := 0;
    call {:si_unique_call 718} vslice_dummy_var_109 := FatAcquireExclusiveFcb(IrpContext_40, Dcb_3);
    DcbAcquired := 1;
    assume {:nonnull} Dcb_3 != 0;
    assume Dcb_3 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_727 := ShareAccess_2;
    assume {:nonnull} DesiredAccess_2 != 0;
    assume DesiredAccess_2 > 0;
    assume {:nonnull} Iosb_5 != 0;
    assume Iosb_5 > 0;
    havoc vslice_dummy_var_1252;
    call {:si_unique_call 719} boogieTmp := IoCheckShareAccess(vslice_dummy_var_1252, Tmp_727, 0, 0, 1);
    assume {:nonnull} Iosb_5 != 0;
    assume Iosb_5 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L77;

  L77:
    call {:si_unique_call 720} sdv_271 := sdv_AbnormalTermination();
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_271 != 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UnwindCcb_2 != 0;
    call {:si_unique_call 721} FatDeleteCcb_Real(IrpContext_40, UnwindCcb_2);
    goto L83;

  L83:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} UnwindShareAccess != 0;
    call {:si_unique_call 722} IoRemoveShareAccess(0, 0);
    goto L81;

  L81:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} DcbAcquired != 0;
    call {:si_unique_call 723} ExReleaseResourceLite(0);
    goto L90;

  L90:
    assume {:nonnull} Iosb_5 != 0;
    assume Iosb_5 > 0;
    assume {:nonnull} Tmp_10 != 0;
    assume Tmp_10 > 0;
    assume {:nonnull} Iosb_5 != 0;
    assume Iosb_5 > 0;
    assume {:nonnull} Tmp_10 != 0;
    assume Tmp_10 > 0;
    assume {:nonnull} Iosb_5 != 0;
    assume Iosb_5 > 0;
    assume {:nonnull} Tmp_10 != 0;
    assume Tmp_10 > 0;
    SD10 := Tmp_10;
    return;

  anon29_Then:
    assume {:partition} DcbAcquired == 0;
    goto L90;

  anon31_Then:
    assume {:partition} UnwindShareAccess == 0;
    goto L81;

  anon30_Then:
    assume {:partition} UnwindCcb_2 == 0;
    goto L83;

  anon28_Then:
    assume {:partition} sdv_271 == 0;
    goto L81;

  anon25_Then:
    goto L40;

  L40:
    UnwindShareAccess := 1;
    call {:si_unique_call 724} UnwindCcb_2 := FatCreateCcb(IrpContext_40);
    call {:si_unique_call 725} FatSetFileObject(FileObject_5, 3, Dcb_3, UnwindCcb_2);
    assume {:nonnull} Dcb_3 != 0;
    assume Dcb_3 > 0;
    assume {:nonnull} Dcb_3 != 0;
    assume Dcb_3 > 0;
    assume {:nonnull} Dcb_3 != 0;
    assume Dcb_3 > 0;
    havoc Tmp_723;
    assume {:nonnull} Dcb_3 != 0;
    assume Dcb_3 > 0;
    havoc Tmp_735;
    assume {:nonnull} Tmp_723 != 0;
    assume Tmp_723 > 0;
    assume {:nonnull} Tmp_735 != 0;
    assume Tmp_735 > 0;
    assume {:nonnull} FileObject_5 != 0;
    assume FileObject_5 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L53;

  L53:
    assume {:nonnull} FileObject_5 != 0;
    assume FileObject_5 > 0;
    havoc i_8;
    Tmp_724 := i_8;
    assume {:nonnull} FileObject_5 != 0;
    assume FileObject_5 > 0;
    havoc Tmp_728;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L59;

  L59:
    call {:si_unique_call 726} i_8, Tmp_720, Tmp_733 := FatOpenTargetDirectory_loop_L59(i_8, Tmp_720, Tmp_733, FileObject_5);
    goto L59_last;

  L59_last:
    Tmp_720 := i_8;
    assume {:nonnull} FileObject_5 != 0;
    assume FileObject_5 > 0;
    havoc Tmp_733;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    i_8 := i_8 + 1;
    goto L58;

  L58:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} i_8 != 0;
    assume {:nonnull} FileObject_5 != 0;
    assume FileObject_5 > 0;
    assume {:nonnull} FileObject_5 != 0;
    assume FileObject_5 > 0;
    havoc Tmp_721;
    Tmp_725 := i_8;
    assume {:nonnull} FileObject_5 != 0;
    assume FileObject_5 > 0;
    havoc Tmp_729;
    assume {:nonnull} FileObject_5 != 0;
    assume FileObject_5 > 0;
    havoc Tmp_732;
    call {:si_unique_call 727} sdv_RtlCopyMemory(0, 0, Tmp_721);
    goto L65;

  L65:
    assume {:nonnull} Iosb_5 != 0;
    assume Iosb_5 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} DoesNameExist != 0;
    Tmp_722 := 4;
    goto L76;

  L76:
    assume {:nonnull} Iosb_5 != 0;
    assume Iosb_5 > 0;
    goto L77;

  anon36_Then:
    assume {:partition} DoesNameExist == 0;
    Tmp_722 := 5;
    goto L76;

  anon26_Then:
    assume {:partition} i_8 == 0;
    goto L65;

  anon35_Then:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} i_8 != 0;
    i_8 := i_8 - 1;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} i_8 == 0;
    goto L58;

  anon34_Then:
    assume {:nonnull} FileObject_5 != 0;
    assume FileObject_5 > 0;
    i_8 := i_8 - 1;
    goto L59;

  anon33_Then:
    assume {:nonnull} Dcb_3 != 0;
    assume Dcb_3 > 0;
    havoc Tmp_734;
    assume {:nonnull} Dcb_3 != 0;
    assume Dcb_3 > 0;
    havoc Tmp_726;
    assume {:nonnull} Tmp_726 != 0;
    assume Tmp_726 > 0;
    assume {:nonnull} Tmp_734 != 0;
    assume Tmp_734 > 0;
    goto L53;

  anon32_Then:
    Tmp_736 := ShareAccess_2;
    assume {:nonnull} DesiredAccess_2 != 0;
    assume DesiredAccess_2 > 0;
    havoc vslice_dummy_var_1253;
    call {:si_unique_call 728} IoSetShareAccess(vslice_dummy_var_1253, Tmp_736, 0, 0);
    goto L40;
}



procedure {:origName "_sdv_init29"} _sdv_init29();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init29"} _sdv_init29()
{
  var vslice_dummy_var_110: int;

  anon0:
    call {:si_unique_call 729} vslice_dummy_var_110 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatCreateNewFile"} FatCreateNewFile(actual_IrpContext_41: int, actual_FileObject_6: int, actual_Vcb_29: int, actual_ParentDcb_4: int, actual_OemName: int, actual_UnicodeName: int, actual_DesiredAccess_3: int, actual_ShareAccess_3: int, actual_AllocationSize_3: int, actual_EaBuffer_3: int, actual_EaLength_3: int, actual_FileAttributes_3: int, actual_LfnBuffer_1: int, actual_IsPagingFile_3: int, actual_NoEaKnowledge_3: int, actual_DeleteOnClose_2: int, actual_TemporaryFile_1: int) returns (SD9: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCreateNewFile"} FatCreateNewFile(actual_IrpContext_41: int, actual_FileObject_6: int, actual_Vcb_29: int, actual_ParentDcb_4: int, actual_OemName: int, actual_UnicodeName: int, actual_DesiredAccess_3: int, actual_ShareAccess_3: int, actual_AllocationSize_3: int, actual_EaBuffer_3: int, actual_EaLength_3: int, actual_FileAttributes_3: int, actual_LfnBuffer_1: int, actual_IsPagingFile_3: int, actual_NoEaKnowledge_3: int, actual_DeleteOnClose_2: int, actual_TemporaryFile_1: int) returns (SD9: int)
{
  var {:scalar} i_9: int;
  var {:scalar} Tmp_740: int;
  var {:pointer} ShortDirent: int;
  var {:scalar} Tmp_741: int;
  var {:pointer} UnwindFcb_1: int;
  var {:scalar} Tmp_742: int;
  var {:scalar} Tmp_744: int;
  var {:scalar} Tmp_745: int;
  var {:scalar} HaveTunneledInformation: int;
  var {:pointer} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:scalar} UnwindAllocation: int;
  var {:scalar} Tmp_749: int;
  var {:pointer} Fcb_12: int;
  var {:pointer} Tmp_750: int;
  var {:scalar} Tmp_751: int;
  var {:pointer} UniTunneledShortNameBuffer: int;
  var {:pointer} UniTunneledLongNameBuffer: int;
  var {:scalar} DirentsInFirstPage: int;
  var {:pointer} Tmp_754: int;
  var {:scalar} UsingTunneledLfn: int;
  var {:pointer} Dirent_8: int;
  var {:scalar} Iosb_6: int;
  var {:pointer} SecondPageDirent: int;
  var {:scalar} Tmp_755: int;
  var {:dopa} {:scalar} AllLowerComponent: int;
  var {:scalar} BytesInFirstPage: int;
  var {:pointer} DirentBcb_2: int;
  var {:pointer} Tmp_756: int;
  var {:scalar} ShortName_1: int;
  var {:scalar} Tmp_757: int;
  var {:scalar} LocalAbnormalTermination: int;
  var {:scalar} ShortDirentByteOffset: int;
  var {:scalar} sdv_274: int;
  var {:pointer} UnwindCcb_3: int;
  var {:scalar} Tmp_758: int;
  var {:pointer} Tmp_759: int;
  var {:scalar} DirentsNeeded: int;
  var {:scalar} Tmp_9: int;
  var {:scalar} DirentFromPool: int;
  var {:pointer} UnwindDirent: int;
  var {:pointer} SecondPageBcb: int;
  var {:pointer} sdv_277: int;
  var {:pointer} Tmp_760: int;
  var {:dopa} {:scalar} EaHandle_1: int;
  var {:dopa} {:scalar} AllLowerExtension: int;
  var {:pointer} RealUnicodeName: int;
  var {:pointer} ShortNameBuffer: int;
  var {:pointer} Tmp_761: int;
  var {:scalar} SecondPageOffset: int;
  var {:pointer} FirstPageDirent: int;
  var {:pointer} Tmp_762: int;
  var {:scalar} DirentByteOffset_2: int;
  var {:scalar} sdv_279: int;
  var {:scalar} UniTunneledShortName: int;
  var {:scalar} TunneledCreationTime: int;
  var {:dopa} {:scalar} CreateLfn: int;
  var {:scalar} UniTunneledLongName: int;
  var {:pointer} IrpContext_41: int;
  var {:pointer} FileObject_6: int;
  var {:pointer} Vcb_29: int;
  var {:pointer} ParentDcb_4: int;
  var {:pointer} OemName: int;
  var {:pointer} UnicodeName: int;
  var {:pointer} DesiredAccess_3: int;
  var {:scalar} ShareAccess_3: int;
  var {:scalar} AllocationSize_3: int;
  var {:pointer} EaBuffer_3: int;
  var {:scalar} EaLength_3: int;
  var {:scalar} FileAttributes_3: int;
  var {:pointer} LfnBuffer_1: int;
  var {:scalar} IsPagingFile_3: int;
  var {:scalar} NoEaKnowledge_3: int;
  var {:scalar} DeleteOnClose_2: int;
  var {:scalar} TemporaryFile_1: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_1254: int;
  var vslice_dummy_var_1255: int;
  var vslice_dummy_var_1256: int;
  var vslice_dummy_var_1257: int;

  anon0:
    call {:si_unique_call 730} Dirent_8 := __HAVOC_malloc(4);
    call {:si_unique_call 731} Iosb_6 := __HAVOC_malloc(12);
    call {:si_unique_call 732} SecondPageDirent := __HAVOC_malloc(4);
    call {:si_unique_call 733} AllLowerComponent := __HAVOC_malloc(4);
    call {:si_unique_call 734} DirentBcb_2 := __HAVOC_malloc(4);
    call {:si_unique_call 735} ShortName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 736} Tmp_9 := __HAVOC_malloc(12);
    call {:si_unique_call 737} SecondPageBcb := __HAVOC_malloc(4);
    call {:si_unique_call 738} EaHandle_1 := __HAVOC_malloc(4);
    call {:si_unique_call 739} AllLowerExtension := __HAVOC_malloc(4);
    call {:si_unique_call 740} UniTunneledShortName := __HAVOC_malloc(12);
    call {:si_unique_call 741} TunneledCreationTime := __HAVOC_malloc(20);
    call {:si_unique_call 742} CreateLfn := __HAVOC_malloc(4);
    call {:si_unique_call 743} UniTunneledLongName := __HAVOC_malloc(12);
    IrpContext_41 := actual_IrpContext_41;
    FileObject_6 := actual_FileObject_6;
    Vcb_29 := actual_Vcb_29;
    ParentDcb_4 := actual_ParentDcb_4;
    OemName := actual_OemName;
    UnicodeName := actual_UnicodeName;
    DesiredAccess_3 := actual_DesiredAccess_3;
    ShareAccess_3 := actual_ShareAccess_3;
    AllocationSize_3 := actual_AllocationSize_3;
    EaBuffer_3 := actual_EaBuffer_3;
    EaLength_3 := actual_EaLength_3;
    FileAttributes_3 := actual_FileAttributes_3;
    LfnBuffer_1 := actual_LfnBuffer_1;
    IsPagingFile_3 := actual_IsPagingFile_3;
    NoEaKnowledge_3 := actual_NoEaKnowledge_3;
    DeleteOnClose_2 := actual_DeleteOnClose_2;
    TemporaryFile_1 := actual_TemporaryFile_1;
    call {:si_unique_call 744} Tmp_747 := __HAVOC_malloc(44);
    call {:si_unique_call 745} Tmp_750 := __HAVOC_malloc(44);
    call {:si_unique_call 746} UniTunneledShortNameBuffer := __HAVOC_malloc(48);
    call {:si_unique_call 747} UniTunneledLongNameBuffer := __HAVOC_malloc(104);
    call {:si_unique_call 748} Tmp_756 := __HAVOC_malloc(44);
    call {:si_unique_call 749} ShortNameBuffer := __HAVOC_malloc(48);
    assume {:nonnull} Dirent_8 != 0;
    assume Dirent_8 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_8] := 0;
    assume {:nonnull} DirentBcb_2 != 0;
    assume DirentBcb_2 > 0;
    assume {:nonnull} SecondPageBcb != 0;
    assume SecondPageBcb > 0;
    DirentFromPool := 0;
    UsingTunneledLfn := 0;
    UnwindDirent := 0;
    UnwindFcb_1 := 0;
    UnwindAllocation := 0;
    UnwindCcb_3 := 0;
    LocalAbnormalTermination := 0;
    assume {:nonnull} ShortName_1 != 0;
    assume ShortName_1 > 0;
    assume {:nonnull} ShortName_1 != 0;
    assume ShortName_1 > 0;
    assume {:nonnull} ShortName_1 != 0;
    assume ShortName_1 > 0;
    assume {:nonnull} UniTunneledShortName != 0;
    assume UniTunneledShortName > 0;
    assume {:nonnull} UniTunneledShortName != 0;
    assume UniTunneledShortName > 0;
    assume {:nonnull} UniTunneledShortName != 0;
    assume UniTunneledShortName > 0;
    assume {:nonnull} UniTunneledLongName != 0;
    assume UniTunneledLongName > 0;
    assume {:nonnull} UniTunneledLongName != 0;
    assume UniTunneledLongName > 0;
    assume {:nonnull} UniTunneledLongName != 0;
    assume UniTunneledLongName > 0;
    assume {:nonnull} EaHandle_1 != 0;
    assume EaHandle_1 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} NoEaKnowledge_3 != 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} EaLength_3 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    goto L1;

  L1:
    SD9 := Tmp_9;
    return;

  anon90_Then:
    assume {:partition} 0 >= EaLength_3;
    goto L59;

  L59:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} DeleteOnClose_2 != 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} BAND(FileAttributes_3, 1) != 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    goto L1;

  anon91_Then:
    assume {:partition} BAND(FileAttributes_3, 1) == 0;
    goto L63;

  L63:
    call {:si_unique_call 750} vslice_dummy_var_111 := corral_nondet();
    call {:si_unique_call 751} HaveTunneledInformation := corral_nondet();
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} HaveTunneledInformation != 0;
    Tmp_761 := UniTunneledShortName;
    goto L75;

  L75:
    call {:si_unique_call 752} FatSelectNames(IrpContext_41, ParentDcb_4, OemName, UnicodeName, ShortName_1, Tmp_761, AllLowerComponent, AllLowerExtension, CreateLfn);
    RealUnicodeName := UnicodeName;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} CreateLfn != 0;
    assume CreateLfn > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto L83;

  L83:
    assume {:nonnull} CreateLfn != 0;
    assume CreateLfn > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} RealUnicodeName != 0;
    assume RealUnicodeName > 0;
    havoc Tmp_740;
    goto L86;

  L86:
    DirentsNeeded := Tmp_740;
    call {:si_unique_call 753} DirentByteOffset_2 := FatCreateNewDirent(IrpContext_41, ParentDcb_4, DirentsNeeded);
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    call {:si_unique_call 754} FatPrepareWriteDirectoryFile(IrpContext_41, ParentDcb_4, DirentByteOffset_2, 32, DirentBcb_2, Dirent_8, 0, 1, Status__IO_STATUS_BLOCK(Iosb_6));
    assume {:nonnull} Dirent_8 != 0;
    assume Dirent_8 > 0;
    UnwindDirent := Mem_T.P_PACKED_DIRENT[Dirent_8];
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} INTDIV(DirentByteOffset_2, 4096) != INTDIV(DirentByteOffset_2 + (DirentsNeeded - 1) * 32, 4096);
    Tmp_755 := BAND(DirentByteOffset_2, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    SecondPageOffset := Tmp_755 + 4096;
    BytesInFirstPage := SecondPageOffset - DirentByteOffset_2;
    DirentsInFirstPage := INTDIV(BytesInFirstPage, 32);
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    call {:si_unique_call 755} FatPrepareWriteDirectoryFile(IrpContext_41, ParentDcb_4, SecondPageOffset, 32, SecondPageBcb, SecondPageDirent, 0, 1, Status__IO_STATUS_BLOCK(Iosb_6));
    assume {:nonnull} Dirent_8 != 0;
    assume Dirent_8 > 0;
    FirstPageDirent := Mem_T.P_PACKED_DIRENT[Dirent_8];
    Tmp_749 := DirentsNeeded * 32;
    call {:si_unique_call 756} sdv_277 := ExAllocatePoolWithTag(17, Tmp_749, -999005882);
    assume {:nonnull} Dirent_8 != 0;
    assume Dirent_8 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_8] := sdv_277;
    DirentFromPool := 1;
    goto L230;

  L230:
    assume {:nonnull} Dirent_8 != 0;
    assume Dirent_8 > 0;
    ShortDirent := Mem_T.P_PACKED_DIRENT[Dirent_8];
    ShortDirentByteOffset := DirentByteOffset_2 + (DirentsNeeded - 1) * 32;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} HaveTunneledInformation != 0;
    Tmp_759 := TunneledCreationTime;
    goto L249;

  L249:
    Tmp_758 := BOR(FileAttributes_3, 32);
    assume {:nonnull} CreateLfn != 0;
    assume CreateLfn > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    Tmp_760 := RealUnicodeName;
    goto L253;

  L253:
    assume {:nonnull} AllLowerComponent != 0;
    assume AllLowerComponent > 0;
    assume {:nonnull} AllLowerExtension != 0;
    assume AllLowerExtension > 0;
    havoc vslice_dummy_var_1254;
    havoc vslice_dummy_var_1255;
    call {:si_unique_call 757} FatConstructDirent(IrpContext_41, ShortDirent, ShortName_1, vslice_dummy_var_1254, vslice_dummy_var_1255, Tmp_760, Tmp_758, 1, Tmp_759);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} DirentFromPool != 0;
    call {:si_unique_call 758} sdv_RtlCopyMemory(0, 0, BytesInFirstPage);
    Tmp_751 := DirentsNeeded * 32 - BytesInFirstPage;
    assume {:nonnull} Dirent_8 != 0;
    assume Dirent_8 > 0;
    call {:si_unique_call 759} sdv_RtlCopyMemory(0, 0, Tmp_751);
    assume {:nonnull} SecondPageDirent != 0;
    assume SecondPageDirent > 0;
    ShortDirent := Mem_T.P_PACKED_DIRENT[SecondPageDirent];
    goto L257;

  L257:
    assume {:nonnull} CreateLfn != 0;
    assume CreateLfn > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Tmp_762 := RealUnicodeName;
    goto L269;

  L269:
    call {:si_unique_call 760} UnwindFcb_1 := FatCreateFcb(IrpContext_41, Vcb_29, ParentDcb_4, DirentByteOffset_2, ShortDirentByteOffset, ShortDirent, Tmp_762, IsPagingFile_3, 0);
    Fcb_12 := UnwindFcb_1;
    UnwindDirent := 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} TemporaryFile_1 != 0;
    assume {:nonnull} Fcb_12 != 0;
    assume Fcb_12 > 0;
    goto L276;

  L276:
    call {:si_unique_call 761} FatAddFileAllocation(IrpContext_41, Fcb_12, FileObject_6, AllocationSize_3);
    UnwindAllocation := 1;
    assume {:nonnull} Fcb_12 != 0;
    assume Fcb_12 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} EaLength_3 > 0;
    assume {:nonnull} Fcb_12 != 0;
    assume Fcb_12 > 0;
    havoc vslice_dummy_var_1256;
    call {:si_unique_call 762} FatCreateEa(IrpContext_41, vslice_dummy_var_1256, EaBuffer_3, EaLength_3, Oem_unnamed_tag_70(Name__FILE_NAME_NODE(ShortName__FCB(Fcb_12))), EaHandle_1);
    goto L283;

  L283:
    assume {:nonnull} Fcb_12 != 0;
    assume Fcb_12 > 0;
    havoc Tmp_754;
    assume {:nonnull} Tmp_754 != 0;
    assume Tmp_754 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    goto L288;

  L288:
    call {:si_unique_call 763} FatSetFullNameInFcb(IrpContext_41, Fcb_12, RealUnicodeName);
    call {:si_unique_call 764} UnwindCcb_3 := FatCreateCcb(IrpContext_41);
    call {:si_unique_call 765} FatSetFileObject(FileObject_6, 2, Fcb_12, UnwindCcb_3);
    assume {:nonnull} Fcb_12 != 0;
    assume Fcb_12 > 0;
    havoc Tmp_748;
    assume {:nonnull} FileObject_6 != 0;
    assume FileObject_6 > 0;
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    assume {:nonnull} Fcb_12 != 0;
    assume Fcb_12 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    goto L303;

  L303:
    assume {:nonnull} Fcb_12 != 0;
    assume Fcb_12 > 0;
    havoc Tmp_742;
    call {:si_unique_call 766} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_742, 0, 0, 1, 1, 0);
    Tmp_757 := ShareAccess_3;
    assume {:nonnull} DesiredAccess_3 != 0;
    assume DesiredAccess_3 > 0;
    havoc vslice_dummy_var_1257;
    call {:si_unique_call 767} IoSetShareAccess(vslice_dummy_var_1257, Tmp_757, 0, 0);
    assume {:nonnull} Fcb_12 != 0;
    assume Fcb_12 > 0;
    assume {:nonnull} Fcb_12 != 0;
    assume Fcb_12 > 0;
    assume {:nonnull} FileObject_6 != 0;
    assume FileObject_6 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} Fcb_12 != 0;
    assume Fcb_12 > 0;
    goto L314;

  L314:
    assume {:nonnull} Vcb_29 != 0;
    assume Vcb_29 > 0;
    assume {:nonnull} FileObject_6 != 0;
    assume FileObject_6 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    goto L318;

  L318:
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} DeleteOnClose_2 != 0;
    assume {:nonnull} UnwindCcb_3 != 0;
    assume UnwindCcb_3 > 0;
    goto L323;

  L323:
    assume {:nonnull} CreateLfn != 0;
    assume CreateLfn > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} UsingTunneledLfn == 0;
    assume {:nonnull} UnwindCcb_3 != 0;
    assume UnwindCcb_3 > 0;
    goto L321;

  L321:
    assume {:nonnull} UniTunneledLongName != 0;
    assume UniTunneledLongName > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    call {:si_unique_call 768} sdv_ExFreePool(0);
    goto L327;

  L327:
    call {:si_unique_call 769} sdv_279 := sdv_AbnormalTermination();
    LocalAbnormalTermination := sdv_279;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} LocalAbnormalTermination != 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} UnwindFcb_1 != 0;
    goto L338;

  L338:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} UnwindDirent != 0;
    i_9 := 0;
    goto L341;

  L341:
    call {:si_unique_call 770} i_9, Tmp_741, Tmp_744, Tmp_745, Tmp_747, Tmp_750, Tmp_756 := FatCreateNewFile_loop_L341(i_9, Tmp_741, Tmp_744, Tmp_745, Tmp_747, Tmp_750, DirentsInFirstPage, Dirent_8, SecondPageDirent, Tmp_756, DirentsNeeded, DirentFromPool, SecondPageBcb, FirstPageDirent);
    goto L341_last;

  L341_last:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} DirentsNeeded > i_9;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} DirentFromPool != 0;
    assume {:nonnull} SecondPageBcb != 0;
    assume SecondPageBcb > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    goto L346;

  L346:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} DirentsInFirstPage > i_9;
    Tmp_744 := i_9;
    assume {:nonnull} FirstPageDirent != 0;
    assume FirstPageDirent > 0;
    havoc Tmp_750;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    goto L349;

  L349:
    i_9 := i_9 + 1;
    goto L349_dummy;

  L349_dummy:
    assume false;
    return;

  anon109_Then:
    assume {:partition} i_9 >= DirentsInFirstPage;
    Tmp_745 := i_9 - DirentsInFirstPage;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[SecondPageDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[SecondPageDirent] > 0;
    assume {:nonnull} SecondPageDirent != 0;
    assume SecondPageDirent > 0;
    havoc Tmp_756;
    assume {:nonnull} Tmp_756 != 0;
    assume Tmp_756 > 0;
    goto L349;

  anon107_Then:
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} i_9 != DirentsInFirstPage;
    goto L346;

  anon108_Then:
    assume {:partition} i_9 == DirentsInFirstPage;
    goto L335;

  L335:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} LocalAbnormalTermination != 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} UnwindAllocation != 0;
    call {:si_unique_call 771} FatTruncateFileAllocation(IrpContext_41, Fcb_12, 0);
    goto L354;

  L354:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} LocalAbnormalTermination != 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} UnwindFcb_1 != 0;
    call {:si_unique_call 772} FatDeleteDirent#1(IrpContext_41, UnwindFcb_1, 0, 1);
    goto L410;

  L410:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} LocalAbnormalTermination != 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} UnwindFcb_1 != 0;
    call {:si_unique_call 773} FatDeleteFcb_Real(IrpContext_41, UnwindFcb_1);
    goto L440;

  L440:
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} UnwindCcb_3 != 0;
    call {:si_unique_call 774} FatDeleteCcb_Real(IrpContext_41, UnwindCcb_3);
    goto L438;

  L438:
    assume {:nonnull} DirentBcb_2 != 0;
    assume DirentBcb_2 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} DirentBcb_2 != 0;
    assume DirentBcb_2 > 0;
    goto L447;

  L447:
    assume {:nonnull} SecondPageBcb != 0;
    assume SecondPageBcb > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} SecondPageBcb != 0;
    assume SecondPageBcb > 0;
    goto L452;

  L452:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} DirentFromPool != 0;
    call {:si_unique_call 775} sdv_ExFreePool(0);
    goto L457;

  L457:
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    assume {:nonnull} Iosb_6 != 0;
    assume Iosb_6 > 0;
    assume {:nonnull} Tmp_9 != 0;
    assume Tmp_9 > 0;
    goto L1;

  anon118_Then:
    assume {:partition} DirentFromPool == 0;
    goto L457;

  anon117_Then:
    goto L452;

  anon114_Then:
    goto L447;

  anon116_Then:
    assume {:partition} UnwindCcb_3 == 0;
    goto L438;

  anon115_Then:
    assume {:partition} UnwindFcb_1 == 0;
    goto L440;

  anon112_Then:
    assume {:partition} LocalAbnormalTermination == 0;
    goto L438;

  anon113_Then:
    assume {:partition} UnwindFcb_1 == 0;
    goto L410;

  anon110_Then:
    assume {:partition} LocalAbnormalTermination == 0;
    goto L410;

  anon111_Then:
    assume {:partition} UnwindAllocation == 0;
    goto L354;

  anon102_Then:
    assume {:partition} LocalAbnormalTermination == 0;
    goto L354;

  anon106_Then:
    assume {:partition} DirentFromPool == 0;
    Tmp_741 := i_9;
    assume {:nonnull} Dirent_8 != 0;
    assume Dirent_8 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_8] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_8] > 0;
    havoc Tmp_747;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    goto L349;

  anon105_Then:
    assume {:partition} i_9 >= DirentsNeeded;
    goto L335;

  anon104_Then:
    assume {:partition} UnwindDirent == 0;
    goto L335;

  anon103_Then:
    assume {:partition} UnwindFcb_1 == 0;
    goto L338;

  anon132_Then:
    assume {:partition} LocalAbnormalTermination == 0;
    goto L335;

  anon98_Then:
    goto L327;

  anon101_Then:
    assume {:partition} UsingTunneledLfn != 0;
    goto L321;

  anon100_Then:
    goto L321;

  anon99_Then:
    assume {:partition} DeleteOnClose_2 == 0;
    goto L323;

  anon131_Then:
    goto L321;

  anon130_Then:
    assume {:nonnull} Vcb_29 != 0;
    assume Vcb_29 > 0;
    goto L318;

  anon129_Then:
    goto L314;

  anon128_Then:
    call {:si_unique_call 776} FatSetFullFileNameInFcb#1(IrpContext_41, Fcb_12);
    goto L303;

  anon127_Then:
    assume {:nonnull} EaHandle_1 != 0;
    assume EaHandle_1 > 0;
    assume {:nonnull} ShortDirent != 0;
    assume ShortDirent > 0;
    goto L288;

  anon126_Then:
    assume {:partition} 0 >= EaLength_3;
    goto L283;

  anon125_Then:
    assume {:partition} TemporaryFile_1 == 0;
    goto L276;

  anon97_Then:
    Tmp_762 := 0;
    goto L269;

  anon96_Then:
    assume {:partition} DirentFromPool == 0;
    goto L257;

  anon124_Then:
    Tmp_760 := 0;
    goto L253;

  anon123_Then:
    assume {:partition} HaveTunneledInformation == 0;
    Tmp_759 := 0;
    goto L249;

  anon122_Then:
    assume {:partition} INTDIV(DirentByteOffset_2, 4096) == INTDIV(DirentByteOffset_2 + (DirentsNeeded - 1) * 32, 4096);
    goto L230;

  anon95_Then:
    Tmp_740 := 1;
    goto L86;

  anon93_Then:
    assume {:nonnull} UniTunneledLongName != 0;
    assume UniTunneledLongName > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    call {:si_unique_call 777} sdv_274 := FatLfnDirentExists(IrpContext_41, ParentDcb_4, UniTunneledLongName, LfnBuffer_1);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} sdv_274 == 0;
    UsingTunneledLfn := 1;
    assume {:nonnull} CreateLfn != 0;
    assume CreateLfn > 0;
    RealUnicodeName := UniTunneledLongName;
    assume {:nonnull} AllLowerComponent != 0;
    assume AllLowerComponent > 0;
    assume {:nonnull} AllLowerExtension != 0;
    assume AllLowerExtension > 0;
    goto L83;

  anon119_Then:
    assume {:partition} sdv_274 != 0;
    goto L83;

  anon94_Then:
    goto L83;

  anon121_Then:
    assume {:nonnull} AllLowerComponent != 0;
    assume AllLowerComponent > 0;
    assume {:nonnull} AllLowerExtension != 0;
    assume AllLowerExtension > 0;
    assume {:nonnull} CreateLfn != 0;
    assume CreateLfn > 0;
    goto L83;

  anon92_Then:
    assume {:partition} HaveTunneledInformation == 0;
    Tmp_761 := 0;
    goto L75;

  anon89_Then:
    assume {:partition} DeleteOnClose_2 == 0;
    goto L63;

  anon120_Then:
    assume {:partition} NoEaKnowledge_3 == 0;
    goto L59;
}



procedure {:origName "FatOpenExistingFcb"} FatOpenExistingFcb(actual_IrpContext_42: int, actual_FileObject_7: int, actual_Vcb_30: int, actual_Fcb_13: int, actual_DesiredAccess_4: int, actual_ShareAccess_4: int, actual_AllocationSize_4: int, actual_EaBuffer_4: int, actual_EaLength_4: int, actual_FileAttributes_4: int, actual_CreateDisposition_3: int, actual_NoEaKnowledge_4: int, actual_DeleteOnClose_3: int, actual_FileNameOpenedDos_2: int, actual_OplockPostIrp_1: int) returns (SD8: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOpenExistingFcb"} FatOpenExistingFcb(actual_IrpContext_42: int, actual_FileObject_7: int, actual_Vcb_30: int, actual_Fcb_13: int, actual_DesiredAccess_4: int, actual_ShareAccess_4: int, actual_AllocationSize_4: int, actual_EaBuffer_4: int, actual_EaLength_4: int, actual_FileAttributes_4: int, actual_CreateDisposition_3: int, actual_NoEaKnowledge_4: int, actual_DeleteOnClose_3: int, actual_FileNameOpenedDos_2: int, actual_OplockPostIrp_1: int) returns (SD8: int)
{
  var {:pointer} structPtr888Iosb: int;
  var {:scalar} Tmp_763: int;
  var {:scalar} AddedAccess_1: int;
  var {:dopa} {:scalar} NeedEaCount_1: int;
  var {:scalar} DecrementFcbOpenCount: int;
  var {:pointer} Ccb_7: int;
  var {:pointer} Tmp_764: int;
  var {:scalar} Tmp_765: int;
  var {:scalar} Tmp_768: int;
  var {:pointer} Dirent_9: int;
  var {:scalar} Iosb: int;
  var {:pointer} Tmp_769: int;
  var {:pointer} Tmp_770: int;
  var {:scalar} sdv_283: int;
  var {:pointer} DirentBcb_3: int;
  var {:scalar} FcbAcquired: int;
  var {:scalar} Tmp_772: int;
  var {:pointer} UnwindCcb_4: int;
  var {:pointer} Tmp_774: int;
  var {:scalar} sdv_286: int;
  var {:pointer} Tmp_777: int;
  var {:pointer} Tmp_778: int;
  var {:scalar} System_1: int;
  var {:scalar} sdv_287: int;
  var {:scalar} Tmp_779: int;
  var {:scalar} Tmp_781: int;
  var {:pointer} Tmp_782: int;
  var {:pointer} Tmp_783: int;
  var {:pointer} Tmp_784: int;
  var {:pointer} Tmp_786: int;
  var {:scalar} UnwindShareAccess_1: int;
  var {:scalar} Tmp_787: int;
  var {:pointer} Tmp_788: int;
  var {:scalar} sdv_293: int;
  var {:scalar} Tmp_8: int;
  var {:pointer} Tmp_789: int;
  var {:scalar} OldStatus: int;
  var {:scalar} Hidden_1: int;
  var {:scalar} sdv_295: int;
  var {:pointer} Tmp_790: int;
  var {:pointer} IrpContext_42: int;
  var {:pointer} FileObject_7: int;
  var {:pointer} Vcb_30: int;
  var {:pointer} Fcb_13: int;
  var {:pointer} DesiredAccess_4: int;
  var {:scalar} ShareAccess_4: int;
  var {:scalar} AllocationSize_4: int;
  var {:pointer} EaBuffer_4: int;
  var {:scalar} EaLength_4: int;
  var {:scalar} FileAttributes_4: int;
  var {:scalar} CreateDisposition_3: int;
  var {:scalar} NoEaKnowledge_4: int;
  var {:scalar} DeleteOnClose_3: int;
  var {:scalar} FileNameOpenedDos_2: int;
  var {:pointer} OplockPostIrp_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_1258: int;
  var vslice_dummy_var_1259: int;
  var vslice_dummy_var_1260: int;

  anon0:
    call {:si_unique_call 778} NeedEaCount_1 := __HAVOC_malloc(4);
    call {:si_unique_call 779} Dirent_9 := __HAVOC_malloc(4);
    call {:si_unique_call 780} Iosb := __HAVOC_malloc(12);
    call {:si_unique_call 781} DirentBcb_3 := __HAVOC_malloc(4);
    call {:si_unique_call 782} vslice_dummy_var_112 := __HAVOC_malloc(12);
    call {:si_unique_call 783} Tmp_8 := __HAVOC_malloc(12);
    IrpContext_42 := actual_IrpContext_42;
    FileObject_7 := actual_FileObject_7;
    Vcb_30 := actual_Vcb_30;
    Fcb_13 := actual_Fcb_13;
    DesiredAccess_4 := actual_DesiredAccess_4;
    ShareAccess_4 := actual_ShareAccess_4;
    AllocationSize_4 := actual_AllocationSize_4;
    EaBuffer_4 := actual_EaBuffer_4;
    EaLength_4 := actual_EaLength_4;
    FileAttributes_4 := actual_FileAttributes_4;
    CreateDisposition_3 := actual_CreateDisposition_3;
    NoEaKnowledge_4 := actual_NoEaKnowledge_4;
    DeleteOnClose_3 := actual_DeleteOnClose_3;
    FileNameOpenedDos_2 := actual_FileNameOpenedDos_2;
    OplockPostIrp_1 := actual_OplockPostIrp_1;
    assume {:nonnull} DirentBcb_3 != 0;
    assume DirentBcb_3 > 0;
    AddedAccess_1 := 0;
    UnwindShareAccess_1 := 0;
    UnwindCcb_4 := 0;
    DecrementFcbOpenCount := 0;
    FcbAcquired := 0;
    call {:si_unique_call 784} vslice_dummy_var_114 := FatAcquireExclusiveFcb(IrpContext_42, Fcb_13);
    FcbAcquired := 1;
    assume {:nonnull} OplockPostIrp_1 != 0;
    assume OplockPostIrp_1 > 0;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    call {:si_unique_call 785} sdv_286 := corral_nondet();
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} sdv_286 != 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    call {:si_unique_call 786} boogieTmp := corral_nondet();
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} OplockPostIrp_1 != 0;
    assume OplockPostIrp_1 > 0;
    goto L63;

  L63:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} AddedAccess_1 != 0;
    assume {:nonnull} DesiredAccess_4 != 0;
    assume DesiredAccess_4 > 0;
    Tmp_779 := ShareAccess_4;
    assume {:nonnull} DesiredAccess_4 != 0;
    assume DesiredAccess_4 > 0;
    havoc vslice_dummy_var_1258;
    call {:si_unique_call 787} vslice_dummy_var_115 := IoCheckShareAccess(vslice_dummy_var_1258, Tmp_779, 0, 0, 1);
    goto L77;

  L77:
    UnwindShareAccess_1 := 1;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    assume {:nonnull} FileObject_7 != 0;
    assume FileObject_7 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    goto L82;

  L82:
    assume {:nonnull} Vcb_30 != 0;
    assume Vcb_30 > 0;
    assume {:nonnull} FileObject_7 != 0;
    assume FileObject_7 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto L87;

  L87:
    assume {:nonnull} FileObject_7 != 0;
    assume FileObject_7 > 0;
    havoc Ccb_7;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} DeleteOnClose_3 != 0;
    assume {:nonnull} Ccb_7 != 0;
    assume Ccb_7 > 0;
    goto L89;

  L89:
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} FileNameOpenedDos_2 != 0;
    assume {:nonnull} Ccb_7 != 0;
    assume Ccb_7 > 0;
    goto L64;

  L64:
    assume {:nonnull} DirentBcb_3 != 0;
    assume DirentBcb_3 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} DirentBcb_3 != 0;
    assume DirentBcb_3 > 0;
    goto L92;

  L92:
    call {:si_unique_call 788} sdv_283 := sdv_AbnormalTermination();
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} sdv_283 != 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} UnwindCcb_4 != 0;
    call {:si_unique_call 789} FatDeleteCcb_Real(IrpContext_42, UnwindCcb_4);
    goto L102;

  L102:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} UnwindShareAccess_1 != 0;
    call {:si_unique_call 790} IoRemoveShareAccess(0, 0);
    goto L100;

  L100:
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} DecrementFcbOpenCount != 0;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 791} FatDeleteFcb_Real(IrpContext_42, Fcb_13);
    goto L109;

  L109:
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} FcbAcquired != 0;
    call {:si_unique_call 792} ExReleaseResourceLite(0);
    goto L115;

  L115:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    assume {:nonnull} Tmp_8 != 0;
    assume Tmp_8 > 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    assume {:nonnull} Tmp_8 != 0;
    assume Tmp_8 > 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    assume {:nonnull} Tmp_8 != 0;
    assume Tmp_8 > 0;
    SD8 := Tmp_8;
    return;

  anon136_Then:
    assume {:partition} FcbAcquired == 0;
    goto L115;

  anon175_Then:
    goto L109;

  anon133_Then:
    assume {:partition} DecrementFcbOpenCount == 0;
    goto L109;

  anon135_Then:
    assume {:partition} UnwindShareAccess_1 == 0;
    goto L100;

  anon134_Then:
    assume {:partition} UnwindCcb_4 == 0;
    goto L102;

  anon132_Then:
    assume {:partition} sdv_283 == 0;
    goto L100;

  anon128_Then:
    goto L92;

  anon131_Then:
    assume {:partition} FileNameOpenedDos_2 == 0;
    goto L64;

  anon174_Then:
    assume {:partition} DeleteOnClose_3 == 0;
    goto L89;

  anon173_Then:
    assume {:nonnull} Vcb_30 != 0;
    assume Vcb_30 > 0;
    goto L87;

  anon172_Then:
    goto L82;

  anon130_Then:
    assume {:partition} AddedAccess_1 == 0;
    call {:si_unique_call 793} IoUpdateShareAccess(0, 0);
    goto L77;

  anon129_Then:
    goto L64;

  anon127_Then:
    goto L64;

  anon126_Then:
    goto L53;

  L53:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} CreateDisposition_3 == 2;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto L63;

  anon124_Then:
    assume {:partition} CreateDisposition_3 != 2;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} CreateDisposition_3 != 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} CreateDisposition_3 == 4;
    goto L125;

  L125:
    assume {:nonnull} DesiredAccess_4 != 0;
    assume DesiredAccess_4 > 0;
    havoc AddedAccess_1;
    assume {:nonnull} DesiredAccess_4 != 0;
    assume DesiredAccess_4 > 0;
    goto L127;

  L127:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc vslice_dummy_var_1259;
    call {:si_unique_call 794} sdv_293 := FatCheckFileAccess(IrpContext_42, vslice_dummy_var_1259, DesiredAccess_4);
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} sdv_293 != 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} DeleteOnClose_3 != 0;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto L63;

  anon143_Then:
    goto L133;

  L133:
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} CreateDisposition_3 == 0;
    goto L250;

  L250:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc Tmp_787;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} Tmp_787 == 0;
    Hidden_1 := 0;
    goto L365;

  L365:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc Tmp_781;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Tmp_781 == 0;
    System_1 := 0;
    goto L369;

  L369:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} Hidden_1 != 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} BAND(FileAttributes_4, 2) == 0;
    goto L257;

  L257:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto L63;

  anon169_Then:
    assume {:partition} BAND(FileAttributes_4, 2) != 0;
    goto L255;

  L255:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} System_1 != 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} BAND(FileAttributes_4, 4) != 0;
    goto L259;

  L259:
    assume {:nonnull} Vcb_30 != 0;
    assume Vcb_30 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Vcb_30 != 0;
    assume Vcb_30 > 0;
    call {:si_unique_call 795} IoSetHardErrorOrVerifyDevice(0, 0);
    assume {:nonnull} Vcb_30 != 0;
    assume Vcb_30 > 0;
    havoc Tmp_769;
    assume {:nonnull} Tmp_769 != 0;
    assume Tmp_769 > 0;
    havoc Tmp_788;
    assume {:nonnull} Vcb_30 != 0;
    assume Vcb_30 > 0;
    havoc Tmp_784;
    assume {:nonnull} Tmp_784 != 0;
    assume Tmp_784 > 0;
    havoc Tmp_774;
    assume {:nonnull} Tmp_774 != 0;
    assume Tmp_774 > 0;
    assume {:nonnull} Tmp_788 != 0;
    assume Tmp_788 > 0;
    assume {:nonnull} IrpContext_42 != 0;
    assume IrpContext_42 > 0;
    call {:si_unique_call 796} ExRaiseStatus(-1073741662);
    goto L140;

  L140:
    Tmp_768 := ShareAccess_4;
    assume {:nonnull} DesiredAccess_4 != 0;
    assume DesiredAccess_4 > 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    havoc vslice_dummy_var_1260;
    call {:si_unique_call 797} boogieTmp := IoCheckShareAccess(vslice_dummy_var_1260, Tmp_768, 0, 0, 0);
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    call {:si_unique_call 798} boogieTmp := corral_nondet();
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} OplockPostIrp_1 != 0;
    assume OplockPostIrp_1 > 0;
    goto L63;

  anon149_Then:
    goto L152;

  L152:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    goto L159;

  L159:
    Tmp_772 := 0;
    goto L160;

  L160:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    assume {:nonnull} DesiredAccess_4 != 0;
    assume DesiredAccess_4 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto L163;

  L163:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    DecrementFcbOpenCount := 1;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    call {:si_unique_call 799} sdv_287 := corral_nondet();
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} sdv_287 != 0;
    goto L170;

  L170:
    assume {:nonnull} FileObject_7 != 0;
    assume FileObject_7 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc Tmp_777;
    assume {:nonnull} Tmp_777 != 0;
    assume Tmp_777 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc Tmp_770;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc Tmp_786;
    assume {:nonnull} Tmp_770 != 0;
    assume Tmp_770 > 0;
    assume {:nonnull} Tmp_786 != 0;
    assume Tmp_786 > 0;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    call {:si_unique_call 800} vslice_dummy_var_113 := ExAcquireResourceExclusiveLite(0, 1);
    call {:si_unique_call 801} ExReleaseResourceLite(0);
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    call {:si_unique_call 802} vslice_dummy_var_116 := corral_nondet();
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc Tmp_782;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc Tmp_764;
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    goto L171;

  L171:
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} CreateDisposition_3 == 1;
    goto L190;

  L190:
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} NoEaKnowledge_4 != 0;
    assume {:nonnull} Vcb_30 != 0;
    assume Vcb_30 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    call {:si_unique_call 803} FatGetDirentFromFcbOrDcb(IrpContext_42, Fcb_13, Dirent_9, DirentBcb_3);
    assume {:nonnull} Dirent_9 != 0;
    assume Dirent_9 > 0;
    call {:si_unique_call 804} FatGetNeedEaCount(IrpContext_42, Vcb_30, Mem_T.P_PACKED_DIRENT[Dirent_9], NeedEaCount_1);
    assume {:nonnull} DirentBcb_3 != 0;
    assume DirentBcb_3 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} DirentBcb_3 != 0;
    assume DirentBcb_3 > 0;
    goto L203;

  L203:
    assume {:nonnull} NeedEaCount_1 != 0;
    assume NeedEaCount_1 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto L63;

  anon161_Then:
    goto L191;

  L191:
    call {:si_unique_call 805} UnwindCcb_4 := FatCreateCcb(IrpContext_42);
    call {:si_unique_call 806} FatSetFileObject(FileObject_7, 2, Fcb_13, UnwindCcb_4);
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc Tmp_778;
    assume {:nonnull} FileObject_7 != 0;
    assume FileObject_7 > 0;
    assume {:nonnull} Tmp_778 != 0;
    assume Tmp_778 > 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto L63;

  anon160_Then:
    goto L203;

  anon159_Then:
    goto L191;

  anon158_Then:
    assume {:partition} NoEaKnowledge_4 == 0;
    goto L191;

  anon154_Then:
    assume {:partition} CreateDisposition_3 != 1;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} CreateDisposition_3 != 3;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} CreateDisposition_3 == 0;
    goto L224;

  L224:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    havoc OldStatus;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    call {:si_unique_call 807} boogieTmp := FatCheckSystemSecurityAccess(IrpContext_42);
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    call {:si_unique_call 808} structPtr888Iosb := FatSupersedeOrOverwriteFile(IrpContext_42, FileObject_7, Fcb_13, AllocationSize_4, EaBuffer_4, EaLength_4, FileAttributes_4, CreateDisposition_3, NoEaKnowledge_4);
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    assume {:nonnull} structPtr888Iosb != 0;
    assume structPtr888Iosb > 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    assume {:nonnull} structPtr888Iosb != 0;
    assume structPtr888Iosb > 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    assume {:nonnull} structPtr888Iosb != 0;
    assume structPtr888Iosb > 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto L63;

  anon166_Then:
    goto L63;

  anon165_Then:
    goto L63;

  anon162_Then:
    assume {:partition} CreateDisposition_3 != 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} CreateDisposition_3 == 4;
    goto L224;

  anon163_Then:
    assume {:partition} CreateDisposition_3 != 4;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} CreateDisposition_3 == 5;
    goto L224;

  anon164_Then:
    assume {:partition} CreateDisposition_3 != 5;
    call {:si_unique_call 809} KeBugCheckEx(35, 396318, CreateDisposition_3, 0, 0);
    goto L63;

  anon157_Then:
    assume {:partition} CreateDisposition_3 == 3;
    goto L190;

  anon156_Then:
    goto L171;

  anon180_Then:
    goto L171;

  anon155_Then:
    goto L171;

  anon153_Then:
    goto L171;

  anon151_Then:
    assume {:partition} sdv_287 == 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} DeleteOnClose_3 != 0;
    Tmp_765 := -1073741535;
    goto L240;

  L240:
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto L63;

  anon152_Then:
    assume {:partition} DeleteOnClose_3 == 0;
    Tmp_765 := -1073741757;
    goto L240;

  anon179_Then:
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} DeleteOnClose_3 == 0;
    goto L170;

  anon150_Then:
    assume {:partition} DeleteOnClose_3 != 0;
    goto L163;

  anon148_Then:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    call {:si_unique_call 810} sdv_295 := corral_nondet();
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} sdv_295 != 0;
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    Tmp_783 := FileLock_unnamed_tag_69(Fcb_unnamed_tag_67(Specific__FCB(Fcb_13)));
    assume {:nonnull} Tmp_783 != 0;
    assume Tmp_783 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    goto L245;

  L245:
    Tmp_763 := 2;
    goto L246;

  L246:
    Tmp_772 := Tmp_763;
    goto L160;

  anon181_Then:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc Tmp_789;
    assume {:nonnull} Tmp_789 != 0;
    assume Tmp_789 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:nonnull} Fcb_13 != 0;
    assume Fcb_13 > 0;
    havoc Tmp_790;
    assume {:nonnull} Tmp_790 != 0;
    assume Tmp_790 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    Tmp_763 := 1;
    goto L246;

  anon183_Then:
    goto L245;

  anon182_Then:
    goto L245;

  anon167_Then:
    assume {:partition} sdv_295 == 0;
    goto L159;

  anon147_Then:
    goto L152;

  anon146_Then:
    goto L63;

  anon170_Then:
    goto L140;

  anon171_Then:
    assume {:partition} BAND(FileAttributes_4, 4) == 0;
    goto L257;

  anon168_Then:
    assume {:partition} System_1 == 0;
    goto L259;

  anon178_Then:
    assume {:partition} Hidden_1 == 0;
    goto L255;

  anon177_Then:
    assume {:partition} Tmp_781 != 0;
    System_1 := 1;
    goto L369;

  anon176_Then:
    assume {:partition} Tmp_787 != 0;
    Hidden_1 := 1;
    goto L365;

  anon142_Then:
    assume {:partition} CreateDisposition_3 != 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} CreateDisposition_3 == 4;
    goto L250;

  anon144_Then:
    assume {:partition} CreateDisposition_3 != 4;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} CreateDisposition_3 == 5;
    goto L250;

  anon145_Then:
    assume {:partition} CreateDisposition_3 != 5;
    goto L140;

  anon141_Then:
    assume {:partition} DeleteOnClose_3 == 0;
    goto L133;

  anon140_Then:
    assume {:partition} sdv_293 == 0;
    assume {:nonnull} Iosb != 0;
    assume Iosb > 0;
    goto L63;

  anon138_Then:
    assume {:partition} CreateDisposition_3 != 4;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} CreateDisposition_3 != 5;
    goto L127;

  anon139_Then:
    assume {:partition} CreateDisposition_3 == 5;
    goto L125;

  anon137_Then:
    assume {:partition} CreateDisposition_3 == 0;
    assume {:nonnull} DesiredAccess_4 != 0;
    assume DesiredAccess_4 > 0;
    havoc AddedAccess_1;
    assume {:nonnull} DesiredAccess_4 != 0;
    assume DesiredAccess_4 > 0;
    goto L127;

  anon125_Then:
    goto L53;

  anon123_Then:
    assume {:partition} sdv_286 == 0;
    goto L53;
}



procedure {:origName "FatCreateNewDirectory"} FatCreateNewDirectory(actual_IrpContext_43: int, actual_FileObject_8: int, actual_Vcb_31: int, actual_ParentDcb_5: int, actual_OemName_1: int, actual_UnicodeName_1: int, actual_DesiredAccess_5: int, actual_ShareAccess_5: int, actual_EaBuffer_5: int, actual_EaLength_5: int, actual_FileAttributes_5: int, actual_NoEaKnowledge_5: int, actual_DeleteOnClose_4: int) returns (SD7: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCreateNewDirectory"} FatCreateNewDirectory(actual_IrpContext_43: int, actual_FileObject_8: int, actual_Vcb_31: int, actual_ParentDcb_5: int, actual_OemName_1: int, actual_UnicodeName_1: int, actual_DesiredAccess_5: int, actual_ShareAccess_5: int, actual_EaBuffer_5: int, actual_EaLength_5: int, actual_FileAttributes_5: int, actual_NoEaKnowledge_5: int, actual_DeleteOnClose_4: int) returns (SD7: int)
{
  var {:scalar} i_10: int;
  var {:pointer} DirectoryFileObject_3: int;
  var {:pointer} ShortDirent_1: int;
  var {:scalar} Tmp_792: int;
  var {:pointer} Ccb_8: int;
  var {:scalar} Tmp_795: int;
  var {:pointer} Tmp_796: int;
  var {:scalar} Tmp_797: int;
  var {:scalar} Tmp_798: int;
  var {:scalar} DirentsInFirstPage_1: int;
  var {:scalar} Tmp_799: int;
  var {:pointer} Tmp_800: int;
  var {:pointer} Dirent_10: int;
  var {:scalar} Tmp_7: int;
  var {:scalar} Tmp_801: int;
  var {:pointer} SecondPageDirent_1: int;
  var {:scalar} Iosb_7: int;
  var {:dopa} {:scalar} AllLowerComponent_1: int;
  var {:scalar} Tmp_802: int;
  var {:scalar} BytesInFirstPage_1: int;
  var {:scalar} Tmp_803: int;
  var {:pointer} DirentBcb_4: int;
  var {:scalar} ShortName_2: int;
  var {:scalar} LocalAbnormalTermination_1: int;
  var {:scalar} ShortDirentByteOffset_1: int;
  var {:pointer} Dcb_4: int;
  var {:scalar} DirentsNeeded_1: int;
  var {:pointer} Tmp_804: int;
  var {:pointer} SecondPageBcb_1: int;
  var {:scalar} DirentFromPool_1: int;
  var {:dopa} {:scalar} EaHandle_2: int;
  var {:pointer} Tmp_805: int;
  var {:dopa} {:scalar} AllLowerExtension_1: int;
  var {:pointer} ShortNameBuffer_1: int;
  var {:pointer} FirstPageDirent_1: int;
  var {:scalar} SecondPageOffset_1: int;
  var {:scalar} Tmp_806: int;
  var {:pointer} sdv_308: int;
  var {:scalar} DirentByteOffset_3: int;
  var {:scalar} Tmp_807: int;
  var {:pointer} Tmp_808: int;
  var {:dopa} {:scalar} CreateLfn_1: int;
  var {:scalar} sdv_309: int;
  var {:pointer} Tmp_810: int;
  var {:pointer} IrpContext_43: int;
  var {:pointer} FileObject_8: int;
  var {:pointer} Vcb_31: int;
  var {:pointer} ParentDcb_5: int;
  var {:pointer} OemName_1: int;
  var {:pointer} UnicodeName_1: int;
  var {:pointer} DesiredAccess_5: int;
  var {:scalar} ShareAccess_5: int;
  var {:pointer} EaBuffer_5: int;
  var {:scalar} EaLength_5: int;
  var {:scalar} FileAttributes_5: int;
  var {:scalar} NoEaKnowledge_5: int;
  var {:scalar} DeleteOnClose_4: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_1261: int;
  var vslice_dummy_var_1262: int;
  var vslice_dummy_var_1263: int;
  var vslice_dummy_var_1264: int;

  anon0:
    call {:si_unique_call 811} Dirent_10 := __HAVOC_malloc(4);
    call {:si_unique_call 812} Tmp_7 := __HAVOC_malloc(12);
    call {:si_unique_call 813} SecondPageDirent_1 := __HAVOC_malloc(4);
    call {:si_unique_call 814} Iosb_7 := __HAVOC_malloc(12);
    call {:si_unique_call 815} AllLowerComponent_1 := __HAVOC_malloc(4);
    call {:si_unique_call 816} DirentBcb_4 := __HAVOC_malloc(4);
    call {:si_unique_call 817} ShortName_2 := __HAVOC_malloc(12);
    call {:si_unique_call 818} SecondPageBcb_1 := __HAVOC_malloc(4);
    call {:si_unique_call 819} EaHandle_2 := __HAVOC_malloc(4);
    call {:si_unique_call 820} AllLowerExtension_1 := __HAVOC_malloc(4);
    call {:si_unique_call 821} CreateLfn_1 := __HAVOC_malloc(4);
    IrpContext_43 := actual_IrpContext_43;
    FileObject_8 := actual_FileObject_8;
    Vcb_31 := actual_Vcb_31;
    ParentDcb_5 := actual_ParentDcb_5;
    OemName_1 := actual_OemName_1;
    UnicodeName_1 := actual_UnicodeName_1;
    DesiredAccess_5 := actual_DesiredAccess_5;
    ShareAccess_5 := actual_ShareAccess_5;
    EaBuffer_5 := actual_EaBuffer_5;
    EaLength_5 := actual_EaLength_5;
    FileAttributes_5 := actual_FileAttributes_5;
    NoEaKnowledge_5 := actual_NoEaKnowledge_5;
    DeleteOnClose_4 := actual_DeleteOnClose_4;
    call {:si_unique_call 822} Tmp_805 := __HAVOC_malloc(44);
    call {:si_unique_call 823} ShortNameBuffer_1 := __HAVOC_malloc(48);
    call {:si_unique_call 824} Tmp_808 := __HAVOC_malloc(44);
    call {:si_unique_call 825} Tmp_810 := __HAVOC_malloc(44);
    Dcb_4 := 0;
    Ccb_8 := 0;
    assume {:nonnull} Dirent_10 != 0;
    assume Dirent_10 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_10] := 0;
    assume {:nonnull} DirentBcb_4 != 0;
    assume DirentBcb_4 > 0;
    assume {:nonnull} SecondPageBcb_1 != 0;
    assume SecondPageBcb_1 > 0;
    DirentFromPool_1 := 0;
    LocalAbnormalTermination_1 := 0;
    assume {:nonnull} ShortName_2 != 0;
    assume ShortName_2 > 0;
    assume {:nonnull} ShortName_2 != 0;
    assume ShortName_2 > 0;
    assume {:nonnull} ShortName_2 != 0;
    assume ShortName_2 > 0;
    assume {:nonnull} EaHandle_2 != 0;
    assume EaHandle_2 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} NoEaKnowledge_5 != 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} EaLength_5 > 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Tmp_7 != 0;
    assume Tmp_7 > 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Tmp_7 != 0;
    assume Tmp_7 > 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Tmp_7 != 0;
    assume Tmp_7 > 0;
    goto L1;

  L1:
    SD7 := Tmp_7;
    return;

  anon66_Then:
    assume {:partition} 0 >= EaLength_5;
    goto L38;

  L38:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} DeleteOnClose_4 != 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(FileAttributes_5, 1) != 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Tmp_7 != 0;
    assume Tmp_7 > 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Tmp_7 != 0;
    assume Tmp_7 > 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Tmp_7 != 0;
    assume Tmp_7 > 0;
    goto L1;

  anon67_Then:
    assume {:partition} BAND(FileAttributes_5, 1) == 0;
    goto L42;

  L42:
    call {:si_unique_call 826} FatSelectNames(IrpContext_43, ParentDcb_5, OemName_1, UnicodeName_1, ShortName_2, 0, AllLowerComponent_1, AllLowerExtension_1, CreateLfn_1);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L50;

  L50:
    assume {:nonnull} CreateLfn_1 != 0;
    assume CreateLfn_1 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} UnicodeName_1 != 0;
    assume UnicodeName_1 > 0;
    havoc Tmp_803;
    goto L53;

  L53:
    DirentsNeeded_1 := Tmp_803;
    call {:si_unique_call 827} DirentByteOffset_3 := FatCreateNewDirent(IrpContext_43, ParentDcb_5, DirentsNeeded_1);
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    call {:si_unique_call 828} FatPrepareWriteDirectoryFile(IrpContext_43, ParentDcb_5, DirentByteOffset_3, 32, DirentBcb_4, Dirent_10, 0, 1, Status__IO_STATUS_BLOCK(Iosb_7));
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} INTDIV(DirentByteOffset_3, 4096) != INTDIV(DirentByteOffset_3 + (DirentsNeeded_1 - 1) * 32, 4096);
    Tmp_807 := BAND(DirentByteOffset_3, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    SecondPageOffset_1 := Tmp_807 + 4096;
    BytesInFirstPage_1 := SecondPageOffset_1 - DirentByteOffset_3;
    DirentsInFirstPage_1 := INTDIV(BytesInFirstPage_1, 32);
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    call {:si_unique_call 829} FatPrepareWriteDirectoryFile(IrpContext_43, ParentDcb_5, SecondPageOffset_1, 32, SecondPageBcb_1, SecondPageDirent_1, 0, 1, Status__IO_STATUS_BLOCK(Iosb_7));
    assume {:nonnull} Dirent_10 != 0;
    assume Dirent_10 > 0;
    FirstPageDirent_1 := Mem_T.P_PACKED_DIRENT[Dirent_10];
    Tmp_802 := DirentsNeeded_1 * 32;
    call {:si_unique_call 830} sdv_308 := ExAllocatePoolWithTag(17, Tmp_802, -999005882);
    assume {:nonnull} Dirent_10 != 0;
    assume Dirent_10 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_10] := sdv_308;
    DirentFromPool_1 := 1;
    goto L157;

  L157:
    assume {:nonnull} Dirent_10 != 0;
    assume Dirent_10 > 0;
    ShortDirent_1 := Mem_T.P_PACKED_DIRENT[Dirent_10];
    ShortDirentByteOffset_1 := DirentByteOffset_3 + (DirentsNeeded_1 - 1) * 32;
    Tmp_797 := BOR(FileAttributes_5, 16);
    assume {:nonnull} CreateLfn_1 != 0;
    assume CreateLfn_1 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    Tmp_804 := UnicodeName_1;
    goto L177;

  L177:
    assume {:nonnull} AllLowerComponent_1 != 0;
    assume AllLowerComponent_1 > 0;
    assume {:nonnull} AllLowerExtension_1 != 0;
    assume AllLowerExtension_1 > 0;
    havoc vslice_dummy_var_1261;
    havoc vslice_dummy_var_1262;
    call {:si_unique_call 831} FatConstructDirent(IrpContext_43, ShortDirent_1, ShortName_2, vslice_dummy_var_1261, vslice_dummy_var_1262, Tmp_804, Tmp_797, 1, 0);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} DirentFromPool_1 != 0;
    call {:si_unique_call 832} sdv_RtlCopyMemory(0, 0, BytesInFirstPage_1);
    Tmp_795 := DirentsNeeded_1 * 32 - BytesInFirstPage_1;
    assume {:nonnull} Dirent_10 != 0;
    assume Dirent_10 > 0;
    call {:si_unique_call 833} sdv_RtlCopyMemory(0, 0, Tmp_795);
    assume {:nonnull} SecondPageDirent_1 != 0;
    assume SecondPageDirent_1 > 0;
    ShortDirent_1 := Mem_T.P_PACKED_DIRENT[SecondPageDirent_1];
    goto L181;

  L181:
    assume {:nonnull} CreateLfn_1 != 0;
    assume CreateLfn_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    Tmp_800 := UnicodeName_1;
    goto L193;

  L193:
    call {:si_unique_call 834} Dcb_4 := FatCreateDcb(IrpContext_43, Vcb_31, ParentDcb_5, DirentByteOffset_3, ShortDirentByteOffset_1, ShortDirent_1, Tmp_800);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} EaLength_5 > 0;
    assume {:nonnull} Dcb_4 != 0;
    assume Dcb_4 > 0;
    havoc vslice_dummy_var_1263;
    call {:si_unique_call 835} FatCreateEa(IrpContext_43, vslice_dummy_var_1263, EaBuffer_5, EaLength_5, Oem_unnamed_tag_70(Name__FILE_NAME_NODE(ShortName__FCB(Dcb_4))), EaHandle_2);
    goto L198;

  L198:
    assume {:nonnull} Dcb_4 != 0;
    assume Dcb_4 > 0;
    havoc Tmp_796;
    assume {:nonnull} Tmp_796 != 0;
    assume Tmp_796 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto L203;

  L203:
    call {:si_unique_call 836} FatInitializeDirectoryDirent(IrpContext_43, Dcb_4, ShortDirent_1);
    call {:si_unique_call 837} Ccb_8 := FatCreateCcb(IrpContext_43);
    call {:si_unique_call 838} FatSetFileObject(FileObject_8, 3, Dcb_4, Ccb_8);
    assume {:nonnull} Dcb_4 != 0;
    assume Dcb_4 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto L217;

  L217:
    assume {:nonnull} Dcb_4 != 0;
    assume Dcb_4 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L221;

  L221:
    assume {:nonnull} Dcb_4 != 0;
    assume Dcb_4 > 0;
    havoc Tmp_806;
    call {:si_unique_call 839} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_806, 0, 0, 2, 1, 0);
    Tmp_792 := ShareAccess_5;
    assume {:nonnull} DesiredAccess_5 != 0;
    assume DesiredAccess_5 > 0;
    havoc vslice_dummy_var_1264;
    call {:si_unique_call 840} IoSetShareAccess(vslice_dummy_var_1264, Tmp_792, 0, 0);
    assume {:nonnull} Dcb_4 != 0;
    assume Dcb_4 > 0;
    assume {:nonnull} Dcb_4 != 0;
    assume Dcb_4 > 0;
    assume {:nonnull} Vcb_31 != 0;
    assume Vcb_31 > 0;
    assume {:nonnull} FileObject_8 != 0;
    assume FileObject_8 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    goto L234;

  L234:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} DeleteOnClose_4 != 0;
    assume {:nonnull} Ccb_8 != 0;
    assume Ccb_8 > 0;
    goto L235;

  L235:
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    call {:si_unique_call 841} sdv_309 := sdv_AbnormalTermination();
    LocalAbnormalTermination_1 := sdv_309;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} LocalAbnormalTermination_1 != 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} Ccb_8 != 0;
    call {:si_unique_call 842} FatDeleteCcb_Real(IrpContext_43, Ccb_8);
    goto L245;

  L245:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Dcb_4 == 0;
    assume {:nonnull} Dirent_10 != 0;
    assume Dirent_10 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_10] != 0;
    i_10 := 0;
    goto L256;

  L256:
    call {:si_unique_call 843} i_10, Tmp_798, Tmp_799, Tmp_801, Tmp_805, Tmp_808, Tmp_810 := FatCreateNewDirectory_loop_L256(i_10, Tmp_798, DirentsInFirstPage_1, Tmp_799, Dirent_10, Tmp_801, SecondPageDirent_1, DirentsNeeded_1, SecondPageBcb_1, DirentFromPool_1, Tmp_805, FirstPageDirent_1, Tmp_808, Tmp_810);
    goto L256_last;

  L256_last:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} DirentsNeeded_1 > i_10;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} DirentFromPool_1 != 0;
    assume {:nonnull} SecondPageBcb_1 != 0;
    assume SecondPageBcb_1 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    goto L261;

  L261:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} DirentsInFirstPage_1 > i_10;
    Tmp_798 := i_10;
    assume {:nonnull} FirstPageDirent_1 != 0;
    assume FirstPageDirent_1 > 0;
    havoc Tmp_808;
    assume {:nonnull} Tmp_808 != 0;
    assume Tmp_808 > 0;
    goto L264;

  L264:
    i_10 := i_10 + 1;
    goto L264_dummy;

  L264_dummy:
    assume false;
    return;

  anon85_Then:
    assume {:partition} i_10 >= DirentsInFirstPage_1;
    Tmp_799 := i_10 - DirentsInFirstPage_1;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[SecondPageDirent_1] != 0;
    assume Mem_T.P_PACKED_DIRENT[SecondPageDirent_1] > 0;
    assume {:nonnull} SecondPageDirent_1 != 0;
    assume SecondPageDirent_1 > 0;
    havoc Tmp_805;
    assume {:nonnull} Tmp_805 != 0;
    assume Tmp_805 > 0;
    goto L264;

  anon83_Then:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} i_10 != DirentsInFirstPage_1;
    goto L261;

  anon84_Then:
    assume {:partition} i_10 == DirentsInFirstPage_1;
    goto L243;

  L243:
    assume {:nonnull} DirentBcb_4 != 0;
    assume DirentBcb_4 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} DirentBcb_4 != 0;
    assume DirentBcb_4 > 0;
    goto L266;

  L266:
    assume {:nonnull} SecondPageBcb_1 != 0;
    assume SecondPageBcb_1 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} SecondPageBcb_1 != 0;
    assume SecondPageBcb_1 > 0;
    goto L271;

  L271:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} DirentFromPool_1 != 0;
    call {:si_unique_call 844} sdv_ExFreePool(0);
    goto L276;

  L276:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} LocalAbnormalTermination_1 != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} Dcb_4 != 0;
    assume {:nonnull} Dcb_4 != 0;
    assume Dcb_4 > 0;
    havoc DirectoryFileObject_3;
    assume {:nonnull} IrpContext_43 != 0;
    assume IrpContext_43 > 0;
    call {:si_unique_call 845} FatUnpinRepinnedBcbs(IrpContext_43);
    assume {:nonnull} IrpContext_43 != 0;
    assume IrpContext_43 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} DirectoryFileObject_3 != 0;
    call {:si_unique_call 846} FatSyncUninitializeCacheMap(IrpContext_43, DirectoryFileObject_3);
    goto L290;

  L290:
    call {:si_unique_call 847} FatTruncateFileAllocation(IrpContext_43, Dcb_4, 0);
    call {:si_unique_call 848} FatDeleteDirent#1(IrpContext_43, Dcb_4, 0, 1);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} DirectoryFileObject_3 != 0;
    assume {:nonnull} Dcb_4 != 0;
    assume Dcb_4 > 0;
    call {:si_unique_call 849} vslice_dummy_var_117 := sdv_ObDereferenceObject(0);
    goto L280;

  L280:
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Tmp_7 != 0;
    assume Tmp_7 > 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Tmp_7 != 0;
    assume Tmp_7 > 0;
    assume {:nonnull} Iosb_7 != 0;
    assume Iosb_7 > 0;
    assume {:nonnull} Tmp_7 != 0;
    assume Tmp_7 > 0;
    goto L1;

  anon90_Then:
    assume {:partition} DirectoryFileObject_3 == 0;
    call {:si_unique_call 850} FatDeleteFcb_Real(IrpContext_43, Dcb_4);
    goto L280;

  anon96_Then:
    assume {:partition} DirectoryFileObject_3 == 0;
    goto L290;

  anon89_Then:
    assume {:partition} Dcb_4 == 0;
    goto L280;

  anon88_Then:
    assume {:partition} LocalAbnormalTermination_1 == 0;
    goto L280;

  anon87_Then:
    assume {:partition} DirentFromPool_1 == 0;
    goto L276;

  anon86_Then:
    goto L271;

  anon77_Then:
    goto L266;

  anon82_Then:
    assume {:partition} DirentFromPool_1 == 0;
    Tmp_801 := i_10;
    assume {:nonnull} Dirent_10 != 0;
    assume Dirent_10 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_10] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_10] > 0;
    havoc Tmp_810;
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    goto L264;

  anon81_Then:
    assume {:partition} i_10 >= DirentsNeeded_1;
    goto L243;

  anon80_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_10] == 0;
    goto L243;

  anon79_Then:
    assume {:partition} Dcb_4 != 0;
    goto L243;

  anon78_Then:
    assume {:partition} Ccb_8 == 0;
    goto L245;

  anon95_Then:
    assume {:partition} LocalAbnormalTermination_1 == 0;
    goto L243;

  anon76_Then:
    assume {:partition} DeleteOnClose_4 == 0;
    goto L235;

  anon94_Then:
    assume {:nonnull} Vcb_31 != 0;
    assume Vcb_31 > 0;
    goto L234;

  anon75_Then:
    call {:si_unique_call 851} FatSetFullFileNameInFcb#1(IrpContext_43, Dcb_4);
    goto L221;

  anon74_Then:
    call {:si_unique_call 852} FatSetFullNameInFcb(IrpContext_43, Dcb_4, UnicodeName_1);
    goto L217;

  anon93_Then:
    assume {:nonnull} EaHandle_2 != 0;
    assume EaHandle_2 > 0;
    assume {:nonnull} ShortDirent_1 != 0;
    assume ShortDirent_1 > 0;
    goto L203;

  anon73_Then:
    assume {:partition} 0 >= EaLength_5;
    goto L198;

  anon72_Then:
    Tmp_800 := 0;
    goto L193;

  anon71_Then:
    assume {:partition} DirentFromPool_1 == 0;
    goto L181;

  anon92_Then:
    Tmp_804 := 0;
    goto L177;

  anon70_Then:
    assume {:partition} INTDIV(DirentByteOffset_3, 4096) == INTDIV(DirentByteOffset_3 + (DirentsNeeded_1 - 1) * 32, 4096);
    goto L157;

  anon69_Then:
    Tmp_803 := 1;
    goto L53;

  anon68_Then:
    assume {:nonnull} AllLowerComponent_1 != 0;
    assume AllLowerComponent_1 > 0;
    assume {:nonnull} AllLowerExtension_1 != 0;
    assume AllLowerExtension_1 > 0;
    assume {:nonnull} CreateLfn_1 != 0;
    assume CreateLfn_1 > 0;
    goto L50;

  anon65_Then:
    assume {:partition} DeleteOnClose_4 == 0;
    goto L42;

  anon91_Then:
    assume {:partition} NoEaKnowledge_5 == 0;
    goto L38;
}



procedure {:origName "FatOpenVolume"} FatOpenVolume(actual_IrpContext_44: int, actual_FileObject_9: int, actual_Vcb_32: int, actual_DesiredAccess_6: int, actual_ShareAccess_6: int, actual_CreateDisposition_4: int) returns (SD6: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOpenVolume"} FatOpenVolume(actual_IrpContext_44: int, actual_FileObject_9: int, actual_Vcb_32: int, actual_DesiredAccess_6: int, actual_ShareAccess_6: int, actual_CreateDisposition_4: int) returns (SD6: int)
{
  var {:scalar} UnwindCounts: int;
  var {:scalar} Tmp_6: int;
  var {:scalar} Tmp_811: int;
  var {:scalar} sdv_310: int;
  var {:pointer} Tmp_812: int;
  var {:scalar} CleanedVolume: int;
  var {:scalar} sdv_312: int;
  var {:scalar} Status_6: int;
  var {:scalar} Iosb_8: int;
  var {:pointer} Tmp_814: int;
  var {:scalar} UnwindVolumeLock: int;
  var {:pointer} IrpSp_4: int;
  var {:scalar} Tmp_815: int;
  var {:pointer} UnwindCcb_5: int;
  var {:scalar} sdv_316: int;
  var {:scalar} Tmp_816: int;
  var {:scalar} sdv_320: int;
  var {:pointer} Tmp_817: int;
  var {:scalar} UnwindShareAccess_2: int;
  var {:pointer} Tmp_818: int;
  var {:scalar} Tmp_819: int;
  var {:pointer} IrpContext_44: int;
  var {:pointer} FileObject_9: int;
  var {:pointer} Vcb_32: int;
  var {:pointer} DesiredAccess_6: int;
  var {:scalar} ShareAccess_6: int;
  var {:scalar} CreateDisposition_4: int;
  var boogieTmp: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_1265: int;
  var vslice_dummy_var_1266: int;
  var vslice_dummy_var_1267: int;
  var vslice_dummy_var_1268: int;
  var vslice_dummy_var_1269: int;
  var vslice_dummy_var_1270: int;

  anon0:
    call {:si_unique_call 853} Tmp_6 := __HAVOC_malloc(12);
    call {:si_unique_call 854} Iosb_8 := __HAVOC_malloc(12);
    IrpContext_44 := actual_IrpContext_44;
    FileObject_9 := actual_FileObject_9;
    Vcb_32 := actual_Vcb_32;
    DesiredAccess_6 := actual_DesiredAccess_6;
    ShareAccess_6 := actual_ShareAccess_6;
    CreateDisposition_4 := actual_CreateDisposition_4;
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    CleanedVolume := 0;
    UnwindShareAccess_2 := 0;
    UnwindCcb_5 := 0;
    UnwindCounts := 0;
    UnwindVolumeLock := 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} CreateDisposition_4 != 1;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} CreateDisposition_4 != 3;
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    goto L23;

  L23:
    call {:si_unique_call 855} sdv_312 := sdv_AbnormalTermination();
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_312 != 0;
    goto L28;

  L28:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} UnwindCounts != 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    assume {:nonnull} FileObject_9 != 0;
    assume FileObject_9 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    goto L29;

  L29:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} UnwindCcb_5 != 0;
    call {:si_unique_call 856} FatDeleteCcb_Real(IrpContext_44, UnwindCcb_5);
    goto L34;

  L34:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} UnwindShareAccess_2 != 0;
    call {:si_unique_call 857} IoRemoveShareAccess(0, 0);
    goto L38;

  L38:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} UnwindVolumeLock != 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    goto L42;

  L42:
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    assume {:nonnull} Tmp_6 != 0;
    assume Tmp_6 > 0;
    SD6 := Tmp_6;
    return;

  anon66_Then:
    assume {:partition} UnwindVolumeLock == 0;
    goto L42;

  anon65_Then:
    assume {:partition} UnwindShareAccess_2 == 0;
    goto L38;

  anon64_Then:
    assume {:partition} UnwindCcb_5 == 0;
    goto L34;

  anon85_Then:
    goto L29;

  anon63_Then:
    assume {:partition} UnwindCounts == 0;
    goto L29;

  anon61_Then:
    assume {:partition} sdv_312 == 0;
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L42;

  anon62_Then:
    goto L28;

  anon60_Then:
    assume {:partition} CreateDisposition_4 == 3;
    goto L19;

  L19:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} BAND(ShareAccess_6, 2) != 0;
    goto L45;

  L45:
    assume {:nonnull} DesiredAccess_6 != 0;
    assume DesiredAccess_6 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 858} sdv_316 := FatFlushVolume(IrpContext_44, Vcb_32, 1);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} sdv_316 >= 0;
    CleanedVolume := 1;
    goto L46;

  L46:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} CleanedVolume != 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    call {:si_unique_call 859} sdv_320 := corral_nondet();
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} sdv_320 == 0;
    call {:si_unique_call 860} vslice_dummy_var_118 := KeCancelTimer(0);
    call {:si_unique_call 861} vslice_dummy_var_119 := KeRemoveQueueDpc(0);
    call {:si_unique_call 862} FatMarkVolume#1(IrpContext_44, Vcb_32, 0);
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    call {:si_unique_call 863} vslice_dummy_var_120 := FatToggleMediaEjectDisable(IrpContext_44, Vcb_32, 0);
    goto L72;

  L72:
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    Tmp_811 := ShareAccess_6;
    assume {:nonnull} DesiredAccess_6 != 0;
    assume DesiredAccess_6 > 0;
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    havoc vslice_dummy_var_1265;
    call {:si_unique_call 864} boogieTmp := IoCheckShareAccess(vslice_dummy_var_1265, Tmp_811, 0, 0, 1);
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto L102;

  L102:
    UnwindShareAccess_2 := 1;
    call {:si_unique_call 865} UnwindCcb_5 := FatCreateCcb(IrpContext_44);
    call {:si_unique_call 866} FatSetFileObject(FileObject_9, 4, Vcb_32, UnwindCcb_5);
    assume {:nonnull} FileObject_9 != 0;
    assume FileObject_9 > 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    assume {:nonnull} FileObject_9 != 0;
    assume FileObject_9 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto L115;

  L115:
    UnwindCounts := 1;
    assume {:nonnull} FileObject_9 != 0;
    assume FileObject_9 > 0;
    assume {:nonnull} IrpContext_44 != 0;
    assume IrpContext_44 > 0;
    havoc vslice_dummy_var_1266;
    call {:si_unique_call 867} IrpSp_4 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1266);
    assume {:nonnull} IrpSp_4 != 0;
    assume IrpSp_4 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    Tmp_819 := 1;
    goto L124;

  L124:
    Tmp_815 := Tmp_819;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    havoc Tmp_814;
    assume {:nonnull} IrpSp_4 != 0;
    assume IrpSp_4 > 0;
    Tmp_818 := Create_unnamed_tag_8(Parameters__IO_STACK_LOCATION(IrpSp_4));
    assume {:nonnull} Tmp_818 != 0;
    assume Tmp_818 > 0;
    havoc Tmp_812;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    assume {:nonnull} Tmp_814 != 0;
    assume Tmp_814 > 0;
    havoc vslice_dummy_var_1267;
    havoc vslice_dummy_var_1268;
    call {:si_unique_call 868} Status_6 := FatExplicitDeviceAccessGranted(IrpContext_44, vslice_dummy_var_1267, vslice_dummy_var_1268, Tmp_815);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} Status_6 >= 0;
    assume {:nonnull} UnwindCcb_5 != 0;
    assume UnwindCcb_5 > 0;
    goto L130;

  L130:
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    goto L23;

  anon78_Then:
    assume {:partition} 0 > Status_6;
    goto L130;

  anon77_Then:
    assume {:nonnull} IrpContext_44 != 0;
    assume IrpContext_44 > 0;
    havoc Tmp_817;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    havoc Tmp_819;
    goto L124;

  anon86_Then:
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    goto L115;

  anon76_Then:
    goto L23;

  anon71_Then:
    Tmp_816 := ShareAccess_6;
    assume {:nonnull} DesiredAccess_6 != 0;
    assume DesiredAccess_6 > 0;
    havoc vslice_dummy_var_1269;
    call {:si_unique_call 869} IoSetShareAccess(vslice_dummy_var_1269, Tmp_816, 0, 0);
    goto L102;

  anon75_Then:
    goto L72;

  anon87_Then:
    goto L72;

  anon74_Then:
    assume {:partition} sdv_320 != 0;
    goto L72;

  anon73_Then:
    goto L72;

  anon72_Then:
    goto L72;

  anon69_Then:
    assume {:partition} CleanedVolume == 0;
    goto L72;

  anon70_Then:
    assume {:partition} 0 > sdv_316;
    goto L46;

  anon68_Then:
    goto L46;

  anon59_Then:
    assume {:partition} BAND(ShareAccess_6, 2) == 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(ShareAccess_6, 4) == 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} BAND(ShareAccess_6, 1) != 0;
    goto L141;

  L141:
    call {:si_unique_call 870} vslice_dummy_var_121 := FatFlushFat(IrpContext_44, Vcb_32);
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    havoc vslice_dummy_var_1270;
    call {:si_unique_call 871} FatPurgeReferencedFileObjects(IrpContext_44, vslice_dummy_var_1270, 1);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(ShareAccess_6, 1) != 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    goto L23;

  anon82_Then:
    goto L150;

  L150:
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    UnwindVolumeLock := 1;
    CleanedVolume := 1;
    goto L46;

  anon80_Then:
    assume {:partition} BAND(ShareAccess_6, 1) == 0;
    assume {:nonnull} Vcb_32 != 0;
    assume Vcb_32 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    goto L23;

  anon81_Then:
    goto L150;

  anon79_Then:
    assume {:partition} BAND(ShareAccess_6, 1) == 0;
    call {:si_unique_call 872} sdv_310 := FatIsHandleCountZero(IrpContext_44, Vcb_32);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} sdv_310 == 0;
    assume {:nonnull} Iosb_8 != 0;
    assume Iosb_8 > 0;
    goto L23;

  anon83_Then:
    assume {:partition} sdv_310 != 0;
    goto L141;

  anon67_Then:
    assume {:partition} BAND(ShareAccess_6, 4) != 0;
    goto L45;

  anon84_Then:
    assume {:partition} CreateDisposition_4 == 1;
    goto L19;
}



procedure {:origName "FatOpenRootDcb"} FatOpenRootDcb(actual_IrpContext_45: int, actual_FileObject_10: int, actual_Vcb_33: int, actual_DesiredAccess_7: int, actual_ShareAccess_7: int, actual_CreateDisposition_5: int) returns (SD5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOpenRootDcb"} FatOpenRootDcb(actual_IrpContext_45: int, actual_FileObject_10: int, actual_Vcb_33: int, actual_DesiredAccess_7: int, actual_ShareAccess_7: int, actual_CreateDisposition_5: int) returns (SD5: int)
{
  var {:scalar} UnwindCounts_1: int;
  var {:pointer} RootDcb: int;
  var {:scalar} RootDcbAcquired: int;
  var {:scalar} Iosb_9: int;
  var {:scalar} Tmp_820: int;
  var {:pointer} UnwindCcb_6: int;
  var {:scalar} sdv_325: int;
  var {:scalar} sdv_326: int;
  var {:scalar} Tmp_5: int;
  var {:scalar} UnwindShareAccess_3: int;
  var {:scalar} Tmp_821: int;
  var {:pointer} IrpContext_45: int;
  var {:pointer} FileObject_10: int;
  var {:pointer} Vcb_33: int;
  var {:pointer} DesiredAccess_7: int;
  var {:scalar} ShareAccess_7: int;
  var {:scalar} CreateDisposition_5: int;
  var boogieTmp: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_1271: int;
  var vslice_dummy_var_1272: int;
  var vslice_dummy_var_1273: int;

  anon0:
    call {:si_unique_call 873} Iosb_9 := __HAVOC_malloc(12);
    call {:si_unique_call 874} Tmp_5 := __HAVOC_malloc(12);
    IrpContext_45 := actual_IrpContext_45;
    FileObject_10 := actual_FileObject_10;
    Vcb_33 := actual_Vcb_33;
    DesiredAccess_7 := actual_DesiredAccess_7;
    ShareAccess_7 := actual_ShareAccess_7;
    CreateDisposition_5 := actual_CreateDisposition_5;
    UnwindShareAccess_3 := 0;
    UnwindCcb_6 := 0;
    UnwindCounts_1 := 0;
    RootDcbAcquired := 0;
    assume {:nonnull} Vcb_33 != 0;
    assume Vcb_33 > 0;
    havoc RootDcb;
    call {:si_unique_call 875} vslice_dummy_var_122 := FatAcquireExclusiveFcb(IrpContext_45, RootDcb);
    RootDcbAcquired := 1;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} CreateDisposition_5 != 1;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} CreateDisposition_5 != 3;
    assume {:nonnull} Iosb_9 != 0;
    assume Iosb_9 > 0;
    goto L25;

  L25:
    call {:si_unique_call 876} sdv_326 := sdv_AbnormalTermination();
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_326 != 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} UnwindCounts_1 != 0;
    assume {:nonnull} RootDcb != 0;
    assume RootDcb > 0;
    assume {:nonnull} RootDcb != 0;
    assume RootDcb > 0;
    assume {:nonnull} Vcb_33 != 0;
    assume Vcb_33 > 0;
    assume {:nonnull} FileObject_10 != 0;
    assume FileObject_10 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Vcb_33 != 0;
    assume Vcb_33 > 0;
    goto L31;

  L31:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} UnwindCcb_6 != 0;
    call {:si_unique_call 877} FatDeleteCcb_Real(IrpContext_45, UnwindCcb_6);
    goto L37;

  L37:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UnwindShareAccess_3 != 0;
    call {:si_unique_call 878} IoRemoveShareAccess(0, 0);
    goto L29;

  L29:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} RootDcbAcquired != 0;
    call {:si_unique_call 879} ExReleaseResourceLite(0);
    goto L44;

  L44:
    assume {:nonnull} Iosb_9 != 0;
    assume Iosb_9 > 0;
    assume {:nonnull} Tmp_5 != 0;
    assume Tmp_5 > 0;
    assume {:nonnull} Iosb_9 != 0;
    assume Iosb_9 > 0;
    assume {:nonnull} Tmp_5 != 0;
    assume Tmp_5 > 0;
    assume {:nonnull} Iosb_9 != 0;
    assume Iosb_9 > 0;
    assume {:nonnull} Tmp_5 != 0;
    assume Tmp_5 > 0;
    SD5 := Tmp_5;
    return;

  anon27_Then:
    assume {:partition} RootDcbAcquired == 0;
    goto L44;

  anon30_Then:
    assume {:partition} UnwindShareAccess_3 == 0;
    goto L29;

  anon29_Then:
    assume {:partition} UnwindCcb_6 == 0;
    goto L37;

  anon35_Then:
    goto L31;

  anon28_Then:
    assume {:partition} UnwindCounts_1 == 0;
    goto L31;

  anon26_Then:
    assume {:partition} sdv_326 == 0;
    goto L29;

  anon25_Then:
    assume {:partition} CreateDisposition_5 == 3;
    goto L19;

  L19:
    assume {:nonnull} RootDcb != 0;
    assume RootDcb > 0;
    havoc vslice_dummy_var_1271;
    call {:si_unique_call 880} sdv_325 := FatCheckFileAccess(IrpContext_45, vslice_dummy_var_1271, DesiredAccess_7);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_325 != 0;
    assume {:nonnull} RootDcb != 0;
    assume RootDcb > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_821 := ShareAccess_7;
    assume {:nonnull} DesiredAccess_7 != 0;
    assume DesiredAccess_7 > 0;
    assume {:nonnull} Iosb_9 != 0;
    assume Iosb_9 > 0;
    havoc vslice_dummy_var_1272;
    call {:si_unique_call 881} boogieTmp := IoCheckShareAccess(vslice_dummy_var_1272, Tmp_821, 0, 0, 1);
    assume {:nonnull} Iosb_9 != 0;
    assume Iosb_9 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L81;

  L81:
    UnwindShareAccess_3 := 1;
    call {:si_unique_call 882} UnwindCcb_6 := FatCreateCcb(IrpContext_45);
    call {:si_unique_call 883} FatSetFileObject(FileObject_10, 3, RootDcb, UnwindCcb_6);
    assume {:nonnull} RootDcb != 0;
    assume RootDcb > 0;
    assume {:nonnull} RootDcb != 0;
    assume RootDcb > 0;
    assume {:nonnull} Vcb_33 != 0;
    assume Vcb_33 > 0;
    assume {:nonnull} FileObject_10 != 0;
    assume FileObject_10 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L94;

  L94:
    UnwindCounts_1 := 1;
    assume {:nonnull} Iosb_9 != 0;
    assume Iosb_9 > 0;
    assume {:nonnull} Iosb_9 != 0;
    assume Iosb_9 > 0;
    goto L25;

  anon36_Then:
    assume {:nonnull} Vcb_33 != 0;
    assume Vcb_33 > 0;
    goto L94;

  anon33_Then:
    goto L25;

  anon32_Then:
    Tmp_820 := ShareAccess_7;
    assume {:nonnull} DesiredAccess_7 != 0;
    assume DesiredAccess_7 > 0;
    havoc vslice_dummy_var_1273;
    call {:si_unique_call 884} IoSetShareAccess(vslice_dummy_var_1273, Tmp_820, 0, 0);
    goto L81;

  anon31_Then:
    assume {:partition} sdv_325 == 0;
    assume {:nonnull} Iosb_9 != 0;
    assume Iosb_9 > 0;
    goto L25;

  anon34_Then:
    assume {:partition} CreateDisposition_5 == 1;
    goto L19;
}



procedure {:origName "FatOpenExistingDirectory"} FatOpenExistingDirectory(actual_IrpContext_46: int, actual_FileObject_11: int, actual_Vcb_34: int, actual_ParentDcb_6: int, actual_Dirent_11: int, actual_LfnByteOffset_2: int, actual_DirentByteOffset_4: int, actual_Lfn_5: int, actual_DesiredAccess_8: int, actual_ShareAccess_8: int, actual_CreateDisposition_6: int, actual_NoEaKnowledge_6: int, actual_DeleteOnClose_5: int) returns (SD4: int);
  modifies alloc, queued, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOpenExistingDirectory"} FatOpenExistingDirectory(actual_IrpContext_46: int, actual_FileObject_11: int, actual_Vcb_34: int, actual_ParentDcb_6: int, actual_Dirent_11: int, actual_LfnByteOffset_2: int, actual_DirentByteOffset_4: int, actual_Lfn_5: int, actual_DesiredAccess_8: int, actual_ShareAccess_8: int, actual_CreateDisposition_6: int, actual_NoEaKnowledge_6: int, actual_DeleteOnClose_5: int) returns (SD4: int)
{
  var {:dopa} {:scalar} NeedEaCount_2: int;
  var {:scalar} Tmp_823: int;
  var {:pointer} UnwindDcb: int;
  var {:scalar} Iosb_10: int;
  var {:scalar} Tmp_4: int;
  var {:pointer} UnwindCcb_7: int;
  var {:scalar} sdv_330: int;
  var {:pointer} Dcb_5: int;
  var {:scalar} sdv_331: int;
  var {:pointer} IrpContext_46: int;
  var {:pointer} FileObject_11: int;
  var {:pointer} Vcb_34: int;
  var {:pointer} ParentDcb_6: int;
  var {:pointer} Dirent_11: int;
  var {:scalar} LfnByteOffset_2: int;
  var {:scalar} DirentByteOffset_4: int;
  var {:pointer} Lfn_5: int;
  var {:pointer} DesiredAccess_8: int;
  var {:scalar} ShareAccess_8: int;
  var {:scalar} CreateDisposition_6: int;
  var {:scalar} NoEaKnowledge_6: int;
  var vslice_dummy_var_1274: int;
  var vslice_dummy_var_1275: int;

  anon0:
    call {:si_unique_call 885} NeedEaCount_2 := __HAVOC_malloc(4);
    call {:si_unique_call 886} Iosb_10 := __HAVOC_malloc(12);
    call {:si_unique_call 887} Tmp_4 := __HAVOC_malloc(12);
    IrpContext_46 := actual_IrpContext_46;
    FileObject_11 := actual_FileObject_11;
    Vcb_34 := actual_Vcb_34;
    ParentDcb_6 := actual_ParentDcb_6;
    Dirent_11 := actual_Dirent_11;
    LfnByteOffset_2 := actual_LfnByteOffset_2;
    DirentByteOffset_4 := actual_DirentByteOffset_4;
    Lfn_5 := actual_Lfn_5;
    DesiredAccess_8 := actual_DesiredAccess_8;
    ShareAccess_8 := actual_ShareAccess_8;
    CreateDisposition_6 := actual_CreateDisposition_6;
    NoEaKnowledge_6 := actual_NoEaKnowledge_6;
    UnwindDcb := 0;
    UnwindCcb_7 := 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} NoEaKnowledge_6 != 0;
    assume {:nonnull} Vcb_34 != 0;
    assume Vcb_34 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 888} FatGetNeedEaCount(IrpContext_46, Vcb_34, Dirent_11, NeedEaCount_2);
    assume {:nonnull} NeedEaCount_2 != 0;
    assume NeedEaCount_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Iosb_10 != 0;
    assume Iosb_10 > 0;
    goto L31;

  L31:
    call {:si_unique_call 889} sdv_330 := sdv_AbnormalTermination();
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_330 != 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} UnwindDcb != 0;
    call {:si_unique_call 890} FatDeleteFcb_Real(IrpContext_46, UnwindDcb);
    goto L37;

  L37:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} UnwindCcb_7 != 0;
    call {:si_unique_call 891} FatDeleteCcb_Real(IrpContext_46, UnwindCcb_7);
    goto L35;

  L35:
    assume {:nonnull} Iosb_10 != 0;
    assume Iosb_10 > 0;
    assume {:nonnull} Tmp_4 != 0;
    assume Tmp_4 > 0;
    assume {:nonnull} Iosb_10 != 0;
    assume Iosb_10 > 0;
    assume {:nonnull} Tmp_4 != 0;
    assume Tmp_4 > 0;
    assume {:nonnull} Iosb_10 != 0;
    assume Iosb_10 > 0;
    assume {:nonnull} Tmp_4 != 0;
    assume Tmp_4 > 0;
    SD4 := Tmp_4;
    return;

  anon26_Then:
    assume {:partition} UnwindCcb_7 == 0;
    goto L35;

  anon25_Then:
    assume {:partition} UnwindDcb == 0;
    goto L37;

  anon24_Then:
    assume {:partition} sdv_330 == 0;
    goto L35;

  anon23_Then:
    goto L10;

  L10:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} CreateDisposition_6 != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} CreateDisposition_6 != 3;
    assume {:nonnull} Iosb_10 != 0;
    assume Iosb_10 > 0;
    goto L31;

  anon27_Then:
    assume {:partition} CreateDisposition_6 == 3;
    goto L44;

  L44:
    assume {:nonnull} Dirent_11 != 0;
    assume Dirent_11 > 0;
    havoc vslice_dummy_var_1274;
    call {:si_unique_call 892} sdv_331 := FatCheckFileAccess(IrpContext_46, vslice_dummy_var_1274, DesiredAccess_8);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_331 != 0;
    call {:si_unique_call 893} UnwindDcb := FatCreateDcb(IrpContext_46, Vcb_34, ParentDcb_6, LfnByteOffset_2, DirentByteOffset_4, Dirent_11, Lfn_5);
    Dcb_5 := UnwindDcb;
    Tmp_823 := ShareAccess_8;
    assume {:nonnull} DesiredAccess_8 != 0;
    assume DesiredAccess_8 > 0;
    havoc vslice_dummy_var_1275;
    call {:si_unique_call 894} IoSetShareAccess(vslice_dummy_var_1275, Tmp_823, 0, 0);
    call {:si_unique_call 895} UnwindCcb_7 := FatCreateCcb(IrpContext_46);
    call {:si_unique_call 896} FatSetFileObject(FileObject_11, 3, Dcb_5, UnwindCcb_7);
    assume {:nonnull} Dcb_5 != 0;
    assume Dcb_5 > 0;
    assume {:nonnull} Dcb_5 != 0;
    assume Dcb_5 > 0;
    assume {:nonnull} Vcb_34 != 0;
    assume Vcb_34 > 0;
    assume {:nonnull} FileObject_11 != 0;
    assume FileObject_11 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L73;

  L73:
    assume {:nonnull} Iosb_10 != 0;
    assume Iosb_10 > 0;
    assume {:nonnull} Iosb_10 != 0;
    assume Iosb_10 > 0;
    goto L31;

  anon30_Then:
    assume {:nonnull} Vcb_34 != 0;
    assume Vcb_34 > 0;
    goto L73;

  anon28_Then:
    assume {:partition} sdv_331 == 0;
    assume {:nonnull} Iosb_10 != 0;
    assume Iosb_10 > 0;
    goto L31;

  anon21_Then:
    assume {:partition} CreateDisposition_6 == 1;
    goto L44;

  anon22_Then:
    goto L10;

  anon29_Then:
    assume {:partition} NoEaKnowledge_6 == 0;
    goto L10;
}



procedure {:origName "FatOpenExistingDcb"} FatOpenExistingDcb(actual_IrpContext_47: int, actual_FileObject_12: int, actual_Vcb_35: int, actual_Dcb_6: int, actual_DesiredAccess_9: int, actual_ShareAccess_9: int, actual_CreateDisposition_7: int, actual_NoEaKnowledge_7: int, actual_DeleteOnClose_6: int) returns (SD3: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOpenExistingDcb"} FatOpenExistingDcb(actual_IrpContext_47: int, actual_FileObject_12: int, actual_Vcb_35: int, actual_Dcb_6: int, actual_DesiredAccess_9: int, actual_ShareAccess_9: int, actual_CreateDisposition_7: int, actual_NoEaKnowledge_7: int, actual_DeleteOnClose_6: int) returns (SD3: int)
{
  var {:scalar} DcbAcquired_1: int;
  var {:dopa} {:scalar} NeedEaCount_3: int;
  var {:pointer} Ccb_9: int;
  var {:scalar} Tmp_825: int;
  var {:pointer} Dirent_12: int;
  var {:scalar} Iosb_11: int;
  var {:pointer} DirentBcb_5: int;
  var {:pointer} UnwindCcb_8: int;
  var {:scalar} sdv_336: int;
  var {:pointer} Tmp_826: int;
  var {:scalar} sdv_338: int;
  var {:scalar} UnwindShareAccess_4: int;
  var {:pointer} Tmp_827: int;
  var {:scalar} Tmp_3: int;
  var {:scalar} Tmp_829: int;
  var {:pointer} IrpContext_47: int;
  var {:pointer} FileObject_12: int;
  var {:pointer} Vcb_35: int;
  var {:pointer} Dcb_6: int;
  var {:pointer} DesiredAccess_9: int;
  var {:scalar} ShareAccess_9: int;
  var {:scalar} CreateDisposition_7: int;
  var {:scalar} NoEaKnowledge_7: int;
  var {:scalar} DeleteOnClose_6: int;
  var boogieTmp: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_1276: int;
  var vslice_dummy_var_1277: int;
  var vslice_dummy_var_1278: int;

  anon0:
    call {:si_unique_call 897} NeedEaCount_3 := __HAVOC_malloc(4);
    call {:si_unique_call 898} Dirent_12 := __HAVOC_malloc(4);
    call {:si_unique_call 899} Iosb_11 := __HAVOC_malloc(12);
    call {:si_unique_call 900} DirentBcb_5 := __HAVOC_malloc(4);
    call {:si_unique_call 901} Tmp_3 := __HAVOC_malloc(12);
    IrpContext_47 := actual_IrpContext_47;
    FileObject_12 := actual_FileObject_12;
    Vcb_35 := actual_Vcb_35;
    Dcb_6 := actual_Dcb_6;
    DesiredAccess_9 := actual_DesiredAccess_9;
    ShareAccess_9 := actual_ShareAccess_9;
    CreateDisposition_7 := actual_CreateDisposition_7;
    NoEaKnowledge_7 := actual_NoEaKnowledge_7;
    DeleteOnClose_6 := actual_DeleteOnClose_6;
    assume {:nonnull} DirentBcb_5 != 0;
    assume DirentBcb_5 > 0;
    UnwindShareAccess_4 := 0;
    UnwindCcb_8 := 0;
    DcbAcquired_1 := 0;
    call {:si_unique_call 902} vslice_dummy_var_123 := FatAcquireExclusiveFcb(IrpContext_47, Dcb_6);
    DcbAcquired_1 := 1;
    Tmp_826 := Dcb_6;
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} DeleteOnClose_6 != 0;
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    goto L22;

  L22:
    assume {:nonnull} DirentBcb_5 != 0;
    assume DirentBcb_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} DirentBcb_5 != 0;
    assume DirentBcb_5 > 0;
    goto L23;

  L23:
    call {:si_unique_call 903} sdv_336 := sdv_AbnormalTermination();
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_336 != 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} UnwindCcb_8 != 0;
    call {:si_unique_call 904} FatDeleteCcb_Real(IrpContext_47, UnwindCcb_8);
    goto L33;

  L33:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} UnwindShareAccess_4 != 0;
    call {:si_unique_call 905} IoRemoveShareAccess(0, 0);
    goto L31;

  L31:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} DcbAcquired_1 != 0;
    call {:si_unique_call 906} ExReleaseResourceLite(0);
    goto L40;

  L40:
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    SD3 := Tmp_3;
    return;

  anon43_Then:
    assume {:partition} DcbAcquired_1 == 0;
    goto L40;

  anon45_Then:
    assume {:partition} UnwindShareAccess_4 == 0;
    goto L31;

  anon44_Then:
    assume {:partition} UnwindCcb_8 == 0;
    goto L33;

  anon42_Then:
    assume {:partition} sdv_336 == 0;
    goto L31;

  anon41_Then:
    goto L23;

  anon40_Then:
    assume {:partition} DeleteOnClose_6 == 0;
    goto L18;

  L18:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} NoEaKnowledge_7 != 0;
    Tmp_827 := Dcb_6;
    assume {:nonnull} Tmp_827 != 0;
    assume Tmp_827 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Vcb_35 != 0;
    assume Vcb_35 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 907} FatGetDirentFromFcbOrDcb(IrpContext_47, Dcb_6, Dirent_12, DirentBcb_5);
    assume {:nonnull} Dirent_12 != 0;
    assume Dirent_12 > 0;
    call {:si_unique_call 908} FatGetNeedEaCount(IrpContext_47, Vcb_35, Mem_T.P_PACKED_DIRENT[Dirent_12], NeedEaCount_3);
    assume {:nonnull} DirentBcb_5 != 0;
    assume DirentBcb_5 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} DirentBcb_5 != 0;
    assume DirentBcb_5 > 0;
    goto L76;

  L76:
    assume {:nonnull} NeedEaCount_3 != 0;
    assume NeedEaCount_3 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    goto L22;

  anon49_Then:
    goto L44;

  L44:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} CreateDisposition_7 != 1;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} CreateDisposition_7 != 3;
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    goto L22;

  anon50_Then:
    assume {:partition} CreateDisposition_7 == 3;
    goto L83;

  L83:
    assume {:nonnull} Dcb_6 != 0;
    assume Dcb_6 > 0;
    havoc vslice_dummy_var_1276;
    call {:si_unique_call 909} sdv_338 := FatCheckFileAccess(IrpContext_47, vslice_dummy_var_1276, DesiredAccess_9);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_338 != 0;
    assume {:nonnull} Dcb_6 != 0;
    assume Dcb_6 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    Tmp_825 := ShareAccess_9;
    assume {:nonnull} DesiredAccess_9 != 0;
    assume DesiredAccess_9 > 0;
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    havoc vslice_dummy_var_1277;
    call {:si_unique_call 910} boogieTmp := IoCheckShareAccess(vslice_dummy_var_1277, Tmp_825, 0, 0, 1);
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto L100;

  L100:
    UnwindShareAccess_4 := 1;
    call {:si_unique_call 911} UnwindCcb_8 := FatCreateCcb(IrpContext_47);
    call {:si_unique_call 912} FatSetFileObject(FileObject_12, 3, Dcb_6, UnwindCcb_8);
    assume {:nonnull} Dcb_6 != 0;
    assume Dcb_6 > 0;
    assume {:nonnull} Dcb_6 != 0;
    assume Dcb_6 > 0;
    assume {:nonnull} Vcb_35 != 0;
    assume Vcb_35 > 0;
    assume {:nonnull} FileObject_12 != 0;
    assume FileObject_12 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L114;

  L114:
    assume {:nonnull} FileObject_12 != 0;
    assume FileObject_12 > 0;
    havoc Ccb_9;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} DeleteOnClose_6 != 0;
    assume {:nonnull} Ccb_9 != 0;
    assume Ccb_9 > 0;
    goto L116;

  L116:
    assume {:nonnull} Dcb_6 != 0;
    assume Dcb_6 > 0;
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    goto L22;

  anon57_Then:
    assume {:partition} DeleteOnClose_6 == 0;
    goto L116;

  anon56_Then:
    assume {:nonnull} Vcb_35 != 0;
    assume Vcb_35 > 0;
    goto L114;

  anon53_Then:
    goto L22;

  anon52_Then:
    Tmp_829 := ShareAccess_9;
    assume {:nonnull} DesiredAccess_9 != 0;
    assume DesiredAccess_9 > 0;
    havoc vslice_dummy_var_1278;
    call {:si_unique_call 913} IoSetShareAccess(vslice_dummy_var_1278, Tmp_829, 0, 0);
    goto L100;

  anon51_Then:
    assume {:partition} sdv_338 == 0;
    assume {:nonnull} Iosb_11 != 0;
    assume Iosb_11 > 0;
    goto L22;

  anon46_Then:
    assume {:partition} CreateDisposition_7 == 1;
    goto L83;

  anon48_Then:
    goto L76;

  anon47_Then:
    goto L44;

  anon55_Then:
    goto L44;

  anon39_Then:
    assume {:partition} NoEaKnowledge_7 == 0;
    goto L44;

  anon54_Then:
    goto L18;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_563: int, actual_sdv_564: int) returns (Tmp_958: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_563: int, actual_sdv_564: int) returns (Tmp_958: int)
{
  var {:scalar} sdv_565: int;

  anon0:
    call {:si_unique_call 914} sdv_565 := __HAVOC_malloc(4);
    call {:si_unique_call 915} Tmp_958 := __HAVOC_malloc(4);
    call {:si_unique_call 916} SLIC_sdv_InsertTailList_entry(0);
    assume {:nonnull} Tmp_958 != 0;
    assume Tmp_958 > 0;
    assume {:nonnull} sdv_565 != 0;
    assume sdv_565 > 0;
    return;
}



procedure {:origName "FatSetBasicInfo"} FatSetBasicInfo(actual_IrpContext_48: int, actual_Irp_3: int, actual_Fcb_14: int, actual_Ccb_10: int) returns (Tmp_1012: int);
  modifies alloc, locked, queuedWithoutMarking, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1012 == -1073741811 || Tmp_1012 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetBasicInfo"} FatSetBasicInfo(actual_IrpContext_48: int, actual_Irp_3: int, actual_Fcb_14: int, actual_Ccb_10: int) returns (Tmp_1012: int)
{
  var {:scalar} LargeCreationTime: int;
  var {:scalar} LastAccessTime: int;
  var {:pointer} Tmp_1013: int;
  var {:pointer} Tmp_1014: int;
  var {:pointer} Tmp_1015: int;
  var {:scalar} LastAccessDate: int;
  var {:scalar} CreationTime: int;
  var {:dopa} {:scalar} CreationMSec: int;
  var {:scalar} sdv_670: int;
  var {:scalar} ModifyCreation: int;
  var {:pointer} Dirent_13: int;
  var {:scalar} Status_7: int;
  var {:scalar} LastWriteTime: int;
  var {:scalar} FatLocalDecThirtyOne1979: int;
  var {:pointer} Buffer: int;
  var {:pointer} DirentBcb_6: int;
  var {:scalar} LargeLastAccessTime: int;
  var {:pointer} Tmp_1016: int;
  var {:scalar} ModifyLastWrite: int;
  var {:scalar} sdv_671: int;
  var {:scalar} LargeLastWriteTime: int;
  var {:scalar} ModifyLastAccess: int;
  var {:scalar} Attributes: int;
  var {:scalar} sdv_672: int;
  var {:pointer} sdv_673: int;
  var {:pointer} sdv_674: int;
  var {:pointer} Tmp_1018: int;
  var {:scalar} NotifyFilter_1: int;
  var {:pointer} Tmp_1021: int;
  var {:scalar} Tmp_1022: int;
  var {:scalar} FatLocalJanOne1980: int;
  var {:pointer} Tmp_1023: int;
  var {:pointer} Tmp_1024: int;
  var {:pointer} IrpContext_48: int;
  var {:pointer} Irp_3: int;
  var {:pointer} Fcb_14: int;
  var {:pointer} Ccb_10: int;
  var boogieTmp: int;
  var vslice_dummy_var_1279: int;
  var vslice_dummy_var_1280: int;

  anon0:
    call {:si_unique_call 917} LargeCreationTime := __HAVOC_malloc(20);
    call {:si_unique_call 918} LastAccessTime := __HAVOC_malloc(24);
    call {:si_unique_call 919} LastAccessDate := __HAVOC_malloc(12);
    call {:si_unique_call 920} CreationTime := __HAVOC_malloc(24);
    call {:si_unique_call 921} CreationMSec := __HAVOC_malloc(4);
    call {:si_unique_call 922} Dirent_13 := __HAVOC_malloc(4);
    call {:si_unique_call 923} LastWriteTime := __HAVOC_malloc(24);
    call {:si_unique_call 924} FatLocalDecThirtyOne1979 := __HAVOC_malloc(20);
    call {:si_unique_call 925} DirentBcb_6 := __HAVOC_malloc(4);
    call {:si_unique_call 926} LargeLastAccessTime := __HAVOC_malloc(20);
    call {:si_unique_call 927} LargeLastWriteTime := __HAVOC_malloc(20);
    call {:si_unique_call 928} FatLocalJanOne1980 := __HAVOC_malloc(20);
    IrpContext_48 := actual_IrpContext_48;
    Irp_3 := actual_Irp_3;
    Fcb_14 := actual_Fcb_14;
    Ccb_10 := actual_Ccb_10;
    ModifyCreation := 0;
    ModifyLastWrite := 0;
    ModifyLastAccess := 0;
    NotifyFilter_1 := 0;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    havoc Buffer;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} Ccb_10 != 0;
    assume Ccb_10 > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto L26;

  L26:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Ccb_10 != 0;
    assume Ccb_10 > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto L29;

  L29:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Ccb_10 != 0;
    assume Ccb_10 > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto L32;

  L32:
    assume {:nonnull} DirentBcb_6 != 0;
    assume DirentBcb_6 > 0;
    Status_7 := 0;
    call {:si_unique_call 929} FatGetDirentFromFcbOrDcb(IrpContext_48, Fcb_14, Dirent_13, DirentBcb_6);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    call {:si_unique_call 930} sdv_670 := FatNtTimeToFatTime(IrpContext_48, LargeCreationTime, 0, CreationTime, CreationMSec);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} sdv_670 != 0;
    goto L61;

  L61:
    ModifyCreation := 1;
    goto L53;

  L53:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    call {:si_unique_call 931} sdv_671 := FatNtTimeToFatTime(IrpContext_48, LargeLastAccessTime, 1, LastAccessTime, 0);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} sdv_671 != 0;
    goto L82;

  L82:
    assume {:nonnull} LastAccessDate != 0;
    assume LastAccessDate > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastAccessDate != 0;
    assume LastAccessDate > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastAccessDate != 0;
    assume LastAccessDate > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    ModifyLastAccess := 1;
    goto L74;

  L74:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} ModifyLastAccess != 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    ModifyLastWrite := 1;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    goto L89;

  L89:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    havoc Attributes;
    Tmp_1014 := Fcb_14;
    assume {:nonnull} Tmp_1014 != 0;
    assume Tmp_1014 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    Status_7 := -1073741811;
    goto L68;

  L68:
    assume {:nonnull} DirentBcb_6 != 0;
    assume DirentBcb_6 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} DirentBcb_6 != 0;
    assume DirentBcb_6 > 0;
    goto L69;

  L69:
    Tmp_1012 := Status_7;
    return;

  anon73_Then:
    goto L69;

  anon86_Then:
    goto L112;

  L112:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    Tmp_1023 := Fcb_14;
    assume {:nonnull} Tmp_1023 != 0;
    assume Tmp_1023 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    Status_7 := -1073741811;
    goto L68;

  anon94_Then:
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    call {:si_unique_call 932} sdv_674 := sdv_IoGetCurrentIrpStackLocation(Irp_3);
    assume {:nonnull} sdv_674 != 0;
    assume sdv_674 > 0;
    havoc Tmp_1024;
    assume {:nonnull} sdv_674 != 0;
    assume sdv_674 > 0;
    havoc Tmp_1016;
    assume {:nonnull} Tmp_1016 != 0;
    assume Tmp_1016 > 0;
    assume {:nonnull} Tmp_1024 != 0;
    assume Tmp_1024 > 0;
    goto L124;

  L124:
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    NotifyFilter_1 := BOR(NotifyFilter_1, 4);
    goto L107;

  L107:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} ModifyCreation != 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} CreationMSec != 0;
    assume CreationMSec > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    NotifyFilter_1 := BOR(NotifyFilter_1, 64);
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} Ccb_10 != 0;
    assume Ccb_10 > 0;
    goto L131;

  L131:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} ModifyLastAccess != 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} LastAccessDate != 0;
    assume LastAccessDate > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} LastAccessDate != 0;
    assume LastAccessDate > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} LastAccessDate != 0;
    assume LastAccessDate > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    NotifyFilter_1 := BOR(NotifyFilter_1, 32);
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} Ccb_10 != 0;
    assume Ccb_10 > 0;
    goto L138;

  L138:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} ModifyLastWrite != 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    NotifyFilter_1 := BOR(NotifyFilter_1, 16);
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} Ccb_10 != 0;
    assume Ccb_10 > 0;
    goto L150;

  L150:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} NotifyFilter_1 != 0;
    Tmp_1021 := Fcb_14;
    assume {:nonnull} Tmp_1021 != 0;
    assume Tmp_1021 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    havoc Tmp_1015;
    assume {:nonnull} Tmp_1015 != 0;
    assume Tmp_1015 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Dirent_13 != 0;
    assume Dirent_13 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_13] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_13] > 0;
    call {:si_unique_call 933} boogieTmp := corral_nondet();
    goto L157;

  L157:
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto L165;

  L165:
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    havoc Tmp_1022;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    call {:si_unique_call 934} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_1022, 0, 0, NotifyFilter_1, 3, 0);
    assume {:nonnull} DirentBcb_6 != 0;
    assume DirentBcb_6 > 0;
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    havoc vslice_dummy_var_1279;
    havoc vslice_dummy_var_1280;
    call {:si_unique_call 935} FatSetDirtyBcb#1(IrpContext_48, vslice_dummy_var_1279, vslice_dummy_var_1280, 1);
    goto L68;

  anon91_Then:
    call {:si_unique_call 936} FatSetFullFileNameInFcb#1(IrpContext_48, Fcb_14);
    goto L165;

  anon96_Then:
    goto L157;

  anon95_Then:
    goto L157;

  anon90_Then:
    assume {:partition} NotifyFilter_1 == 0;
    goto L68;

  anon89_Then:
    assume {:partition} ModifyLastWrite == 0;
    goto L150;

  anon88_Then:
    assume {:partition} ModifyLastAccess == 0;
    goto L138;

  anon85_Then:
    assume {:partition} ModifyCreation == 0;
    goto L131;

  anon87_Then:
    assume {:nonnull} Fcb_14 != 0;
    assume Fcb_14 > 0;
    call {:si_unique_call 937} sdv_673 := sdv_IoGetCurrentIrpStackLocation(Irp_3);
    assume {:nonnull} sdv_673 != 0;
    assume sdv_673 > 0;
    havoc Tmp_1013;
    assume {:nonnull} sdv_673 != 0;
    assume sdv_673 > 0;
    havoc Tmp_1018;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    assume {:nonnull} Tmp_1018 != 0;
    assume Tmp_1018 > 0;
    goto L124;

  anon93_Then:
    Attributes := BOR(Attributes, 16);
    goto L112;

  anon79_Then:
    goto L107;

  anon81_Then:
    goto L91;

  L91:
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} Buffer != 0;
    assume Buffer > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    call {:si_unique_call 938} sdv_672 := FatNtTimeToFatTime(IrpContext_48, LargeLastWriteTime, 1, LastWriteTime, 0);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} sdv_672 != 0;
    goto L101;

  L101:
    ModifyLastWrite := 1;
    goto L89;

  anon82_Then:
    assume {:partition} sdv_672 == 0;
    assume {:nonnull} FatLocalDecThirtyOne1979 != 0;
    assume FatLocalDecThirtyOne1979 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} LastWriteTime != 0;
    assume LastWriteTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastWriteTime != 0;
    assume LargeLastWriteTime > 0;
    goto L101;

  anon84_Then:
    goto L102;

  L102:
    Status_7 := -1073741811;
    goto L68;

  anon83_Then:
    goto L102;

  anon80_Then:
    assume {:partition} ModifyLastAccess == 0;
    goto L91;

  anon74_Then:
    goto L89;

  anon76_Then:
    assume {:partition} sdv_671 == 0;
    assume {:nonnull} FatLocalDecThirtyOne1979 != 0;
    assume FatLocalDecThirtyOne1979 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} LastAccessTime != 0;
    assume LastAccessTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeLastAccessTime != 0;
    assume LargeLastAccessTime > 0;
    goto L82;

  anon78_Then:
    goto L84;

  L84:
    Status_7 := -1073741811;
    goto L68;

  anon77_Then:
    goto L84;

  anon75_Then:
    goto L74;

  anon68_Then:
    goto L74;

  anon70_Then:
    assume {:partition} sdv_670 == 0;
    assume {:nonnull} FatLocalDecThirtyOne1979 != 0;
    assume FatLocalDecThirtyOne1979 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} CreationTime != 0;
    assume CreationTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} FatLocalJanOne1980 != 0;
    assume FatLocalJanOne1980 > 0;
    assume {:nonnull} LargeCreationTime != 0;
    assume LargeCreationTime > 0;
    assume {:nonnull} CreationMSec != 0;
    assume CreationMSec > 0;
    goto L61;

  anon72_Then:
    goto L62;

  L62:
    Status_7 := -1073741811;
    goto L68;

  anon71_Then:
    goto L62;

  anon69_Then:
    goto L53;

  anon67_Then:
    goto L53;

  anon66_Then:
    goto L32;

  anon65_Then:
    goto L29;

  anon92_Then:
    goto L26;
}



procedure {:origName "FatSetRenameInfo"} FatSetRenameInfo(actual_IrpContext_49: int, actual_Irp_4: int, actual_Vcb_36: int, actual_Fcb_15: int, actual_Ccb_11: int) returns (Tmp_1025: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetRenameInfo"} FatSetRenameInfo(actual_IrpContext_49: int, actual_Irp_4: int, actual_Vcb_36: int, actual_Fcb_15: int, actual_Ccb_11: int) returns (Tmp_1025: int)
{
  var {:scalar} NewOemName: int;
  var {:pointer} Links: int;
  var {:pointer} sdv_675: int;
  var {:scalar} DeleteTarget: int;
  var {:scalar} HaveTunneledInformation_1: int;
  var {:pointer} Tmp_1026: int;
  var {:scalar} DeleteSourceDirent: int;
  var {:scalar} ReplaceIfExists: int;
  var {:scalar} OldName: int;
  var {:pointer} UniTunneledLongNameBuffer_1: int;
  var {:pointer} UniTunneledShortNameBuffer_1: int;
  var {:pointer} BatchOplockFcb: int;
  var {:scalar} InvalidateFcbOnRaise: int;
  var {:scalar} Tmp_1031: int;
  var {:dopa} {:scalar} Status_8: int;
  var {:pointer} Tmp_1033: int;
  var {:pointer} SecondPageDirent_2: int;
  var {:scalar} TargetLfn: int;
  var {:dopa} {:scalar} AllLowerComponent_2: int;
  var {:pointer} Tmp_1034: int;
  var {:scalar} Tmp_1035: int;
  var {:pointer} Buffer_1: int;
  var {:scalar} BytesInFirstPage_2: int;
  var {:pointer} IrpSp_5: int;
  var {:scalar} Tmp_1039: int;
  var {:scalar} sdv_682: int;
  var {:scalar} Tmp_1040: int;
  var {:scalar} NewName: int;
  var {:scalar} Tmp_1041: int;
  var {:pointer} TargetDcb: int;
  var {:scalar} Tmp_1042: int;
  var {:scalar} Tmp_1043: int;
  var {:pointer} Tmp_1044: int;
  var {:scalar} Tmp_1045: int;
  var {:pointer} sdv_685: int;
  var {:dopa} {:scalar} TargetDirentOffset: int;
  var {:scalar} Tmp_1046: int;
  var {:scalar} sdv_687: int;
  var {:scalar} sdv_688: int;
  var {:scalar} Tmp_1047: int;
  var {:scalar} sdv_689: int;
  var {:pointer} TargetDirentBcb: int;
  var {:scalar} ContinueWithRename: int;
  var {:pointer} TempFcb: int;
  var {:scalar} OldOemName: int;
  var {:pointer} NewDirentBcb: int;
  var {:scalar} NewDirentFromPool: int;
  var {:pointer} Tmp_1048: int;
  var {:pointer} Tmp_1049: int;
  var {:pointer} Tmp_1050: int;
  var {:pointer} Tmp_1051: int;
  var {:scalar} sdv_691: int;
  var {:pointer} DotDotDirent: int;
  var {:pointer} Tmp_1052: int;
  var {:pointer} Tmp_1053: int;
  var {:pointer} ShortDirent_2: int;
  var {:pointer} OldDirent: int;
  var {:scalar} ShortDirentOffset: int;
  var {:scalar} sdv_692: int;
  var {:pointer} OldParentDcb: int;
  var {:pointer} Tmp_1055: int;
  var {:pointer} UnicodeBuffer: int;
  var {:pointer} TargetDirent: int;
  var {:scalar} RenamedAcrossDirectories: int;
  var {:scalar} Tmp_1056: int;
  var {:scalar} SourceDirent: int;
  var {:scalar} Tmp_1057: int;
  var {:scalar} sdv_694: int;
  var {:pointer} TargetCcb: int;
  var {:pointer} TargetVcb: int;
  var {:scalar} BatchOplockCount: int;
  var {:pointer} sdv_695: int;
  var {:pointer} OemNameBuffer: int;
  var {:scalar} Tmp_1058: int;
  var {:scalar} NewOffset: int;
  var {:scalar} UsingTunneledLfn_1: int;
  var {:pointer} FileObject_13: int;
  var {:pointer} OldDirentBcb: int;
  var {:scalar} TargetLfnOffset: int;
  var {:scalar} sdv_696: int;
  var {:scalar} NotifyAction: int;
  var {:pointer} Tmp_1059: int;
  var {:scalar} sdv_699: int;
  var {:scalar} CaseOnlyRename: int;
  var {:scalar} sdv_701: int;
  var {:pointer} NewDirent: int;
  var {:pointer} SecondPageBcb_2: int;
  var {:pointer} Tmp_1061: int;
  var {:pointer} Tmp_1062: int;
  var {:dopa} {:scalar} AllLowerExtension_2: int;
  var {:scalar} LocalCcb_1: int;
  var {:scalar} SecondPageOffset_2: int;
  var {:pointer} Tmp_1063: int;
  var {:scalar} DirentsRequired: int;
  var {:pointer} SourceCcb: int;
  var {:scalar} UniTunneledShortName_1: int;
  var {:scalar} OldUpcasedName: int;
  var {:scalar} sdv_705: int;
  var {:scalar} TunneledCreationTime_1: int;
  var {:scalar} Tmp_1065: int;
  var {:scalar} NewUpcasedName: int;
  var {:dopa} {:scalar} CreateLfn_2: int;
  var {:pointer} TargetFileObject: int;
  var {:scalar} UniTunneledLongName_1: int;
  var {:pointer} DotDotBcb: int;
  var {:pointer} IrpContext_49: int;
  var {:pointer} Irp_4: int;
  var {:pointer} Vcb_36: int;
  var {:pointer} Fcb_15: int;
  var {:pointer} Ccb_11: int;
  var boogieTmp: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_1281: int;
  var vslice_dummy_var_1282: int;
  var vslice_dummy_var_1283: int;
  var vslice_dummy_var_1284: int;
  var vslice_dummy_var_1285: int;
  var vslice_dummy_var_1286: int;
  var vslice_dummy_var_1287: int;
  var vslice_dummy_var_1288: int;
  var vslice_dummy_var_1289: int;
  var vslice_dummy_var_1290: int;
  var vslice_dummy_var_1291: int;
  var vslice_dummy_var_1292: int;
  var vslice_dummy_var_1293: int;
  var vslice_dummy_var_1294: int;
  var vslice_dummy_var_1295: int;
  var vslice_dummy_var_1296: int;
  var vslice_dummy_var_1297: int;
  var vslice_dummy_var_1298: int;

  anon0:
    call {:si_unique_call 939} NewOemName := __HAVOC_malloc(12);
    call {:si_unique_call 940} OldName := __HAVOC_malloc(12);
    call {:si_unique_call 941} Status_8 := __HAVOC_malloc(4);
    call {:si_unique_call 942} SecondPageDirent_2 := __HAVOC_malloc(4);
    call {:si_unique_call 943} TargetLfn := __HAVOC_malloc(12);
    call {:si_unique_call 944} AllLowerComponent_2 := __HAVOC_malloc(4);
    call {:si_unique_call 945} vslice_dummy_var_124 := __HAVOC_malloc(20);
    call {:si_unique_call 946} NewName := __HAVOC_malloc(12);
    call {:si_unique_call 947} Tmp_1041 := __HAVOC_malloc(12);
    call {:si_unique_call 948} TargetDcb := __HAVOC_malloc(4);
    call {:si_unique_call 949} TargetDirentOffset := __HAVOC_malloc(4);
    call {:si_unique_call 950} TargetDirentBcb := __HAVOC_malloc(4);
    call {:si_unique_call 951} vslice_dummy_var_125 := __HAVOC_malloc(20);
    call {:si_unique_call 952} OldOemName := __HAVOC_malloc(12);
    call {:si_unique_call 953} NewDirentBcb := __HAVOC_malloc(4);
    call {:si_unique_call 954} DotDotDirent := __HAVOC_malloc(4);
    call {:si_unique_call 955} OldDirent := __HAVOC_malloc(4);
    call {:si_unique_call 956} TargetDirent := __HAVOC_malloc(4);
    call {:si_unique_call 957} SourceDirent := __HAVOC_malloc(92);
    call {:si_unique_call 958} TargetCcb := __HAVOC_malloc(4);
    call {:si_unique_call 959} TargetVcb := __HAVOC_malloc(4);
    call {:si_unique_call 960} OldDirentBcb := __HAVOC_malloc(4);
    call {:si_unique_call 961} NewDirent := __HAVOC_malloc(4);
    call {:si_unique_call 962} SecondPageBcb_2 := __HAVOC_malloc(4);
    call {:si_unique_call 963} vslice_dummy_var_126 := __HAVOC_malloc(20);
    call {:si_unique_call 964} AllLowerExtension_2 := __HAVOC_malloc(4);
    call {:si_unique_call 965} LocalCcb_1 := __HAVOC_malloc(88);
    call {:si_unique_call 966} UniTunneledShortName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 967} OldUpcasedName := __HAVOC_malloc(12);
    call {:si_unique_call 968} TunneledCreationTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 969} NewUpcasedName := __HAVOC_malloc(12);
    call {:si_unique_call 970} CreateLfn_2 := __HAVOC_malloc(4);
    call {:si_unique_call 971} UniTunneledLongName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 972} DotDotBcb := __HAVOC_malloc(4);
    IrpContext_49 := actual_IrpContext_49;
    Irp_4 := actual_Irp_4;
    Vcb_36 := actual_Vcb_36;
    Fcb_15 := actual_Fcb_15;
    Ccb_11 := actual_Ccb_11;
    call {:si_unique_call 973} UniTunneledLongNameBuffer_1 := __HAVOC_malloc(104);
    call {:si_unique_call 974} UniTunneledShortNameBuffer_1 := __HAVOC_malloc(48);
    call {:si_unique_call 975} OemNameBuffer := __HAVOC_malloc(192);
    UsingTunneledLfn_1 := 0;
    InvalidateFcbOnRaise := 0;
    CaseOnlyRename := 0;
    ContinueWithRename := 0;
    DeleteSourceDirent := 0;
    DeleteTarget := 0;
    NewDirentFromPool := 0;
    RenamedAcrossDirectories := 0;
    assume {:nonnull} DotDotBcb != 0;
    assume DotDotBcb > 0;
    assume {:nonnull} NewDirentBcb != 0;
    assume NewDirentBcb > 0;
    assume {:nonnull} OldDirentBcb != 0;
    assume OldDirentBcb > 0;
    assume {:nonnull} SecondPageBcb_2 != 0;
    assume SecondPageBcb_2 > 0;
    assume {:nonnull} TargetDirentBcb != 0;
    assume TargetDirentBcb > 0;
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    assume {:nonnull} OldOemName != 0;
    assume OldOemName > 0;
    assume {:nonnull} OldOemName != 0;
    assume OldOemName > 0;
    assume {:nonnull} OldOemName != 0;
    assume OldOemName > 0;
    call {:si_unique_call 976} sdv_695 := ExAllocatePoolWithTag(17, 2080, -294362810);
    UnicodeBuffer := sdv_695;
    assume {:nonnull} NewUpcasedName != 0;
    assume NewUpcasedName > 0;
    assume {:nonnull} NewUpcasedName != 0;
    assume NewUpcasedName > 0;
    assume {:nonnull} NewUpcasedName != 0;
    assume NewUpcasedName > 0;
    assume {:nonnull} OldName != 0;
    assume OldName > 0;
    assume {:nonnull} OldName != 0;
    assume OldName > 0;
    assume {:nonnull} OldName != 0;
    assume OldName > 0;
    assume {:nonnull} OldUpcasedName != 0;
    assume OldUpcasedName > 0;
    assume {:nonnull} OldUpcasedName != 0;
    assume OldUpcasedName > 0;
    assume {:nonnull} OldUpcasedName != 0;
    assume OldUpcasedName > 0;
    assume {:nonnull} TargetLfn != 0;
    assume TargetLfn > 0;
    assume {:nonnull} TargetLfn != 0;
    assume TargetLfn > 0;
    assume {:nonnull} TargetLfn != 0;
    assume TargetLfn > 0;
    assume {:nonnull} UniTunneledShortName_1 != 0;
    assume UniTunneledShortName_1 > 0;
    assume {:nonnull} UniTunneledShortName_1 != 0;
    assume UniTunneledShortName_1 > 0;
    assume {:nonnull} UniTunneledShortName_1 != 0;
    assume UniTunneledShortName_1 > 0;
    assume {:nonnull} UniTunneledLongName_1 != 0;
    assume UniTunneledLongName_1 > 0;
    assume {:nonnull} UniTunneledLongName_1 != 0;
    assume UniTunneledLongName_1 > 0;
    assume {:nonnull} UniTunneledLongName_1 != 0;
    assume UniTunneledLongName_1 > 0;
    assume {:nonnull} OldOemName != 0;
    assume OldOemName > 0;
    havoc Tmp_1031;
    call {:si_unique_call 977} sdv_RtlCopyMemory(0, 0, Tmp_1031);
    call {:si_unique_call 978} IrpSp_5 := sdv_IoGetCurrentIrpStackLocation(Irp_4);
    assume {:nonnull} IrpSp_5 != 0;
    assume IrpSp_5 > 0;
    havoc FileObject_13;
    assume {:nonnull} FileObject_13 != 0;
    assume FileObject_13 > 0;
    havoc SourceCcb;
    assume {:nonnull} IrpSp_5 != 0;
    assume IrpSp_5 > 0;
    havoc TargetFileObject;
    assume {:nonnull} IrpSp_5 != 0;
    assume IrpSp_5 > 0;
    havoc ReplaceIfExists;
    call {:si_unique_call 979} sdv_RtlZeroMemory(0, 44);
    Tmp_1062 := Fcb_15;
    assume {:nonnull} Tmp_1062 != 0;
    assume Tmp_1062 > 0;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto L123;

  L123:
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} ContinueWithRename != 0;
    goto L127;

  L127:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} ContinueWithRename != 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} RenamedAcrossDirectories != 0;
    goto L131;

  L131:
    NotifyAction := 2;
    goto L132;

  L132:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L136;

  L136:
    Tmp_1059 := Fcb_15;
    assume {:nonnull} Tmp_1059 != 0;
    assume Tmp_1059 > 0;
    goto anon261_Then, anon261_Else;

  anon261_Else:
    Tmp_1058 := 1;
    goto L139;

  L139:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    havoc Tmp_1043;
    call {:si_unique_call 980} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_1043, 0, 0, Tmp_1058, NotifyAction, 0);
    call {:si_unique_call 981} FatGetDirentFromFcbOrDcb(IrpContext_49, Fcb_15, OldDirent, OldDirentBcb);
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[OldDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[OldDirent] > 0;
    assume {:nonnull} OldDirent != 0;
    assume OldDirent > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    call {:si_unique_call 982} FatTunnelFcbOrDcb(Fcb_15, SourceCcb);
    InvalidateFcbOnRaise := 1;
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} DeleteSourceDirent != 0;
    call {:si_unique_call 983} FatDeleteDirent#1(IrpContext_49, Fcb_15, 0, 0);
    goto L203;

  L203:
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} DeleteTarget != 0;
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    assume {:nonnull} TargetDirent != 0;
    assume TargetDirent > 0;
    assume {:nonnull} TargetDirentOffset != 0;
    assume TargetDirentOffset > 0;
    havoc vslice_dummy_var_1281;
    havoc vslice_dummy_var_1282;
    call {:si_unique_call 984} FatDeleteFile(IrpContext_49, vslice_dummy_var_1281, TargetLfnOffset, vslice_dummy_var_1282, Mem_T.P_PACKED_DIRENT[TargetDirent], TargetLfn);
    goto L207;

  L207:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} HaveTunneledInformation_1 != 0;
    Tmp_1034 := UniTunneledShortName_1;
    goto L213;

  L213:
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc vslice_dummy_var_1283;
    call {:si_unique_call 985} FatSelectNames(IrpContext_49, vslice_dummy_var_1283, NewOemName, NewName, NewOemName, Tmp_1034, AllLowerComponent_2, AllLowerExtension_2, CreateLfn_2);
    assume {:nonnull} CreateLfn_2 != 0;
    assume CreateLfn_2 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    goto L218;

  L218:
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc vslice_dummy_var_1284;
    call {:si_unique_call 986} FatPrepareWriteDirectoryFile(IrpContext_49, vslice_dummy_var_1284, NewOffset, 32, NewDirentBcb, NewDirent, 0, 1, Status_8);
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} INTDIV(NewOffset, 4096) != INTDIV(NewOffset + (DirentsRequired - 1) * 32, 4096);
    Tmp_1056 := BAND(NewOffset, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    SecondPageOffset_2 := Tmp_1056 + 4096;
    BytesInFirstPage_2 := SecondPageOffset_2 - NewOffset;
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc vslice_dummy_var_1285;
    call {:si_unique_call 987} FatPrepareWriteDirectoryFile(IrpContext_49, vslice_dummy_var_1285, SecondPageOffset_2, 32, SecondPageBcb_2, SecondPageDirent_2, 0, 1, Status_8);
    assume {:nonnull} NewDirent != 0;
    assume NewDirent > 0;
    Tmp_1039 := DirentsRequired * 32;
    call {:si_unique_call 988} sdv_685 := ExAllocatePoolWithTag(17, Tmp_1039, -999005882);
    assume {:nonnull} NewDirent != 0;
    assume NewDirent > 0;
    Mem_T.P_PACKED_DIRENT[NewDirent] := sdv_685;
    NewDirentFromPool := 1;
    goto L222;

  L222:
    assume {:nonnull} NewDirent != 0;
    assume NewDirent > 0;
    ShortDirent_2 := Mem_T.P_PACKED_DIRENT[NewDirent];
    ShortDirentOffset := NewOffset + (DirentsRequired - 1) * 32;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:partition} HaveTunneledInformation_1 != 0;
    Tmp_1063 := TunneledCreationTime_1;
    goto L242;

  L242:
    assume {:nonnull} CreateLfn_2 != 0;
    assume CreateLfn_2 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    Tmp_1053 := NewName;
    goto L245;

  L245:
    assume {:nonnull} AllLowerComponent_2 != 0;
    assume AllLowerComponent_2 > 0;
    assume {:nonnull} AllLowerExtension_2 != 0;
    assume AllLowerExtension_2 > 0;
    assume {:nonnull} SourceDirent != 0;
    assume SourceDirent > 0;
    havoc vslice_dummy_var_1286;
    havoc vslice_dummy_var_1287;
    havoc vslice_dummy_var_1288;
    call {:si_unique_call 989} FatConstructDirent(IrpContext_49, ShortDirent_2, NewOemName, vslice_dummy_var_1286, vslice_dummy_var_1287, Tmp_1053, vslice_dummy_var_1288, 0, Tmp_1063);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} HaveTunneledInformation_1 != 0;
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    havoc vslice_dummy_var_1289;
    havoc vslice_dummy_var_1290;
    call {:si_unique_call 990} boogieTmp := FatFatTimeToNtTime(IrpContext_49, vslice_dummy_var_1289, vslice_dummy_var_1290);
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    havoc vslice_dummy_var_1291;
    call {:si_unique_call 991} boogieTmp := FatFatTimeToNtTime(IrpContext_49, vslice_dummy_var_1291, 0);
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    havoc vslice_dummy_var_1292;
    call {:si_unique_call 992} boogieTmp := FatFatDateToNtTime(IrpContext_49, vslice_dummy_var_1292);
    goto L249;

  L249:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} NewDirentFromPool != 0;
    call {:si_unique_call 993} sdv_RtlCopyMemory(0, 0, BytesInFirstPage_2);
    Tmp_1035 := DirentsRequired * 32 - BytesInFirstPage_2;
    assume {:nonnull} NewDirent != 0;
    assume NewDirent > 0;
    call {:si_unique_call 994} sdv_RtlCopyMemory(0, 0, Tmp_1035);
    assume {:nonnull} SecondPageDirent_2 != 0;
    assume SecondPageDirent_2 > 0;
    ShortDirent_2 := Mem_T.P_PACKED_DIRENT[SecondPageDirent_2];
    goto L262;

  L262:
    call {:si_unique_call 995} FatRemoveNames(IrpContext_49, Fcb_15);
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    call {:si_unique_call 996} sdv_ExFreePool(0);
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto L275;

  L275:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    call {:si_unique_call 997} sdv_ExFreePool(0);
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto L280;

  L280:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    call {:si_unique_call 998} vslice_dummy_var_128 := sdv_RemoveEntryList(0);
    Tmp_1051 := Fcb_15;
    assume {:nonnull} Tmp_1051 != 0;
    assume Tmp_1051 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc vslice_dummy_var_1293;
    call {:si_unique_call 999} vslice_dummy_var_127 := sdv_InsertTailList(vslice_dummy_var_1293, ParentDcbLinks__FCB(Fcb_15));
    goto L296;

  L296:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    havoc OldParentDcb;
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} RenamedAcrossDirectories != 0;
    call {:si_unique_call 1000} sdv_682 := sdv_IsListEmpty(0);
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} sdv_682 != 0;
    assume {:nonnull} OldParentDcb != 0;
    assume OldParentDcb > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} OldParentDcb != 0;
    assume OldParentDcb > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} OldParentDcb != 0;
    assume OldParentDcb > 0;
    call {:si_unique_call 1001} vslice_dummy_var_129 := corral_nondet();
    assume {:nonnull} OldParentDcb != 0;
    assume OldParentDcb > 0;
    call {:si_unique_call 1002} vslice_dummy_var_130 := sdv_ObDereferenceObject(0);
    goto L306;

  L306:
    Tmp_1055 := Fcb_15;
    assume {:nonnull} Tmp_1055 != 0;
    assume Tmp_1055 > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    call {:si_unique_call 1003} FatPrepareWriteDirectoryFile(IrpContext_49, Fcb_15, 32, 32, DotDotBcb, DotDotDirent, 0, 1, Status_8);
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc Tmp_1052;
    assume {:nonnull} Tmp_1052 != 0;
    assume Tmp_1052 > 0;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    Tmp_1046 := 0;
    goto L324;

  L324:
    assume {:nonnull} DotDotDirent != 0;
    assume DotDotDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[DotDotDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[DotDotDirent] > 0;
    assume {:nonnull} Vcb_36 != 0;
    assume Vcb_36 > 0;
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc Tmp_1050;
    assume {:nonnull} Tmp_1050 != 0;
    assume Tmp_1050 > 0;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    Tmp_1057 := 0;
    goto L329;

  L329:
    assume {:nonnull} DotDotDirent != 0;
    assume DotDotDirent > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[DotDotDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[DotDotDirent] > 0;
    goto L299;

  L299:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    call {:si_unique_call 1004} sdv_ExFreePool(0);
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} CreateLfn_2 != 0;
    assume CreateLfn_2 > 0;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    Tmp_1061 := NewName;
    goto L334;

  L334:
    call {:si_unique_call 1005} FatConstructNamesInFcb(IrpContext_49, Fcb_15, ShortDirent_2, Tmp_1061);
    call {:si_unique_call 1006} FatSetFullNameInFcb(IrpContext_49, Fcb_15, NewName);
    InvalidateFcbOnRaise := 0;
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:nonnull} FileObject_13 != 0;
    assume FileObject_13 > 0;
    assume {:nonnull} Ccb_11 != 0;
    assume Ccb_11 > 0;
    goto L342;

  L342:
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} DeleteTarget != 0;
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    goto L350;

  L350:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    havoc Tmp_1042;
    call {:si_unique_call 1007} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_1042, 0, 0, 252, 3, 0);
    goto L354;

  L354:
    assume {:nonnull} Vcb_36 != 0;
    assume Vcb_36 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto L356;

  L356:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    call {:si_unique_call 1008} sdv_ExFreePool(0);
    assume {:nonnull} UniTunneledLongName_1 != 0;
    assume UniTunneledLongName_1 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    call {:si_unique_call 1009} sdv_ExFreePool(0);
    goto L361;

  L361:
    assume {:nonnull} OldDirentBcb != 0;
    assume OldDirentBcb > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} OldDirentBcb != 0;
    assume OldDirentBcb > 0;
    goto L365;

  L365:
    assume {:nonnull} TargetDirentBcb != 0;
    assume TargetDirentBcb > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} TargetDirentBcb != 0;
    assume TargetDirentBcb > 0;
    goto L370;

  L370:
    assume {:nonnull} NewDirentBcb != 0;
    assume NewDirentBcb > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} NewDirentBcb != 0;
    assume NewDirentBcb > 0;
    goto L375;

  L375:
    assume {:nonnull} SecondPageBcb_2 != 0;
    assume SecondPageBcb_2 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} SecondPageBcb_2 != 0;
    assume SecondPageBcb_2 > 0;
    goto L380;

  L380:
    assume {:nonnull} DotDotBcb != 0;
    assume DotDotBcb > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} DotDotBcb != 0;
    assume DotDotBcb > 0;
    goto L385;

  L385:
    call {:si_unique_call 1010} sdv_692 := sdv_AbnormalTermination();
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} sdv_692 != 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} InvalidateFcbOnRaise != 0;
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto L393;

  L393:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    havoc Tmp_1025;
    goto L1;

  L1:
    return;

  anon217_Then:
    assume {:partition} InvalidateFcbOnRaise == 0;
    goto L393;

  anon216_Then:
    assume {:partition} sdv_692 == 0;
    goto L393;

  anon215_Then:
    goto L385;

  anon214_Then:
    goto L380;

  anon213_Then:
    goto L375;

  anon212_Then:
    goto L370;

  anon211_Then:
    goto L365;

  anon210_Then:
    goto L361;

  anon208_Then:
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} ShortDirent_2 != 0;
    assume ShortDirent_2 > 0;
    havoc vslice_dummy_var_1294;
    call {:si_unique_call 1011} FatRenameEAs(IrpContext_49, Fcb_15, vslice_dummy_var_1294, OldOemName);
    goto L356;

  anon209_Then:
    goto L356;

  anon207_Then:
    call {:si_unique_call 1012} FatSetFullFileNameInFcb#1(IrpContext_49, Fcb_15);
    goto L350;

  anon205_Then:
    assume {:partition} DeleteTarget == 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} RenamedAcrossDirectories != 0;
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    goto L404;

  L404:
    Tmp_1033 := Fcb_15;
    assume {:nonnull} Tmp_1033 != 0;
    assume Tmp_1033 > 0;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    Tmp_1047 := 1;
    goto L407;

  L407:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    havoc Tmp_1040;
    call {:si_unique_call 1013} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_1040, 0, 0, Tmp_1047, 1, 0);
    goto L354;

  anon272_Then:
    Tmp_1047 := 2;
    goto L407;

  anon219_Then:
    call {:si_unique_call 1014} FatSetFullFileNameInFcb#1(IrpContext_49, Fcb_15);
    goto L404;

  anon206_Then:
    assume {:partition} RenamedAcrossDirectories == 0;
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto L414;

  L414:
    Tmp_1044 := Fcb_15;
    assume {:nonnull} Tmp_1044 != 0;
    assume Tmp_1044 > 0;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    Tmp_1045 := 1;
    goto L417;

  L417:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    havoc Tmp_1065;
    call {:si_unique_call 1015} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_1065, 0, 0, Tmp_1045, 5, 0);
    goto L354;

  anon273_Then:
    Tmp_1045 := 2;
    goto L417;

  anon218_Then:
    call {:si_unique_call 1016} FatSetFullFileNameInFcb#1(IrpContext_49, Fcb_15);
    goto L414;

  anon271_Then:
    goto L342;

  anon270_Then:
    Tmp_1061 := 0;
    goto L334;

  anon269_Then:
    call {:si_unique_call 1017} Tmp_1057 := corral_nondet();
    goto L329;

  anon268_Then:
    goto L299;

  anon267_Then:
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc Tmp_1046;
    goto L324;

  anon266_Then:
    goto L299;

  anon204_Then:
    goto L306;

  anon203_Then:
    goto L306;

  anon202_Then:
    assume {:partition} sdv_682 == 0;
    goto L306;

  anon265_Then:
    assume {:partition} RenamedAcrossDirectories == 0;
    goto L299;

  anon264_Then:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc vslice_dummy_var_1295;
    call {:si_unique_call 1018} InsertHeadList(vslice_dummy_var_1295, ParentDcbLinks__FCB(Fcb_15));
    goto L296;

  anon201_Then:
    goto L280;

  anon200_Then:
    goto L275;

  anon199_Then:
    assume {:partition} NewDirentFromPool == 0;
    goto L262;

  anon198_Then:
    assume {:partition} HaveTunneledInformation_1 == 0;
    goto L249;

  anon197_Then:
    Tmp_1053 := 0;
    goto L245;

  anon263_Then:
    assume {:partition} HaveTunneledInformation_1 == 0;
    Tmp_1063 := 0;
    goto L242;

  anon196_Then:
    assume {:partition} INTDIV(NewOffset, 4096) == INTDIV(NewOffset + (DirentsRequired - 1) * 32, 4096);
    goto L222;

  anon194_Then:
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} UsingTunneledLfn_1 != 0;
    assume {:nonnull} CreateLfn_2 != 0;
    assume CreateLfn_2 > 0;
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    assume {:nonnull} UniTunneledLongName_1 != 0;
    assume UniTunneledLongName_1 > 0;
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    assume {:nonnull} UniTunneledLongName_1 != 0;
    assume UniTunneledLongName_1 > 0;
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    assume {:nonnull} UniTunneledLongName_1 != 0;
    assume UniTunneledLongName_1 > 0;
    assume {:nonnull} AllLowerComponent_2 != 0;
    assume AllLowerComponent_2 > 0;
    assume {:nonnull} AllLowerExtension_2 != 0;
    assume AllLowerExtension_2 > 0;
    goto L218;

  anon195_Then:
    assume {:partition} UsingTunneledLfn_1 == 0;
    goto L218;

  anon193_Then:
    assume {:partition} HaveTunneledInformation_1 == 0;
    Tmp_1034 := 0;
    goto L213;

  anon192_Then:
    assume {:partition} DeleteTarget == 0;
    goto L207;

  anon262_Then:
    assume {:partition} DeleteSourceDirent == 0;
    goto L203;

  anon261_Then:
    Tmp_1058 := 2;
    goto L139;

  anon191_Then:
    call {:si_unique_call 1019} FatSetFullFileNameInFcb#1(IrpContext_49, Fcb_15);
    goto L136;

  anon189_Then:
    assume {:partition} RenamedAcrossDirectories == 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} DeleteTarget == 0;
    NotifyAction := 4;
    goto L132;

  anon190_Then:
    assume {:partition} DeleteTarget != 0;
    goto L131;

  anon188_Then:
    assume {:partition} ContinueWithRename == 0;
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    havoc Tmp_1025;
    goto L1;

  anon187_Then:
    assume {:partition} ContinueWithRename == 0;
    call {:si_unique_call 1020} sdv_ExFreePool(0);
    assume {:nonnull} TargetDirentBcb != 0;
    assume TargetDirentBcb > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} TargetDirentBcb != 0;
    assume TargetDirentBcb > 0;
    goto L127;

  anon220_Then:
    goto L127;

  anon260_Then:
    Tmp_1048 := Fcb_15;
    assume {:nonnull} Tmp_1048 != 0;
    assume Tmp_1048 > 0;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    goto L438;

  L438:
    call {:si_unique_call 1021} BatchOplockFcb, sdv_688, TempFcb, Tmp_1049, BatchOplockCount, boogieTmp := FatSetRenameInfo_loop_L438(BatchOplockFcb, Status_8, sdv_688, TempFcb, Tmp_1049, BatchOplockCount, IrpContext_49, Irp_4, Fcb_15, boogieTmp);
    goto L438_last;

  L438_last:
    BatchOplockFcb := 0;
    BatchOplockCount := 0;
    call {:si_unique_call 1052} TempFcb := FatGetNextFcbBottomUp(IrpContext_49, 0, Fcb_15);
    goto L453;

  L453:
    call {:si_unique_call 1022} BatchOplockFcb, sdv_688, TempFcb, Tmp_1049, BatchOplockCount := FatSetRenameInfo_loop_L453(BatchOplockFcb, sdv_688, TempFcb, Tmp_1049, BatchOplockCount, IrpContext_49, Fcb_15);
    goto L453_last;

  L453_last:
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} TempFcb != Fcb_15;
    assume {:nonnull} TempFcb != 0;
    assume TempFcb > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    Tmp_1049 := TempFcb;
    assume {:nonnull} Tmp_1049 != 0;
    assume Tmp_1049 > 0;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:nonnull} TempFcb != 0;
    assume TempFcb > 0;
    call {:si_unique_call 1023} sdv_688 := corral_nondet();
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} sdv_688 != 0;
    BatchOplockCount := BatchOplockCount + 1;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} BatchOplockFcb == 0;
    BatchOplockFcb := TempFcb;
    goto L456;

  L456:
    call {:si_unique_call 1024} TempFcb := FatGetNextFcbBottomUp(IrpContext_49, TempFcb, Fcb_15);
    goto L456_dummy;

  L456_dummy:
    assume false;
    return;

  anon276_Then:
    assume {:partition} BatchOplockFcb != 0;
    goto L456;

  anon225_Then:
    assume {:partition} sdv_688 == 0;
    goto L460;

  L460:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto L123;

  anon275_Then:
    goto L460;

  anon224_Then:
    goto L456;

  anon222_Then:
    assume {:partition} TempFcb == Fcb_15;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} BatchOplockFcb != 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto L123;

  anon227_Then:
    goto L472;

  L472:
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    assume {:nonnull} BatchOplockFcb != 0;
    assume BatchOplockFcb > 0;
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    call {:si_unique_call 1025} boogieTmp := corral_nondet();
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto L123;

  anon228_Then:
    goto anon228_Then_dummy;

  anon228_Then_dummy:
    assume false;
    return;

  anon226_Then:
    goto L472;

  anon223_Then:
    assume {:partition} BatchOplockFcb == 0;
    call {:si_unique_call 1026} FatPurgeReferencedFileObjects(IrpContext_49, Fcb_15, 1);
    call {:si_unique_call 1027} TempFcb := FatGetNextFcbBottomUp(IrpContext_49, 0, Fcb_15);
    goto L488;

  L488:
    call {:si_unique_call 1028} TempFcb := FatSetRenameInfo_loop_L488(TempFcb, IrpContext_49, Fcb_15);
    goto L488_last;

  L488_last:
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} TempFcb != Fcb_15;
    call {:si_unique_call 1029} FatRemoveNames(IrpContext_49, TempFcb);
    assume {:nonnull} TempFcb != 0;
    assume TempFcb > 0;
    call {:si_unique_call 1030} TempFcb := FatGetNextFcbBottomUp(IrpContext_49, TempFcb, Fcb_15);
    goto anon229_Else_dummy;

  anon229_Else_dummy:
    assume false;
    return;

  anon229_Then:
    assume {:partition} TempFcb == Fcb_15;
    goto L431;

  L431:
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} TargetFileObject == 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    havoc Buffer_1;
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto L123;

  anon279_Then:
    goto L508;

  L508:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    call {:si_unique_call 1031} boogieTmp := RtlUpcaseUnicodeString(0, 0, 0);
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    call {:si_unique_call 1032} FatGetUnicodeNameFromFcb#1(IrpContext_49, Fcb_15, OldName);
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    call {:si_unique_call 1033} boogieTmp := RtlUpcaseUnicodeString(0, 0, 0);
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    call {:si_unique_call 1034} sdv_705 := FsRtlAreNamesEqual(0, 0, 0, 0);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} sdv_705 != 0;
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto L123;

  anon235_Then:
    assume {:partition} sdv_705 == 0;
    call {:si_unique_call 1035} sdv_694 := FsRtlAreNamesEqual(0, 0, 0, 0);
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} sdv_694 != 0;
    CaseOnlyRename := 1;
    goto L535;

  L535:
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    call {:si_unique_call 1036} FatUnicodeToUpcaseOem(IrpContext_49, NewOemName, NewName);
    call {:si_unique_call 1037} sdv_691 := FatSpaceInName(IrpContext_49, NewName);
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} sdv_691 != 0;
    goto L546;

  L546:
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    goto L547;

  L547:
    call {:si_unique_call 1038} vslice_dummy_var_131 := corral_nondet();
    call {:si_unique_call 1039} HaveTunneledInformation_1 := corral_nondet();
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    call {:si_unique_call 1040} FatEvaluateNameCase(IrpContext_49, NewName, AllLowerComponent_2, AllLowerExtension_2, CreateLfn_2);
    assume {:nonnull} CreateLfn_2 != 0;
    assume CreateLfn_2 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:nonnull} UniTunneledLongName_1 != 0;
    assume UniTunneledLongName_1 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc vslice_dummy_var_1296;
    call {:si_unique_call 1041} sdv_687 := FatLfnDirentExists(IrpContext_49, vslice_dummy_var_1296, UniTunneledLongName_1, TargetLfn);
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} sdv_687 == 0;
    assume {:nonnull} CreateLfn_2 != 0;
    assume CreateLfn_2 > 0;
    assume {:nonnull} CreateLfn_2 != 0;
    assume CreateLfn_2 > 0;
    havoc UsingTunneledLfn_1;
    assume {:nonnull} UniTunneledLongName_1 != 0;
    assume UniTunneledLongName_1 > 0;
    havoc DirentsRequired;
    goto L568;

  L568:
    goto anon243_Then, anon243_Else;

  anon243_Else:
    goto L570;

  L570:
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} CaseOnlyRename != 0;
    goto L572;

  L572:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    goto L574;

  L574:
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc vslice_dummy_var_1297;
    call {:si_unique_call 1042} NewOffset := FatCreateNewDirent(IrpContext_49, vslice_dummy_var_1297, DirentsRequired);
    DeleteSourceDirent := 1;
    goto L579;

  L579:
    ContinueWithRename := 1;
    goto L123;

  anon247_Then:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Fcb_15 != 0;
    assume Fcb_15 > 0;
    havoc NewOffset;
    goto L579;

  anon248_Then:
    goto L574;

  anon245_Then:
    assume {:partition} CaseOnlyRename == 0;
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} LocalCcb_1 != 0;
    assume LocalCcb_1 > 0;
    call {:si_unique_call 1043} FatStringTo8dot3(IrpContext_49, NewOemName, Constant_unnamed_tag_72(OemQueryTemplate__CCB(LocalCcb_1)));
    goto L585;

  L585:
    assume {:nonnull} LocalCcb_1 != 0;
    assume LocalCcb_1 > 0;
    assume {:nonnull} NewUpcasedName != 0;
    assume NewUpcasedName > 0;
    assume {:nonnull} LocalCcb_1 != 0;
    assume LocalCcb_1 > 0;
    assume {:nonnull} NewUpcasedName != 0;
    assume NewUpcasedName > 0;
    assume {:nonnull} LocalCcb_1 != 0;
    assume LocalCcb_1 > 0;
    assume {:nonnull} NewUpcasedName != 0;
    assume NewUpcasedName > 0;
    assume {:nonnull} LocalCcb_1 != 0;
    assume LocalCcb_1 > 0;
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc vslice_dummy_var_1298;
    call {:si_unique_call 1044} FatLocateDirent#1(IrpContext_49, vslice_dummy_var_1298, LocalCcb_1, 0, TargetDirent, TargetDirentBcb, TargetDirentOffset, 0, TargetLfn);
    assume {:nonnull} TargetDirent != 0;
    assume TargetDirent > 0;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[TargetDirent] != 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} ReplaceIfExists != 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[TargetDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[TargetDirent] > 0;
    assume {:nonnull} TargetDirent != 0;
    assume TargetDirent > 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[TargetDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[TargetDirent] > 0;
    assume {:nonnull} TargetDirent != 0;
    assume TargetDirent > 0;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:nonnull} TargetDcb != 0;
    assume TargetDcb > 0;
    havoc Links;
    goto L596;

  L596:
    call {:si_unique_call 1045} Links, sdv_675, TempFcb, sdv_696 := FatSetRenameInfo_loop_L596(Links, sdv_675, TargetDirentOffset, TempFcb, sdv_696);
    goto L596_last;

  L596_last:
    goto anon253_Then, anon253_Else;

  anon253_Else:
    call {:si_unique_call 1046} sdv_675 := sdv_containing_record(Links, 72);
    TempFcb := sdv_675;
    assume {:nonnull} Links != 0;
    assume Links > 0;
    havoc Links;
    assume {:nonnull} TargetDirentOffset != 0;
    assume TargetDirentOffset > 0;
    assume {:nonnull} TempFcb != 0;
    assume TempFcb > 0;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume {:nonnull} TempFcb != 0;
    assume TempFcb > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    goto L608;

  L608:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    Tmp_1026 := TempFcb;
    assume {:nonnull} Tmp_1026 != 0;
    assume Tmp_1026 > 0;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume {:nonnull} TempFcb != 0;
    assume TempFcb > 0;
    call {:si_unique_call 1047} sdv_689 := corral_nondet();
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:partition} sdv_689 != 0;
    assume {:nonnull} TargetDirentBcb != 0;
    assume TargetDirentBcb > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:nonnull} TargetDirentBcb != 0;
    assume TargetDirentBcb > 0;
    goto L616;

  L616:
    assume {:nonnull} TempFcb != 0;
    assume TempFcb > 0;
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    call {:si_unique_call 1048} boogieTmp := corral_nondet();
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto L123;

  anon257_Then:
    goto L123;

  anon256_Then:
    goto L616;

  anon255_Then:
    assume {:partition} sdv_689 == 0;
    goto L123;

  anon278_Then:
    goto L123;

  anon254_Then:
    assume {:nonnull} TempFcb != 0;
    assume TempFcb > 0;
    call {:si_unique_call 1049} sdv_696 := corral_nondet();
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:partition} sdv_696 == 0;
    goto L608;

  anon258_Then:
    assume {:partition} sdv_696 != 0;
    goto anon258_Then_dummy;

  anon258_Then_dummy:
    assume false;
    return;

  anon277_Then:
    goto anon277_Then_dummy;

  anon277_Then_dummy:
    assume false;
    return;

  anon253_Then:
    assume {:nonnull} TargetDirentOffset != 0;
    assume TargetDirentOffset > 0;
    assume {:nonnull} TargetLfn != 0;
    assume TargetLfn > 0;
    havoc TargetLfnOffset;
    DeleteTarget := 1;
    goto L572;

  anon252_Then:
    goto L592;

  L592:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto L123;

  anon251_Then:
    goto L592;

  anon250_Then:
    assume {:partition} ReplaceIfExists == 0;
    goto L592;

  anon249_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[TargetDirent] == 0;
    goto L572;

  anon246_Then:
    assume {:nonnull} LocalCcb_1 != 0;
    assume LocalCcb_1 > 0;
    goto L585;

  anon243_Then:
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} AllLowerComponent_2 != 0;
    assume AllLowerComponent_2 > 0;
    assume {:nonnull} AllLowerExtension_2 != 0;
    assume AllLowerExtension_2 > 0;
    assume {:nonnull} CreateLfn_2 != 0;
    assume CreateLfn_2 > 0;
    UsingTunneledLfn_1 := 0;
    goto L570;

  anon244_Then:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto L123;

  anon242_Then:
    assume {:partition} sdv_687 != 0;
    goto L560;

  L560:
    DirentsRequired := 1;
    goto L568;

  anon241_Then:
    goto L560;

  anon240_Then:
    goto L554;

  L554:
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    havoc DirentsRequired;
    goto L568;

  anon239_Then:
    goto L554;

  anon238_Then:
    assume {:partition} sdv_691 == 0;
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    assume {:nonnull} Tmp_1041 != 0;
    assume Tmp_1041 > 0;
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    assume {:nonnull} Tmp_1041 != 0;
    assume Tmp_1041 > 0;
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    assume {:nonnull} Tmp_1041 != 0;
    assume Tmp_1041 > 0;
    call {:si_unique_call 1050} sdv_699 := corral_nondet();
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:partition} sdv_699 != 0;
    goto L547;

  anon259_Then:
    assume {:partition} sdv_699 == 0;
    goto L546;

  anon237_Then:
    assume {:nonnull} NewOemName != 0;
    assume NewOemName > 0;
    goto L547;

  anon236_Then:
    assume {:partition} sdv_694 == 0;
    goto L535;

  anon234_Then:
    RenamedAcrossDirectories := 1;
    goto L535;

  anon233_Then:
    goto L123;

  anon232_Then:
    goto L123;

  anon221_Then:
    assume {:partition} TargetFileObject != 0;
    call {:si_unique_call 1051} sdv_701 := FatDecodeFileObject(TargetFileObject, TargetVcb, TargetDcb, TargetCcb);
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} sdv_701 != 3;
    goto L505;

  L505:
    assume {:nonnull} Status_8 != 0;
    assume Status_8 > 0;
    goto L123;

  anon230_Then:
    assume {:partition} sdv_701 == 3;
    assume {:nonnull} TargetVcb != 0;
    assume TargetVcb > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    assume {:nonnull} TargetFileObject != 0;
    assume TargetFileObject > 0;
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    assume {:nonnull} TargetFileObject != 0;
    assume TargetFileObject > 0;
    assume {:nonnull} NewName != 0;
    assume NewName > 0;
    assume {:nonnull} TargetFileObject != 0;
    assume TargetFileObject > 0;
    goto L508;

  anon231_Then:
    goto L505;

  anon274_Then:
    goto L431;
}



procedure {:origName "FatCommonSetInformation"} FatCommonSetInformation(actual_IrpContext_50: int, actual_Irp_5: int) returns (Tmp_1066: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, queued, markedPending, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonSetInformation"} FatCommonSetInformation(actual_IrpContext_50: int, actual_Irp_5: int) returns (Tmp_1066: int)
{
  var {:pointer} Tmp_1067: int;
  var {:pointer} Ccb_12: int;
  var {:pointer} Fcb_16: int;
  var {:scalar} Status_9: int;
  var {:pointer} FileObject_14: int;
  var {:scalar} sdv_711: int;
  var {:scalar} FcbAcquired_1: int;
  var {:scalar} TypeOfOpen_1: int;
  var {:pointer} IrpSp_6: int;
  var {:pointer} Tmp_1068: int;
  var {:scalar} Tmp_1069: int;
  var {:scalar} sdv_717: int;
  var {:scalar} sdv_719: int;
  var {:scalar} FileInformationClass: int;
  var {:pointer} Vcb_37: int;
  var {:scalar} VcbAcquired: int;
  var {:pointer} Tmp_1070: int;
  var {:scalar} sdv_722: int;
  var {:scalar} Tmp_1073: int;
  var {:pointer} Tmp_1074: int;
  var {:pointer} IrpContext_50: int;
  var {:pointer} Irp_5: int;
  var vslice_dummy_var_1299: int;
  var vslice_dummy_var_1300: int;
  var vslice_dummy_var_1301: int;
  var vslice_dummy_var_1302: int;
  var vslice_dummy_var_1303: int;
  var vslice_dummy_var_1304: int;
  var vslice_dummy_var_1305: int;
  var vslice_dummy_var_1306: int;
  var vslice_dummy_var_1307: int;
  var vslice_dummy_var_1308: int;
  var vslice_dummy_var_1309: int;
  var vslice_dummy_var_1310: int;

  anon0:
    call {:si_unique_call 1053} Ccb_12 := __HAVOC_malloc(4);
    call {:si_unique_call 1054} Fcb_16 := __HAVOC_malloc(4);
    call {:si_unique_call 1055} Vcb_37 := __HAVOC_malloc(4);
    IrpContext_50 := actual_IrpContext_50;
    Irp_5 := actual_Irp_5;
    VcbAcquired := 0;
    FcbAcquired_1 := 0;
    call {:si_unique_call 1056} IrpSp_6 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} IrpSp_6 != 0;
    assume IrpSp_6 > 0;
    havoc FileInformationClass;
    assume {:nonnull} IrpSp_6 != 0;
    assume IrpSp_6 > 0;
    havoc FileObject_14;
    call {:si_unique_call 1057} TypeOfOpen_1 := FatDecodeFileObject(FileObject_14, Vcb_37, Fcb_16, Ccb_12);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} TypeOfOpen_1 != 2;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} TypeOfOpen_1 != 3;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} TypeOfOpen_1 == 4;
    Status_9 := -1073741811;
    goto L31;

  L31:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} FcbAcquired_1 != 0;
    call {:si_unique_call 1058} ExReleaseResourceLite(0);
    goto L32;

  L32:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} VcbAcquired != 0;
    call {:si_unique_call 1059} ExReleaseResourceLite(0);
    goto L36;

  L36:
    call {:si_unique_call 1060} sdv_717 := sdv_AbnormalTermination();
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_717 != 0;
    goto L46;

  L46:
    Tmp_1066 := Status_9;
    return;

  anon73_Then:
    assume {:partition} sdv_717 == 0;
    call {:si_unique_call 1061} FatCompleteRequest_Real(IrpContext_50, Irp_5, Status_9);
    goto L46;

  anon72_Then:
    assume {:partition} VcbAcquired == 0;
    goto L36;

  anon71_Then:
    assume {:partition} FcbAcquired_1 == 0;
    goto L32;

  anon91_Then:
    assume {:partition} TypeOfOpen_1 != 4;
    Status_9 := -1073741811;
    goto L31;

  anon92_Then:
    assume {:partition} TypeOfOpen_1 == 3;
    goto L47;

  L47:
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    havoc Tmp_1068;
    assume {:nonnull} Tmp_1068 != 0;
    assume Tmp_1068 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} FileInformationClass == 13;
    Status_9 := -1073741535;
    goto L31;

  anon75_Then:
    assume {:partition} FileInformationClass != 13;
    Status_9 := -1073741811;
    goto L31;

  anon99_Then:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} FileInformationClass == 13;
    goto L55;

  L55:
    assume {:nonnull} Vcb_37 != 0;
    assume Vcb_37 > 0;
    havoc vslice_dummy_var_1299;
    call {:si_unique_call 1062} sdv_719 := FatAcquireExclusiveVcb(IrpContext_50, vslice_dummy_var_1299);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_719 != 0;
    VcbAcquired := 1;
    goto L78;

  L78:
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto L82;

  L82:
    Status_9 := 0;
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    havoc vslice_dummy_var_1300;
    call {:si_unique_call 1063} FatVerifyFcb(IrpContext_50, vslice_dummy_var_1300);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} FileInformationClass != 4;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} FileInformationClass != 10;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} FileInformationClass != 11;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} FileInformationClass != 13;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} FileInformationClass != 14;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} FileInformationClass != 19;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} FileInformationClass == 20;
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    assume {:nonnull} Vcb_37 != 0;
    assume Vcb_37 > 0;
    havoc vslice_dummy_var_1301;
    havoc vslice_dummy_var_1302;
    call {:si_unique_call 1064} Status_9 := FatSetEndOfFileInfo(IrpContext_50, Irp_5, FileObject_14, vslice_dummy_var_1301, vslice_dummy_var_1302);
    goto L105;

  L105:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} IrpContext_50 != 0;
    call {:si_unique_call 1065} FatUnpinRepinnedBcbs(IrpContext_50);
    goto L31;

  anon82_Then:
    assume {:partition} IrpContext_50 == 0;
    goto L31;

  anon93_Then:
    assume {:partition} FileInformationClass != 20;
    Status_9 := -1073741811;
    goto L105;

  anon94_Then:
    assume {:partition} FileInformationClass == 19;
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    havoc vslice_dummy_var_1303;
    call {:si_unique_call 1066} Status_9 := FatSetAllocationInfo(IrpContext_50, Irp_5, vslice_dummy_var_1303, FileObject_14);
    goto L105;

  anon95_Then:
    assume {:partition} FileInformationClass == 14;
    call {:si_unique_call 1067} Status_9 := FatSetPositionInfo(IrpContext_50, Irp_5, FileObject_14);
    goto L105;

  anon96_Then:
    assume {:partition} FileInformationClass == 13;
    assume {:nonnull} Vcb_37 != 0;
    assume Vcb_37 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} IrpContext_50 != 0;
    assume IrpContext_50 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    call {:si_unique_call 1068} Status_9 := FatFsdPostRequest(IrpContext_50, Irp_5);
    Irp_5 := 0;
    IrpContext_50 := 0;
    goto L105;

  anon83_Then:
    goto L113;

  L113:
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    havoc vslice_dummy_var_1304;
    call {:si_unique_call 1069} Status_9 := FatSetDispositionInfo(IrpContext_50, Irp_5, FileObject_14, vslice_dummy_var_1304);
    goto L105;

  anon81_Then:
    goto L113;

  anon97_Then:
    assume {:partition} FileInformationClass == 11;
    Status_9 := -1073741808;
    goto L105;

  anon98_Then:
    assume {:partition} FileInformationClass == 10;
    assume {:nonnull} IrpContext_50 != 0;
    assume IrpContext_50 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Ccb_12 != 0;
    assume Ccb_12 > 0;
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    assume {:nonnull} Vcb_37 != 0;
    assume Vcb_37 > 0;
    havoc vslice_dummy_var_1305;
    havoc vslice_dummy_var_1306;
    havoc vslice_dummy_var_1307;
    call {:si_unique_call 1070} Status_9 := FatSetRenameInfo(IrpContext_50, Irp_5, vslice_dummy_var_1305, vslice_dummy_var_1306, vslice_dummy_var_1307);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Status_9 == 259;
    Irp_5 := 0;
    IrpContext_50 := 0;
    goto L105;

  anon84_Then:
    assume {:partition} Status_9 != 259;
    goto L105;

  anon80_Then:
    call {:si_unique_call 1071} Status_9 := FatFsdPostRequest(IrpContext_50, Irp_5);
    Irp_5 := 0;
    IrpContext_50 := 0;
    goto L105;

  anon79_Then:
    assume {:partition} FileInformationClass == 4;
    assume {:nonnull} Ccb_12 != 0;
    assume Ccb_12 > 0;
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    havoc vslice_dummy_var_1308;
    havoc vslice_dummy_var_1309;
    call {:si_unique_call 1072} Status_9 := FatSetBasicInfo(IrpContext_50, Irp_5, vslice_dummy_var_1308, vslice_dummy_var_1309);
    goto L105;

  anon78_Then:
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    havoc vslice_dummy_var_1310;
    call {:si_unique_call 1073} sdv_722 := FatAcquireExclusiveFcb(IrpContext_50, vslice_dummy_var_1310);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} sdv_722 != 0;
    FcbAcquired_1 := 1;
    goto L82;

  anon85_Then:
    assume {:partition} sdv_722 == 0;
    call {:si_unique_call 1074} Status_9 := FatFsdPostRequest(IrpContext_50, Irp_5);
    Irp_5 := 0;
    IrpContext_50 := 0;
    goto L31;

  anon77_Then:
    assume {:partition} sdv_719 == 0;
    call {:si_unique_call 1075} Status_9 := FatFsdPostRequest(IrpContext_50, Irp_5);
    Irp_5 := 0;
    IrpContext_50 := 0;
    goto L31;

  anon74_Then:
    assume {:partition} FileInformationClass != 13;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} FileInformationClass != 10;
    goto L78;

  anon76_Then:
    assume {:partition} FileInformationClass == 10;
    goto L55;

  anon69_Then:
    assume {:partition} TypeOfOpen_1 == 2;
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} FileInformationClass == 20;
    goto L159;

  L159:
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    call {:si_unique_call 1076} Status_9 := corral_nondet();
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Status_9 == 0;
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L169;

  L169:
    Tmp_1069 := 0;
    goto L170;

  L170:
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    goto L47;

  anon89_Then:
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    call {:si_unique_call 1077} sdv_711 := corral_nondet();
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} sdv_711 != 0;
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    havoc Tmp_1067;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L174;

  L174:
    Tmp_1073 := 2;
    goto L175;

  L175:
    Tmp_1069 := Tmp_1073;
    goto L170;

  anon100_Then:
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    havoc Tmp_1070;
    assume {:nonnull} Tmp_1070 != 0;
    assume Tmp_1070 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} Fcb_16 != 0;
    assume Fcb_16 > 0;
    havoc Tmp_1074;
    assume {:nonnull} Tmp_1074 != 0;
    assume Tmp_1074 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    Tmp_1073 := 1;
    goto L175;

  anon102_Then:
    goto L174;

  anon101_Then:
    goto L174;

  anon90_Then:
    assume {:partition} sdv_711 == 0;
    goto L169;

  anon88_Then:
    assume {:partition} Status_9 != 0;
    goto L31;

  anon86_Then:
    assume {:partition} FileInformationClass != 20;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} FileInformationClass == 19;
    goto L159;

  anon87_Then:
    assume {:partition} FileInformationClass != 19;
    goto L47;

  anon70_Then:
    goto L47;
}



procedure {:origName "FatRenameEAs"} FatRenameEAs(actual_IrpContext_51: int, actual_Fcb_17: int, actual_ExtendedAttributes: int, actual_OldOemName_1: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatRenameEAs"} FatRenameEAs(actual_IrpContext_51: int, actual_Fcb_17: int, actual_ExtendedAttributes: int, actual_OldOemName_1: int)
{
  var {:scalar} Tmp_1076: int;
  var {:pointer} EaDirent: int;
  var {:scalar} LockedEaFcb: int;
  var {:pointer} EaBcb: int;
  var {:pointer} Vcb_38: int;
  var {:scalar} EaSetRange: int;
  var {:pointer} IrpContext_51: int;
  var {:pointer} Fcb_17: int;
  var {:scalar} ExtendedAttributes: int;
  var {:pointer} OldOemName_1: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_1311: int;

  anon0:
    call {:si_unique_call 1078} EaDirent := __HAVOC_malloc(4);
    call {:si_unique_call 1079} EaBcb := __HAVOC_malloc(4);
    call {:si_unique_call 1080} vslice_dummy_var_132 := __HAVOC_malloc(4);
    call {:si_unique_call 1081} EaSetRange := __HAVOC_malloc(28);
    IrpContext_51 := actual_IrpContext_51;
    Fcb_17 := actual_Fcb_17;
    ExtendedAttributes := actual_ExtendedAttributes;
    OldOemName_1 := actual_OldOemName_1;
    LockedEaFcb := 0;
    assume {:nonnull} EaBcb != 0;
    assume EaBcb > 0;
    call {:si_unique_call 1082} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} Fcb_17 != 0;
    assume Fcb_17 > 0;
    havoc Vcb_38;
    call {:si_unique_call 1083} FatGetEaFile#1(IrpContext_51, Vcb_38, EaDirent, EaBcb, 0, 0);
    LockedEaFcb := 1;
    assume {:nonnull} Vcb_38 != 0;
    assume Vcb_38 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1084} FatReadEaSet(IrpContext_51, Vcb_38, ExtendedAttributes, OldOemName_1, 0, EaSetRange);
    assume {:nonnull} EaSetRange != 0;
    assume EaSetRange > 0;
    call {:si_unique_call 1085} sdv_RtlZeroMemory(0, 14);
    assume {:nonnull} Fcb_17 != 0;
    assume Fcb_17 > 0;
    havoc Tmp_1076;
    call {:si_unique_call 1086} sdv_RtlCopyMemory(0, 0, Tmp_1076);
    assume {:nonnull} Vcb_38 != 0;
    assume Vcb_38 > 0;
    havoc vslice_dummy_var_1311;
    call {:si_unique_call 1087} FatMarkEaRangeDirty(IrpContext_51, vslice_dummy_var_1311, EaSetRange);
    call {:si_unique_call 1088} FatUnpinEaRange(IrpContext_51, EaSetRange);
    assume {:nonnull} Vcb_38 != 0;
    assume Vcb_38 > 0;
    goto L37;

  L37:
    assume {:nonnull} EaBcb != 0;
    assume EaBcb > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} EaBcb != 0;
    assume EaBcb > 0;
    goto L38;

  L38:
    call {:si_unique_call 1089} FatUnpinEaRange(IrpContext_51, EaSetRange);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} LockedEaFcb != 0;
    assume {:nonnull} Vcb_38 != 0;
    assume Vcb_38 > 0;
    call {:si_unique_call 1090} ExReleaseResourceLite(0);
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} LockedEaFcb == 0;
    goto L1;

  anon7_Then:
    goto L38;

  anon9_Then:
    goto L37;
}



procedure {:origName "FatSetDispositionInfo"} FatSetDispositionInfo(actual_IrpContext_52: int, actual_Irp_6: int, actual_FileObject_15: int, actual_Fcb_18: int) returns (Tmp_1081: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1081 == -1073741535 || Tmp_1081 == -1073741567 || Tmp_1081 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetDispositionInfo"} FatSetDispositionInfo(actual_IrpContext_52: int, actual_Irp_6: int, actual_FileObject_15: int, actual_Fcb_18: int) returns (Tmp_1081: int)
{
  var {:pointer} Tmp_1082: int;
  var {:pointer} Tmp_1083: int;
  var {:scalar} Tmp_1084: int;
  var {:scalar} TmpChar: int;
  var {:pointer} Tmp_1085: int;
  var {:scalar} BytesToMap: int;
  var {:pointer} Tmp_1087: int;
  var {:scalar} sdv_727: int;
  var {:pointer} Dirent_14: int;
  var {:scalar} Iosb_12: int;
  var {:pointer} LocalBuffer: int;
  var {:pointer} Tmp_1089: int;
  var {:pointer} Tmp_1090: int;
  var {:pointer} Tmp_1091: int;
  var {:pointer} Tmp_1092: int;
  var {:scalar} Tmp_1093: int;
  var {:pointer} Tmp_1094: int;
  var {:pointer} Buffer_2: int;
  var {:scalar} sdv_728: int;
  var {:pointer} Bcb_4: int;
  var {:scalar} sdv_729: int;
  var {:scalar} Tmp_1098: int;
  var {:scalar} sdv_730: int;
  var {:scalar} Tmp_1099: int;
  var {:pointer} Tmp_1100: int;
  var {:pointer} Vcb_39: int;
  var {:pointer} LocalBcb: int;
  var {:pointer} Tmp_1101: int;
  var {:pointer} Tmp_1102: int;
  var {:scalar} sdv_733: int;
  var {:pointer} Tmp_1103: int;
  var {:scalar} Tmp_1104: int;
  var {:pointer} Tmp_1105: int;
  var {:pointer} Tmp_1106: int;
  var {:pointer} Tmp_1107: int;
  var {:scalar} Tmp_1108: int;
  var {:pointer} Tmp_1109: int;
  var {:pointer} IrpContext_52: int;
  var {:pointer} Irp_6: int;
  var {:pointer} FileObject_15: int;
  var {:pointer} Fcb_18: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_1312: int;
  var vslice_dummy_var_1313: int;

  anon0:
    call {:si_unique_call 1091} Dirent_14 := __HAVOC_malloc(4);
    call {:si_unique_call 1092} Iosb_12 := __HAVOC_malloc(12);
    call {:si_unique_call 1093} LocalBuffer := __HAVOC_malloc(4);
    call {:si_unique_call 1094} Bcb_4 := __HAVOC_malloc(4);
    call {:si_unique_call 1095} LocalBcb := __HAVOC_malloc(4);
    IrpContext_52 := actual_IrpContext_52;
    Irp_6 := actual_Irp_6;
    FileObject_15 := actual_FileObject_15;
    Fcb_18 := actual_Fcb_18;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    havoc Buffer_2;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Fcb_18 != 0;
    assume Fcb_18 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    Tmp_1081 := -1073741535;
    goto L1;

  L1:
    return;

  anon35_Then:
    assume {:nonnull} Fcb_18 != 0;
    assume Fcb_18 > 0;
    call {:si_unique_call 1096} sdv_727 := corral_nondet();
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_727 != 0;
    Tmp_1100 := Fcb_18;
    assume {:nonnull} Tmp_1100 != 0;
    assume Tmp_1100 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    Tmp_1081 := -1073741535;
    goto L1;

  anon45_Then:
    Tmp_1083 := Fcb_18;
    assume {:nonnull} Tmp_1083 != 0;
    assume Tmp_1083 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 1097} sdv_729 := FatIsDirectoryEmpty(IrpContext_52, Fcb_18);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_729 == 0;
    Tmp_1081 := -1073741567;
    goto L1;

  anon37_Then:
    assume {:partition} sdv_729 != 0;
    goto L19;

  L19:
    assume {:nonnull} Fcb_18 != 0;
    assume Fcb_18 > 0;
    havoc Tmp_1101;
    assume {:nonnull} Tmp_1101 != 0;
    assume Tmp_1101 > 0;
    havoc Tmp_1094;
    assume {:nonnull} Tmp_1094 != 0;
    assume Tmp_1094 > 0;
    havoc Tmp_1091;
    assume {:nonnull} Tmp_1091 != 0;
    assume Tmp_1091 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} LocalBcb != 0;
    assume LocalBcb > 0;
    assume {:nonnull} Fcb_18 != 0;
    assume Fcb_18 > 0;
    havoc Vcb_39;
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1092 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Tmp_1092 != 0;
    assume Tmp_1092 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1103 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1107 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Tmp_1103 != 0;
    assume Tmp_1103 > 0;
    assume {:nonnull} Tmp_1107 != 0;
    assume Tmp_1107 > 0;
    havoc Tmp_1104;
    goto L41;

  L41:
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1087 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1085 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Tmp_1085 != 0;
    assume Tmp_1085 > 0;
    assume {:nonnull} Tmp_1087 != 0;
    assume Tmp_1087 > 0;
    havoc Tmp_1108;
    goto L42;

  L42:
    BytesToMap := Tmp_1108;
    call {:si_unique_call 1098} FatReadVolumeFile(IrpContext_52, Vcb_39, 0, BytesToMap, LocalBcb, LocalBuffer);
    assume {:nonnull} IrpContext_52 != 0;
    assume IrpContext_52 > 0;
    havoc Tmp_1099;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Tmp_1099 == 0;
    goto L158;

  L158:
    call {:si_unique_call 1099} sdv_730 := corral_nondet();
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_730 != 0;
    goto L63;

  L63:
    assume {:nonnull} LocalBuffer != 0;
    assume LocalBuffer > 0;
    assume {:nonnull} LocalBuffer != 0;
    assume LocalBuffer > 0;
    havoc TmpChar;
    assume {:nonnull} LocalBuffer != 0;
    assume LocalBuffer > 0;
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    havoc Tmp_1084;
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1090 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1082 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Tmp_1082 != 0;
    assume Tmp_1082 > 0;
    assume {:nonnull} Tmp_1090 != 0;
    assume Tmp_1090 > 0;
    havoc Tmp_1093;
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1105 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1109 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Tmp_1105 != 0;
    assume Tmp_1105 > 0;
    assume {:nonnull} Tmp_1109 != 0;
    assume Tmp_1109 > 0;
    havoc Tmp_1098;
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    call {:si_unique_call 1100} vslice_dummy_var_133 := FatAddMcbEntry(Vcb_39, DirtyFatMcb__VCB(Vcb_39), Tmp_1098, Tmp_1093, Tmp_1084);
    call {:si_unique_call 1101} sdv_728 := sdv_AbnormalTermination();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_728 != 0;
    assume {:nonnull} LocalBcb != 0;
    assume LocalBcb > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} LocalBcb != 0;
    assume LocalBcb > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} LocalBcb != 0;
    assume LocalBcb > 0;
    goto L76;

  L76:
    assume {:nonnull} Iosb_12 != 0;
    assume Iosb_12 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L96;

  L96:
    assume {:nonnull} Fcb_18 != 0;
    assume Fcb_18 > 0;
    assume {:nonnull} FileObject_15 != 0;
    assume FileObject_15 > 0;
    Tmp_1089 := Fcb_18;
    assume {:nonnull} Tmp_1089 != 0;
    assume Tmp_1089 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Fcb_18 != 0;
    assume Fcb_18 > 0;
    assume {:nonnull} Fcb_18 != 0;
    assume Fcb_18 > 0;
    call {:si_unique_call 1102} FsRtlNotifyFullChangeDirectory(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    goto L99;

  L99:
    Tmp_1081 := 0;
    goto L1;

  anon51_Then:
    goto L99;

  anon42_Then:
    assume {:nonnull} Iosb_12 != 0;
    assume Iosb_12 > 0;
    assume {:nonnull} IrpContext_52 != 0;
    assume IrpContext_52 > 0;
    call {:si_unique_call 1103} sdv_733 := corral_nondet();
    call {:si_unique_call 1104} ExRaiseStatus(sdv_733);
    goto L96;

  anon41_Then:
    goto L76;

  anon40_Then:
    goto L76;

  anon39_Then:
    assume {:partition} sdv_728 == 0;
    goto L76;

  anon38_Then:
    assume {:partition} sdv_730 == 0;
    assume {:nonnull} IrpContext_52 != 0;
    assume IrpContext_52 > 0;
    call {:si_unique_call 1105} ExRaiseStatus(-1073741608);
    goto L63;

  anon50_Then:
    assume {:partition} Tmp_1099 != 0;
    goto L158;

  anon49_Then:
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1106 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Vcb_39 != 0;
    assume Vcb_39 > 0;
    Tmp_1102 := Bpb__VCB(Vcb_39);
    assume {:nonnull} Tmp_1102 != 0;
    assume Tmp_1102 > 0;
    assume {:nonnull} Tmp_1106 != 0;
    assume Tmp_1106 > 0;
    havoc Tmp_1104;
    goto L41;

  anon48_Then:
    Tmp_1108 := 4096;
    goto L42;

  anon47_Then:
    call {:si_unique_call 1106} FatGetDirentFromFcbOrDcb(IrpContext_52, Fcb_18, Dirent_14, Bcb_4);
    assume {:nonnull} Bcb_4 != 0;
    assume Bcb_4 > 0;
    assume {:nonnull} Fcb_18 != 0;
    assume Fcb_18 > 0;
    havoc vslice_dummy_var_1312;
    havoc vslice_dummy_var_1313;
    call {:si_unique_call 1107} FatSetDirtyBcb#1(IrpContext_52, vslice_dummy_var_1312, vslice_dummy_var_1313, 1);
    assume {:nonnull} Bcb_4 != 0;
    assume Bcb_4 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Bcb_4 != 0;
    assume Bcb_4 > 0;
    goto L96;

  anon43_Then:
    goto L96;

  anon46_Then:
    goto L19;

  anon36_Then:
    assume {:partition} sdv_727 == 0;
    Tmp_1081 := -1073741535;
    goto L1;

  anon44_Then:
    assume {:nonnull} Fcb_18 != 0;
    assume Fcb_18 > 0;
    assume {:nonnull} FileObject_15 != 0;
    assume FileObject_15 > 0;
    goto L99;
}



procedure {:origName "FatQueryNameInfo"} FatQueryNameInfo(actual_IrpContext_53: int, actual_Fcb_19: int, actual_Ccb_13: int, actual_Buffer_3: int, actual_Length: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueryNameInfo"} FatQueryNameInfo(actual_IrpContext_53: int, actual_Fcb_19: int, actual_Ccb_13: int, actual_Buffer_3: int, actual_Length: int)
{
  var {:pointer} Tmp_1110: int;
  var {:pointer} Tmp_1111: int;
  var {:scalar} ShortName_3: int;
  var {:scalar} Overflow: int;
  var {:scalar} BytesToCopy: int;
  var {:pointer} ShortNameBuffer_2: int;
  var {:scalar} TrimLength: int;
  var {:pointer} IrpContext_53: int;
  var {:pointer} Fcb_19: int;
  var {:pointer} Ccb_13: int;
  var {:pointer} Buffer_3: int;
  var {:pointer} Length: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;

  anon0:
    call {:si_unique_call 1108} ShortName_3 := __HAVOC_malloc(12);
    call {:si_unique_call 1109} vslice_dummy_var_134 := __HAVOC_malloc(4);
    IrpContext_53 := actual_IrpContext_53;
    Fcb_19 := actual_Fcb_19;
    Ccb_13 := actual_Ccb_13;
    Buffer_3 := actual_Buffer_3;
    Length := actual_Length;
    call {:si_unique_call 1110} Tmp_1110 := __HAVOC_malloc(4);
    call {:si_unique_call 1111} Tmp_1111 := __HAVOC_malloc(4);
    call {:si_unique_call 1112} ShortNameBuffer_2 := __HAVOC_malloc(48);
    Overflow := 0;
    assume {:nonnull} Length != 0;
    assume Length > 0;
    assume {:nonnull} Fcb_19 != 0;
    assume Fcb_19 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L12;

  L12:
    TrimLength := 0;
    assume {:nonnull} Fcb_19 != 0;
    assume Fcb_19 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Ccb_13 != 0;
    assume {:nonnull} Ccb_13 != 0;
    assume Ccb_13 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Fcb_19 != 0;
    assume Fcb_19 > 0;
    havoc TrimLength;
    goto L14;

  L14:
    assume {:nonnull} Fcb_19 != 0;
    assume Fcb_19 > 0;
    assume {:nonnull} Length != 0;
    assume Length > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Length != 0;
    assume Length > 0;
    havoc BytesToCopy;
    Overflow := 1;
    goto L21;

  L21:
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    havoc Tmp_1111;
    call {:si_unique_call 1113} sdv_RtlCopyMemory(0, 0, BytesToCopy);
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    assume {:nonnull} Fcb_19 != 0;
    assume Fcb_19 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} TrimLength != 0;
    assume {:nonnull} ShortName_3 != 0;
    assume ShortName_3 > 0;
    assume {:nonnull} ShortName_3 != 0;
    assume ShortName_3 > 0;
    assume {:nonnull} ShortName_3 != 0;
    assume ShortName_3 > 0;
    call {:si_unique_call 1114} vslice_dummy_var_135 := RtlOemStringToCountedUnicodeString(0, 0, 0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Overflow != 0;
    goto L40;

  L40:
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    assume {:nonnull} ShortName_3 != 0;
    assume ShortName_3 > 0;
    goto L27;

  L27:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Overflow != 0;
    assume {:nonnull} Length != 0;
    assume Length > 0;
    goto L1;

  L1:
    return;

  anon22_Then:
    assume {:partition} Overflow == 0;
    goto L1;

  anon23_Then:
    assume {:partition} Overflow == 0;
    assume {:nonnull} Length != 0;
    assume Length > 0;
    assume {:nonnull} ShortName_3 != 0;
    assume ShortName_3 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Length != 0;
    assume Length > 0;
    havoc BytesToCopy;
    Overflow := 1;
    goto L44;

  L44:
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    havoc Tmp_1110;
    call {:si_unique_call 1115} sdv_RtlCopyMemory(0, 0, BytesToCopy);
    goto L40;

  anon24_Then:
    assume {:nonnull} ShortName_3 != 0;
    assume ShortName_3 > 0;
    havoc BytesToCopy;
    assume {:nonnull} Length != 0;
    assume Length > 0;
    goto L44;

  anon27_Then:
    assume {:partition} TrimLength == 0;
    goto L27;

  anon19_Then:
    assume {:nonnull} Fcb_19 != 0;
    assume Fcb_19 > 0;
    havoc BytesToCopy;
    assume {:nonnull} Length != 0;
    assume Length > 0;
    goto L21;

  anon21_Then:
    goto L14;

  anon20_Then:
    assume {:partition} Ccb_13 == 0;
    goto L14;

  anon26_Then:
    goto L14;

  anon25_Then:
    call {:si_unique_call 1116} FatSetFullFileNameInFcb#1(IrpContext_53, Fcb_19);
    goto L12;
}



procedure {:origName "FatSetEndOfFileInfo"} FatSetEndOfFileInfo(actual_IrpContext_54: int, actual_Irp_7: int, actual_FileObject_16: int, actual_Vcb_40: int, actual_Fcb_20: int) returns (Tmp_1116: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1116 == -1073741808 || Tmp_1116 == 0 || Tmp_1116 == -1073741245 || Tmp_1116 == -1073741697;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetEndOfFileInfo"} FatSetEndOfFileInfo(actual_IrpContext_54: int, actual_Irp_7: int, actual_FileObject_16: int, actual_Vcb_40: int, actual_Fcb_20: int) returns (Tmp_1116: int)
{
  var {:scalar} UnwindFileSizes: int;
  var {:scalar} CacheMapInitialized: int;
  var {:scalar} sdv_735: int;
  var {:scalar} NewFileSize: int;
  var {:scalar} Status_11: int;
  var {:scalar} ResourceAcquired: int;
  var {:pointer} Dirent_15: int;
  var {:pointer} sdv_736: int;
  var {:pointer} Buffer_4: int;
  var {:pointer} Tmp_1118: int;
  var {:pointer} DirentBcb_7: int;
  var {:pointer} Tmp_1119: int;
  var {:pointer} Tmp_1120: int;
  var {:scalar} sdv_741: int;
  var {:scalar} InitialValidDataToDisk: int;
  var {:scalar} Tmp_1121: int;
  var {:scalar} sdv_742: int;
  var {:pointer} Tmp_1122: int;
  var {:scalar} InitialValidDataLength: int;
  var {:scalar} Tmp_1123: int;
  var {:pointer} Tmp_1124: int;
  var {:scalar} InitialFileSize: int;
  var {:pointer} Tmp_1125: int;
  var {:pointer} IrpContext_54: int;
  var {:pointer} Irp_7: int;
  var {:pointer} FileObject_16: int;
  var {:pointer} Fcb_20: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_1314: int;
  var vslice_dummy_var_1315: int;
  var vslice_dummy_var_1316: int;
  var vslice_dummy_var_1317: int;

  anon0:
    call {:si_unique_call 1117} Dirent_15 := __HAVOC_malloc(4);
    call {:si_unique_call 1118} DirentBcb_7 := __HAVOC_malloc(4);
    IrpContext_54 := actual_IrpContext_54;
    Irp_7 := actual_Irp_7;
    FileObject_16 := actual_FileObject_16;
    Fcb_20 := actual_Fcb_20;
    CacheMapInitialized := 0;
    UnwindFileSizes := 0;
    ResourceAcquired := 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    havoc Buffer_4;
    Tmp_1120 := Fcb_20;
    assume {:nonnull} Tmp_1120 != 0;
    assume Tmp_1120 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    Status_11 := -1073741808;
    goto L22;

  L22:
    call {:si_unique_call 1119} FatUnpinRepinnedBcbs(IrpContext_54);
    call {:si_unique_call 1120} sdv_741 := sdv_AbnormalTermination();
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_741 != 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} UnwindFileSizes != 0;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    assume {:nonnull} FileObject_16 != 0;
    assume FileObject_16 > 0;
    havoc Tmp_1119;
    assume {:nonnull} Tmp_1119 != 0;
    assume Tmp_1119 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} FileObject_16 != 0;
    assume FileObject_16 > 0;
    havoc Tmp_1125;
    assume {:nonnull} Tmp_1125 != 0;
    assume Tmp_1125 > 0;
    havoc Tmp_1118;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    goto L47;

  L47:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} CacheMapInitialized != 0;
    call {:si_unique_call 1121} vslice_dummy_var_136 := corral_nondet();
    goto L54;

  L54:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} ResourceAcquired != 0;
    call {:si_unique_call 1122} ExReleaseResourceLite(0);
    goto L58;

  L58:
    Tmp_1116 := Status_11;
    return;

  anon58_Then:
    assume {:partition} ResourceAcquired == 0;
    goto L58;

  anon56_Then:
    assume {:partition} CacheMapInitialized == 0;
    goto L54;

  anon77_Then:
    goto L47;

  anon57_Then:
    assume {:partition} UnwindFileSizes == 0;
    goto L47;

  anon55_Then:
    assume {:partition} sdv_741 == 0;
    goto L47;

  anon76_Then:
    assume {:nonnull} Buffer_4 != 0;
    assume Buffer_4 > 0;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    havoc vslice_dummy_var_1314;
    havoc vslice_dummy_var_1315;
    call {:si_unique_call 1123} sdv_735 := FatIsIoRangeValid(vslice_dummy_var_1314, vslice_dummy_var_1315, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_735 != 0;
    assume {:nonnull} Buffer_4 != 0;
    assume Buffer_4 > 0;
    havoc NewFileSize;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    call {:si_unique_call 1124} FatLookupFileAllocationSize#1(IrpContext_54, Fcb_20);
    goto L66;

  L66:
    assume {:nonnull} FileObject_16 != 0;
    assume FileObject_16 > 0;
    havoc Tmp_1122;
    assume {:nonnull} Tmp_1122 != 0;
    assume Tmp_1122 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} FileObject_16 != 0;
    assume FileObject_16 > 0;
    havoc Tmp_1124;
    assume {:nonnull} Tmp_1124 != 0;
    assume Tmp_1124 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} FileObject_16 != 0;
    assume FileObject_16 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} IrpContext_54 != 0;
    assume IrpContext_54 > 0;
    call {:si_unique_call 1125} ExRaiseStatus(-1073741528);
    goto L76;

  L76:
    CacheMapInitialized := 1;
    goto L70;

  L70:
    call {:si_unique_call 1126} sdv_736 := sdv_IoGetCurrentIrpStackLocation(Irp_7);
    assume {:nonnull} sdv_736 != 0;
    assume sdv_736 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L89;

  L89:
    Status_11 := 0;
    goto L22;

  anon66_Then:
    goto L87;

  L87:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    havoc NewFileSize;
    goto L94;

  L94:
    call {:si_unique_call 1127} FatGetDirentFromFcbOrDcb(IrpContext_54, Fcb_20, Dirent_15, DirentBcb_7);
    assume {:nonnull} Dirent_15 != 0;
    assume Dirent_15 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_15] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_15] > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Dirent_15 != 0;
    assume Dirent_15 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_15] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_15] > 0;
    assume {:nonnull} DirentBcb_7 != 0;
    assume DirentBcb_7 > 0;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    havoc vslice_dummy_var_1316;
    havoc vslice_dummy_var_1317;
    call {:si_unique_call 1128} FatSetDirtyBcb#1(IrpContext_54, vslice_dummy_var_1316, vslice_dummy_var_1317, 1);
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto L113;

  L113:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    havoc Tmp_1121;
    call {:si_unique_call 1129} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_1121, 0, 0, 8, 3, 0);
    goto L99;

  L99:
    assume {:nonnull} DirentBcb_7 != 0;
    assume DirentBcb_7 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} DirentBcb_7 != 0;
    assume DirentBcb_7 > 0;
    goto L89;

  anon69_Then:
    goto L89;

  anon70_Then:
    call {:si_unique_call 1130} FatSetFullFileNameInFcb#1(IrpContext_54, Fcb_20);
    goto L113;

  anon68_Then:
    goto L99;

  anon67_Then:
    goto L94;

  anon65_Then:
    goto L89;

  anon64_Then:
    goto L87;

  anon62_Then:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    call {:si_unique_call 1131} FatAddFileAllocation(IrpContext_54, Fcb_20, FileObject_16, NewFileSize);
    goto L121;

  L121:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    call {:si_unique_call 1132} sdv_742 := corral_nondet();
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_742 != 0;
    call {:si_unique_call 1133} ResourceAcquired := ExAcquireResourceExclusiveLite(0, 1);
    goto L127;

  L127:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    havoc InitialFileSize;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    havoc InitialValidDataLength;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    havoc InitialValidDataToDisk;
    UnwindFileSizes := 1;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto L143;

  L143:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto L145;

  L145:
    call {:si_unique_call 1134} FatSetFileSizeInDirent(IrpContext_54, Fcb_20, 0);
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L156;

  L156:
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    havoc Tmp_1123;
    call {:si_unique_call 1135} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_1123, 0, 0, 8, 3, 0);
    assume {:nonnull} Fcb_20 != 0;
    assume Fcb_20 > 0;
    goto L125;

  L125:
    assume {:nonnull} FileObject_16 != 0;
    assume FileObject_16 > 0;
    Status_11 := 0;
    goto L22;

  anon75_Then:
    call {:si_unique_call 1136} FatSetFullFileNameInFcb#1(IrpContext_54, Fcb_20);
    goto L156;

  anon74_Then:
    goto L145;

  anon81_Then:
    goto L143;

  anon73_Then:
    assume {:partition} sdv_742 == 0;
    Status_11 := -1073741245;
    goto L22;

  anon72_Then:
    goto L127;

  anon71_Then:
    goto L125;

  anon63_Then:
    goto L121;

  anon61_Then:
    goto L76;

  anon60_Then:
    goto L70;

  anon80_Then:
    goto L70;

  anon79_Then:
    goto L70;

  anon78_Then:
    goto L66;

  anon59_Then:
    assume {:partition} sdv_735 == 0;
    Status_11 := -1073741697;
    goto L22;
}



procedure {:origName "FatCommonQueryInformation"} FatCommonQueryInformation(actual_IrpContext_55: int, actual_Irp_8: int) returns (Tmp_1126: int);
  modifies alloc, markedPending, locked, queued, queuedWithoutMarking, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1126 == 5 || Tmp_1126 == -1073741811 || Tmp_1126 == 0 || Tmp_1126 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonQueryInformation"} FatCommonQueryInformation(actual_IrpContext_55: int, actual_Irp_8: int) returns (Tmp_1126: int)
{
  var {:pointer} AllInfo: int;
  var {:pointer} Ccb_14: int;
  var {:pointer} Fcb_21: int;
  var {:scalar} Status_12: int;
  var {:pointer} FileObject_17: int;
  var {:pointer} Buffer_5: int;
  var {:scalar} FcbAcquired_2: int;
  var {:scalar} TypeOfOpen_2: int;
  var {:pointer} IrpSp_7: int;
  var {:scalar} sdv_747: int;
  var {:scalar} sdv_748: int;
  var {:scalar} FileInformationClass_1: int;
  var {:pointer} Vcb_41: int;
  var {:dopa} {:scalar} Length_1: int;
  var {:scalar} VcbAcquired_1: int;
  var {:scalar} sdv_750: int;
  var {:pointer} IrpContext_55: int;
  var {:pointer} Irp_8: int;
  var vslice_dummy_var_1318: int;
  var vslice_dummy_var_1319: int;
  var vslice_dummy_var_1320: int;
  var vslice_dummy_var_1321: int;
  var vslice_dummy_var_1322: int;
  var vslice_dummy_var_1323: int;
  var vslice_dummy_var_1324: int;
  var vslice_dummy_var_1325: int;
  var vslice_dummy_var_1326: int;
  var vslice_dummy_var_1327: int;
  var vslice_dummy_var_1328: int;
  var vslice_dummy_var_1329: int;
  var vslice_dummy_var_1330: int;
  var vslice_dummy_var_1331: int;
  var vslice_dummy_var_1332: int;
  var vslice_dummy_var_1333: int;
  var vslice_dummy_var_1334: int;

  anon0:
    call {:si_unique_call 1137} Ccb_14 := __HAVOC_malloc(4);
    call {:si_unique_call 1138} Fcb_21 := __HAVOC_malloc(4);
    call {:si_unique_call 1139} Vcb_41 := __HAVOC_malloc(4);
    call {:si_unique_call 1140} Length_1 := __HAVOC_malloc(4);
    IrpContext_55 := actual_IrpContext_55;
    Irp_8 := actual_Irp_8;
    FcbAcquired_2 := 0;
    VcbAcquired_1 := 0;
    call {:si_unique_call 1141} IrpSp_7 := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} IrpSp_7 != 0;
    assume IrpSp_7 > 0;
    havoc FileObject_17;
    assume {:nonnull} IrpSp_7 != 0;
    assume IrpSp_7 > 0;
    assume {:nonnull} Length_1 != 0;
    assume Length_1 > 0;
    assume {:nonnull} IrpSp_7 != 0;
    assume IrpSp_7 > 0;
    havoc FileInformationClass_1;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc Buffer_5;
    call {:si_unique_call 1142} TypeOfOpen_2 := FatDecodeFileObject(FileObject_17, Vcb_41, Fcb_21, Ccb_14);
    Status_12 := 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} TypeOfOpen_2 != 2;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} TypeOfOpen_2 != 3;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} TypeOfOpen_2 != 4;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} TypeOfOpen_2 == 6;
    goto L33;

  L33:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} FileInformationClass_1 == 9;
    goto L57;

  L57:
    assume {:nonnull} Vcb_41 != 0;
    assume Vcb_41 > 0;
    havoc vslice_dummy_var_1318;
    call {:si_unique_call 1143} sdv_748 := FatAcquireExclusiveVcb(IrpContext_55, vslice_dummy_var_1318);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_748 != 0;
    VcbAcquired_1 := 1;
    goto L80;

  L80:
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L84;

  L84:
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1319;
    call {:si_unique_call 1144} FatVerifyFcb(IrpContext_55, vslice_dummy_var_1319);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} FileInformationClass_1 != 4;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} FileInformationClass_1 != 5;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} FileInformationClass_1 != 6;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} FileInformationClass_1 != 7;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} FileInformationClass_1 != 9;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} FileInformationClass_1 != 14;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} FileInformationClass_1 != 18;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} FileInformationClass_1 != 21;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} FileInformationClass_1 == 34;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1320;
    call {:si_unique_call 1145} FatQueryNetworkInfo(IrpContext_55, vslice_dummy_var_1320, FileObject_17, Buffer_5, Length_1);
    goto L36;

  L36:
    assume {:nonnull} Length_1 != 0;
    assume Length_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    Status_12 := 5;
    assume {:nonnull} Length_1 != 0;
    assume Length_1 > 0;
    goto L37;

  L37:
    assume {:nonnull} IrpSp_7 != 0;
    assume IrpSp_7 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} Length_1 != 0;
    assume Length_1 > 0;
    goto L40;

  L40:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} FcbAcquired_2 != 0;
    call {:si_unique_call 1146} ExReleaseResourceLite(0);
    goto L41;

  L41:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} VcbAcquired_1 != 0;
    call {:si_unique_call 1147} ExReleaseResourceLite(0);
    goto L45;

  L45:
    call {:si_unique_call 1148} sdv_747 := sdv_AbnormalTermination();
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_747 != 0;
    goto L55;

  L55:
    Tmp_1126 := Status_12;
    return;

  anon49_Then:
    assume {:partition} sdv_747 == 0;
    call {:si_unique_call 1149} FatCompleteRequest_Real(IrpContext_55, Irp_8, Status_12);
    goto L55;

  anon48_Then:
    assume {:partition} VcbAcquired_1 == 0;
    goto L45;

  anon47_Then:
    assume {:partition} FcbAcquired_2 == 0;
    goto L41;

  anon46_Then:
    goto L37;

  anon58_Then:
    assume {:partition} FileInformationClass_1 != 34;
    Status_12 := -1073741811;
    goto L36;

  anon59_Then:
    assume {:partition} FileInformationClass_1 == 21;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1321;
    call {:si_unique_call 1150} FatQueryShortNameInfo(IrpContext_55, vslice_dummy_var_1321, Buffer_5, Length_1);
    goto L36;

  anon60_Then:
    assume {:partition} FileInformationClass_1 == 18;
    AllInfo := Buffer_5;
    assume {:nonnull} Length_1 != 0;
    assume Length_1 > 0;
    assume {:nonnull} AllInfo != 0;
    assume AllInfo > 0;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1322;
    call {:si_unique_call 1151} FatQueryBasicInfo(IrpContext_55, vslice_dummy_var_1322, FileObject_17, BasicInformation__FILE_ALL_INFORMATION(AllInfo), Length_1);
    assume {:nonnull} AllInfo != 0;
    assume AllInfo > 0;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1323;
    call {:si_unique_call 1152} FatQueryStandardInfo(IrpContext_55, vslice_dummy_var_1323, StandardInformation__FILE_ALL_INFORMATION(AllInfo), Length_1);
    assume {:nonnull} AllInfo != 0;
    assume AllInfo > 0;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1324;
    call {:si_unique_call 1153} FatQueryInternalInfo(IrpContext_55, vslice_dummy_var_1324, InternalInformation__FILE_ALL_INFORMATION(AllInfo), Length_1);
    assume {:nonnull} AllInfo != 0;
    assume AllInfo > 0;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1325;
    call {:si_unique_call 1154} FatQueryEaInfo(IrpContext_55, vslice_dummy_var_1325, EaInformation__FILE_ALL_INFORMATION(AllInfo), Length_1);
    assume {:nonnull} AllInfo != 0;
    assume AllInfo > 0;
    call {:si_unique_call 1155} FatQueryPositionInfo(IrpContext_55, FileObject_17, PositionInformation__FILE_ALL_INFORMATION(AllInfo), Length_1);
    assume {:nonnull} AllInfo != 0;
    assume AllInfo > 0;
    assume {:nonnull} Ccb_14 != 0;
    assume Ccb_14 > 0;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1326;
    havoc vslice_dummy_var_1327;
    call {:si_unique_call 1156} FatQueryNameInfo(IrpContext_55, vslice_dummy_var_1326, vslice_dummy_var_1327, NameInformation__FILE_ALL_INFORMATION(AllInfo), Length_1);
    goto L36;

  anon61_Then:
    assume {:partition} FileInformationClass_1 == 14;
    call {:si_unique_call 1157} FatQueryPositionInfo(IrpContext_55, FileObject_17, Buffer_5, Length_1);
    goto L36;

  anon62_Then:
    assume {:partition} FileInformationClass_1 == 9;
    assume {:nonnull} Ccb_14 != 0;
    assume Ccb_14 > 0;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1328;
    havoc vslice_dummy_var_1329;
    call {:si_unique_call 1158} FatQueryNameInfo(IrpContext_55, vslice_dummy_var_1328, vslice_dummy_var_1329, Buffer_5, Length_1);
    goto L36;

  anon63_Then:
    assume {:partition} FileInformationClass_1 == 7;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1330;
    call {:si_unique_call 1159} FatQueryEaInfo(IrpContext_55, vslice_dummy_var_1330, Buffer_5, Length_1);
    goto L36;

  anon64_Then:
    assume {:partition} FileInformationClass_1 == 6;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1331;
    call {:si_unique_call 1160} FatQueryInternalInfo(IrpContext_55, vslice_dummy_var_1331, Buffer_5, Length_1);
    goto L36;

  anon65_Then:
    assume {:partition} FileInformationClass_1 == 5;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1332;
    call {:si_unique_call 1161} FatQueryStandardInfo(IrpContext_55, vslice_dummy_var_1332, Buffer_5, Length_1);
    goto L36;

  anon53_Then:
    assume {:partition} FileInformationClass_1 == 4;
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1333;
    call {:si_unique_call 1162} FatQueryBasicInfo(IrpContext_55, vslice_dummy_var_1333, FileObject_17, Buffer_5, Length_1);
    goto L36;

  anon52_Then:
    assume {:nonnull} Fcb_21 != 0;
    assume Fcb_21 > 0;
    havoc vslice_dummy_var_1334;
    call {:si_unique_call 1163} sdv_750 := FatAcquireSharedFcb(IrpContext_55, vslice_dummy_var_1334);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_750 != 0;
    FcbAcquired_2 := 1;
    goto L84;

  anon54_Then:
    assume {:partition} sdv_750 == 0;
    call {:si_unique_call 1164} Status_12 := FatFsdPostRequest(IrpContext_55, Irp_8);
    IrpContext_55 := 0;
    Irp_8 := 0;
    goto L40;

  anon51_Then:
    assume {:partition} sdv_748 == 0;
    call {:si_unique_call 1165} Status_12 := FatFsdPostRequest(IrpContext_55, Irp_8);
    IrpContext_55 := 0;
    Irp_8 := 0;
    goto L40;

  anon45_Then:
    assume {:partition} FileInformationClass_1 != 9;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} FileInformationClass_1 != 18;
    goto L80;

  anon50_Then:
    assume {:partition} FileInformationClass_1 == 18;
    goto L57;

  anon55_Then:
    assume {:partition} TypeOfOpen_2 != 6;
    Status_12 := -1073741811;
    goto L36;

  anon56_Then:
    assume {:partition} TypeOfOpen_2 == 4;
    Status_12 := -1073741811;
    goto L36;

  anon57_Then:
    assume {:partition} TypeOfOpen_2 == 3;
    goto L33;

  anon66_Then:
    assume {:partition} TypeOfOpen_2 == 2;
    goto L33;
}



procedure {:origName "FatQueryNetworkInfo"} FatQueryNetworkInfo(actual_IrpContext_56: int, actual_Fcb_22: int, actual_FileObject_18: int, actual_Buffer_6: int, actual_Length_2: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueryNetworkInfo"} FatQueryNetworkInfo(actual_IrpContext_56: int, actual_Fcb_22: int, actual_FileObject_18: int, actual_Buffer_6: int, actual_Length_2: int)
{
  var {:pointer} Tmp_1128: int;
  var {:pointer} IrpContext_56: int;
  var {:pointer} Fcb_22: int;
  var {:pointer} Buffer_6: int;
  var {:pointer} Length_2: int;
  var vslice_dummy_var_137: int;

  anon0:
    call {:si_unique_call 1166} vslice_dummy_var_137 := __HAVOC_malloc(4);
    IrpContext_56 := actual_IrpContext_56;
    Fcb_22 := actual_Fcb_22;
    Buffer_6 := actual_Buffer_6;
    Length_2 := actual_Length_2;
    call {:si_unique_call 1167} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} Fcb_22 != 0;
    assume Fcb_22 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    goto L13;

  L13:
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Fcb_22 != 0;
    assume Fcb_22 > 0;
    assume {:nonnull} Fcb_22 != 0;
    assume Fcb_22 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    goto L15;

  L15:
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L18;

  L18:
    Tmp_1128 := Fcb_22;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Fcb_22 != 0;
    assume Fcb_22 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 1168} FatLookupFileAllocationSize#1(IrpContext_56, Fcb_22);
    goto L21;

  L21:
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Fcb_22 != 0;
    assume Fcb_22 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Fcb_22 != 0;
    assume Fcb_22 > 0;
    goto L19;

  L19:
    assume {:nonnull} Length_2 != 0;
    assume Length_2 > 0;
    return;

  anon13_Then:
    goto L21;

  anon15_Then:
    goto L19;

  anon12_Then:
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    goto L18;

  anon14_Then:
    goto L15;

  anon11_Then:
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Fcb_22 != 0;
    assume Fcb_22 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Fcb_22 != 0;
    assume Fcb_22 > 0;
    assume {:nonnull} Buffer_6 != 0;
    assume Buffer_6 > 0;
    assume {:nonnull} Fcb_22 != 0;
    assume Fcb_22 > 0;
    goto L13;
}



procedure {:origName "FatFsdQueryInformation"} FatFsdQueryInformation(actual_VolumeDeviceObject_2: int, actual_Irp_9: int) returns (Tmp_1131: int);
  modifies alloc, markedPending, locked, queued, queuedWithoutMarking, yogi_error, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1131 == 5 || Tmp_1131 == -1073741811 || Tmp_1131 == 0 || Tmp_1131 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdQueryInformation"} FatFsdQueryInformation(actual_VolumeDeviceObject_2: int, actual_Irp_9: int) returns (Tmp_1131: int)
{
  var {:scalar} TopLevel_1: int;
  var {:scalar} Status_13: int;
  var {:scalar} sdv_754: int;
  var {:pointer} IrpContext_57: int;
  var {:pointer} VolumeDeviceObject_2: int;
  var {:pointer} Irp_9: int;

  anon0:
    VolumeDeviceObject_2 := actual_VolumeDeviceObject_2;
    Irp_9 := actual_Irp_9;
    IrpContext_57 := 0;
    call {:si_unique_call 1169} KeEnterCriticalRegion();
    call {:si_unique_call 1170} TopLevel_1 := FatIsIrpTopLevel(Irp_9);
    call {:si_unique_call 1171} sdv_754 := corral_nondet();
    call {:si_unique_call 1172} IrpContext_57 := FatCreateIrpContext(Irp_9, sdv_754);
    call {:si_unique_call 1173} Status_13 := FatCommonQueryInformation(IrpContext_57, Irp_9);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} TopLevel_1 != 0;
    goto L34;

  L34:
    call {:si_unique_call 1174} KeLeaveCriticalRegion();
    Tmp_1131 := Status_13;
    call {:si_unique_call 1175} SLIC_FatFsdQueryInformation_exit(strConst__li2bpl2, Tmp_1131);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} TopLevel_1 == 0;
    goto L34;
}



procedure {:origName "FatSetAllocationInfo"} FatSetAllocationInfo(actual_IrpContext_58: int, actual_Irp_10: int, actual_Fcb_23: int, actual_FileObject_19: int) returns (Tmp_1133: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1133 == -1073741808 || Tmp_1133 == 0 || Tmp_1133 == -1073741245 || Tmp_1133 == -1073741697;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetAllocationInfo"} FatSetAllocationInfo(actual_IrpContext_58: int, actual_Irp_10: int, actual_Fcb_23: int, actual_FileObject_19: int) returns (Tmp_1133: int)
{
  var {:scalar} OriginalValidDataToDisk: int;
  var {:scalar} FileSizeTruncated: int;
  var {:scalar} CacheMapInitialized_1: int;
  var {:pointer} Tmp_1135: int;
  var {:scalar} sdv_759: int;
  var {:scalar} Status_14: int;
  var {:scalar} ResourceAcquired_1: int;
  var {:pointer} Tmp_1137: int;
  var {:scalar} sdv_760: int;
  var {:pointer} Buffer_7: int;
  var {:pointer} Tmp_1139: int;
  var {:scalar} OriginalValidDataLength: int;
  var {:scalar} OriginalFileSize: int;
  var {:pointer} Tmp_1140: int;
  var {:pointer} Tmp_1141: int;
  var {:scalar} sdv_763: int;
  var {:scalar} NewAllocationSize: int;
  var {:pointer} Tmp_1142: int;
  var {:scalar} Tmp_1143: int;
  var {:pointer} IrpContext_58: int;
  var {:pointer} Irp_10: int;
  var {:pointer} Fcb_23: int;
  var {:pointer} FileObject_19: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_1335: int;
  var vslice_dummy_var_1336: int;

  anon0:
    IrpContext_58 := actual_IrpContext_58;
    Irp_10 := actual_Irp_10;
    Fcb_23 := actual_Fcb_23;
    FileObject_19 := actual_FileObject_19;
    Status_14 := 0;
    FileSizeTruncated := 0;
    CacheMapInitialized_1 := 0;
    ResourceAcquired_1 := 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    havoc Buffer_7;
    assume {:nonnull} Buffer_7 != 0;
    assume Buffer_7 > 0;
    havoc NewAllocationSize;
    Tmp_1135 := Fcb_23;
    assume {:nonnull} Tmp_1135 != 0;
    assume Tmp_1135 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    Tmp_1133 := -1073741808;
    goto L1;

  L1:
    return;

  anon49_Then:
    assume {:nonnull} Buffer_7 != 0;
    assume Buffer_7 > 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    havoc vslice_dummy_var_1335;
    havoc vslice_dummy_var_1336;
    call {:si_unique_call 1176} sdv_759 := FatIsIoRangeValid(vslice_dummy_var_1335, vslice_dummy_var_1336, 0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_759 != 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 1177} FatLookupFileAllocationSize#1(IrpContext_58, Fcb_23);
    goto L26;

  L26:
    assume {:nonnull} FileObject_19 != 0;
    assume FileObject_19 > 0;
    havoc Tmp_1139;
    assume {:nonnull} Tmp_1139 != 0;
    assume Tmp_1139 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} FileObject_19 != 0;
    assume FileObject_19 > 0;
    havoc Tmp_1137;
    assume {:nonnull} Tmp_1137 != 0;
    assume Tmp_1137 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    CacheMapInitialized_1 := 1;
    goto L30;

  L30:
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} FileObject_19 != 0;
    assume FileObject_19 > 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 1178} FatAddFileAllocation(IrpContext_58, Fcb_23, FileObject_19, NewAllocationSize);
    goto L61;

  L61:
    call {:si_unique_call 1179} sdv_763 := sdv_AbnormalTermination();
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} sdv_763 != 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} FileSizeTruncated != 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} FileObject_19 != 0;
    assume FileObject_19 > 0;
    havoc Tmp_1142;
    assume {:nonnull} Tmp_1142 != 0;
    assume Tmp_1142 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} FileObject_19 != 0;
    assume FileObject_19 > 0;
    havoc Tmp_1141;
    assume {:nonnull} Tmp_1141 != 0;
    assume Tmp_1141 > 0;
    havoc Tmp_1140;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} Tmp_1140 != 0;
    assume Tmp_1140 > 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} Tmp_1140 != 0;
    assume Tmp_1140 > 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} Tmp_1140 != 0;
    assume Tmp_1140 > 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} Tmp_1140 != 0;
    assume Tmp_1140 > 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} Tmp_1140 != 0;
    assume Tmp_1140 > 0;
    goto L65;

  L65:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} CacheMapInitialized_1 != 0;
    call {:si_unique_call 1180} vslice_dummy_var_138 := corral_nondet();
    goto L72;

  L72:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} ResourceAcquired_1 != 0;
    call {:si_unique_call 1181} ExReleaseResourceLite(0);
    goto L76;

  L76:
    Tmp_1133 := Status_14;
    goto L1;

  anon44_Then:
    assume {:partition} ResourceAcquired_1 == 0;
    goto L76;

  anon42_Then:
    assume {:partition} CacheMapInitialized_1 == 0;
    goto L72;

  anon53_Then:
    goto L65;

  anon43_Then:
    assume {:partition} FileSizeTruncated == 0;
    goto L65;

  anon41_Then:
    assume {:partition} sdv_763 == 0;
    goto L65;

  anon52_Then:
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 1182} sdv_760 := corral_nondet();
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_760 != 0;
    FileSizeTruncated := 1;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    havoc OriginalFileSize;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    havoc OriginalValidDataLength;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    havoc OriginalValidDataToDisk;
    call {:si_unique_call 1183} vslice_dummy_var_139 := ExAcquireResourceExclusiveLite(0, 1);
    ResourceAcquired_1 := 1;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    goto L98;

  L98:
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    goto L80;

  L80:
    call {:si_unique_call 1184} FatTruncateFileAllocation(IrpContext_58, Fcb_23, NewAllocationSize);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} FileSizeTruncated != 0;
    FileSizeTruncated := 0;
    call {:si_unique_call 1185} FatSetFileSizeInDirent(IrpContext_58, Fcb_23, 0);
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto L114;

  L114:
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    havoc Tmp_1143;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    assume {:nonnull} Fcb_23 != 0;
    assume Fcb_23 > 0;
    call {:si_unique_call 1186} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_1143, 0, 0, 8, 3, 0);
    goto L61;

  anon48_Then:
    call {:si_unique_call 1187} FatSetFullFileNameInFcb#1(IrpContext_58, Fcb_23);
    goto L114;

  anon47_Then:
    assume {:partition} FileSizeTruncated == 0;
    goto L61;

  anon46_Then:
    goto L80;

  anon54_Then:
    goto L98;

  anon45_Then:
    assume {:partition} sdv_760 == 0;
    Status_14 := -1073741245;
    goto L61;

  anon40_Then:
    goto L80;

  anon39_Then:
    goto L30;

  anon51_Then:
    goto L30;

  anon50_Then:
    goto L30;

  anon38_Then:
    goto L26;

  anon37_Then:
    assume {:partition} sdv_759 == 0;
    Tmp_1133 := -1073741697;
    goto L1;
}



procedure {:origName "FatQueryShortNameInfo"} FatQueryShortNameInfo(actual_IrpContext_59: int, actual_Fcb_24: int, actual_Buffer_8: int, actual_Length_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueryShortNameInfo"} FatQueryShortNameInfo(actual_IrpContext_59: int, actual_Fcb_24: int, actual_Buffer_8: int, actual_Length_3: int)
{
  var {:scalar} ShortName_4: int;
  var {:scalar} BytesToCopy_1: int;
  var {:pointer} ShortNameBuffer_3: int;
  var {:pointer} Tmp_1147: int;
  var {:pointer} Buffer_8: int;
  var {:pointer} Length_3: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;

  anon0:
    call {:si_unique_call 1188} ShortName_4 := __HAVOC_malloc(12);
    call {:si_unique_call 1189} vslice_dummy_var_140 := __HAVOC_malloc(4);
    Buffer_8 := actual_Buffer_8;
    Length_3 := actual_Length_3;
    call {:si_unique_call 1190} ShortNameBuffer_3 := __HAVOC_malloc(48);
    call {:si_unique_call 1191} Tmp_1147 := __HAVOC_malloc(4);
    assume {:nonnull} ShortName_4 != 0;
    assume ShortName_4 > 0;
    assume {:nonnull} ShortName_4 != 0;
    assume ShortName_4 > 0;
    assume {:nonnull} ShortName_4 != 0;
    assume ShortName_4 > 0;
    assume {:nonnull} Length_3 != 0;
    assume Length_3 > 0;
    call {:si_unique_call 1192} vslice_dummy_var_141 := RtlOemStringToCountedUnicodeString(0, 0, 0);
    assume {:nonnull} Length_3 != 0;
    assume Length_3 > 0;
    assume {:nonnull} ShortName_4 != 0;
    assume ShortName_4 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Length_3 != 0;
    assume Length_3 > 0;
    havoc BytesToCopy_1;
    assume {:nonnull} Length_3 != 0;
    assume Length_3 > 0;
    goto L19;

  L19:
    assume {:nonnull} ShortName_4 != 0;
    assume ShortName_4 > 0;
    assume {:nonnull} Buffer_8 != 0;
    assume Buffer_8 > 0;
    havoc Tmp_1147;
    call {:si_unique_call 1193} sdv_RtlCopyMemory(0, 0, BytesToCopy_1);
    assume {:nonnull} Buffer_8 != 0;
    assume Buffer_8 > 0;
    assume {:nonnull} ShortName_4 != 0;
    assume ShortName_4 > 0;
    return;

  anon3_Then:
    assume {:nonnull} ShortName_4 != 0;
    assume ShortName_4 > 0;
    havoc BytesToCopy_1;
    assume {:nonnull} Length_3 != 0;
    assume Length_3 > 0;
    assume {:nonnull} ShortName_4 != 0;
    assume ShortName_4 > 0;
    goto L19;
}



procedure {:origName "FatQueryPositionInfo"} FatQueryPositionInfo(actual_IrpContext_60: int, actual_FileObject_20: int, actual_Buffer_9: int, actual_Length_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueryPositionInfo"} FatQueryPositionInfo(actual_IrpContext_60: int, actual_FileObject_20: int, actual_Buffer_9: int, actual_Length_4: int)
{
  var {:pointer} FileObject_20: int;
  var {:pointer} Buffer_9: int;
  var {:pointer} Length_4: int;
  var vslice_dummy_var_142: int;

  anon0:
    call {:si_unique_call 1194} vslice_dummy_var_142 := __HAVOC_malloc(4);
    FileObject_20 := actual_FileObject_20;
    Buffer_9 := actual_Buffer_9;
    Length_4 := actual_Length_4;
    assume {:nonnull} Buffer_9 != 0;
    assume Buffer_9 > 0;
    assume {:nonnull} FileObject_20 != 0;
    assume FileObject_20 > 0;
    assume {:nonnull} Buffer_9 != 0;
    assume Buffer_9 > 0;
    assume {:nonnull} FileObject_20 != 0;
    assume FileObject_20 > 0;
    assume {:nonnull} Buffer_9 != 0;
    assume Buffer_9 > 0;
    assume {:nonnull} FileObject_20 != 0;
    assume FileObject_20 > 0;
    assume {:nonnull} Buffer_9 != 0;
    assume Buffer_9 > 0;
    assume {:nonnull} FileObject_20 != 0;
    assume FileObject_20 > 0;
    assume {:nonnull} Buffer_9 != 0;
    assume Buffer_9 > 0;
    assume {:nonnull} FileObject_20 != 0;
    assume FileObject_20 > 0;
    assume {:nonnull} Length_4 != 0;
    assume Length_4 > 0;
    return;
}



procedure {:origName "FatDeleteFile"} FatDeleteFile(actual_IrpContext_61: int, actual_TargetDcb_1: int, actual_LfnOffset: int, actual_DirentOffset: int, actual_Dirent_16: int, actual_Lfn_6: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeleteFile"} FatDeleteFile(actual_IrpContext_61: int, actual_TargetDcb_1: int, actual_LfnOffset: int, actual_DirentOffset: int, actual_Dirent_16: int, actual_Lfn_6: int)
{
  var {:pointer} Links_1: int;
  var {:pointer} Fcb_25: int;
  var {:pointer} sdv_768: int;
  var {:pointer} IrpContext_61: int;
  var {:pointer} TargetDcb_1: int;
  var {:scalar} LfnOffset: int;
  var {:scalar} DirentOffset: int;
  var {:pointer} Dirent_16: int;
  var {:pointer} Lfn_6: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_1337: int;

  anon0:
    call {:si_unique_call 1195} vslice_dummy_var_143 := __HAVOC_malloc(4);
    IrpContext_61 := actual_IrpContext_61;
    TargetDcb_1 := actual_TargetDcb_1;
    LfnOffset := actual_LfnOffset;
    DirentOffset := actual_DirentOffset;
    Dirent_16 := actual_Dirent_16;
    Lfn_6 := actual_Lfn_6;
    assume {:nonnull} TargetDcb_1 != 0;
    assume TargetDcb_1 > 0;
    havoc Links_1;
    goto L6;

  L6:
    call {:si_unique_call 1196} Links_1, Fcb_25, sdv_768, vslice_dummy_var_144 := FatDeleteFile_loop_L6(Links_1, Fcb_25, sdv_768, IrpContext_61, DirentOffset, vslice_dummy_var_144);
    goto L6_last;

  L6_last:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1197} sdv_768 := sdv_containing_record(Links_1, 72);
    Fcb_25 := sdv_768;
    assume {:nonnull} Fcb_25 != 0;
    assume Fcb_25 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Fcb_25 != 0;
    assume Fcb_25 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Fcb_25 != 0;
    assume Fcb_25 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1198} FatRemoveNames(IrpContext_61, Fcb_25);
    assume {:nonnull} Fcb_25 != 0;
    assume Fcb_25 > 0;
    call {:si_unique_call 1199} vslice_dummy_var_144 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} Fcb_25 != 0;
    assume Fcb_25 > 0;
    assume {:nonnull} Fcb_25 != 0;
    assume Fcb_25 > 0;
    assume {:nonnull} Fcb_25 != 0;
    assume Fcb_25 > 0;
    assume {:nonnull} Fcb_25 != 0;
    assume Fcb_25 > 0;
    assume {:nonnull} Fcb_25 != 0;
    assume Fcb_25 > 0;
    call {:si_unique_call 1200} ExReleaseResourceLite(0);
    goto L15;

  L15:
    assume {:nonnull} Links_1 != 0;
    assume Links_1 > 0;
    havoc Links_1;
    goto L15_dummy;

  L15_dummy:
    assume false;
    return;

  anon11_Then:
    call {:si_unique_call 1201} KeBugCheckEx(35, 1053056, 0, 0, 0);
    goto L15;

  anon10_Then:
    goto L15;

  anon12_Then:
    goto L15;

  anon9_Then:
    assume {:nonnull} TargetDcb_1 != 0;
    assume TargetDcb_1 > 0;
    havoc vslice_dummy_var_1337;
    call {:si_unique_call 1202} Fcb_25 := FatCreateFcb(IrpContext_61, vslice_dummy_var_1337, TargetDcb_1, LfnOffset, DirentOffset, Dirent_16, Lfn_6, 0, 0);
    assume {:nonnull} Fcb_25 != 0;
    assume Fcb_25 > 0;
    call {:si_unique_call 1203} FatTruncateFileAllocation(IrpContext_61, Fcb_25, 0);
    call {:si_unique_call 1204} FatDeleteDirent#1(IrpContext_61, Fcb_25, 0, 1);
    call {:si_unique_call 1205} FatDeleteFcb_Real(IrpContext_61, Fcb_25);
    return;
}



procedure {:origName "FatFsdSetInformation"} FatFsdSetInformation(actual_VolumeDeviceObject_4: int, actual_Irp_11: int) returns (Tmp_1153: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, queued, markedPending, locked, queuedWithoutMarking, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdSetInformation"} FatFsdSetInformation(actual_VolumeDeviceObject_4: int, actual_Irp_11: int) returns (Tmp_1153: int)
{
  var {:scalar} TopLevel_2: int;
  var {:scalar} Status_16: int;
  var {:scalar} sdv_773: int;
  var {:pointer} IrpContext_62: int;
  var {:pointer} VolumeDeviceObject_4: int;
  var {:pointer} Irp_11: int;

  anon0:
    VolumeDeviceObject_4 := actual_VolumeDeviceObject_4;
    Irp_11 := actual_Irp_11;
    IrpContext_62 := 0;
    call {:si_unique_call 1206} KeEnterCriticalRegion();
    call {:si_unique_call 1207} TopLevel_2 := FatIsIrpTopLevel(Irp_11);
    call {:si_unique_call 1208} sdv_773 := corral_nondet();
    call {:si_unique_call 1209} IrpContext_62 := FatCreateIrpContext(Irp_11, sdv_773);
    call {:si_unique_call 1210} Status_16 := FatCommonSetInformation(IrpContext_62, Irp_11);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} TopLevel_2 != 0;
    goto L34;

  L34:
    call {:si_unique_call 1211} KeLeaveCriticalRegion();
    Tmp_1153 := Status_16;
    call {:si_unique_call 1212} SLIC_FatFsdSetInformation_exit(strConst__li2bpl2, Tmp_1153);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} TopLevel_2 == 0;
    goto L34;
}



procedure {:origName "FatQueryStandardInfo"} FatQueryStandardInfo(actual_IrpContext_63: int, actual_Fcb_26: int, actual_Buffer_10: int, actual_Length_5: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueryStandardInfo"} FatQueryStandardInfo(actual_IrpContext_63: int, actual_Fcb_26: int, actual_Buffer_10: int, actual_Length_5: int)
{
  var {:scalar} Tmp_1155: int;
  var {:pointer} Tmp_1157: int;
  var {:pointer} IrpContext_63: int;
  var {:pointer} Fcb_26: int;
  var {:pointer} Buffer_10: int;
  var {:pointer} Length_5: int;
  var vslice_dummy_var_145: int;

  anon0:
    call {:si_unique_call 1213} vslice_dummy_var_145 := __HAVOC_malloc(4);
    IrpContext_63 := actual_IrpContext_63;
    Fcb_26 := actual_Fcb_26;
    Buffer_10 := actual_Buffer_10;
    Length_5 := actual_Length_5;
    call {:si_unique_call 1214} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    havoc Tmp_1155;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Tmp_1155 == 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    goto L26;

  L26:
    Tmp_1157 := Fcb_26;
    assume {:nonnull} Tmp_1157 != 0;
    assume Tmp_1157 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 1215} FatLookupFileAllocationSize#1(IrpContext_63, Fcb_26);
    goto L12;

  L12:
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    assume {:nonnull} Fcb_26 != 0;
    assume Fcb_26 > 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    goto L18;

  L18:
    assume {:nonnull} Length_5 != 0;
    assume Length_5 > 0;
    return;

  anon7_Then:
    goto L12;

  anon9_Then:
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    goto L18;

  anon8_Then:
    assume {:partition} Tmp_1155 != 0;
    assume {:nonnull} Buffer_10 != 0;
    assume Buffer_10 > 0;
    goto L26;
}



procedure {:origName "FatSetPositionInfo"} FatSetPositionInfo(actual_IrpContext_64: int, actual_Irp_12: int, actual_FileObject_21: int) returns (Tmp_1159: int);
  free ensures {:va_keep} Tmp_1159 == -1073741811 || Tmp_1159 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetPositionInfo"} FatSetPositionInfo(actual_IrpContext_64: int, actual_Irp_12: int, actual_FileObject_21: int) returns (Tmp_1159: int)
{
  var {:pointer} sdv_778: int;
  var {:pointer} Buffer_11: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} Irp_12: int;
  var {:pointer} FileObject_21: int;

  anon0:
    Irp_12 := actual_Irp_12;
    FileObject_21 := actual_FileObject_21;
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    havoc Buffer_11;
    assume {:nonnull} FileObject_21 != 0;
    assume FileObject_21 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 1216} sdv_778 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    assume {:nonnull} sdv_778 != 0;
    assume sdv_778 > 0;
    havoc DeviceObject;
    assume {:nonnull} Buffer_11 != 0;
    assume Buffer_11 > 0;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1159 := -1073741811;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto L6;

  L6:
    assume {:nonnull} Buffer_11 != 0;
    assume Buffer_11 > 0;
    assume {:nonnull} FileObject_21 != 0;
    assume FileObject_21 > 0;
    assume {:nonnull} Buffer_11 != 0;
    assume Buffer_11 > 0;
    assume {:nonnull} FileObject_21 != 0;
    assume FileObject_21 > 0;
    assume {:nonnull} Buffer_11 != 0;
    assume Buffer_11 > 0;
    assume {:nonnull} FileObject_21 != 0;
    assume FileObject_21 > 0;
    assume {:nonnull} Buffer_11 != 0;
    assume Buffer_11 > 0;
    assume {:nonnull} FileObject_21 != 0;
    assume FileObject_21 > 0;
    assume {:nonnull} Buffer_11 != 0;
    assume Buffer_11 > 0;
    assume {:nonnull} FileObject_21 != 0;
    assume FileObject_21 > 0;
    Tmp_1159 := 0;
    goto L1;

  anon5_Then:
    goto L6;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_146: int;

  anon0:
    call {:si_unique_call 1217} vslice_dummy_var_146 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatQueryEaInfo"} FatQueryEaInfo(actual_IrpContext_65: int, actual_Fcb_27: int, actual_Buffer_12: int, actual_Length_6: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueryEaInfo"} FatQueryEaInfo(actual_IrpContext_65: int, actual_Fcb_27: int, actual_Buffer_12: int, actual_Length_6: int)
{
  var {:pointer} Tmp_1163: int;
  var {:pointer} Dirent_17: int;
  var {:pointer} Bcb_5: int;
  var {:pointer} Tmp_1166: int;
  var {:pointer} IrpContext_65: int;
  var {:pointer} Fcb_27: int;
  var {:pointer} Buffer_12: int;
  var {:pointer} Length_6: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_1338: int;

  anon0:
    call {:si_unique_call 1218} Dirent_17 := __HAVOC_malloc(4);
    call {:si_unique_call 1219} Bcb_5 := __HAVOC_malloc(4);
    call {:si_unique_call 1220} vslice_dummy_var_147 := __HAVOC_malloc(4);
    IrpContext_65 := actual_IrpContext_65;
    Fcb_27 := actual_Fcb_27;
    Buffer_12 := actual_Buffer_12;
    Length_6 := actual_Length_6;
    assume {:nonnull} Bcb_5 != 0;
    assume Bcb_5 > 0;
    call {:si_unique_call 1221} sdv_RtlZeroMemory(0, 4);
    Tmp_1166 := Fcb_27;
    assume {:nonnull} Tmp_1166 != 0;
    assume Tmp_1166 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Fcb_27 != 0;
    assume Fcb_27 > 0;
    havoc Tmp_1163;
    assume {:nonnull} Tmp_1163 != 0;
    assume Tmp_1163 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1222} FatGetDirentFromFcbOrDcb(IrpContext_65, Fcb_27, Dirent_17, Bcb_5);
    assume {:nonnull} Dirent_17 != 0;
    assume Dirent_17 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_17] != 0;
    assume {:nonnull} Buffer_12 != 0;
    assume Buffer_12 > 0;
    assume {:nonnull} Dirent_17 != 0;
    assume Dirent_17 > 0;
    assume {:nonnull} Fcb_27 != 0;
    assume Fcb_27 > 0;
    havoc vslice_dummy_var_1338;
    call {:si_unique_call 1223} FatGetEaLength(IrpContext_65, vslice_dummy_var_1338, Mem_T.P_PACKED_DIRENT[Dirent_17], EaSize__FILE_EA_INFORMATION(Buffer_12));
    goto L14;

  L14:
    assume {:nonnull} Length_6 != 0;
    assume Length_6 > 0;
    assume {:nonnull} Bcb_5 != 0;
    assume Bcb_5 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Bcb_5 != 0;
    assume Bcb_5 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    goto L1;

  anon9_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_17] == 0;
    goto L14;

  anon11_Then:
    goto L14;

  anon10_Then:
    goto L14;
}



procedure {:origName "FatQueryBasicInfo"} FatQueryBasicInfo(actual_IrpContext_66: int, actual_Fcb_28: int, actual_FileObject_22: int, actual_Buffer_13: int, actual_Length_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueryBasicInfo"} FatQueryBasicInfo(actual_IrpContext_66: int, actual_Fcb_28: int, actual_FileObject_22: int, actual_Buffer_13: int, actual_Length_7: int)
{
  var {:pointer} Fcb_28: int;
  var {:pointer} Buffer_13: int;
  var {:pointer} Length_7: int;
  var vslice_dummy_var_148: int;

  anon0:
    call {:si_unique_call 1224} vslice_dummy_var_148 := __HAVOC_malloc(4);
    Fcb_28 := actual_Fcb_28;
    Buffer_13 := actual_Buffer_13;
    Length_7 := actual_Length_7;
    call {:si_unique_call 1225} sdv_RtlZeroMemory(0, 40);
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    goto L13;

  L13:
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    goto L15;

  L15:
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L18;

  L18:
    assume {:nonnull} Length_7 != 0;
    assume Length_7 > 0;
    return;

  anon8_Then:
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    goto L18;

  anon9_Then:
    goto L15;

  anon7_Then:
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    assume {:nonnull} Buffer_13 != 0;
    assume Buffer_13 > 0;
    assume {:nonnull} Fcb_28 != 0;
    assume Fcb_28 > 0;
    goto L13;
}



procedure {:origName "FatQueryInternalInfo"} FatQueryInternalInfo(actual_IrpContext_67: int, actual_Fcb_29: int, actual_Buffer_14: int, actual_Length_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueryInternalInfo"} FatQueryInternalInfo(actual_IrpContext_67: int, actual_Fcb_29: int, actual_Buffer_14: int, actual_Length_8: int)
{
  var {:pointer} Tmp_1172: int;
  var {:pointer} Tmp_1174: int;
  var {:pointer} Tmp_1175: int;
  var {:pointer} Tmp_1176: int;
  var {:scalar} Tmp_1178: int;
  var {:scalar} Tmp_1179: int;
  var {:pointer} Tmp_1180: int;
  var {:pointer} Tmp_1181: int;
  var {:pointer} Tmp_1182: int;
  var {:pointer} Fcb_29: int;
  var {:pointer} Buffer_14: int;
  var {:pointer} Length_8: int;
  var vslice_dummy_var_149: int;

  anon0:
    call {:si_unique_call 1226} vslice_dummy_var_149 := __HAVOC_malloc(4);
    Fcb_29 := actual_Fcb_29;
    Buffer_14 := actual_Buffer_14;
    Length_8 := actual_Length_8;
    assume {:nonnull} Fcb_29 != 0;
    assume Fcb_29 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Fcb_29 != 0;
    assume Fcb_29 > 0;
    havoc Tmp_1182;
    assume {:nonnull} Tmp_1182 != 0;
    assume Tmp_1182 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L7;

  L7:
    assume {:nonnull} Fcb_29 != 0;
    assume Fcb_29 > 0;
    havoc Tmp_1172;
    assume {:nonnull} Tmp_1172 != 0;
    assume Tmp_1172 > 0;
    assume {:nonnull} Fcb_29 != 0;
    assume Fcb_29 > 0;
    assume {:nonnull} Fcb_29 != 0;
    assume Fcb_29 > 0;
    havoc Tmp_1175;
    assume {:nonnull} Tmp_1175 != 0;
    assume Tmp_1175 > 0;
    call {:si_unique_call 1227} Tmp_1178 := corral_nondet();
    goto L8;

  L8:
    assume {:nonnull} Fcb_29 != 0;
    assume Fcb_29 > 0;
    havoc Tmp_1179;
    goto L9;

  L9:
    assume {:nonnull} Buffer_14 != 0;
    assume Buffer_14 > 0;
    assume {:nonnull} Length_8 != 0;
    assume Length_8 > 0;
    return;

  anon8_Then:
    assume {:nonnull} Fcb_29 != 0;
    assume Fcb_29 > 0;
    havoc Tmp_1176;
    assume {:nonnull} Tmp_1176 != 0;
    assume Tmp_1176 > 0;
    havoc Tmp_1181;
    assume {:nonnull} Tmp_1181 != 0;
    assume Tmp_1181 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Fcb_29 != 0;
    assume Fcb_29 > 0;
    havoc Tmp_1174;
    assume {:nonnull} Tmp_1174 != 0;
    assume Tmp_1174 > 0;
    havoc Tmp_1180;
    assume {:nonnull} Tmp_1180 != 0;
    assume Tmp_1180 > 0;
    havoc Tmp_1178;
    goto L8;

  anon9_Then:
    goto L7;

  anon7_Then:
    Tmp_1179 := 0;
    goto L9;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_150: int;

  anon0:
    call {:si_unique_call 1228} vslice_dummy_var_150 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeBugCheckEx"} {:osmodel} KeBugCheckEx(actual_BugCheckCode: int, actual_BugCheckParameter1: int, actual_BugCheckParameter2: int, actual_BugCheckParameter3: int, actual_BugCheckParameter4: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeBugCheckEx"} {:osmodel} KeBugCheckEx(actual_BugCheckCode: int, actual_BugCheckParameter1: int, actual_BugCheckParameter2: int, actual_BugCheckParameter3: int, actual_BugCheckParameter4: int)
{
  var vslice_dummy_var_151: int;

  anon0:
    call {:si_unique_call 1229} vslice_dummy_var_151 := __HAVOC_malloc(4);
    call {:si_unique_call 1230} SdvExit#1();
    return;
}



procedure {:origName "IoFreeWorkItem"} {:osmodel} IoFreeWorkItem(actual_IoWorkItem: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoFreeWorkItem"} {:osmodel} IoFreeWorkItem(actual_IoWorkItem: int)
{
  var vslice_dummy_var_152: int;

  anon0:
    call {:si_unique_call 1231} vslice_dummy_var_152 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseResourceLite"} {:osmodel} ExReleaseResourceLite(actual_Resource_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExReleaseResourceLite"} {:osmodel} ExReleaseResourceLite(actual_Resource_3: int)
{
  var vslice_dummy_var_153: int;

  anon0:
    call {:si_unique_call 1232} vslice_dummy_var_153 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_154: int;

  anon0:
    call {:si_unique_call 1233} vslice_dummy_var_154 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_1193: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_1193: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    call {:si_unique_call 1234} SLIC_sdv_containing_record_entry(strConst__li2bpl2);
    record := Address;
    Tmp_1193 := record;
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int);
  modifies alloc, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} locked == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_155: int;

  anon0:
    call {:si_unique_call 1235} vslice_dummy_var_155 := __HAVOC_malloc(4);
    p := actual_p;
    call {:si_unique_call 1236} SLIC_sdv_KeAcquireSpinLock_entry(0);
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "ExAcquireSharedStarveExclusive"} {:osmodel} ExAcquireSharedStarveExclusive(actual_Resource_4: int, actual_Wait_2: int) returns (Tmp_1197: int);
  free ensures {:va_keep} Tmp_1197 == 0 || Tmp_1197 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExAcquireSharedStarveExclusive"} {:osmodel} ExAcquireSharedStarveExclusive(actual_Resource_4: int, actual_Wait_2: int) returns (Tmp_1197: int)
{
  var {:scalar} Wait_2: int;

  anon0:
    Wait_2 := actual_Wait_2;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Wait_2 == 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1197 := 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1197 := 1;
    goto L1;

  anon5_Then:
    assume {:partition} Wait_2 != 0;
    Tmp_1197 := 1;
    goto L1;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_1199: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1199 == 1 || Tmp_1199 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_1199: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 1237} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1199 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1199 := 0;
    goto L1;
}



procedure {:origName "IoRemoveShareAccess"} {:osmodel} IoRemoveShareAccess(actual_FileObject_23: int, actual_ShareAccess_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoRemoveShareAccess"} {:osmodel} IoRemoveShareAccess(actual_FileObject_23: int, actual_ShareAccess_10: int)
{
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 1238} vslice_dummy_var_156 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExInitializeNPagedLookasideList"} {:osmodel} ExInitializeNPagedLookasideList(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExInitializeNPagedLookasideList"} {:osmodel} ExInitializeNPagedLookasideList(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag: int, actual_Depth: int)
{
  var vslice_dummy_var_157: int;

  anon0:
    call {:si_unique_call 1239} vslice_dummy_var_157 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init34"} {:osmodel} _sdv_init34();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init34"} {:osmodel} _sdv_init34()
{
  var vslice_dummy_var_158: int;

  anon0:
    call {:si_unique_call 1240} vslice_dummy_var_158 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_Io_Removelock_release_wait_returned == 0;
    assume sdv_isr_routine == li2bplFunctionConstant835;
    assume sdv_ke_dpc == li2bplFunctionConstant837;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant840;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_1207: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_1207: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_1207 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_1207 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_1207 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock: int) returns (Tmp_1209: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock: int) returns (Tmp_1209: int)
{
  var {:pointer} sdv_782: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1209 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 1241} sdv_782 := __HAVOC_malloc(1);
    Tmp_1209 := sdv_782;
    goto L1;
}



procedure {:origName "KeLeaveCriticalRegion"} {:osmodel} KeLeaveCriticalRegion();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeLeaveCriticalRegion"} {:osmodel} KeLeaveCriticalRegion()
{
  var vslice_dummy_var_159: int;

  anon0:
    call {:si_unique_call 1242} vslice_dummy_var_159 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CcWaitForCurrentLazyWriterActivity"} {:osmodel} CcWaitForCurrentLazyWriterActivity() returns (Tmp_1213: int);
  free ensures {:va_keep} Tmp_1213 == -1073741670 || Tmp_1213 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "CcWaitForCurrentLazyWriterActivity"} {:osmodel} CcWaitForCurrentLazyWriterActivity() returns (Tmp_1213: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1213 := -1073741670;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1213 := 0;
    goto L1;
}



procedure {:origName "SeSinglePrivilegeCheck"} {:osmodel} SeSinglePrivilegeCheck(actual_structPtr888PrivilegeValue: int, actual_PreviousMode: int) returns (Tmp_1215: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1215 == 0 || Tmp_1215 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SeSinglePrivilegeCheck"} {:osmodel} SeSinglePrivilegeCheck(actual_structPtr888PrivilegeValue: int, actual_PreviousMode: int) returns (Tmp_1215: int)
{
  var {:scalar} PrivilegeValue: int;
  var {:pointer} structPtr888PrivilegeValue: int;

  anon0:
    call {:si_unique_call 1243} PrivilegeValue := __HAVOC_malloc(8);
    structPtr888PrivilegeValue := actual_structPtr888PrivilegeValue;
    assume {:nonnull} PrivilegeValue != 0;
    assume PrivilegeValue > 0;
    assume {:nonnull} structPtr888PrivilegeValue != 0;
    assume structPtr888PrivilegeValue > 0;
    assume {:nonnull} PrivilegeValue != 0;
    assume PrivilegeValue > 0;
    assume {:nonnull} structPtr888PrivilegeValue != 0;
    assume structPtr888PrivilegeValue > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1215 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1215 := 1;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_1: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_160: int;

  anon0:
    call {:si_unique_call 1244} vslice_dummy_var_160 := __HAVOC_malloc(4);
    Dpc_1 := actual_Dpc_1;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_1 != 0;
    assume Dpc_1 > 0;
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_1: int) returns (Tmp_1219: int);
  free ensures {:va_keep} Tmp_1219 == -1073741824 || Tmp_1219 == -1073741771 || Tmp_1219 == -1073741670 || Tmp_1219 == -1073741823 || Tmp_1219 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_1: int) returns (Tmp_1219: int)
{
  var {:pointer} DeviceObject_1: int;

  anon0:
    DeviceObject_1 := actual_DeviceObject_1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    Tmp_1219 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    Tmp_1219 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    Tmp_1219 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    Tmp_1219 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    goto L21;

  L21:
    Tmp_1219 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    goto L21;
}



procedure {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem_1: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem_1: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context_2: int)
{
  var vslice_dummy_var_161: int;

  anon0:
    call {:si_unique_call 1245} vslice_dummy_var_161 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlUnicodeStringToCountedOemString"} {:osmodel} RtlUnicodeStringToCountedOemString(actual_DestinationString: int, actual_SourceString: int, actual_AllocateDestinationString: int) returns (Tmp_1223: int);
  free ensures {:va_keep} Tmp_1223 == -1073741675 || Tmp_1223 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlUnicodeStringToCountedOemString"} {:osmodel} RtlUnicodeStringToCountedOemString(actual_DestinationString: int, actual_SourceString: int, actual_AllocateDestinationString: int) returns (Tmp_1223: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1223 := -1073741675;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1223 := 0;
    goto L1;
}



procedure {:origName "IoMakeAssociatedIrp"} {:osmodel} IoMakeAssociatedIrp(actual_pirp_2: int, actual_StackSize: int) returns (Tmp_1225: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoMakeAssociatedIrp"} {:osmodel} IoMakeAssociatedIrp(actual_pirp_2: int, actual_StackSize: int) returns (Tmp_1225: int)
{
  var {:pointer} Tmp_1227: int;
  var {:pointer} Tmp_1228: int;
  var {:pointer} pirp_2: int;

  anon0:
    pirp_2 := actual_pirp_2;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_IoMakeAssociatedIrp_irp != 0;
    assume sdv_IoMakeAssociatedIrp_irp > 0;
    havoc Tmp_1227;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc Tmp_1228;
    assume {:nonnull} Tmp_1227 != 0;
    assume Tmp_1227 > 0;
    assume {:nonnull} Tmp_1228 != 0;
    assume Tmp_1228 > 0;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    assume {:nonnull} sdv_IoMakeAssociatedIrp_irp != 0;
    assume sdv_IoMakeAssociatedIrp_irp > 0;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    assume {:nonnull} sdv_IoMakeAssociatedIrp_irp != 0;
    assume sdv_IoMakeAssociatedIrp_irp > 0;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    assume {:nonnull} sdv_IoMakeAssociatedIrp_irp != 0;
    assume sdv_IoMakeAssociatedIrp_irp > 0;
    Tmp_1225 := sdv_IoMakeAssociatedIrp_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1225 := 0;
    goto L1;
}



procedure {:origName "SeReleaseSubjectContext"} {:osmodel} SeReleaseSubjectContext(actual_SubjectContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SeReleaseSubjectContext"} {:osmodel} SeReleaseSubjectContext(actual_SubjectContext: int)
{
  var vslice_dummy_var_162: int;

  anon0:
    call {:si_unique_call 1246} vslice_dummy_var_162 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length_9: int)
{
  var vslice_dummy_var_163: int;

  anon0:
    call {:si_unique_call 1247} vslice_dummy_var_163 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExAcquireResourceExclusiveLite"} {:osmodel} ExAcquireResourceExclusiveLite(actual_Resource_5: int, actual_Wait_3: int) returns (Tmp_1235: int);
  free ensures {:va_keep} Tmp_1235 == 0 || Tmp_1235 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExAcquireResourceExclusiveLite"} {:osmodel} ExAcquireResourceExclusiveLite(actual_Resource_5: int, actual_Wait_3: int) returns (Tmp_1235: int)
{
  var {:scalar} Wait_3: int;

  anon0:
    Wait_3 := actual_Wait_3;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Wait_3 == 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1235 := 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1235 := 1;
    goto L1;

  anon5_Then:
    assume {:partition} Wait_3 != 0;
    Tmp_1235 := 1;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int)
{
  var vslice_dummy_var_164: int;

  anon0:
    call {:si_unique_call 1248} vslice_dummy_var_164 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExAcquireFastMutexUnsafe"} {:osmodel} ExAcquireFastMutexUnsafe(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExAcquireFastMutexUnsafe"} {:osmodel} ExAcquireFastMutexUnsafe(actual_FastMutex_1: int)
{
  var vslice_dummy_var_165: int;

  anon0:
    call {:si_unique_call 1249} vslice_dummy_var_165 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int)
{
  var {:pointer} pirp_4: int;
  var vslice_dummy_var_166: int;

  anon0:
    call {:si_unique_call 1250} vslice_dummy_var_166 := __HAVOC_malloc(4);
    pirp_4 := actual_pirp_4;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;
}



procedure {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_2: int) returns (Tmp_1243: int);
  free ensures {:va_keep} Tmp_1243 == 1 || Tmp_1243 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_2: int) returns (Tmp_1243: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1243 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1243 := 0;
    goto L1;
}



procedure {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_1245: int);
  free ensures {:va_keep} Tmp_1245 == 0 || Tmp_1245 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_1245: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1245 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1245 := -1073741823;
    goto L1;
}



procedure {:origName "FsRtlIsNameInExpression"} {:osmodel} FsRtlIsNameInExpression(actual_Expression_1: int, actual_Name_2: int, actual_IgnoreCase: int, actual_UpcaseTable: int) returns (Tmp_1247: int);
  free ensures {:va_keep} Tmp_1247 == 0 || Tmp_1247 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlIsNameInExpression"} {:osmodel} FsRtlIsNameInExpression(actual_Expression_1: int, actual_Name_2: int, actual_IgnoreCase: int, actual_UpcaseTable: int) returns (Tmp_1247: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1247 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1247 := 1;
    goto L1;
}



procedure {:origName "ExAcquireResourceSharedLite"} {:osmodel} ExAcquireResourceSharedLite(actual_Resource_6: int, actual_Wait_4: int) returns (Tmp_1249: int);
  free ensures {:va_keep} Tmp_1249 == 0 || Tmp_1249 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExAcquireResourceSharedLite"} {:osmodel} ExAcquireResourceSharedLite(actual_Resource_6: int, actual_Wait_4: int) returns (Tmp_1249: int)
{
  var {:scalar} Wait_4: int;

  anon0:
    Wait_4 := actual_Wait_4;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Wait_4 == 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1249 := 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1249 := 1;
    goto L1;

  anon5_Then:
    assume {:partition} Wait_4 != 0;
    Tmp_1249 := 1;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_1: int) returns (Tmp_1251: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_1: int) returns (Tmp_1251: int)
{
  var {:pointer} sdv_795: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1251 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 1251} sdv_795 := __HAVOC_malloc(1);
    Tmp_1251 := sdv_795;
    goto L1;
}



procedure {:origName "FsRtlAreNamesEqual"} {:osmodel} FsRtlAreNamesEqual(actual_ConstantNameA: int, actual_ConstantNameB: int, actual_IgnoreCase_1: int, actual_UpcaseTable_1: int) returns (Tmp_1253: int);
  free ensures {:va_keep} Tmp_1253 == 0 || Tmp_1253 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlAreNamesEqual"} {:osmodel} FsRtlAreNamesEqual(actual_ConstantNameA: int, actual_ConstantNameB: int, actual_IgnoreCase_1: int, actual_UpcaseTable_1: int) returns (Tmp_1253: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1253 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1253 := 1;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, SLAM_guard_S_0, Mem_T.P_PACKED_DIRENT, stack_location, queued, yogi_error, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} u: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;

  anon0:
    call {:si_unique_call 1252} u := __HAVOC_malloc(12);
    call {:si_unique_call 1253} vslice_dummy_var_167 := __HAVOC_malloc(4);
    SLAM_guard_S_0 := sdv_irp;
    assume SLAM_guard_S_0 != 0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    assume {:nonnull} KdDebuggerEnabled != 0;
    assume KdDebuggerEnabled > 0;
    assume {:nonnull} KdDebuggerNotPresent != 0;
    assume KdDebuggerNotPresent > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 1254} sdv_RunUnload(sdv_driver_object);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon14_Then:
    goto L1;

  anon15_Then:
    call {:si_unique_call 1255} sdv_stub_driver_init();
    call {:si_unique_call 1256} vslice_dummy_var_168 := sdv_RunStartDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    call {:si_unique_call 1257} vslice_dummy_var_170 := DriverEntry(sdv_driver_object, u);
    goto L1;

  anon13_Then:
    call {:si_unique_call 1258} sdv_stub_driver_init();
    call {:si_unique_call 1259} vslice_dummy_var_169 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoGetFileObjectGenericMapping"} {:osmodel} IoGetFileObjectGenericMapping() returns (Tmp_1257: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoGetFileObjectGenericMapping"} {:osmodel} IoGetFileObjectGenericMapping() returns (Tmp_1257: int)
{

  anon0:
    Tmp_1257 := sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    return;
}



procedure {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_1259: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_1259: int)
{
  var {:pointer} sdv_802: int;
  var {:pointer} p_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1260} sdv_802 := __HAVOC_malloc(1);
    p_1 := sdv_802;
    Tmp_1259 := p_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1259 := 0;
    goto L1;
}



procedure {:origName "KeEnterCriticalRegion"} {:osmodel} KeEnterCriticalRegion();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeEnterCriticalRegion"} {:osmodel} KeEnterCriticalRegion()
{
  var vslice_dummy_var_171: int;

  anon0:
    call {:si_unique_call 1261} vslice_dummy_var_171 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl: int) returns (Tmp_1263: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl: int) returns (Tmp_1263: int)
{
  var {:pointer} x_2: int;
  var {:pointer} sdv_803: int;

  anon0:
    call {:si_unique_call 1262} sdv_803 := __HAVOC_malloc(1);
    x_2 := sdv_803;
    Tmp_1263 := x_2;
    return;
}



procedure {:origName "FsRtlFastUnlockAll"} {:osmodel} FsRtlFastUnlockAll(actual_FileLock: int, actual_FileObject_24: int, actual_ProcessId: int, actual_Context_3: int) returns (Tmp_1265: int);
  free ensures {:va_keep} Tmp_1265 == 0 || Tmp_1265 == -1073741698;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlFastUnlockAll"} {:osmodel} FsRtlFastUnlockAll(actual_FileLock: int, actual_FileObject_24: int, actual_ProcessId: int, actual_Context_3: int) returns (Tmp_1265: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1265 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1265 := -1073741698;
    goto L1;
}



procedure {:origName "IoRaiseInformationalHardError"} {:osmodel} IoRaiseInformationalHardError(actual_ErrorStatus: int, actual_String_2: int, actual_Thread: int) returns (Tmp_1267: int);
  free ensures {:va_keep} Tmp_1267 == 0 || Tmp_1267 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoRaiseInformationalHardError"} {:osmodel} IoRaiseInformationalHardError(actual_ErrorStatus: int, actual_String_2: int, actual_Thread: int) returns (Tmp_1267: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1267 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1267 := 1;
    goto L1;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_1269: int);
  free ensures {:va_keep} Tmp_1269 == 1 || Tmp_1269 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_1269: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1269 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1269 := 0;
    goto L1;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_4: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_4: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_5: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_4: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_172: int;

  anon0:
    call {:si_unique_call 1263} vslice_dummy_var_172 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    CompletionRoutine := actual_CompletionRoutine;
    Context_4 := actual_Context_4;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 1264} irpSp := sdv_IoGetNextIrpStackLocation(pirp_5);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    return;
}



procedure {:origName "FsRtlBalanceReads"} {:osmodel} FsRtlBalanceReads(actual_TargetDevice: int) returns (Tmp_1273: int);
  free ensures {:va_keep} Tmp_1273 == 0 || Tmp_1273 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlBalanceReads"} {:osmodel} FsRtlBalanceReads(actual_TargetDevice: int) returns (Tmp_1273: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1273 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1273 := -1073741823;
    goto L1;
}



procedure {:origName "IoSetShareAccess"} {:osmodel} IoSetShareAccess(actual_DesiredAccess_10: int, actual_DesiredShareAccess: int, actual_FileObject_25: int, actual_ShareAccess_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoSetShareAccess"} {:osmodel} IoSetShareAccess(actual_DesiredAccess_10: int, actual_DesiredShareAccess: int, actual_FileObject_25: int, actual_ShareAccess_11: int)
{
  var vslice_dummy_var_173: int;

  anon0:
    call {:si_unique_call 1265} vslice_dummy_var_173 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SeLockSubjectContext"} {:osmodel} SeLockSubjectContext(actual_SubjectContext_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SeLockSubjectContext"} {:osmodel} SeLockSubjectContext(actual_SubjectContext_1: int)
{
  var vslice_dummy_var_174: int;

  anon0:
    call {:si_unique_call 1266} vslice_dummy_var_174 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlUpcaseUnicodeStringToCountedOemString"} {:osmodel} RtlUpcaseUnicodeStringToCountedOemString(actual_DestinationString_1: int, actual_SourceString_1: int, actual_AllocateDestinationString_1: int) returns (Tmp_1279: int);
  free ensures {:va_keep} Tmp_1279 == -1073741675 || Tmp_1279 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlUpcaseUnicodeStringToCountedOemString"} {:osmodel} RtlUpcaseUnicodeStringToCountedOemString(actual_DestinationString_1: int, actual_SourceString_1: int, actual_AllocateDestinationString_1: int) returns (Tmp_1279: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1279 := -1073741675;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1279 := 0;
    goto L1;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_1281: int);
  free ensures {:va_keep} Tmp_1281 == 1 || Tmp_1281 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_1281: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1281 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1281 := 0;
    goto L1;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_1283: int);
  free ensures {:va_keep} Tmp_1283 == 258 || Tmp_1283 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_1283: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1283 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1283 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_1283 := 0;
    goto L1;
}



procedure {:origName "FsRtlDissectName"} {:osmodel} FsRtlDissectName(actual_structPtr888Path: int, actual_FirstName: int, actual_RemainingName: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlDissectName"} {:osmodel} FsRtlDissectName(actual_structPtr888Path: int, actual_FirstName: int, actual_RemainingName: int)
{
  var {:scalar} Path: int;
  var {:pointer} structPtr888Path: int;
  var vslice_dummy_var_175: int;

  anon0:
    call {:si_unique_call 1267} Path := __HAVOC_malloc(12);
    call {:si_unique_call 1268} vslice_dummy_var_175 := __HAVOC_malloc(4);
    structPtr888Path := actual_structPtr888Path;
    assume {:nonnull} Path != 0;
    assume Path > 0;
    assume {:nonnull} structPtr888Path != 0;
    assume structPtr888Path > 0;
    assume {:nonnull} Path != 0;
    assume Path > 0;
    assume {:nonnull} structPtr888Path != 0;
    assume structPtr888Path > 0;
    assume {:nonnull} Path != 0;
    assume Path > 0;
    assume {:nonnull} structPtr888Path != 0;
    assume structPtr888Path > 0;
    return;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_2: int)
{
  var vslice_dummy_var_176: int;

  anon0:
    call {:si_unique_call 1269} vslice_dummy_var_176 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait_5: int) returns (Tmp_1289: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait_5: int) returns (Tmp_1289: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_1289 := OldState;
    return;
}



procedure {:origName "IoAcquireVpbSpinLock"} {:osmodel} IoAcquireVpbSpinLock(actual_Irql: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoAcquireVpbSpinLock"} {:osmodel} IoAcquireVpbSpinLock(actual_Irql: int)
{
  var {:pointer} Irql: int;
  var vslice_dummy_var_177: int;

  anon0:
    call {:si_unique_call 1270} vslice_dummy_var_177 := __HAVOC_malloc(4);
    Irql := actual_Irql;
    assume {:nonnull} Irql != 0;
    assume Irql > 0;
    return;
}



procedure {:origName "RtlOemStringToCountedUnicodeString"} {:osmodel} RtlOemStringToCountedUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString_2: int) returns (Tmp_1295: int);
  free ensures {:va_keep} Tmp_1295 == -1073741675 || Tmp_1295 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlOemStringToCountedUnicodeString"} {:osmodel} RtlOemStringToCountedUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString_2: int) returns (Tmp_1295: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1295 := -1073741675;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1295 := 0;
    goto L1;
}



procedure {:origName "ObReferenceObjectByHandle"} {:osmodel} ObReferenceObjectByHandle(actual_Handle: int, actual_DesiredAccess_11: int, actual_ObjectType: int, actual_AccessMode: int, actual_Object_1: int, actual_HandleInformation: int) returns (Tmp_1297: int);
  free ensures {:va_keep} Tmp_1297 == 0 || Tmp_1297 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ObReferenceObjectByHandle"} {:osmodel} ObReferenceObjectByHandle(actual_Handle: int, actual_DesiredAccess_11: int, actual_ObjectType: int, actual_AccessMode: int, actual_Object_1: int, actual_HandleInformation: int) returns (Tmp_1297: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1297 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1297 := -1073741823;
    goto L1;
}



procedure {:origName "MmProbeAndLockPages"} {:osmodel} MmProbeAndLockPages(actual_MemoryDescriptorList: int, actual_AccessMode_1: int, actual_Operation: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "MmProbeAndLockPages"} {:osmodel} MmProbeAndLockPages(actual_MemoryDescriptorList: int, actual_AccessMode_1: int, actual_Operation: int)
{
  var vslice_dummy_var_178: int;

  anon0:
    call {:si_unique_call 1271} vslice_dummy_var_178 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FsRtlNotifyFullChangeDirectory"} {:osmodel} FsRtlNotifyFullChangeDirectory(actual_NotifySync: int, actual_NotifyList: int, actual_FsContext: int, actual_FullDirectoryName: int, actual_WatchTree: int, actual_IgnoreBuffer: int, actual_CompletionFilter: int, actual_NotifyIrp: int, actual_TraverseCallback: int, actual_SubjectContext_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlNotifyFullChangeDirectory"} {:osmodel} FsRtlNotifyFullChangeDirectory(actual_NotifySync: int, actual_NotifyList: int, actual_FsContext: int, actual_FullDirectoryName: int, actual_WatchTree: int, actual_IgnoreBuffer: int, actual_CompletionFilter: int, actual_NotifyIrp: int, actual_TraverseCallback: int, actual_SubjectContext_2: int)
{
  var vslice_dummy_var_179: int;

  anon0:
    call {:si_unique_call 1272} vslice_dummy_var_179 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_1303: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_1303: int)
{
  var {:pointer} pirp_6: int;

  anon0:
    pirp_6 := actual_pirp_6;
    assume {:nonnull} pirp_6 != 0;
    assume pirp_6 > 0;
    havoc Tmp_1303;
    return;
}



procedure {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_2: int, actual_n: int, actual_a: int, actual_r: int, actual_s_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_2: int, actual_n: int, actual_a: int, actual_r: int, actual_s_1: int)
{
  var vslice_dummy_var_180: int;

  anon0:
    call {:si_unique_call 1273} vslice_dummy_var_180 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExDeleteResourceLite"} {:osmodel} ExDeleteResourceLite(actual_Resource_7: int) returns (Tmp_1307: int);
  free ensures {:va_keep} Tmp_1307 == 0 || Tmp_1307 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExDeleteResourceLite"} {:osmodel} ExDeleteResourceLite(actual_Resource_7: int) returns (Tmp_1307: int)
{
  var {:scalar} x_5: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} x_5 != 0;
    Tmp_1307 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} x_5 == 0;
    Tmp_1307 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoSetNextIrpStackLocation"} {:osmodel} sdv_IoSetNextIrpStackLocation(actual_Irp_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoSetNextIrpStackLocation"} {:osmodel} sdv_IoSetNextIrpStackLocation(actual_Irp_13: int)
{
  var vslice_dummy_var_181: int;

  anon0:
    call {:si_unique_call 1274} vslice_dummy_var_181 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "SeAccessCheck"} {:osmodel} SeAccessCheck(actual_SecurityDescriptor: int, actual_SubjectSecurityContext: int, actual_SubjectContextLocked: int, actual_DesiredAccess_12: int, actual_PreviouslyGrantedAccess: int, actual_Privileges: int, actual_GenericMapping: int, actual_AccessMode_2: int, actual_GrantedAccess: int, actual_AccessStatus: int) returns (Tmp_1311: int);
  free ensures {:va_keep} Tmp_1311 == 0 || Tmp_1311 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SeAccessCheck"} {:osmodel} SeAccessCheck(actual_SecurityDescriptor: int, actual_SubjectSecurityContext: int, actual_SubjectContextLocked: int, actual_DesiredAccess_12: int, actual_PreviouslyGrantedAccess: int, actual_Privileges: int, actual_GenericMapping: int, actual_AccessMode_2: int, actual_GrantedAccess: int, actual_AccessStatus: int) returns (Tmp_1311: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1311 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1311 := 1;
    goto L1;
}



procedure {:origName "FsRtlUninitializeFileLock"} {:osmodel} FsRtlUninitializeFileLock(actual_FileLock_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlUninitializeFileLock"} {:osmodel} FsRtlUninitializeFileLock(actual_FileLock_1: int)
{
  var vslice_dummy_var_182: int;

  anon0:
    call {:si_unique_call 1275} vslice_dummy_var_182 := __HAVOC_malloc(4);
    return;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_1315: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} queued == 1 || queued == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} stack_location == 1 || stack_location == 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_1315: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_1316: int;
  var {:scalar} Tmp_1317: int;
  var boogieTmp: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var FatNonPagedFcbLookasideList__Loc: int;
  var FatJanOne1980__Loc: int;
  var FatIrpContextLookasideList__Loc: int;
  var FatMaxLarge__Loc: int;
  var FatEResourceLookasideList__Loc: int;
  var FatData__Loc: int;
  var FatCloseContextSList__Loc: int;
  var FatLargeZero__Loc: int;
  var FatSecurityPrivilege__Loc: int;
  var FatTimeJanOne1980__Loc: int;
  var FatOneDay__Loc: int;
  var FatDecThirtyOne1979__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var FatFastIoDispatch__Loc: int;
  var FatDiskFileSystemDeviceObject__Loc: int;
  var FatCdromFileSystemDeviceObject__Loc: int;
  var FatReserveEvent__Loc: int;
  var FatCloseQueueMutex__Loc: int;
  var Fat30Milliseconds__Loc: int;
  var FatMagic86400000__Loc: int;
  var Fat100Milliseconds__Loc: int;
  var FatMagic10000__Loc: int;
  var SLAM_guard_S_0_init__Loc: int;
  var vslice_dummy_var_676: int;
  var vslice_dummy_var_677: int;
  var vslice_dummy_var_678: int;
  var vslice_dummy_var_679: int;
  var vslice_dummy_var_680: int;
  var vslice_dummy_var_681: int;
  var vslice_dummy_var_682: int;
  var vslice_dummy_var_683: int;
  var vslice_dummy_var_684: int;
  var vslice_dummy_var_685: int;
  var vslice_dummy_var_686: int;
  var vslice_dummy_var_687: int;
  var vslice_dummy_var_688: int;
  var vslice_dummy_var_689: int;
  var vslice_dummy_var_690: int;
  var vslice_dummy_var_691: int;
  var vslice_dummy_var_692: int;
  var vslice_dummy_var_693: int;
  var vslice_dummy_var_694: int;
  var vslice_dummy_var_695: int;
  var vslice_dummy_var_696: int;
  var vslice_dummy_var_697: int;
  var vslice_dummy_var_698: int;
  var vslice_dummy_var_699: int;
  var vslice_dummy_var_700: int;
  var vslice_dummy_var_701: int;
  var vslice_dummy_var_702: int;
  var vslice_dummy_var_703: int;
  var vslice_dummy_var_704: int;
  var vslice_dummy_var_705: int;
  var vslice_dummy_var_706: int;
  var vslice_dummy_var_707: int;
  var vslice_dummy_var_708: int;
  var vslice_dummy_var_709: int;
  var vslice_dummy_var_710: int;
  var vslice_dummy_var_711: int;
  var vslice_dummy_var_712: int;
  var vslice_dummy_var_713: int;
  var vslice_dummy_var_714: int;
  var vslice_dummy_var_715: int;
  var vslice_dummy_var_716: int;
  var vslice_dummy_var_717: int;
  var vslice_dummy_var_718: int;
  var vslice_dummy_var_719: int;
  var vslice_dummy_var_720: int;
  var vslice_dummy_var_721: int;
  var vslice_dummy_var_722: int;
  var vslice_dummy_var_723: int;
  var vslice_dummy_var_724: int;
  var vslice_dummy_var_725: int;
  var vslice_dummy_var_726: int;
  var vslice_dummy_var_727: int;
  var vslice_dummy_var_728: int;
  var vslice_dummy_var_729: int;
  var vslice_dummy_var_730: int;
  var vslice_dummy_var_731: int;
  var vslice_dummy_var_732: int;
  var vslice_dummy_var_733: int;
  var vslice_dummy_var_734: int;
  var vslice_dummy_var_735: int;
  var vslice_dummy_var_736: int;
  var vslice_dummy_var_737: int;
  var vslice_dummy_var_738: int;
  var vslice_dummy_var_739: int;
  var vslice_dummy_var_740: int;
  var vslice_dummy_var_741: int;
  var vslice_dummy_var_742: int;
  var vslice_dummy_var_743: int;
  var vslice_dummy_var_744: int;
  var vslice_dummy_var_745: int;
  var vslice_dummy_var_746: int;
  var vslice_dummy_var_747: int;
  var vslice_dummy_var_748: int;
  var vslice_dummy_var_749: int;
  var vslice_dummy_var_750: int;
  var vslice_dummy_var_751: int;
  var vslice_dummy_var_752: int;
  var vslice_dummy_var_753: int;
  var vslice_dummy_var_754: int;
  var vslice_dummy_var_755: int;
  var vslice_dummy_var_756: int;
  var vslice_dummy_var_757: int;
  var vslice_dummy_var_758: int;
  var vslice_dummy_var_759: int;
  var vslice_dummy_var_760: int;
  var vslice_dummy_var_761: int;
  var vslice_dummy_var_762: int;
  var vslice_dummy_var_763: int;
  var vslice_dummy_var_764: int;
  var vslice_dummy_var_765: int;
  var vslice_dummy_var_766: int;
  var vslice_dummy_var_767: int;
  var vslice_dummy_var_768: int;
  var vslice_dummy_var_769: int;
  var vslice_dummy_var_770: int;
  var vslice_dummy_var_771: int;
  var vslice_dummy_var_772: int;
  var vslice_dummy_var_773: int;
  var vslice_dummy_var_774: int;
  var vslice_dummy_var_775: int;
  var vslice_dummy_var_776: int;
  var vslice_dummy_var_777: int;
  var vslice_dummy_var_778: int;
  var vslice_dummy_var_779: int;
  var vslice_dummy_var_780: int;
  var vslice_dummy_var_781: int;
  var vslice_dummy_var_782: int;
  var vslice_dummy_var_783: int;
  var vslice_dummy_var_784: int;
  var vslice_dummy_var_785: int;
  var vslice_dummy_var_786: int;
  var vslice_dummy_var_787: int;
  var vslice_dummy_var_788: int;
  var vslice_dummy_var_789: int;
  var vslice_dummy_var_790: int;
  var vslice_dummy_var_791: int;
  var vslice_dummy_var_792: int;
  var vslice_dummy_var_793: int;
  var vslice_dummy_var_794: int;
  var vslice_dummy_var_795: int;
  var vslice_dummy_var_796: int;
  var vslice_dummy_var_797: int;
  var vslice_dummy_var_798: int;
  var vslice_dummy_var_799: int;
  var vslice_dummy_var_800: int;
  var vslice_dummy_var_801: int;
  var vslice_dummy_var_802: int;
  var vslice_dummy_var_803: int;
  var vslice_dummy_var_804: int;
  var vslice_dummy_var_805: int;
  var vslice_dummy_var_806: int;
  var vslice_dummy_var_807: int;
  var vslice_dummy_var_808: int;
  var vslice_dummy_var_809: int;
  var vslice_dummy_var_810: int;
  var vslice_dummy_var_811: int;
  var vslice_dummy_var_812: int;
  var vslice_dummy_var_813: int;
  var vslice_dummy_var_814: int;
  var vslice_dummy_var_815: int;
  var vslice_dummy_var_816: int;
  var vslice_dummy_var_817: int;
  var vslice_dummy_var_818: int;
  var vslice_dummy_var_819: int;
  var vslice_dummy_var_820: int;
  var vslice_dummy_var_821: int;
  var vslice_dummy_var_822: int;
  var vslice_dummy_var_823: int;
  var vslice_dummy_var_824: int;
  var vslice_dummy_var_825: int;
  var vslice_dummy_var_826: int;
  var vslice_dummy_var_827: int;
  var vslice_dummy_var_828: int;
  var vslice_dummy_var_829: int;
  var vslice_dummy_var_830: int;
  var vslice_dummy_var_831: int;
  var vslice_dummy_var_832: int;
  var vslice_dummy_var_833: int;
  var vslice_dummy_var_834: int;
  var vslice_dummy_var_835: int;
  var vslice_dummy_var_836: int;
  var vslice_dummy_var_837: int;
  var vslice_dummy_var_838: int;
  var vslice_dummy_var_839: int;
  var vslice_dummy_var_840: int;
  var vslice_dummy_var_841: int;
  var vslice_dummy_var_842: int;
  var vslice_dummy_var_843: int;
  var vslice_dummy_var_844: int;
  var vslice_dummy_var_845: int;
  var vslice_dummy_var_1339: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 1276} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 1277} FatNonPagedFcbLookasideList__Loc := __HAVOC_malloc_or_null(108);
    assume FatNonPagedFcbLookasideList__Loc == FatNonPagedFcbLookasideList;
    assume FatNonPagedFcbLookasideList != 0;
    call {:si_unique_call 1278} FatJanOne1980__Loc := __HAVOC_malloc_or_null(20);
    assume FatJanOne1980__Loc == FatJanOne1980;
    assume FatJanOne1980 != 0;
    call {:si_unique_call 1279} FatIrpContextLookasideList__Loc := __HAVOC_malloc_or_null(108);
    assume FatIrpContextLookasideList__Loc == FatIrpContextLookasideList;
    assume FatIrpContextLookasideList != 0;
    call {:si_unique_call 1280} FatMaxLarge__Loc := __HAVOC_malloc_or_null(20);
    assume FatMaxLarge__Loc == FatMaxLarge;
    assume FatMaxLarge != 0;
    call {:si_unique_call 1281} FatEResourceLookasideList__Loc := __HAVOC_malloc_or_null(108);
    assume FatEResourceLookasideList__Loc == FatEResourceLookasideList;
    assume FatEResourceLookasideList != 0;
    call {:si_unique_call 1282} FatData__Loc := __HAVOC_malloc_or_null(204);
    assume FatData__Loc == FatData;
    assume FatData != 0;
    call {:si_unique_call 1283} FatCloseContextSList__Loc := __HAVOC_malloc_or_null(16);
    assume FatCloseContextSList__Loc == FatCloseContextSList;
    assume FatCloseContextSList != 0;
    call {:si_unique_call 1284} FatLargeZero__Loc := __HAVOC_malloc_or_null(20);
    assume FatLargeZero__Loc == FatLargeZero;
    assume FatLargeZero != 0;
    call {:si_unique_call 1285} FatSecurityPrivilege__Loc := __HAVOC_malloc_or_null(8);
    assume FatSecurityPrivilege__Loc == FatSecurityPrivilege;
    assume FatSecurityPrivilege != 0;
    call {:si_unique_call 1286} FatTimeJanOne1980__Loc := __HAVOC_malloc_or_null(24);
    assume FatTimeJanOne1980__Loc == FatTimeJanOne1980;
    assume FatTimeJanOne1980 != 0;
    call {:si_unique_call 1287} FatOneDay__Loc := __HAVOC_malloc_or_null(20);
    assume FatOneDay__Loc == FatOneDay;
    assume FatOneDay != 0;
    call {:si_unique_call 1288} FatDecThirtyOne1979__Loc := __HAVOC_malloc_or_null(20);
    assume FatDecThirtyOne1979__Loc == FatDecThirtyOne1979;
    assume FatDecThirtyOne1979 != 0;
    call {:si_unique_call 1289} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 1290} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 1291} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 1292} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 1293} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1294} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 1295} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 1296} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 1297} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 1298} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 1299} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 1300} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1301} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 1302} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 1303} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 1304} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 1305} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 1306} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 1307} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 1308} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 1309} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 1310} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 1311} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 1312} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 1313} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 1314} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 1315} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1316} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 1317} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 1318} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 1319} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 1320} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 1321} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 1322} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 1323} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 1324} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 1325} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 1326} FatFastIoDispatch__Loc := __HAVOC_malloc_or_null(112);
    assume FatFastIoDispatch__Loc == FatFastIoDispatch;
    assume FatFastIoDispatch != 0;
    call {:si_unique_call 1327} FatDiskFileSystemDeviceObject__Loc := __HAVOC_malloc_or_null(4);
    assume FatDiskFileSystemDeviceObject__Loc == FatDiskFileSystemDeviceObject;
    assume FatDiskFileSystemDeviceObject != 0;
    call {:si_unique_call 1328} FatCdromFileSystemDeviceObject__Loc := __HAVOC_malloc_or_null(4);
    assume FatCdromFileSystemDeviceObject__Loc == FatCdromFileSystemDeviceObject;
    assume FatCdromFileSystemDeviceObject != 0;
    call {:si_unique_call 1329} FatReserveEvent__Loc := __HAVOC_malloc_or_null(124);
    assume FatReserveEvent__Loc == FatReserveEvent;
    assume FatReserveEvent != 0;
    call {:si_unique_call 1330} FatCloseQueueMutex__Loc := __HAVOC_malloc_or_null(140);
    assume FatCloseQueueMutex__Loc == FatCloseQueueMutex;
    assume FatCloseQueueMutex != 0;
    call {:si_unique_call 1331} Fat30Milliseconds__Loc := __HAVOC_malloc_or_null(20);
    assume Fat30Milliseconds__Loc == Fat30Milliseconds;
    assume Fat30Milliseconds != 0;
    call {:si_unique_call 1332} FatMagic86400000__Loc := __HAVOC_malloc_or_null(20);
    assume FatMagic86400000__Loc == FatMagic86400000;
    assume FatMagic86400000 != 0;
    call {:si_unique_call 1333} Fat100Milliseconds__Loc := __HAVOC_malloc_or_null(20);
    assume Fat100Milliseconds__Loc == Fat100Milliseconds;
    assume Fat100Milliseconds != 0;
    call {:si_unique_call 1334} FatMagic10000__Loc := __HAVOC_malloc_or_null(20);
    assume FatMagic10000__Loc == FatMagic10000;
    assume FatMagic10000 != 0;
    call {:si_unique_call 1335} SLAM_guard_S_0_init__Loc := __HAVOC_malloc_or_null(248);
    assume SLAM_guard_S_0_init__Loc == SLAM_guard_S_0_init;
    assume SLAM_guard_S_0_init != 0;
    call {:si_unique_call 1336} boogieTmp := __HAVOC_malloc_or_null(4);
    assume NlsMbOemCodePageTag == boogieTmp;
    call {:si_unique_call 1337} boogieTmp := __HAVOC_malloc_or_null(4);
    assume FsRtlLegalAnsiCharacterArray == boogieTmp;
    call {:si_unique_call 1338} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 1339} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1340} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerNotPresent == boogieTmp;
    call {:si_unique_call 1341} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerEnabled == boogieTmp;
    call {:si_unique_call 1342} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 1343} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 1344} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 1345} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 1346} boogieTmp := __HAVOC_malloc_or_null(320);
    call {:si_unique_call 1347} boogieTmp := __HAVOC_malloc_or_null(320);
    call {:si_unique_call 1348} boogieTmp := __HAVOC_malloc_or_null(4);
    assume IoFileObjectType == boogieTmp;
    call {:si_unique_call 1349} boogieTmp := __HAVOC_malloc_or_null(4);
    assume NlsOemLeadByteInfo == boogieTmp;
    call {:si_unique_call 1350} boogieTmp := __HAVOC_malloc_or_null(396);
    assume SeExports == boogieTmp;
    call {:si_unique_call 1351} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1352} vslice_dummy_var_676 := __HAVOC_malloc(4);
    call {:si_unique_call 1353} vslice_dummy_var_677 := __HAVOC_malloc(4);
    call {:si_unique_call 1354} vslice_dummy_var_678 := __HAVOC_malloc(4);
    call {:si_unique_call 1355} vslice_dummy_var_679 := __HAVOC_malloc(4);
    call {:si_unique_call 1356} vslice_dummy_var_680 := __HAVOC_malloc(4);
    call {:si_unique_call 1357} vslice_dummy_var_681 := __HAVOC_malloc(4);
    call {:si_unique_call 1358} vslice_dummy_var_682 := __HAVOC_malloc(4);
    call {:si_unique_call 1359} vslice_dummy_var_683 := __HAVOC_malloc(4);
    call {:si_unique_call 1360} vslice_dummy_var_684 := __HAVOC_malloc(4);
    call {:si_unique_call 1361} vslice_dummy_var_685 := __HAVOC_malloc(4);
    call {:si_unique_call 1362} vslice_dummy_var_686 := __HAVOC_malloc(4);
    call {:si_unique_call 1363} vslice_dummy_var_687 := __HAVOC_malloc(4);
    call {:si_unique_call 1364} vslice_dummy_var_688 := __HAVOC_malloc(4);
    call {:si_unique_call 1365} vslice_dummy_var_689 := __HAVOC_malloc(4);
    call {:si_unique_call 1366} vslice_dummy_var_690 := __HAVOC_malloc(4);
    call {:si_unique_call 1367} vslice_dummy_var_691 := __HAVOC_malloc(4);
    call {:si_unique_call 1368} vslice_dummy_var_692 := __HAVOC_malloc(4);
    call {:si_unique_call 1369} vslice_dummy_var_693 := __HAVOC_malloc(4);
    call {:si_unique_call 1370} vslice_dummy_var_694 := __HAVOC_malloc(4);
    call {:si_unique_call 1371} vslice_dummy_var_695 := __HAVOC_malloc(4);
    call {:si_unique_call 1372} vslice_dummy_var_696 := __HAVOC_malloc(4);
    call {:si_unique_call 1373} vslice_dummy_var_697 := __HAVOC_malloc(4);
    call {:si_unique_call 1374} vslice_dummy_var_698 := __HAVOC_malloc(4);
    call {:si_unique_call 1375} vslice_dummy_var_699 := __HAVOC_malloc(4);
    call {:si_unique_call 1376} vslice_dummy_var_700 := __HAVOC_malloc(4);
    call {:si_unique_call 1377} vslice_dummy_var_701 := __HAVOC_malloc(4);
    call {:si_unique_call 1378} vslice_dummy_var_702 := __HAVOC_malloc(4);
    call {:si_unique_call 1379} vslice_dummy_var_703 := __HAVOC_malloc(4);
    call {:si_unique_call 1380} vslice_dummy_var_704 := __HAVOC_malloc(4);
    call {:si_unique_call 1381} vslice_dummy_var_705 := __HAVOC_malloc(4);
    call {:si_unique_call 1382} vslice_dummy_var_706 := __HAVOC_malloc(4);
    call {:si_unique_call 1383} vslice_dummy_var_707 := __HAVOC_malloc(4);
    call {:si_unique_call 1384} vslice_dummy_var_708 := __HAVOC_malloc(4);
    call {:si_unique_call 1385} vslice_dummy_var_709 := __HAVOC_malloc(4);
    call {:si_unique_call 1386} vslice_dummy_var_710 := __HAVOC_malloc(4);
    call {:si_unique_call 1387} vslice_dummy_var_711 := __HAVOC_malloc(4);
    call {:si_unique_call 1388} vslice_dummy_var_712 := __HAVOC_malloc(4);
    call {:si_unique_call 1389} vslice_dummy_var_713 := __HAVOC_malloc(4);
    call {:si_unique_call 1390} vslice_dummy_var_714 := __HAVOC_malloc(4);
    call {:si_unique_call 1391} vslice_dummy_var_715 := __HAVOC_malloc(4);
    call {:si_unique_call 1392} vslice_dummy_var_716 := __HAVOC_malloc(4);
    call {:si_unique_call 1393} vslice_dummy_var_717 := __HAVOC_malloc(4);
    call {:si_unique_call 1394} vslice_dummy_var_718 := __HAVOC_malloc(4);
    call {:si_unique_call 1395} vslice_dummy_var_719 := __HAVOC_malloc(4);
    call {:si_unique_call 1396} vslice_dummy_var_720 := __HAVOC_malloc(4);
    call {:si_unique_call 1397} vslice_dummy_var_721 := __HAVOC_malloc(4);
    call {:si_unique_call 1398} vslice_dummy_var_722 := __HAVOC_malloc(4);
    call {:si_unique_call 1399} vslice_dummy_var_723 := __HAVOC_malloc(4);
    call {:si_unique_call 1400} vslice_dummy_var_724 := __HAVOC_malloc(4);
    call {:si_unique_call 1401} vslice_dummy_var_725 := __HAVOC_malloc(4);
    call {:si_unique_call 1402} vslice_dummy_var_726 := __HAVOC_malloc(4);
    call {:si_unique_call 1403} vslice_dummy_var_727 := __HAVOC_malloc(4);
    call {:si_unique_call 1404} vslice_dummy_var_728 := __HAVOC_malloc(4);
    call {:si_unique_call 1405} vslice_dummy_var_729 := __HAVOC_malloc(4);
    call {:si_unique_call 1406} vslice_dummy_var_730 := __HAVOC_malloc(4);
    call {:si_unique_call 1407} vslice_dummy_var_731 := __HAVOC_malloc(4);
    call {:si_unique_call 1408} vslice_dummy_var_732 := __HAVOC_malloc(4);
    call {:si_unique_call 1409} vslice_dummy_var_733 := __HAVOC_malloc(4);
    call {:si_unique_call 1410} vslice_dummy_var_734 := __HAVOC_malloc(4);
    call {:si_unique_call 1411} vslice_dummy_var_735 := __HAVOC_malloc(4);
    call {:si_unique_call 1412} vslice_dummy_var_736 := __HAVOC_malloc(4);
    call {:si_unique_call 1413} vslice_dummy_var_737 := __HAVOC_malloc(4);
    call {:si_unique_call 1414} vslice_dummy_var_738 := __HAVOC_malloc(4);
    call {:si_unique_call 1415} vslice_dummy_var_739 := __HAVOC_malloc(4);
    call {:si_unique_call 1416} vslice_dummy_var_740 := __HAVOC_malloc(4);
    call {:si_unique_call 1417} vslice_dummy_var_741 := __HAVOC_malloc(4);
    call {:si_unique_call 1418} vslice_dummy_var_742 := __HAVOC_malloc(4);
    call {:si_unique_call 1419} vslice_dummy_var_743 := __HAVOC_malloc(4);
    call {:si_unique_call 1420} vslice_dummy_var_744 := __HAVOC_malloc(4);
    call {:si_unique_call 1421} vslice_dummy_var_745 := __HAVOC_malloc(4);
    call {:si_unique_call 1422} vslice_dummy_var_746 := __HAVOC_malloc(4);
    call {:si_unique_call 1423} vslice_dummy_var_747 := __HAVOC_malloc(4);
    call {:si_unique_call 1424} vslice_dummy_var_748 := __HAVOC_malloc(4);
    call {:si_unique_call 1425} vslice_dummy_var_749 := __HAVOC_malloc(4);
    call {:si_unique_call 1426} vslice_dummy_var_750 := __HAVOC_malloc(4);
    call {:si_unique_call 1427} vslice_dummy_var_751 := __HAVOC_malloc(4);
    call {:si_unique_call 1428} vslice_dummy_var_752 := __HAVOC_malloc(4);
    call {:si_unique_call 1429} vslice_dummy_var_753 := __HAVOC_malloc(4);
    call {:si_unique_call 1430} vslice_dummy_var_754 := __HAVOC_malloc(4);
    call {:si_unique_call 1431} vslice_dummy_var_755 := __HAVOC_malloc(4);
    call {:si_unique_call 1432} vslice_dummy_var_756 := __HAVOC_malloc(4);
    call {:si_unique_call 1433} vslice_dummy_var_757 := __HAVOC_malloc(4);
    call {:si_unique_call 1434} vslice_dummy_var_758 := __HAVOC_malloc(4);
    call {:si_unique_call 1435} vslice_dummy_var_759 := __HAVOC_malloc(4);
    call {:si_unique_call 1436} vslice_dummy_var_760 := __HAVOC_malloc(4);
    call {:si_unique_call 1437} vslice_dummy_var_761 := __HAVOC_malloc(4);
    call {:si_unique_call 1438} vslice_dummy_var_762 := __HAVOC_malloc(4);
    call {:si_unique_call 1439} vslice_dummy_var_763 := __HAVOC_malloc(4);
    call {:si_unique_call 1440} vslice_dummy_var_764 := __HAVOC_malloc(4);
    call {:si_unique_call 1441} vslice_dummy_var_765 := __HAVOC_malloc(4);
    call {:si_unique_call 1442} vslice_dummy_var_766 := __HAVOC_malloc(4);
    call {:si_unique_call 1443} vslice_dummy_var_767 := __HAVOC_malloc(4);
    call {:si_unique_call 1444} vslice_dummy_var_768 := __HAVOC_malloc(4);
    call {:si_unique_call 1445} vslice_dummy_var_769 := __HAVOC_malloc(4);
    call {:si_unique_call 1446} vslice_dummy_var_770 := __HAVOC_malloc(4);
    call {:si_unique_call 1447} vslice_dummy_var_771 := __HAVOC_malloc(4);
    call {:si_unique_call 1448} vslice_dummy_var_772 := __HAVOC_malloc(4);
    call {:si_unique_call 1449} vslice_dummy_var_773 := __HAVOC_malloc(4);
    call {:si_unique_call 1450} vslice_dummy_var_774 := __HAVOC_malloc(4);
    call {:si_unique_call 1451} vslice_dummy_var_775 := __HAVOC_malloc(4);
    call {:si_unique_call 1452} vslice_dummy_var_776 := __HAVOC_malloc(4);
    call {:si_unique_call 1453} vslice_dummy_var_777 := __HAVOC_malloc(4);
    call {:si_unique_call 1454} vslice_dummy_var_778 := __HAVOC_malloc(4);
    call {:si_unique_call 1455} vslice_dummy_var_779 := __HAVOC_malloc(4);
    call {:si_unique_call 1456} vslice_dummy_var_780 := __HAVOC_malloc(4);
    call {:si_unique_call 1457} vslice_dummy_var_781 := __HAVOC_malloc(4);
    call {:si_unique_call 1458} vslice_dummy_var_782 := __HAVOC_malloc(4);
    call {:si_unique_call 1459} vslice_dummy_var_783 := __HAVOC_malloc(4);
    call {:si_unique_call 1460} vslice_dummy_var_784 := __HAVOC_malloc(4);
    call {:si_unique_call 1461} vslice_dummy_var_785 := __HAVOC_malloc(4);
    call {:si_unique_call 1462} vslice_dummy_var_786 := __HAVOC_malloc(4);
    call {:si_unique_call 1463} vslice_dummy_var_787 := __HAVOC_malloc(4);
    call {:si_unique_call 1464} vslice_dummy_var_788 := __HAVOC_malloc(4);
    call {:si_unique_call 1465} vslice_dummy_var_789 := __HAVOC_malloc(4);
    call {:si_unique_call 1466} vslice_dummy_var_790 := __HAVOC_malloc(4);
    call {:si_unique_call 1467} vslice_dummy_var_791 := __HAVOC_malloc(4);
    call {:si_unique_call 1468} vslice_dummy_var_792 := __HAVOC_malloc(4);
    call {:si_unique_call 1469} vslice_dummy_var_793 := __HAVOC_malloc(4);
    call {:si_unique_call 1470} vslice_dummy_var_794 := __HAVOC_malloc(4);
    call {:si_unique_call 1471} vslice_dummy_var_795 := __HAVOC_malloc(4);
    call {:si_unique_call 1472} vslice_dummy_var_796 := __HAVOC_malloc(4);
    call {:si_unique_call 1473} vslice_dummy_var_797 := __HAVOC_malloc(4);
    call {:si_unique_call 1474} vslice_dummy_var_798 := __HAVOC_malloc(4);
    call {:si_unique_call 1475} vslice_dummy_var_799 := __HAVOC_malloc(4);
    call {:si_unique_call 1476} vslice_dummy_var_800 := __HAVOC_malloc(4);
    call {:si_unique_call 1477} vslice_dummy_var_801 := __HAVOC_malloc(4);
    call {:si_unique_call 1478} vslice_dummy_var_802 := __HAVOC_malloc(4);
    call {:si_unique_call 1479} vslice_dummy_var_803 := __HAVOC_malloc(4);
    call {:si_unique_call 1480} vslice_dummy_var_804 := __HAVOC_malloc(4);
    call {:si_unique_call 1481} vslice_dummy_var_805 := __HAVOC_malloc(4);
    call {:si_unique_call 1482} vslice_dummy_var_806 := __HAVOC_malloc(4);
    call {:si_unique_call 1483} vslice_dummy_var_807 := __HAVOC_malloc(4);
    call {:si_unique_call 1484} vslice_dummy_var_808 := __HAVOC_malloc(4);
    call {:si_unique_call 1485} vslice_dummy_var_809 := __HAVOC_malloc(4);
    call {:si_unique_call 1486} vslice_dummy_var_810 := __HAVOC_malloc(4);
    call {:si_unique_call 1487} vslice_dummy_var_811 := __HAVOC_malloc(4);
    call {:si_unique_call 1488} vslice_dummy_var_812 := __HAVOC_malloc(4);
    call {:si_unique_call 1489} vslice_dummy_var_813 := __HAVOC_malloc(4);
    call {:si_unique_call 1490} vslice_dummy_var_814 := __HAVOC_malloc(4);
    call {:si_unique_call 1491} vslice_dummy_var_815 := __HAVOC_malloc(4);
    call {:si_unique_call 1492} vslice_dummy_var_816 := __HAVOC_malloc(4);
    call {:si_unique_call 1493} vslice_dummy_var_817 := __HAVOC_malloc(4);
    call {:si_unique_call 1494} vslice_dummy_var_818 := __HAVOC_malloc(4);
    call {:si_unique_call 1495} vslice_dummy_var_819 := __HAVOC_malloc(4);
    call {:si_unique_call 1496} vslice_dummy_var_820 := __HAVOC_malloc(4);
    call {:si_unique_call 1497} vslice_dummy_var_821 := __HAVOC_malloc(4);
    call {:si_unique_call 1498} vslice_dummy_var_822 := __HAVOC_malloc(4);
    call {:si_unique_call 1499} vslice_dummy_var_823 := __HAVOC_malloc(4);
    call {:si_unique_call 1500} vslice_dummy_var_824 := __HAVOC_malloc(4);
    call {:si_unique_call 1501} vslice_dummy_var_825 := __HAVOC_malloc(4);
    call {:si_unique_call 1502} vslice_dummy_var_826 := __HAVOC_malloc(4);
    call {:si_unique_call 1503} vslice_dummy_var_827 := __HAVOC_malloc(4);
    call {:si_unique_call 1504} vslice_dummy_var_828 := __HAVOC_malloc(4);
    call {:si_unique_call 1505} vslice_dummy_var_829 := __HAVOC_malloc(4);
    call {:si_unique_call 1506} vslice_dummy_var_830 := __HAVOC_malloc(4);
    call {:si_unique_call 1507} vslice_dummy_var_1339 := __HAVOC_malloc(48);
    call {:si_unique_call 1508} vslice_dummy_var_831 := __HAVOC_malloc(4);
    call {:si_unique_call 1509} vslice_dummy_var_832 := __HAVOC_malloc(4);
    call {:si_unique_call 1510} vslice_dummy_var_833 := __HAVOC_malloc(4);
    call {:si_unique_call 1511} vslice_dummy_var_834 := __HAVOC_malloc(4);
    call {:si_unique_call 1512} vslice_dummy_var_835 := __HAVOC_malloc(4);
    call {:si_unique_call 1513} vslice_dummy_var_836 := __HAVOC_malloc(4);
    call {:si_unique_call 1514} vslice_dummy_var_837 := __HAVOC_malloc(4);
    call {:si_unique_call 1515} vslice_dummy_var_838 := __HAVOC_malloc(4);
    call {:si_unique_call 1516} vslice_dummy_var_839 := __HAVOC_malloc(4);
    call {:si_unique_call 1517} vslice_dummy_var_840 := __HAVOC_malloc(4);
    call {:si_unique_call 1518} vslice_dummy_var_841 := __HAVOC_malloc(4);
    call {:si_unique_call 1519} vslice_dummy_var_842 := __HAVOC_malloc(4);
    call {:si_unique_call 1520} vslice_dummy_var_843 := __HAVOC_malloc(4);
    call {:si_unique_call 1521} vslice_dummy_var_844 := __HAVOC_malloc(4);
    call {:si_unique_call 1522} vslice_dummy_var_845 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 1523} corralExtraInit();
    call {:si_unique_call 1524} corralExplainErrorInit();
    call {:si_unique_call 1525} _sdv_init36();
    call {:si_unique_call 1526} _sdv_init22();
    call {:si_unique_call 1527} _sdv_init18();
    call {:si_unique_call 1528} _sdv_init19();
    call {:si_unique_call 1529} _sdv_init32();
    call {:si_unique_call 1530} _sdv_init17();
    call {:si_unique_call 1531} _sdv_init1();
    call {:si_unique_call 1532} _sdv_init28();
    call {:si_unique_call 1533} _sdv_init23();
    call {:si_unique_call 1534} _sdv_init25();
    call {:si_unique_call 1535} _sdv_init4();
    call {:si_unique_call 1536} _sdv_init5();
    call {:si_unique_call 1537} _sdv_init3();
    call {:si_unique_call 1538} _sdv_init30();
    call {:si_unique_call 1539} _sdv_init16();
    call {:si_unique_call 1540} _sdv_init24();
    call {:si_unique_call 1541} _sdv_init14();
    call {:si_unique_call 1542} _sdv_init21();
    call {:si_unique_call 1543} _sdv_init33();
    call {:si_unique_call 1544} _sdv_init6();
    call {:si_unique_call 1545} _sdv_init15();
    call {:si_unique_call 1546} _sdv_init27();
    call {:si_unique_call 1547} _sdv_init10();
    call {:si_unique_call 1548} _sdv_init26();
    call {:si_unique_call 1549} _sdv_init11();
    call {:si_unique_call 1550} _sdv_init9();
    call {:si_unique_call 1551} _sdv_init31();
    call {:si_unique_call 1552} _sdv_init12();
    call {:si_unique_call 1553} _sdv_init13();
    call {:si_unique_call 1554} _sdv_init7();
    call {:si_unique_call 1555} _sdv_init34();
    call {:si_unique_call 1556} _sdv_init8();
    call {:si_unique_call 1557} _sdv_init29();
    call {:si_unique_call 1558} _sdv_init2();
    call {:si_unique_call 1559} _sdv_init20();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_1317 := 0;
    goto L59;

  L59:
    assume Tmp_1317 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_1316 := 0;
    goto L63;

  L63:
    assume Tmp_1316 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 1560} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L57;

  L57:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L57;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_1316 := 1;
    goto L63;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_1317 := 1;
    goto L59;
}



procedure {:origName "SeUnlockSubjectContext"} {:osmodel} SeUnlockSubjectContext(actual_SubjectContext_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SeUnlockSubjectContext"} {:osmodel} SeUnlockSubjectContext(actual_SubjectContext_3: int)
{
  var vslice_dummy_var_183: int;

  anon0:
    call {:si_unique_call 1561} vslice_dummy_var_183 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FsRtlProcessFileLock"} {:osmodel} FsRtlProcessFileLock(actual_FileLock_2: int, actual_Irp_14: int, actual_Context_5: int) returns (Tmp_1321: int);
  free ensures {:va_keep} Tmp_1321 == -1073741698 || Tmp_1321 == 0 || Tmp_1321 == -1073741808 || Tmp_1321 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlProcessFileLock"} {:osmodel} FsRtlProcessFileLock(actual_FileLock_2: int, actual_Irp_14: int, actual_Context_5: int) returns (Tmp_1321: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1321 := -1073741698;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_1321 := 0;
    goto L1;

  anon9_Then:
    Tmp_1321 := -1073741808;
    goto L1;

  anon7_Then:
    Tmp_1321 := -1073741670;
    goto L1;
}



procedure {:origName "sdv_ExQueueWorkItem"} {:osmodel} sdv_ExQueueWorkItem(actual_WorkItem: int, actual_QueueType_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ExQueueWorkItem"} {:osmodel} sdv_ExQueueWorkItem(actual_WorkItem: int, actual_QueueType_1: int)
{
  var vslice_dummy_var_184: int;

  anon0:
    call {:si_unique_call 1562} vslice_dummy_var_184 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_7: int)
{
  var {:pointer} pirp_7: int;
  var vslice_dummy_var_185: int;

  anon0:
    call {:si_unique_call 1563} vslice_dummy_var_185 := __HAVOC_malloc(4);
    pirp_7 := actual_pirp_7;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_7 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_7 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_7 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_7 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_1327: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_1327: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_1327;
    return;
}



procedure {:origName "sdv_KeGetCurrentThread"} {:osmodel} sdv_KeGetCurrentThread() returns (Tmp_1329: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_KeGetCurrentThread"} {:osmodel} sdv_KeGetCurrentThread() returns (Tmp_1329: int)
{
  var {:pointer} sdv_817: int;

  anon0:
    call {:si_unique_call 1564} sdv_817 := __HAVOC_malloc(4);
    Tmp_1329 := sdv_817;
    return;
}



procedure {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length_10: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_15: int) returns (Tmp_1331: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length_10: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_15: int) returns (Tmp_1331: int)
{
  var {:pointer} sdv_819: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1565} sdv_819 := __HAVOC_malloc(1);
    Tmp_1331 := sdv_819;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1331 := 0;
    goto L1;
}



procedure {:origName "ExConvertExclusiveToSharedLite"} {:osmodel} ExConvertExclusiveToSharedLite(actual_Resource_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExConvertExclusiveToSharedLite"} {:osmodel} ExConvertExclusiveToSharedLite(actual_Resource_8: int)
{
  var vslice_dummy_var_186: int;

  anon0:
    call {:si_unique_call 1566} vslice_dummy_var_186 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_3: int, actual_SourceString_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_3: int, actual_SourceString_3: int)
{
  var {:pointer} DestinationString_3: int;
  var {:pointer} SourceString_3: int;
  var vslice_dummy_var_187: int;

  anon0:
    call {:si_unique_call 1567} vslice_dummy_var_187 := __HAVOC_malloc(4);
    DestinationString_3 := actual_DestinationString_3;
    SourceString_3 := actual_SourceString_3;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString_3 != 0;
    assume {:nonnull} DestinationString_3 != 0;
    assume DestinationString_3 > 0;
    assume {:nonnull} DestinationString_3 != 0;
    assume DestinationString_3 > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString_3 == 0;
    assume {:nonnull} DestinationString_3 != 0;
    assume DestinationString_3 > 0;
    assume {:nonnull} DestinationString_3 != 0;
    assume DestinationString_3 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString_3 != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString_3 == 0;
    goto L4;
}



procedure {:origName "FsRtlCheckLockForReadAccess"} {:osmodel} FsRtlCheckLockForReadAccess(actual_FileLock_3: int, actual_Irp_16: int) returns (Tmp_1337: int);
  free ensures {:va_keep} Tmp_1337 == 0 || Tmp_1337 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlCheckLockForReadAccess"} {:osmodel} FsRtlCheckLockForReadAccess(actual_FileLock_3: int, actual_Irp_16: int) returns (Tmp_1337: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1337 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1337 := 1;
    goto L1;
}



procedure {:origName "RtlCompareMemory"} {:osmodel} RtlCompareMemory(actual_Source1: int, actual_Source2: int, actual_Length_11: int) returns (Tmp_1339: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlCompareMemory"} {:osmodel} RtlCompareMemory(actual_Source1: int, actual_Source2: int, actual_Length_11: int) returns (Tmp_1339: int)
{
  var {:scalar} r_1: int;
  var {:scalar} sdv_821: int;

  anon0:
    r_1 := sdv_821;
    Tmp_1339 := r_1;
    return;
}



procedure {:origName "RtlDowncaseUnicodeString"} {:osmodel} RtlDowncaseUnicodeString(actual_DestinationString_4: int, actual_SourceString_4: int, actual_AllocateDestinationString_3: int) returns (Tmp_1341: int);
  free ensures {:va_keep} Tmp_1341 == -1073741675 || Tmp_1341 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlDowncaseUnicodeString"} {:osmodel} RtlDowncaseUnicodeString(actual_DestinationString_4: int, actual_SourceString_4: int, actual_AllocateDestinationString_3: int) returns (Tmp_1341: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1341 := -1073741675;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1341 := 0;
    goto L1;
}



procedure {:origName "IoGetStackLimits"} {:osmodel} IoGetStackLimits(actual_LowLimit: int, actual_HighLimit: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoGetStackLimits"} {:osmodel} IoGetStackLimits(actual_LowLimit: int, actual_HighLimit: int)
{
  var vslice_dummy_var_188: int;

  anon0:
    call {:si_unique_call 1568} vslice_dummy_var_188 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_12: int)
{
  var vslice_dummy_var_189: int;

  anon0:
    call {:si_unique_call 1569} vslice_dummy_var_189 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_13: int)
{
  var vslice_dummy_var_190: int;

  anon0:
    call {:si_unique_call 1570} vslice_dummy_var_190 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlUpcaseUnicodeString"} {:osmodel} RtlUpcaseUnicodeString(actual_DestinationString_5: int, actual_SourceString_5: int, actual_AllocateDestinationString_4: int) returns (Tmp_1349: int);
  free ensures {:va_keep} Tmp_1349 == -1073741675 || Tmp_1349 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlUpcaseUnicodeString"} {:osmodel} RtlUpcaseUnicodeString(actual_DestinationString_5: int, actual_SourceString_5: int, actual_AllocateDestinationString_4: int) returns (Tmp_1349: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1349 := -1073741675;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1349 := 0;
    goto L1;
}



procedure {:origName "sdv_KeFlushIoBuffers"} {:osmodel} sdv_KeFlushIoBuffers(actual_Mdl_1: int, actual_ReadOperation: int, actual_DmaOperation: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_KeFlushIoBuffers"} {:osmodel} sdv_KeFlushIoBuffers(actual_Mdl_1: int, actual_ReadOperation: int, actual_DmaOperation: int)
{
  var vslice_dummy_var_191: int;

  anon0:
    call {:si_unique_call 1571} vslice_dummy_var_191 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutexUnsafe"} {:osmodel} ExReleaseFastMutexUnsafe(actual_FastMutex_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExReleaseFastMutexUnsafe"} {:osmodel} ExReleaseFastMutexUnsafe(actual_FastMutex_2: int)
{
  var vslice_dummy_var_192: int;

  anon0:
    call {:si_unique_call 1572} vslice_dummy_var_192 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_8: int) returns (Tmp_1355: int);
  modifies alloc, stack_location, yogi_error, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_8: int) returns (Tmp_1355: int)
{
  var {:pointer} ps: int;
  var {:scalar} status_1: int;
  var {:pointer} po: int;
  var {:pointer} pirp_8: int;

  anon0:
    po := actual_po;
    pirp_8 := actual_pirp_8;
    status_1 := 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    havoc ps;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    call {:si_unique_call 1573} sdv_SetStatus(pirp_8);
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1574} sdv_stub_dispatch_begin();
    call {:si_unique_call 1575} status_1 := FatFsdPnp(po, pirp_8);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1576} sdv_stub_dispatch_end(status_1, 0);
    Tmp_1355 := status_1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int)
{
  var vslice_dummy_var_193: int;

  anon0:
    call {:si_unique_call 1577} vslice_dummy_var_193 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExInitializeResourceLite"} {:osmodel} ExInitializeResourceLite(actual_Resource_9: int) returns (Tmp_1359: int);
  free ensures {:va_keep} Tmp_1359 == 0 || Tmp_1359 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExInitializeResourceLite"} {:osmodel} ExInitializeResourceLite(actual_Resource_9: int) returns (Tmp_1359: int)
{
  var {:scalar} x_6: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} x_6 != 0;
    Tmp_1359 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} x_6 == 0;
    Tmp_1359 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_194: int;

  anon0:
    call {:si_unique_call 1578} vslice_dummy_var_194 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FsRtlInitializeFileLock"} {:osmodel} FsRtlInitializeFileLock(actual_FileLock_4: int, actual_CompleteLockIrpRoutine: int, actual_UnlockRoutine: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlInitializeFileLock"} {:osmodel} FsRtlInitializeFileLock(actual_FileLock_4: int, actual_CompleteLockIrpRoutine: int, actual_UnlockRoutine: int)
{
  var vslice_dummy_var_195: int;

  anon0:
    call {:si_unique_call 1579} vslice_dummy_var_195 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_AbnormalTermination"} {:osmodel} sdv_AbnormalTermination() returns (Tmp_1365: int);
  free ensures {:va_keep} Tmp_1365 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_AbnormalTermination"} {:osmodel} sdv_AbnormalTermination() returns (Tmp_1365: int)
{

  anon0:
    Tmp_1365 := 0;
    return;
}



procedure {:origName "ExRaiseStatus"} {:osmodel} ExRaiseStatus(actual_Status_17: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExRaiseStatus"} {:osmodel} ExRaiseStatus(actual_Status_17: int)
{
  var vslice_dummy_var_196: int;

  anon0:
    call {:si_unique_call 1580} vslice_dummy_var_196 := __HAVOC_malloc(4);
    call {:si_unique_call 1581} SdvExit#1();
    return;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_9: int);
  modifies alloc, markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_9: int)
{
  var vslice_dummy_var_197: int;

  anon0:
    call {:si_unique_call 1582} vslice_dummy_var_197 := __HAVOC_malloc(4);
    call {:si_unique_call 1583} SLIC_sdv_IoMarkIrpPending_entry(0);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_10: int) returns (Tmp_1371: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, stack_location, queued, yogi_error, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_10: int) returns (Tmp_1371: int)
{
  var {:pointer} ps_1: int;
  var {:scalar} minor: int;
  var {:scalar} sdv_834: int;
  var {:scalar} Tmp_1373: int;
  var {:scalar} Tmp_1374: int;
  var {:scalar} status_2: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_10: int;

  anon0:
    po_1 := actual_po_1;
    pirp_10 := actual_pirp_10;
    status_2 := 0;
    minor := sdv_834;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    havoc ps_1;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    call {:si_unique_call 1584} sdv_SetStatus(pirp_10);
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1585} sdv_stub_dispatch_begin();
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L60;

  L60:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    Tmp_1373 := 0;
    goto L217;

  L217:
    assume Tmp_1373 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto L66;

  L66:
    call {:si_unique_call 1586} status_2 := FatFsdPnp(po_1, pirp_10);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    call {:si_unique_call 1587} sdv_stub_dispatch_end(status_2, 0);
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    Tmp_1371 := status_2;
    goto LM2;

  LM2:
    return;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon72_Then:
    goto L66;

  anon73_Then:
    Tmp_1373 := 1;
    goto L217;

  anon71_Then:
    goto L61;

  anon101_Then:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    Tmp_1374 := 0;
    goto L223;

  L223:
    assume Tmp_1374 != 0;
    goto L60;

  anon70_Then:
    Tmp_1374 := 1;
    goto L223;

  anon74_Then:
    call {:si_unique_call 1588} status_2 := sdv_DoNothing();
    goto L72;

  anon75_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1589} status_2 := sdv_DoNothing();
    goto L72;

  anon76_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1590} status_2 := sdv_DoNothing();
    goto L72;

  anon77_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1591} status_2 := FatFsdCleanup(po_1, pirp_10);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon100_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    call {:si_unique_call 1592} status_2 := FatFsdLockControl(po_1, pirp_10);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon99_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1593} status_2 := FatFsdShutdown(po_1, pirp_10);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon98_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1594} status_2 := sdv_DoNothing();
    goto L72;

  anon81_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1595} status_2 := FatFsdDeviceControl(po_1, pirp_10);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon97_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon82_Then:
    call {:si_unique_call 1596} status_2 := FatFsdFileSystemControl(po_1, pirp_10);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon96_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon83_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1597} status_2 := FatFsdFlushBuffers(po_1, pirp_10);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon95_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon84_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1598} status_2 := FatFsdSetInformation(po_1, pirp_10);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon94_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon85_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1599} status_2 := FatFsdQueryInformation(po_1, pirp_10);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon93_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1600} status_2 := FatFsdWrite(po_1, pirp_10);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon92_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon87_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1601} status_2 := FatFsdRead(po_1, pirp_10);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon91_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon88_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1602} status_2 := FatFsdClose(po_1, pirp_10);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 1603} status_2 := FatFsdCreate(po_1, pirp_10);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int)
{
  var vslice_dummy_var_198: int;

  anon0:
    call {:si_unique_call 1604} vslice_dummy_var_198 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoBuildSynchronousFsdRequest"} {:osmodel} IoBuildSynchronousFsdRequest(actual_MajorFunction: int, actual_DeviceObject_3: int, actual_Buffer_15: int, actual_Length_14: int, actual_StartingOffset: int, actual_Event_1: int, actual_IoStatusBlock: int) returns (Tmp_1377: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoBuildSynchronousFsdRequest"} {:osmodel} IoBuildSynchronousFsdRequest(actual_MajorFunction: int, actual_DeviceObject_3: int, actual_Buffer_15: int, actual_Length_14: int, actual_StartingOffset: int, actual_Event_1: int, actual_IoStatusBlock: int) returns (Tmp_1377: int)
{
  var {:pointer} Tmp_1379: int;
  var {:scalar} MajorFunction: int;
  var {:pointer} IoStatusBlock: int;

  anon0:
    MajorFunction := actual_MajorFunction;
    IoStatusBlock := actual_IoStatusBlock;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_irp != 0;
    assume sdv_IoBuildSynchronousFsdRequest_irp > 0;
    havoc Tmp_1379;
    assume {:nonnull} Tmp_1379 != 0;
    assume Tmp_1379 > 0;
    assume {:nonnull} IoStatusBlock != 0;
    assume IoStatusBlock > 0;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_irp != 0;
    assume sdv_IoBuildSynchronousFsdRequest_irp > 0;
    Tmp_1377 := sdv_IoBuildSynchronousFsdRequest_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_irp != 0;
    assume sdv_IoBuildSynchronousFsdRequest_irp > 0;
    assume {:nonnull} IoStatusBlock != 0;
    assume IoStatusBlock > 0;
    Tmp_1377 := 0;
    goto L1;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new: int);
  modifies alloc, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_199: int;

  anon0:
    call {:si_unique_call 1605} vslice_dummy_var_199 := __HAVOC_malloc(4);
    new := actual_new;
    call {:si_unique_call 1606} SLIC_sdv_KeReleaseSpinLock_entry(0);
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_11: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_11: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_200: int;

  anon0:
    call {:si_unique_call 1607} vslice_dummy_var_200 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_15: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_15: int)
{
  var vslice_dummy_var_201: int;

  anon0:
    call {:si_unique_call 1608} vslice_dummy_var_201 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_16: int, actual_ResultLength: int) returns (Tmp_1386: int);
  free ensures {:va_keep} Tmp_1386 == -1073741811 || Tmp_1386 == -1073741823 || Tmp_1386 == 0 || Tmp_1386 == 5 || Tmp_1386 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_16: int, actual_ResultLength: int) returns (Tmp_1386: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_846: int;
  var {:scalar} Length_16: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_16 := actual_Length_16;
    ResultLength := actual_ResultLength;
    L := sdv_846;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_1386 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_1386 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_16;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_16 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_1386 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_16 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_16;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_1386 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_16 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_1386 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_16;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_202: int;

  anon0:
    call {:si_unique_call 1609} vslice_dummy_var_202 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ProbeForRead"} {:osmodel} ProbeForRead(actual_Address_1: int, actual_Length_17: int, actual_Alignment: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ProbeForRead"} {:osmodel} ProbeForRead(actual_Address_1: int, actual_Length_17: int, actual_Alignment: int)
{
  var vslice_dummy_var_203: int;

  anon0:
    call {:si_unique_call 1610} vslice_dummy_var_203 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCheckShareAccess"} {:osmodel} IoCheckShareAccess(actual_DesiredAccess_13: int, actual_DesiredShareAccess_1: int, actual_FileObject_26: int, actual_ShareAccess_12: int, actual_Update: int) returns (Tmp_1392: int);
  free ensures {:va_keep} Tmp_1392 == 0 || Tmp_1392 == -1073741757;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoCheckShareAccess"} {:osmodel} IoCheckShareAccess(actual_DesiredAccess_13: int, actual_DesiredShareAccess_1: int, actual_FileObject_26: int, actual_ShareAccess_12: int, actual_Update: int) returns (Tmp_1392: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1392 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1392 := -1073741757;
    goto L1;
}



procedure {:origName "FsRtlCheckLockForWriteAccess"} {:osmodel} FsRtlCheckLockForWriteAccess(actual_FileLock_5: int, actual_Irp_17: int) returns (Tmp_1394: int);
  free ensures {:va_keep} Tmp_1394 == 0 || Tmp_1394 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlCheckLockForWriteAccess"} {:osmodel} FsRtlCheckLockForWriteAccess(actual_FileLock_5: int, actual_Irp_17: int) returns (Tmp_1394: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1394 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1394 := 1;
    goto L1;
}



procedure {:origName "ExGetSharedWaiterCount"} {:osmodel} ExGetSharedWaiterCount(actual_Resource_10: int) returns (Tmp_1396: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExGetSharedWaiterCount"} {:osmodel} ExGetSharedWaiterCount(actual_Resource_10: int) returns (Tmp_1396: int)
{
  var {:scalar} sdv_849: int;

  anon0:
    Tmp_1396 := sdv_849;
    return;
}



procedure {:origName "IoSetHardErrorOrVerifyDevice"} {:osmodel} IoSetHardErrorOrVerifyDevice(actual_Irp_18: int, actual_DeviceObject_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoSetHardErrorOrVerifyDevice"} {:osmodel} IoSetHardErrorOrVerifyDevice(actual_Irp_18: int, actual_DeviceObject_4: int)
{
  var vslice_dummy_var_204: int;

  anon0:
    call {:si_unique_call 1611} vslice_dummy_var_204 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ProbeForWrite"} {:osmodel} ProbeForWrite(actual_Address_2: int, actual_Length_18: int, actual_Alignment_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ProbeForWrite"} {:osmodel} ProbeForWrite(actual_Address_2: int, actual_Length_18: int, actual_Alignment_1: int)
{
  var vslice_dummy_var_205: int;

  anon0:
    call {:si_unique_call 1612} vslice_dummy_var_205 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1404: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1404: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_1404;
    return;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_206: int;

  anon0:
    call {:si_unique_call 1613} vslice_dummy_var_206 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1408: int);
  free ensures {:va_keep} Tmp_1408 == 1 || Tmp_1408 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1408: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1408 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1408 := 0;
    goto L1;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_5: int, actual_Irp_19: int) returns (Tmp_1410: int);
  free ensures {:va_keep} Tmp_1410 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_5: int, actual_Irp_19: int) returns (Tmp_1410: int)
{
  var {:scalar} status_3: int;
  var {:pointer} Irp_19: int;

  anon0:
    Irp_19 := actual_Irp_19;
    status_3 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_19;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_19;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_19;
    goto L25;

  L25:
    Tmp_1410 := status_3;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_19;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_19;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_19;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_19;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_19;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_19;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_19;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_19;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_19;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_19;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_19;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_19;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_19;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_19;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_19;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_19;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_19;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_19;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_19;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_19;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_19;
    goto L36;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_2: int) returns (Tmp_1412: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_2: int) returns (Tmp_1412: int)
{
  var {:scalar} p_4: int;

  anon0:
    Tmp_1412 := p_4;
    return;
}



procedure {:origName "ZwOpenKey"} {:osmodel} ZwOpenKey(actual_KeyHandle_1: int, actual_DesiredAccess_14: int, actual_ObjectAttributes: int) returns (Tmp_1414: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1414 == 0 || Tmp_1414 == -1073741727;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ZwOpenKey"} {:osmodel} ZwOpenKey(actual_KeyHandle_1: int, actual_DesiredAccess_14: int, actual_ObjectAttributes: int) returns (Tmp_1414: int)
{
  var {:pointer} sdv_854: int;
  var {:pointer} KeyHandle_1: int;

  anon0:
    KeyHandle_1 := actual_KeyHandle_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1614} sdv_854 := __HAVOC_malloc(4);
    assume {:nonnull} KeyHandle_1 != 0;
    assume KeyHandle_1 > 0;
    Tmp_1414 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} KeyHandle_1 != 0;
    assume KeyHandle_1 > 0;
    Tmp_1414 := -1073741727;
    goto L1;
}



procedure {:origName "sdv_IoGetRemainingStackSize"} {:osmodel} sdv_IoGetRemainingStackSize() returns (Tmp_1416: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoGetRemainingStackSize"} {:osmodel} sdv_IoGetRemainingStackSize() returns (Tmp_1416: int)
{
  var {:scalar} sdv_855: int;
  var {:scalar} l: int;

  anon0:
    l := sdv_855;
    Tmp_1416 := l;
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type: int, actual_State: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type: int, actual_State: int)
{
  var {:pointer} Event_2: int;
  var {:scalar} Type: int;
  var {:scalar} State: int;
  var vslice_dummy_var_207: int;

  anon0:
    call {:si_unique_call 1615} vslice_dummy_var_207 := __HAVOC_malloc(4);
    Event_2 := actual_Event_2;
    Type := actual_Type;
    State := actual_State;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    return;
}



procedure {:origName "IoUpdateShareAccess"} {:osmodel} IoUpdateShareAccess(actual_FileObject_27: int, actual_ShareAccess_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoUpdateShareAccess"} {:osmodel} IoUpdateShareAccess(actual_FileObject_27: int, actual_ShareAccess_13: int)
{
  var vslice_dummy_var_208: int;

  anon0:
    call {:si_unique_call 1616} vslice_dummy_var_208 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_209: int;

  anon0:
    call {:si_unique_call 1617} vslice_dummy_var_209 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_6: int, actual_Irp_20: int) returns (Tmp_1424: int);
  free ensures {:va_keep} Tmp_1424 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_6: int, actual_Irp_20: int) returns (Tmp_1424: int)
{
  var {:pointer} Irp_20: int;

  anon0:
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 1618} Tmp_1424 := IofCallDriver(0, Irp_20);
    return;
}



procedure {:origName "IoBuildDeviceIoControlRequest"} {:osmodel} IoBuildDeviceIoControlRequest(actual_IoControlCode: int, actual_DeviceObject_7: int, actual_InputBuffer: int, actual_InputBufferLength: int, actual_OutputBuffer: int, actual_OutputBufferLength: int, actual_InternalDeviceIoControl: int, actual_Event_3: int, actual_IoStatusBlock_1: int) returns (Tmp_1426: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoBuildDeviceIoControlRequest"} {:osmodel} IoBuildDeviceIoControlRequest(actual_IoControlCode: int, actual_DeviceObject_7: int, actual_InputBuffer: int, actual_InputBufferLength: int, actual_OutputBuffer: int, actual_OutputBufferLength: int, actual_InternalDeviceIoControl: int, actual_Event_3: int, actual_IoStatusBlock_1: int) returns (Tmp_1426: int)
{
  var {:pointer} Tmp_1427: int;
  var {:pointer} Tmp_1428: int;
  var {:scalar} InternalDeviceIoControl: int;
  var {:pointer} IoStatusBlock_1: int;

  anon0:
    InternalDeviceIoControl := actual_InternalDeviceIoControl;
    IoStatusBlock_1 := actual_IoStatusBlock_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} InternalDeviceIoControl != 0;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_irp != 0;
    assume sdv_IoBuildDeviceIoControlRequest_irp > 0;
    havoc Tmp_1428;
    assume {:nonnull} Tmp_1428 != 0;
    assume Tmp_1428 > 0;
    goto L14;

  L14:
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_irp != 0;
    assume sdv_IoBuildDeviceIoControlRequest_irp > 0;
    assume {:nonnull} IoStatusBlock_1 != 0;
    assume IoStatusBlock_1 > 0;
    Tmp_1426 := sdv_IoBuildDeviceIoControlRequest_irp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} InternalDeviceIoControl == 0;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_irp != 0;
    assume sdv_IoBuildDeviceIoControlRequest_irp > 0;
    havoc Tmp_1427;
    assume {:nonnull} Tmp_1427 != 0;
    assume Tmp_1427 > 0;
    goto L14;

  anon5_Then:
    assume {:nonnull} IoStatusBlock_1 != 0;
    assume IoStatusBlock_1 > 0;
    Tmp_1426 := 0;
    goto L1;
}



procedure {:origName "ExAcquireSharedWaitForExclusive"} {:osmodel} ExAcquireSharedWaitForExclusive(actual_Resource_11: int, actual_Wait_6: int) returns (Tmp_1430: int);
  free ensures {:va_keep} Tmp_1430 == 0 || Tmp_1430 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExAcquireSharedWaitForExclusive"} {:osmodel} ExAcquireSharedWaitForExclusive(actual_Resource_11: int, actual_Wait_6: int) returns (Tmp_1430: int)
{
  var {:scalar} Wait_6: int;

  anon0:
    Wait_6 := actual_Wait_6;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Wait_6 == 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1430 := 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1430 := 1;
    goto L1;

  anon5_Then:
    assume {:partition} Wait_6 != 0;
    Tmp_1430 := 1;
    goto L1;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_12: int)
{
  var vslice_dummy_var_210: int;

  anon0:
    call {:si_unique_call 1619} vslice_dummy_var_210 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_NT_ERROR"} {:osmodel} sdv_NT_ERROR(actual_Status_18: int) returns (Tmp_1434: int);
  free ensures {:va_keep} Tmp_1434 == 0 || Tmp_1434 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_NT_ERROR"} {:osmodel} sdv_NT_ERROR(actual_Status_18: int) returns (Tmp_1434: int)
{
  var {:scalar} choice_37: int;
  var {:scalar} Tmp_1436: int;
  var {:scalar} Status_18: int;

  anon0:
    Status_18 := actual_Status_18;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Status_18 >= 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 536870911 >= Status_18;
    Tmp_1434 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} Status_18 > 536870911;
    goto L9;

  L9:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} choice_37 != 0;
    Tmp_1436 := 1;
    goto L14;

  L14:
    Tmp_1434 := Tmp_1436;
    goto L1;

  anon8_Then:
    assume {:partition} choice_37 == 0;
    Tmp_1436 := 0;
    goto L14;

  anon7_Then:
    assume {:partition} 0 > Status_18;
    goto L9;
}



procedure {:origName "IoReleaseVpbSpinLock"} {:osmodel} IoReleaseVpbSpinLock(actual_Irql_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoReleaseVpbSpinLock"} {:osmodel} IoReleaseVpbSpinLock(actual_Irql_1: int)
{
  var {:scalar} Irql_1: int;
  var vslice_dummy_var_211: int;

  anon0:
    call {:si_unique_call 1620} vslice_dummy_var_211 := __HAVOC_malloc(4);
    Irql_1 := actual_Irql_1;
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int)
{
  var {:pointer} SpinLock_2: int;
  var vslice_dummy_var_212: int;

  anon0:
    call {:si_unique_call 1621} vslice_dummy_var_212 := __HAVOC_malloc(4);
    SpinLock_2 := actual_SpinLock_2;
    assume {:nonnull} SpinLock_2 != 0;
    assume SpinLock_2 > 0;
    return;
}



procedure {:origName "IoBuildAsynchronousFsdRequest"} {:osmodel} IoBuildAsynchronousFsdRequest(actual_MajorFunction_1: int, actual_DeviceObject_8: int, actual_Buffer_16: int, actual_Length_19: int, actual_StartingOffset_1: int, actual_IoStatusBlock_2: int) returns (Tmp_1441: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoBuildAsynchronousFsdRequest"} {:osmodel} IoBuildAsynchronousFsdRequest(actual_MajorFunction_1: int, actual_DeviceObject_8: int, actual_Buffer_16: int, actual_Length_19: int, actual_StartingOffset_1: int, actual_IoStatusBlock_2: int) returns (Tmp_1441: int)
{
  var {:pointer} Tmp_1443: int;
  var {:scalar} MajorFunction_1: int;
  var {:pointer} IoStatusBlock_2: int;

  anon0:
    MajorFunction_1 := actual_MajorFunction_1;
    IoStatusBlock_2 := actual_IoStatusBlock_2;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} IoStatusBlock_2 != 0;
    havoc IoStatusBlock_2;
    goto L9;

  L9:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_irp != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_irp > 0;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_irp != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_irp > 0;
    havoc Tmp_1443;
    assume {:nonnull} Tmp_1443 != 0;
    assume Tmp_1443 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} IoStatusBlock_2 != 0;
    assume {:nonnull} IoStatusBlock_2 != 0;
    assume IoStatusBlock_2 > 0;
    goto L16;

  L16:
    Tmp_1441 := sdv_IoBuildAsynchronousFsdRequest_irp;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} IoStatusBlock_2 == 0;
    goto L16;

  anon10_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IoStatusBlock_2 != 0;
    assume {:nonnull} IoStatusBlock_2 != 0;
    assume IoStatusBlock_2 > 0;
    goto L20;

  L20:
    Tmp_1441 := 0;
    goto L1;

  anon11_Then:
    assume {:partition} IoStatusBlock_2 == 0;
    goto L20;

  anon9_Then:
    assume {:partition} IoStatusBlock_2 == 0;
    goto L9;
}



procedure {:origName "ExIsResourceAcquiredExclusiveLite"} {:osmodel} ExIsResourceAcquiredExclusiveLite(actual_Resource_12: int) returns (Tmp_1444: int);
  free ensures {:va_keep} Tmp_1444 == 1 || Tmp_1444 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExIsResourceAcquiredExclusiveLite"} {:osmodel} ExIsResourceAcquiredExclusiveLite(actual_Resource_12: int) returns (Tmp_1444: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1444 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1444 := 0;
    goto L1;
}



procedure {:origName "MmUnlockPages"} {:osmodel} MmUnlockPages(actual_MemoryDescriptorList_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "MmUnlockPages"} {:osmodel} MmUnlockPages(actual_MemoryDescriptorList_1: int)
{
  var vslice_dummy_var_213: int;

  anon0:
    call {:si_unique_call 1622} vslice_dummy_var_213 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes: int, actual_Tag_1: int) returns (Tmp_1448: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes: int, actual_Tag_1: int) returns (Tmp_1448: int)
{
  var {:pointer} sdv_863: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1623} sdv_863 := __HAVOC_malloc(NumberOfBytes);
    Tmp_1448 := sdv_863;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1448 := 0;
    goto L1;
}



procedure {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_9: int) returns (Tmp_1450: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_9: int) returns (Tmp_1450: int)
{
  var {:pointer} ioWorkItem: int;
  var {:scalar} Tmp_1452: int;
  var {:pointer} sdv_865: int;

  anon0:
    call {:si_unique_call 1624} sdv_865 := __HAVOC_malloc(1);
    ioWorkItem := sdv_865;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ioWorkItem == 0;
    Tmp_1452 := 0;
    goto L27;

  L27:
    assume Tmp_1452 != 0;
    assume {:nonnull} ioWorkItem != 0;
    assume ioWorkItem > 0;
    Tmp_1450 := ioWorkItem;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} ioWorkItem != 0;
    Tmp_1452 := 1;
    goto L27;

  anon6_Then:
    Tmp_1450 := 0;
    goto L1;
}



procedure {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int)
{
  var {:pointer} pdrivo: int;
  var vslice_dummy_var_214: int;

  anon0:
    call {:si_unique_call 1625} vslice_dummy_var_214 := __HAVOC_malloc(4);
    pdrivo := actual_pdrivo;
    call {:si_unique_call 1626} FatUnload(pdrivo);
    return;
}



procedure {:origName "IoGetCurrentProcess"} {:osmodel} IoGetCurrentProcess() returns (Tmp_1455: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "IoGetCurrentProcess"} {:osmodel} IoGetCurrentProcess() returns (Tmp_1455: int)
{
  var {:pointer} sdv_866: int;
  var {:pointer} p_5: int;

  anon0:
    call {:si_unique_call 1627} sdv_866 := __HAVOC_malloc(1);
    p_5 := sdv_866;
    Tmp_1455 := p_5;
    return;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_215: int;

  anon0:
    call {:si_unique_call 1628} vslice_dummy_var_215 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_216: int;

  anon0:
    call {:si_unique_call 1629} vslice_dummy_var_216 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ObDereferenceObject"} {:osmodel} sdv_ObDereferenceObject(actual_Object_3: int) returns (Tmp_1461: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ObDereferenceObject"} {:osmodel} sdv_ObDereferenceObject(actual_Object_3: int) returns (Tmp_1461: int)
{
  var {:scalar} p_6: int;

  anon0:
    Tmp_1461 := p_6;
    return;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_1: int) returns (Tmp_1463: int);
  free ensures {:va_keep} Tmp_1463 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_1: int) returns (Tmp_1463: int)
{

  anon0:
    Tmp_1463 := 0;
    return;
}



procedure {:origName "ExGetExclusiveWaiterCount"} {:osmodel} ExGetExclusiveWaiterCount(actual_Resource_13: int) returns (Tmp_1465: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExGetExclusiveWaiterCount"} {:osmodel} ExGetExclusiveWaiterCount(actual_Resource_13: int) returns (Tmp_1465: int)
{
  var {:scalar} sdv_868: int;

  anon0:
    Tmp_1465 := sdv_868;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1467: int);
  free ensures {:va_keep} Tmp_1467 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1467: int)
{

  anon0:
    Tmp_1467 := -1073741823;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_1469: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_1469: int)
{
  var {:pointer} sdv_870: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1630} sdv_870 := __HAVOC_malloc(1);
    Tmp_1469 := sdv_870;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1469 := 0;
    goto L1;
}



procedure {:origName "FsRtlNotifyFullReportChange"} {:osmodel} FsRtlNotifyFullReportChange(actual_NotifySync_1: int, actual_NotifyList_1: int, actual_FullTargetName: int, actual_TargetNameOffset: int, actual_StreamName: int, actual_NormalizedParentName: int, actual_FilterMatch: int, actual_Action: int, actual_TargetContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlNotifyFullReportChange"} {:osmodel} FsRtlNotifyFullReportChange(actual_NotifySync_1: int, actual_NotifyList_1: int, actual_FullTargetName: int, actual_TargetNameOffset: int, actual_StreamName: int, actual_NormalizedParentName: int, actual_FilterMatch: int, actual_Action: int, actual_TargetContext: int)
{
  var vslice_dummy_var_217: int;

  anon0:
    call {:si_unique_call 1631} vslice_dummy_var_217 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeClearEvent"} {:osmodel} KeClearEvent(actual_Event_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeClearEvent"} {:osmodel} KeClearEvent(actual_Event_4: int)
{
  var {:pointer} Event_4: int;
  var vslice_dummy_var_218: int;

  anon0:
    call {:si_unique_call 1632} vslice_dummy_var_218 := __HAVOC_malloc(4);
    Event_4 := actual_Event_4;
    assume {:nonnull} Event_4 != 0;
    assume Event_4 > 0;
    return;
}



procedure {:origName "FatGetCompatibilityModeValue"} FatGetCompatibilityModeValue(actual_ValueName_1: int, actual_Value_1: int) returns (Tmp_1475: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1475 == -1073741801 || Tmp_1475 == -1073741811 || Tmp_1475 == -1073741823 || Tmp_1475 == 0 || Tmp_1475 == 5 || Tmp_1475 == -1073741789 || Tmp_1475 == -1073741772 || Tmp_1475 == -1073741727;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetCompatibilityModeValue"} FatGetCompatibilityModeValue(actual_ValueName_1: int, actual_Value_1: int) returns (Tmp_1475: int)
{
  var {:pointer} Handle_2: int;
  var {:pointer} DataPtr: int;
  var {:scalar} ResultLength_1: int;
  var {:scalar} Status_19: int;
  var {:pointer} Buffer_17: int;
  var {:scalar} KeyName: int;
  var {:pointer} sdv_874: int;
  var {:pointer} Tmp_1476: int;
  var {:scalar} RequestLength: int;
  var {:pointer} KeyValueInformation_1: int;
  var {:pointer} Value_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;

  anon0:
    call {:si_unique_call 1633} Handle_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1634} Buffer_17 := __HAVOC_malloc(4);
    call {:si_unique_call 1635} vslice_dummy_var_219 := __HAVOC_malloc(24);
    call {:si_unique_call 1636} KeyName := __HAVOC_malloc(12);
    Value_1 := actual_Value_1;
    assume {:nonnull} Buffer_17 != 0;
    assume Buffer_17 > 0;
    call {:si_unique_call 1637} boogieTmp := __HAVOC_malloc(368);
    assume {:nonnull} KeyName != 0;
    assume KeyName > 0;
    assume {:nonnull} KeyName != 0;
    assume KeyName > 0;
    assume {:nonnull} KeyName != 0;
    assume KeyName > 0;
    call {:si_unique_call 1638} sdv_InitializeObjectAttributes(0, 0, 64, 0, 0);
    call {:si_unique_call 1639} Status_19 := ZwOpenKey(Handle_2, 131097, 0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Status_19 >= 0;
    RequestLength := 92;
    KeyValueInformation_1 := Buffer_17;
    goto L29;

  L29:
    call {:si_unique_call 1640} ResultLength_1, Status_19, sdv_874, Tmp_1476, RequestLength, KeyValueInformation_1 := FatGetCompatibilityModeValue_loop_L29(ResultLength_1, Status_19, Buffer_17, sdv_874, Tmp_1476, RequestLength, KeyValueInformation_1);
    goto L29_last;

  L29_last:
    call {:si_unique_call 1645} Tmp_1476 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1476 != 0;
    assume Tmp_1476 > 0;
    call {:si_unique_call 1646} Status_19 := ZwQueryValueKey(0, 0, 1, 0, RequestLength, Tmp_1476);
    assume {:nonnull} Tmp_1476 != 0;
    assume Tmp_1476 > 0;
    havoc ResultLength_1;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Status_19 == 5;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} KeyValueInformation_1 != Buffer_17;
    call {:si_unique_call 1641} sdv_ExFreePool(0);
    goto L36;

  L36:
    RequestLength := RequestLength + 256;
    call {:si_unique_call 1642} sdv_874 := ExAllocatePoolWithTag(1, RequestLength, 544497990);
    KeyValueInformation_1 := sdv_874;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} KeyValueInformation_1 == 0;
    Tmp_1475 := -1073741801;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} KeyValueInformation_1 != 0;
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} KeyValueInformation_1 == Buffer_17;
    goto L36;

  anon16_Then:
    assume {:partition} Status_19 != 5;
    call {:si_unique_call 1643} vslice_dummy_var_220 := ZwClose(0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Status_19 >= 0;
    assume {:nonnull} KeyValueInformation_1 != 0;
    assume KeyValueInformation_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    DataPtr := KeyValueInformation_1;
    assume {:nonnull} DataPtr != 0;
    assume DataPtr > 0;
    assume {:nonnull} Value_1 != 0;
    assume Value_1 > 0;
    goto L47;

  L47:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} KeyValueInformation_1 != Buffer_17;
    call {:si_unique_call 1644} sdv_ExFreePool(0);
    goto L53;

  L53:
    Tmp_1475 := Status_19;
    goto L1;

  anon19_Then:
    assume {:partition} KeyValueInformation_1 == Buffer_17;
    goto L53;

  anon20_Then:
    Status_19 := -1073741772;
    goto L47;

  anon18_Then:
    assume {:partition} 0 > Status_19;
    goto L47;

  anon15_Then:
    assume {:partition} 0 > Status_19;
    Tmp_1475 := Status_19;
    goto L1;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_221: int;

  anon0:
    call {:si_unique_call 1647} vslice_dummy_var_221 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatUnload"} FatUnload(actual_DriverObject_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatUnload"} FatUnload(actual_DriverObject_1: int)
{
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;

  anon0:
    call {:si_unique_call 1648} vslice_dummy_var_222 := __HAVOC_malloc(4);
    call {:si_unique_call 1649} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 1650} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 1651} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 1652} vslice_dummy_var_223 := ExDeleteResourceLite(0);
    call {:si_unique_call 1653} IoFreeWorkItem(0);
    call {:si_unique_call 1654} vslice_dummy_var_224 := sdv_ObDereferenceObject(0);
    call {:si_unique_call 1655} vslice_dummy_var_225 := sdv_ObDereferenceObject(0);
    return;
}



procedure {:origName "DriverEntry"} DriverEntry(actual_DriverObject_2: int, actual_RegistryPath: int) returns (Tmp_1481: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1481 == 0 || Tmp_1481 == -1073741670 || Tmp_1481 == -1073741824 || Tmp_1481 == -1073741771 || Tmp_1481 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "DriverEntry"} DriverEntry(actual_DriverObject_2: int, actual_RegistryPath: int) returns (Tmp_1481: int)
{
  var {:pointer} Tmp_1482: int;
  var {:scalar} ValueName_2: int;
  var {:pointer} Tmp_1483: int;
  var {:pointer} Tmp_1484: int;
  var {:dopa} {:scalar} Value_2: int;
  var {:pointer} Tmp_1485: int;
  var {:scalar} UnicodeString_1: int;
  var {:pointer} Tmp_1486: int;
  var {:scalar} MaxDepth: int;
  var {:scalar} Status_20: int;
  var {:pointer} Tmp_1487: int;
  var {:pointer} Tmp_1488: int;
  var {:pointer} Tmp_1489: int;
  var {:pointer} Tmp_1490: int;
  var {:pointer} Tmp_1491: int;
  var {:scalar} sdv_883: int;
  var {:pointer} Tmp_1492: int;
  var {:pointer} sdv_884: int;
  var {:pointer} Tmp_1493: int;
  var {:pointer} Tmp_1494: int;
  var {:scalar} sdv_885: int;
  var {:pointer} sdv_886: int;
  var {:pointer} Tmp_1495: int;
  var {:pointer} Tmp_1496: int;
  var {:pointer} Tmp_1497: int;
  var {:pointer} Tmp_1498: int;
  var {:pointer} Tmp_1499: int;
  var {:pointer} Tmp_1500: int;
  var {:pointer} Tmp_1501: int;
  var {:pointer} Tmp_1502: int;
  var {:pointer} DriverObject_2: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;

  anon0:
    call {:si_unique_call 1656} ValueName_2 := __HAVOC_malloc(12);
    call {:si_unique_call 1657} Value_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1658} UnicodeString_1 := __HAVOC_malloc(12);
    DriverObject_2 := actual_DriverObject_2;
    call {:si_unique_call 1659} Tmp_1482 := __HAVOC_malloc(112);
    call {:si_unique_call 1660} Tmp_1483 := __HAVOC_malloc(112);
    call {:si_unique_call 1661} Tmp_1485 := __HAVOC_malloc(112);
    call {:si_unique_call 1662} Tmp_1486 := __HAVOC_malloc(112);
    call {:si_unique_call 1663} Tmp_1487 := __HAVOC_malloc(112);
    call {:si_unique_call 1664} Tmp_1488 := __HAVOC_malloc(112);
    call {:si_unique_call 1665} Tmp_1489 := __HAVOC_malloc(112);
    call {:si_unique_call 1666} Tmp_1490 := __HAVOC_malloc(112);
    call {:si_unique_call 1667} Tmp_1491 := __HAVOC_malloc(112);
    call {:si_unique_call 1668} Tmp_1492 := __HAVOC_malloc(112);
    call {:si_unique_call 1669} Tmp_1493 := __HAVOC_malloc(112);
    call {:si_unique_call 1670} Tmp_1494 := __HAVOC_malloc(112);
    call {:si_unique_call 1671} Tmp_1495 := __HAVOC_malloc(112);
    call {:si_unique_call 1672} Tmp_1496 := __HAVOC_malloc(112);
    call {:si_unique_call 1673} Tmp_1497 := __HAVOC_malloc(112);
    call {:si_unique_call 1674} Tmp_1498 := __HAVOC_malloc(40);
    call {:si_unique_call 1675} Tmp_1499 := __HAVOC_malloc(112);
    call {:si_unique_call 1676} Tmp_1500 := __HAVOC_malloc(112);
    call {:si_unique_call 1677} Tmp_1501 := __HAVOC_malloc(20);
    call {:si_unique_call 1678} Tmp_1502 := __HAVOC_malloc(112);
    Tmp_1501 := strConst__li2bpl4;
    call {:si_unique_call 1679} RtlInitUnicodeString(UnicodeString_1, Tmp_1501);
    call {:si_unique_call 1680} Status_20 := IoCreateDevice(0, 0, 0, 8, 0, 0, FatDiskFileSystemDeviceObject);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Status_20 >= 0;
    Tmp_1498 := strConst__li2bpl5;
    call {:si_unique_call 1681} RtlInitUnicodeString(UnicodeString_1, Tmp_1498);
    call {:si_unique_call 1682} Status_20 := IoCreateDevice(0, 0, 0, 3, 0, 0, FatCdromFileSystemDeviceObject);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status_20 >= 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1492;
    assume {:nonnull} Tmp_1492 != 0;
    assume Tmp_1492 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1500;
    assume {:nonnull} Tmp_1500 != 0;
    assume Tmp_1500 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1496;
    assume {:nonnull} Tmp_1496 != 0;
    assume Tmp_1496 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1493;
    assume {:nonnull} Tmp_1493 != 0;
    assume Tmp_1493 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1491;
    assume {:nonnull} Tmp_1491 != 0;
    assume Tmp_1491 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1490;
    assume {:nonnull} Tmp_1490 != 0;
    assume Tmp_1490 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1485;
    assume {:nonnull} Tmp_1485 != 0;
    assume Tmp_1485 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1497;
    assume {:nonnull} Tmp_1497 != 0;
    assume Tmp_1497 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1486;
    assume {:nonnull} Tmp_1486 != 0;
    assume Tmp_1486 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1495;
    assume {:nonnull} Tmp_1495 != 0;
    assume Tmp_1495 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1489;
    assume {:nonnull} Tmp_1489 != 0;
    assume Tmp_1489 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1499;
    assume {:nonnull} Tmp_1499 != 0;
    assume Tmp_1499 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1482;
    assume {:nonnull} Tmp_1482 != 0;
    assume Tmp_1482 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1488;
    assume {:nonnull} Tmp_1488 != 0;
    assume Tmp_1488 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1494;
    assume {:nonnull} Tmp_1494 != 0;
    assume Tmp_1494 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1487;
    assume {:nonnull} Tmp_1487 != 0;
    assume Tmp_1487 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1483;
    assume {:nonnull} Tmp_1483 != 0;
    assume Tmp_1483 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    havoc Tmp_1502;
    assume {:nonnull} Tmp_1502 != 0;
    assume Tmp_1502 > 0;
    assume {:nonnull} DriverObject_2 != 0;
    assume DriverObject_2 > 0;
    call {:si_unique_call 1683} sdv_RtlZeroMemory(0, 112);
    call {:si_unique_call 1684} sdv_RtlZeroMemory(0, 156);
    call {:si_unique_call 1685} InitializeListHead(VcbQueue__FAT_DATA(FatData));
    call {:si_unique_call 1686} InitializeListHead(AsyncCloseList__FAT_DATA(FatData));
    call {:si_unique_call 1687} InitializeListHead(DelayedCloseList__FAT_DATA(FatData));
    call {:si_unique_call 1688} sdv_884 := IoAllocateWorkItem(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 1689} Tmp_1484 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1484 != 0;
    assume Tmp_1484 > 0;
    call {:si_unique_call 1690} sdv_KeInitializeSpinLock(Tmp_1484);
    assume {:nonnull} Tmp_1484 != 0;
    assume Tmp_1484 > 0;
    call {:si_unique_call 1691} sdv_885 := corral_nondet();
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_885 != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} sdv_885 != 1;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_885 == 2;
    MaxDepth := 16;
    goto L100;

  L100:
    call {:si_unique_call 1692} sdv_886 := IoGetCurrentProcess();
    assume {:nonnull} ValueName_2 != 0;
    assume ValueName_2 > 0;
    assume {:nonnull} ValueName_2 != 0;
    assume ValueName_2 > 0;
    assume {:nonnull} ValueName_2 != 0;
    assume ValueName_2 > 0;
    call {:si_unique_call 1693} Status_20 := FatGetCompatibilityModeValue(ValueName_2, Value_2);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Status_20 >= 0;
    assume {:nonnull} Value_2 != 0;
    assume Value_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L132;

  L132:
    assume {:nonnull} ValueName_2 != 0;
    assume ValueName_2 > 0;
    assume {:nonnull} ValueName_2 != 0;
    assume ValueName_2 > 0;
    assume {:nonnull} ValueName_2 != 0;
    assume ValueName_2 > 0;
    call {:si_unique_call 1694} Status_20 := FatGetCompatibilityModeValue(ValueName_2, Value_2);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Status_20 >= 0;
    assume {:nonnull} Value_2 != 0;
    assume Value_2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L143;

  L143:
    call {:si_unique_call 1695} vslice_dummy_var_226 := ExInitializeResourceLite(0);
    call {:si_unique_call 1696} ExInitializeNPagedLookasideList(0, 0, 0, 16, 68, -915119802, MaxDepth);
    call {:si_unique_call 1697} ExInitializeNPagedLookasideList(0, 0, 0, 16, 52, -831233722, MaxDepth);
    call {:si_unique_call 1698} ExInitializeNPagedLookasideList(0, 0, 0, 16, 56, -982228666, MaxDepth);
    call {:si_unique_call 1699} InitializeSListHead(FatCloseContextSList);
    call {:si_unique_call 1700} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 1701} KeInitializeEvent(FatReserveEvent, 1, 1);
    call {:si_unique_call 1702} vslice_dummy_var_227 := sdv_ObReferenceObject(0);
    call {:si_unique_call 1703} vslice_dummy_var_228 := sdv_ObReferenceObject(0);
    call {:si_unique_call 1704} sdv_883 := FatIsFujitsuFMR();
    Tmp_1481 := 0;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto L140;

  L140:
    goto L143;

  anon26_Then:
    assume {:partition} 0 > Status_20;
    goto L140;

  anon25_Then:
    goto L129;

  L129:
    goto L132;

  anon24_Then:
    assume {:partition} 0 > Status_20;
    goto L129;

  anon28_Then:
    assume {:partition} sdv_885 != 2;
    goto L100;

  anon29_Then:
    assume {:partition} sdv_885 == 1;
    MaxDepth := 8;
    goto L100;

  anon23_Then:
    assume {:partition} sdv_885 == 0;
    MaxDepth := 4;
    goto L100;

  anon30_Then:
    call {:si_unique_call 1705} IoDeleteDevice(0);
    call {:si_unique_call 1706} IoDeleteDevice(0);
    Tmp_1481 := -1073741670;
    goto L1;

  anon22_Then:
    assume {:partition} 0 > Status_20;
    call {:si_unique_call 1707} IoDeleteDevice(0);
    Tmp_1481 := Status_20;
    goto L1;

  anon21_Then:
    assume {:partition} 0 > Status_20;
    Tmp_1481 := Status_20;
    goto L1;
}



procedure {:origName "FatIsFujitsuFMR"} FatIsFujitsuFMR() returns (Tmp_1503: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1503 == 0 || Tmp_1503 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsFujitsuFMR"} FatIsFujitsuFMR() returns (Tmp_1503: int)
{
  var {:pointer} Handle_3: int;
  var {:scalar} ValueName_3: int;
  var {:scalar} ResultLength_2: int;
  var {:scalar} Status_21: int;
  var {:pointer} Buffer_18: int;
  var {:scalar} KeyName_1: int;
  var {:scalar} sdv_892: int;
  var {:pointer} sdv_893: int;
  var {:scalar} RequestLength_1: int;
  var {:pointer} KeyValueInformation_2: int;
  var {:pointer} Tmp_1506: int;
  var {:scalar} Result_3: int;
  var boogieTmp: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;

  anon0:
    call {:si_unique_call 1708} Handle_3 := __HAVOC_malloc(4);
    call {:si_unique_call 1709} ValueName_3 := __HAVOC_malloc(12);
    call {:si_unique_call 1710} Buffer_18 := __HAVOC_malloc(4);
    call {:si_unique_call 1711} vslice_dummy_var_229 := __HAVOC_malloc(24);
    call {:si_unique_call 1712} KeyName_1 := __HAVOC_malloc(12);
    assume {:nonnull} Buffer_18 != 0;
    assume Buffer_18 > 0;
    call {:si_unique_call 1713} boogieTmp := __HAVOC_malloc(368);
    call {:si_unique_call 1714} vslice_dummy_var_231 := __HAVOC_malloc(52);
    assume {:nonnull} KeyName_1 != 0;
    assume KeyName_1 > 0;
    assume {:nonnull} KeyName_1 != 0;
    assume KeyName_1 > 0;
    assume {:nonnull} KeyName_1 != 0;
    assume KeyName_1 > 0;
    call {:si_unique_call 1715} sdv_InitializeObjectAttributes(0, 0, 64, 0, 0);
    call {:si_unique_call 1716} Status_21 := ZwOpenKey(Handle_3, 131097, 0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Status_21 >= 0;
    assume {:nonnull} ValueName_3 != 0;
    assume ValueName_3 > 0;
    assume {:nonnull} ValueName_3 != 0;
    assume ValueName_3 > 0;
    assume {:nonnull} ValueName_3 != 0;
    assume ValueName_3 > 0;
    RequestLength_1 := 92;
    KeyValueInformation_2 := Buffer_18;
    goto L35;

  L35:
    call {:si_unique_call 1717} ResultLength_2, Status_21, sdv_893, RequestLength_1, KeyValueInformation_2, Tmp_1506 := FatIsFujitsuFMR_loop_L35(ResultLength_2, Status_21, Buffer_18, sdv_893, RequestLength_1, KeyValueInformation_2, Tmp_1506);
    goto L35_last;

  L35_last:
    call {:si_unique_call 1723} Tmp_1506 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1506 != 0;
    assume Tmp_1506 > 0;
    call {:si_unique_call 1724} Status_21 := ZwQueryValueKey(0, 0, 1, 0, RequestLength_1, Tmp_1506);
    assume {:nonnull} Tmp_1506 != 0;
    assume Tmp_1506 > 0;
    havoc ResultLength_2;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Status_21 == 5;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} KeyValueInformation_2 != Buffer_18;
    call {:si_unique_call 1718} sdv_ExFreePool(0);
    goto L42;

  L42:
    RequestLength_1 := RequestLength_1 + 256;
    call {:si_unique_call 1719} sdv_893 := ExAllocatePoolWithTag(1, RequestLength_1, 544497990);
    KeyValueInformation_2 := sdv_893;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} KeyValueInformation_2 == 0;
    Tmp_1503 := 0;
    goto L1;

  L1:
    return;

  anon24_Then:
    assume {:partition} KeyValueInformation_2 != 0;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    assume false;
    return;

  anon19_Then:
    assume {:partition} KeyValueInformation_2 == Buffer_18;
    goto L42;

  anon18_Then:
    assume {:partition} Status_21 != 5;
    call {:si_unique_call 1720} vslice_dummy_var_230 := ZwClose(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Status_21 >= 0;
    assume {:nonnull} KeyValueInformation_2 != 0;
    assume KeyValueInformation_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 1721} sdv_892 := RtlCompareMemory(0, 0, 24);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_892 == 24;
    Result_3 := 1;
    goto L61;

  L61:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} KeyValueInformation_2 != Buffer_18;
    call {:si_unique_call 1722} sdv_ExFreePool(0);
    goto L62;

  L62:
    Tmp_1503 := Result_3;
    goto L1;

  anon23_Then:
    assume {:partition} KeyValueInformation_2 == Buffer_18;
    goto L62;

  anon22_Then:
    assume {:partition} sdv_892 != 24;
    goto L53;

  L53:
    Result_3 := 0;
    goto L61;

  anon21_Then:
    goto L53;

  anon20_Then:
    assume {:partition} 0 > Status_21;
    goto L53;

  anon17_Then:
    assume {:partition} 0 > Status_21;
    Tmp_1503 := 0;
    goto L1;
}



procedure {:origName "_sdv_init13"} _sdv_init13();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init13"} _sdv_init13()
{
  var vslice_dummy_var_232: int;

  anon0:
    call {:si_unique_call 1725} vslice_dummy_var_232 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatReadVolumeFile"} FatReadVolumeFile(actual_IrpContext_70: int, actual_Vcb_43: int, actual_StartingVbo_2: int, actual_ByteCount_8: int, actual_Bcb_8: int, actual_Buffer_21: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatReadVolumeFile"} FatReadVolumeFile(actual_IrpContext_70: int, actual_Vcb_43: int, actual_StartingVbo_2: int, actual_ByteCount_8: int, actual_Bcb_8: int, actual_Buffer_21: int)
{
  var {:scalar} Vbo_4: int;
  var {:scalar} sdv_899: int;
  var {:scalar} Tmp_1523: int;
  var {:pointer} IrpContext_70: int;
  var {:scalar} StartingVbo_2: int;
  var vslice_dummy_var_233: int;

  anon0:
    call {:si_unique_call 1726} Vbo_4 := __HAVOC_malloc(20);
    call {:si_unique_call 1727} vslice_dummy_var_233 := __HAVOC_malloc(4);
    IrpContext_70 := actual_IrpContext_70;
    StartingVbo_2 := actual_StartingVbo_2;
    call {:si_unique_call 1728} sdv_do_paged_code_check();
    assume {:nonnull} Vbo_4 != 0;
    assume Vbo_4 > 0;
    assume {:nonnull} IrpContext_70 != 0;
    assume IrpContext_70 > 0;
    havoc Tmp_1523;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Tmp_1523 == 0;
    goto L25;

  L25:
    call {:si_unique_call 1729} sdv_899 := corral_nondet();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} sdv_899 == 0;
    assume {:nonnull} IrpContext_70 != 0;
    assume IrpContext_70 > 0;
    call {:si_unique_call 1730} ExRaiseStatus(-1073741608);
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} sdv_899 != 0;
    goto L1;

  anon6_Then:
    assume {:partition} Tmp_1523 != 0;
    goto L25;
}



procedure {:origName "FatUnpinRepinnedBcbs"} FatUnpinRepinnedBcbs(actual_IrpContext_71: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatUnpinRepinnedBcbs"} FatUnpinRepinnedBcbs(actual_IrpContext_71: int)
{
  var {:scalar} i_11: int;
  var {:scalar} Tmp_1525: int;
  var {:pointer} Tmp_1526: int;
  var {:pointer} Tmp_1527: int;
  var {:pointer} Saved: int;
  var {:pointer} Tmp_1529: int;
  var {:pointer} Tmp_1530: int;
  var {:scalar} Tmp_1531: int;
  var {:scalar} j: int;
  var {:scalar} Tmp_1533: int;
  var {:scalar} Iosb_13: int;
  var {:pointer} FileObject_28: int;
  var {:pointer} Tmp_1534: int;
  var {:scalar} Tmp_1535: int;
  var {:pointer} Tmp_1537: int;
  var {:pointer} Tmp_1538: int;
  var {:scalar} Tmp_1539: int;
  var {:pointer} sdv_902: int;
  var {:scalar} WriteThroughToDisk: int;
  var {:pointer} Tmp_1540: int;
  var {:pointer} Tmp_1541: int;
  var {:pointer} Tmp_1542: int;
  var {:scalar} Tmp_1543: int;
  var {:scalar} sdv_903: int;
  var {:pointer} Tmp_1544: int;
  var {:scalar} ForceVerify: int;
  var {:pointer} Repinned: int;
  var {:scalar} Tmp_1546: int;
  var {:scalar} Tmp_1547: int;
  var {:scalar} Tmp_1548: int;
  var {:scalar} RaiseIosb: int;
  var {:pointer} Tmp_1549: int;
  var {:pointer} Tmp_1551: int;
  var {:pointer} IrpContext_71: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;

  anon0:
    call {:si_unique_call 1731} Iosb_13 := __HAVOC_malloc(12);
    call {:si_unique_call 1732} RaiseIosb := __HAVOC_malloc(12);
    call {:si_unique_call 1733} vslice_dummy_var_234 := __HAVOC_malloc(4);
    IrpContext_71 := actual_IrpContext_71;
    call {:si_unique_call 1734} Tmp_1526 := __HAVOC_malloc(16);
    call {:si_unique_call 1735} Tmp_1529 := __HAVOC_malloc(16);
    call {:si_unique_call 1736} Tmp_1530 := __HAVOC_malloc(16);
    call {:si_unique_call 1737} Tmp_1534 := __HAVOC_malloc(16);
    call {:si_unique_call 1738} Tmp_1537 := __HAVOC_malloc(16);
    call {:si_unique_call 1739} Tmp_1538 := __HAVOC_malloc(16);
    call {:si_unique_call 1740} Tmp_1549 := __HAVOC_malloc(16);
    call {:si_unique_call 1741} Tmp_1551 := __HAVOC_malloc(16);
    FileObject_28 := 0;
    ForceVerify := 0;
    call {:si_unique_call 1742} sdv_do_paged_code_check();
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    Repinned := Repinned__IRP_CONTEXT(IrpContext_71);
    assume {:nonnull} RaiseIosb != 0;
    assume RaiseIosb > 0;
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    goto L18;

  L18:
    Tmp_1531 := 0;
    goto L19;

  L19:
    WriteThroughToDisk := Tmp_1531;
    goto L20;

  L20:
    call {:si_unique_call 1743} i_11, Tmp_1525, Tmp_1526, Saved, Tmp_1529, Tmp_1530, j, Tmp_1533, FileObject_28, Tmp_1534, Tmp_1535, Tmp_1537, Tmp_1538, Tmp_1539, sdv_902, Tmp_1543, Tmp_1544, ForceVerify, Repinned, Tmp_1546, Tmp_1547, Tmp_1548, Tmp_1549, Tmp_1551, vslice_dummy_var_235 := FatUnpinRepinnedBcbs_loop_L20(i_11, Tmp_1525, Tmp_1526, Saved, Tmp_1529, Tmp_1530, j, Tmp_1533, Iosb_13, FileObject_28, Tmp_1534, Tmp_1535, Tmp_1537, Tmp_1538, Tmp_1539, sdv_902, WriteThroughToDisk, Tmp_1543, Tmp_1544, ForceVerify, Repinned, Tmp_1546, Tmp_1547, Tmp_1548, RaiseIosb, Tmp_1549, Tmp_1551, IrpContext_71, vslice_dummy_var_235);
    goto L20_last;

  L20_last:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Repinned != 0;
    i_11 := 0;
    goto L23;

  L23:
    call {:si_unique_call 1744} i_11, Tmp_1525, Tmp_1526, Tmp_1529, Tmp_1530, j, Tmp_1533, FileObject_28, Tmp_1534, Tmp_1535, Tmp_1537, Tmp_1538, Tmp_1539, sdv_902, Tmp_1543, Tmp_1544, ForceVerify, Tmp_1546, Tmp_1547, Tmp_1548, Tmp_1549, Tmp_1551, vslice_dummy_var_235 := FatUnpinRepinnedBcbs_loop_L23(i_11, Tmp_1525, Tmp_1526, Tmp_1529, Tmp_1530, j, Tmp_1533, Iosb_13, FileObject_28, Tmp_1534, Tmp_1535, Tmp_1537, Tmp_1538, Tmp_1539, sdv_902, WriteThroughToDisk, Tmp_1543, Tmp_1544, ForceVerify, Repinned, Tmp_1546, Tmp_1547, Tmp_1548, RaiseIosb, Tmp_1549, Tmp_1551, IrpContext_71, vslice_dummy_var_235);
    goto L23_last;

  L23_last:
    assume {:CounterLoop 4} {:Counter "i_11"} true;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} 4 > i_11;
    Tmp_1546 := i_11;
    assume {:nonnull} Repinned != 0;
    assume Repinned > 0;
    havoc Tmp_1529;
    assume {:nonnull} Tmp_1529 != 0;
    assume Tmp_1529 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} WriteThroughToDisk != 0;
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    havoc Tmp_1544;
    assume {:nonnull} Tmp_1544 != 0;
    assume Tmp_1544 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    Tmp_1539 := i_11;
    assume {:nonnull} Repinned != 0;
    assume Repinned > 0;
    havoc Tmp_1549;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume Tmp_1539 <= 2;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume Tmp_1539 != 2;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume Tmp_1539 != 1;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume Tmp_1539 != 0;
    goto L114;

  L114:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    FileObject_28 := 0;
    goto L29;

  L29:
    Tmp_1533 := i_11;
    assume {:nonnull} Repinned != 0;
    assume Repinned > 0;
    havoc Tmp_1537;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume Tmp_1533 <= 2;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume Tmp_1533 != 2;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume Tmp_1533 != 1;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume Tmp_1533 != 0;
    goto L124;

  L124:
    assume {:nonnull} Iosb_13 != 0;
    assume Iosb_13 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto L41;

  L41:
    Tmp_1548 := i_11;
    assume {:nonnull} Repinned != 0;
    assume Repinned > 0;
    havoc Tmp_1538;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume Tmp_1548 <= 2;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume Tmp_1548 != 2;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume Tmp_1548 != 1;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume Tmp_1548 != 0;
    goto L26;

  L26:
    i_11 := i_11 + 1;
    goto L26_dummy;

  L26_dummy:
    assume false;
    return;

  anon127_Then:
    assume Tmp_1548 == 0;
    Tmp_1548 := 0;
    assume {:nonnull} Tmp_1538 != 0;
    assume Tmp_1538 > 0;
    goto L26;

  anon126_Then:
    assume Tmp_1548 == 1;
    Tmp_1548 := 1;
    assume {:nonnull} Tmp_1538 != 0;
    assume Tmp_1538 > 0;
    goto L26;

  anon125_Then:
    assume Tmp_1548 == 2;
    Tmp_1548 := 2;
    assume {:nonnull} Tmp_1538 != 0;
    assume Tmp_1538 > 0;
    goto L26;

  anon124_Then:
    assume Tmp_1548 > 2;
    assume {:nonnull} Tmp_1538 != 0;
    assume Tmp_1538 > 0;
    goto L26;

  anon105_Then:
    assume {:nonnull} RaiseIosb != 0;
    assume RaiseIosb > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    goto L43;

  L43:
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} FileObject_28 != 0;
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    j := i_11 + 1;
    goto L49;

  L49:
    call {:si_unique_call 1745} Tmp_1525, Tmp_1526, Tmp_1530, j, Tmp_1534, Tmp_1535, sdv_902, Tmp_1543, Tmp_1547, Tmp_1551 := FatUnpinRepinnedBcbs_loop_L49(Tmp_1525, Tmp_1526, Tmp_1530, j, FileObject_28, Tmp_1534, Tmp_1535, sdv_902, Tmp_1543, Repinned, Tmp_1547, Tmp_1551);
    goto L49_last;

  L49_last:
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} 4 > j;
    Tmp_1543 := j;
    assume {:nonnull} Repinned != 0;
    assume Repinned > 0;
    havoc Tmp_1530;
    assume {:nonnull} Tmp_1530 != 0;
    assume Tmp_1530 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    Tmp_1535 := j;
    assume {:nonnull} Repinned != 0;
    assume Repinned > 0;
    havoc Tmp_1551;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume Tmp_1535 <= 2;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume Tmp_1535 != 2;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume Tmp_1535 != 1;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume Tmp_1535 != 0;
    goto L144;

  L144:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    sdv_902 := 0;
    goto L59;

  L59:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} sdv_902 == FileObject_28;
    Tmp_1525 := j;
    assume {:nonnull} Repinned != 0;
    assume Repinned > 0;
    havoc Tmp_1526;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume Tmp_1525 <= 2;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume Tmp_1525 != 2;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume Tmp_1525 != 1;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume Tmp_1525 != 0;
    goto L154;

  L154:
    Tmp_1547 := j;
    assume {:nonnull} Repinned != 0;
    assume Repinned > 0;
    havoc Tmp_1534;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume Tmp_1547 <= 2;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume Tmp_1547 != 2;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume Tmp_1547 != 1;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume Tmp_1547 != 0;
    goto L54;

  L54:
    j := j + 1;
    goto L54_dummy;

  L54_dummy:
    assume false;
    return;

  anon134_Then:
    assume Tmp_1547 == 0;
    Tmp_1547 := 0;
    assume {:nonnull} Tmp_1534 != 0;
    assume Tmp_1534 > 0;
    goto L54;

  anon133_Then:
    assume Tmp_1547 == 1;
    Tmp_1547 := 1;
    assume {:nonnull} Tmp_1534 != 0;
    assume Tmp_1534 > 0;
    goto L54;

  anon132_Then:
    assume Tmp_1547 == 2;
    Tmp_1547 := 2;
    assume {:nonnull} Tmp_1534 != 0;
    assume Tmp_1534 > 0;
    goto L54;

  anon131_Then:
    assume Tmp_1547 > 2;
    assume {:nonnull} Tmp_1534 != 0;
    assume Tmp_1534 > 0;
    goto L54;

  anon137_Then:
    assume Tmp_1525 == 0;
    Tmp_1525 := 0;
    assume {:nonnull} Tmp_1526 != 0;
    assume Tmp_1526 > 0;
    goto L154;

  anon136_Then:
    assume Tmp_1525 == 1;
    Tmp_1525 := 1;
    assume {:nonnull} Tmp_1526 != 0;
    assume Tmp_1526 > 0;
    goto L154;

  anon135_Then:
    assume Tmp_1525 == 2;
    Tmp_1525 := 2;
    assume {:nonnull} Tmp_1526 != 0;
    assume Tmp_1526 > 0;
    goto L154;

  anon130_Then:
    assume Tmp_1525 > 2;
    assume {:nonnull} Tmp_1526 != 0;
    assume Tmp_1526 > 0;
    goto L154;

  anon112_Then:
    assume {:partition} sdv_902 != FileObject_28;
    goto L54;

  anon118_Then:
    call {:si_unique_call 1746} sdv_902 := __HAVOC_malloc(1);
    goto L59;

  anon140_Then:
    assume Tmp_1535 == 0;
    Tmp_1535 := 0;
    assume {:nonnull} Tmp_1551 != 0;
    assume Tmp_1551 > 0;
    goto L144;

  anon139_Then:
    assume Tmp_1535 == 1;
    Tmp_1535 := 1;
    assume {:nonnull} Tmp_1551 != 0;
    assume Tmp_1551 > 0;
    goto L144;

  anon138_Then:
    assume Tmp_1535 == 2;
    Tmp_1535 := 2;
    assume {:nonnull} Tmp_1551 != 0;
    assume Tmp_1551 > 0;
    goto L144;

  anon129_Then:
    assume Tmp_1535 > 2;
    assume {:nonnull} Tmp_1551 != 0;
    assume Tmp_1551 > 0;
    goto L144;

  anon128_Then:
    goto L54;

  anon111_Then:
    assume {:partition} j >= 4;
    call {:si_unique_call 1747} vslice_dummy_var_235 := corral_nondet();
    ForceVerify := 1;
    goto L41;

  anon110_Then:
    goto L41;

  anon109_Then:
    goto L41;

  anon108_Then:
    goto L41;

  anon107_Then:
    assume {:partition} FileObject_28 == 0;
    goto L41;

  anon106_Then:
    assume {:nonnull} Iosb_13 != 0;
    assume Iosb_13 > 0;
    assume {:nonnull} RaiseIosb != 0;
    assume RaiseIosb > 0;
    assume {:nonnull} Iosb_13 != 0;
    assume Iosb_13 > 0;
    assume {:nonnull} RaiseIosb != 0;
    assume RaiseIosb > 0;
    assume {:nonnull} Iosb_13 != 0;
    assume Iosb_13 > 0;
    assume {:nonnull} RaiseIosb != 0;
    assume RaiseIosb > 0;
    goto L43;

  anon143_Then:
    assume Tmp_1533 == 0;
    Tmp_1533 := 0;
    assume {:nonnull} Tmp_1537 != 0;
    assume Tmp_1537 > 0;
    goto L124;

  anon142_Then:
    assume Tmp_1533 == 1;
    Tmp_1533 := 1;
    assume {:nonnull} Tmp_1537 != 0;
    assume Tmp_1537 > 0;
    goto L124;

  anon141_Then:
    assume Tmp_1533 == 2;
    Tmp_1533 := 2;
    assume {:nonnull} Tmp_1537 != 0;
    assume Tmp_1537 > 0;
    goto L124;

  anon123_Then:
    assume Tmp_1533 > 2;
    assume {:nonnull} Tmp_1537 != 0;
    assume Tmp_1537 > 0;
    goto L124;

  anon117_Then:
    call {:si_unique_call 1748} FileObject_28 := __HAVOC_malloc(1);
    goto L29;

  anon146_Then:
    assume Tmp_1539 == 0;
    Tmp_1539 := 0;
    assume {:nonnull} Tmp_1549 != 0;
    assume Tmp_1549 > 0;
    goto L114;

  anon145_Then:
    assume Tmp_1539 == 1;
    Tmp_1539 := 1;
    assume {:nonnull} Tmp_1549 != 0;
    assume Tmp_1549 > 0;
    goto L114;

  anon144_Then:
    assume Tmp_1539 == 2;
    Tmp_1539 := 2;
    assume {:nonnull} Tmp_1549 != 0;
    assume Tmp_1549 > 0;
    goto L114;

  anon122_Then:
    assume Tmp_1539 > 2;
    assume {:nonnull} Tmp_1549 != 0;
    assume Tmp_1549 > 0;
    goto L114;

  anon121_Then:
    goto L29;

  anon104_Then:
    assume {:partition} WriteThroughToDisk == 0;
    goto L29;

  anon120_Then:
    goto L26;

  anon102_Then:
    assume {:partition} i_11 >= 4;
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} Repinned != Repinned__IRP_CONTEXT(IrpContext_71);
    assume {:nonnull} Repinned != 0;
    assume Repinned > 0;
    havoc Saved;
    call {:si_unique_call 1749} sdv_ExFreePool(0);
    Repinned := Saved;
    goto anon103_Else_dummy;

  anon103_Else_dummy:
    assume false;
    return;

  anon103_Then:
    assume {:partition} Repinned == Repinned__IRP_CONTEXT(IrpContext_71);
    assume {:nonnull} Repinned != 0;
    assume Repinned > 0;
    havoc Repinned;
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    assume false;
    return;

  anon100_Then:
    assume {:partition} Repinned == 0;
    assume {:nonnull} RaiseIosb != 0;
    assume RaiseIosb > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} ForceVerify != 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} FileObject_28 != 0;
    assume {:nonnull} FileObject_28 != 0;
    assume FileObject_28 > 0;
    havoc Tmp_1541;
    assume {:nonnull} FileObject_28 != 0;
    assume FileObject_28 > 0;
    havoc Tmp_1542;
    assume {:nonnull} Tmp_1541 != 0;
    assume Tmp_1541 > 0;
    assume {:nonnull} Tmp_1542 != 0;
    assume Tmp_1542 > 0;
    call {:si_unique_call 1750} IoSetHardErrorOrVerifyDevice(0, 0);
    goto L76;

  L76:
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    havoc Tmp_1540;
    assume {:nonnull} RaiseIosb != 0;
    assume RaiseIosb > 0;
    assume {:nonnull} Tmp_1540 != 0;
    assume Tmp_1540 > 0;
    assume {:nonnull} RaiseIosb != 0;
    assume RaiseIosb > 0;
    assume {:nonnull} Tmp_1540 != 0;
    assume Tmp_1540 > 0;
    assume {:nonnull} RaiseIosb != 0;
    assume RaiseIosb > 0;
    assume {:nonnull} Tmp_1540 != 0;
    assume Tmp_1540 > 0;
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    assume {:nonnull} RaiseIosb != 0;
    assume RaiseIosb > 0;
    call {:si_unique_call 1751} sdv_903 := corral_nondet();
    call {:si_unique_call 1752} ExRaiseStatus(sdv_903);
    goto L1;

  L1:
    return;

  anon114_Then:
    goto L1;

  anon115_Then:
    assume {:partition} FileObject_28 == 0;
    goto L76;

  anon113_Then:
    assume {:partition} ForceVerify == 0;
    goto L76;

  anon101_Then:
    goto L1;

  anon119_Then:
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    goto L92;

  L92:
    Tmp_1531 := 1;
    goto L19;

  anon116_Then:
    assume {:nonnull} IrpContext_71 != 0;
    assume IrpContext_71 > 0;
    havoc Tmp_1527;
    assume {:nonnull} Tmp_1527 != 0;
    assume Tmp_1527 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    goto L92;

  anon147_Then:
    goto L18;

  anon99_Then:
    goto L18;
}



procedure {:origName "FatCompleteMdl"} FatCompleteMdl(actual_IrpContext_72: int, actual_Irp_21: int) returns (Tmp_1553: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1553 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCompleteMdl"} FatCompleteMdl(actual_IrpContext_72: int, actual_Irp_21: int) returns (Tmp_1553: int)
{
  var {:pointer} sdv_904: int;
  var {:scalar} Tmp_1554: int;
  var {:pointer} IrpContext_72: int;
  var {:pointer} Irp_21: int;
  var vslice_dummy_var_236: int;

  anon0:
    IrpContext_72 := actual_IrpContext_72;
    Irp_21 := actual_Irp_21;
    call {:si_unique_call 1753} sdv_do_paged_code_check();
    call {:si_unique_call 1754} sdv_904 := sdv_IoGetCurrentIrpStackLocation(Irp_21);
    assume {:nonnull} sdv_904 != 0;
    assume sdv_904 > 0;
    assume {:nonnull} IrpContext_72 != 0;
    assume IrpContext_72 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} IrpContext_72 != 0;
    assume IrpContext_72 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 1755} vslice_dummy_var_236 := sdv_IoGetCurrentIrpStackLocation(Irp_21);
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto L26;

  L26:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    call {:si_unique_call 1756} FatCompleteRequest_Real(IrpContext_72, Irp_21, 0);
    Tmp_1553 := 0;
    return;

  anon5_Then:
    assume {:nonnull} IrpContext_72 != 0;
    assume IrpContext_72 > 0;
    havoc Tmp_1554;
    call {:si_unique_call 1757} KeBugCheckEx(35, 198277, Tmp_1554, 0, 0);
    goto L26;

  anon6_Then:
    goto L26;
}



procedure {:origName "FatPrepareWriteDirectoryFile"} FatPrepareWriteDirectoryFile(actual_IrpContext_73: int, actual_Dcb_8: int, actual_StartingVbo_3: int, actual_ByteCount_9: int, actual_Bcb_9: int, actual_Buffer_22: int, actual_Zero_1: int, actual_Reversible_1: int, actual_Status_23: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPrepareWriteDirectoryFile"} FatPrepareWriteDirectoryFile(actual_IrpContext_73: int, actual_Dcb_8: int, actual_StartingVbo_3: int, actual_ByteCount_9: int, actual_Bcb_9: int, actual_Buffer_22: int, actual_Zero_1: int, actual_Reversible_1: int, actual_Status_23: int)
{
  var {:scalar} UnwindWeAllocatedDiskSpace_1: int;
  var {:scalar} InitialAllocation: int;
  var {:pointer} Tmp_1557: int;
  var {:pointer} Tmp_1558: int;
  var {:scalar} Vbo_5: int;
  var {:scalar} BytesToPin: int;
  var {:scalar} Tmp_1560: int;
  var {:pointer} LocalBuffer_1: int;
  var {:scalar} Tmp_1561: int;
  var {:scalar} sdv_907: int;
  var {:scalar} ClusterSize: int;
  var {:scalar} sdv_908: int;
  var {:pointer} IrpContext_73: int;
  var {:pointer} Dcb_8: int;
  var {:scalar} StartingVbo_3: int;
  var {:scalar} ByteCount_9: int;
  var {:pointer} Bcb_9: int;
  var {:pointer} Buffer_22: int;
  var {:scalar} Zero_1: int;
  var {:scalar} Reversible_1: int;
  var {:pointer} Status_23: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_1340: int;
  var vslice_dummy_var_1341: int;
  var vslice_dummy_var_1342: int;

  anon0:
    call {:si_unique_call 1758} Vbo_5 := __HAVOC_malloc(20);
    call {:si_unique_call 1759} vslice_dummy_var_237 := __HAVOC_malloc(4);
    IrpContext_73 := actual_IrpContext_73;
    Dcb_8 := actual_Dcb_8;
    StartingVbo_3 := actual_StartingVbo_3;
    ByteCount_9 := actual_ByteCount_9;
    Bcb_9 := actual_Bcb_9;
    Buffer_22 := actual_Buffer_22;
    Zero_1 := actual_Zero_1;
    Reversible_1 := actual_Reversible_1;
    Status_23 := actual_Status_23;
    UnwindWeAllocatedDiskSpace_1 := 0;
    call {:si_unique_call 1760} sdv_do_paged_code_check();
    assume {:nonnull} Bcb_9 != 0;
    assume Bcb_9 > 0;
    assume {:nonnull} Buffer_22 != 0;
    assume Buffer_22 > 0;
    call {:si_unique_call 1761} FatOpenDirectoryFile#1(IrpContext_73, Dcb_8);
    assume {:nonnull} Vbo_5 != 0;
    assume Vbo_5 > 0;
    assume {:nonnull} Dcb_8 != 0;
    assume Dcb_8 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    Tmp_1557 := Dcb_8;
    assume {:nonnull} Tmp_1557 != 0;
    assume Tmp_1557 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Dcb_8 != 0;
    assume Dcb_8 > 0;
    havoc Tmp_1558;
    assume {:nonnull} Tmp_1558 != 0;
    assume Tmp_1558 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} IrpContext_73 != 0;
    assume IrpContext_73 > 0;
    call {:si_unique_call 1762} ExRaiseStatus(-1073741697);
    goto L21;

  L21:
    assume {:nonnull} Dcb_8 != 0;
    assume Dcb_8 > 0;
    havoc InitialAllocation;
    Tmp_1560 := StartingVbo_3 + ByteCount_9;
    assume {:nonnull} Dcb_8 != 0;
    assume Dcb_8 > 0;
    havoc vslice_dummy_var_1340;
    call {:si_unique_call 1763} FatAddFileAllocation(IrpContext_73, Dcb_8, vslice_dummy_var_1340, Tmp_1560);
    UnwindWeAllocatedDiskSpace_1 := 1;
    assume {:nonnull} Dcb_8 != 0;
    assume Dcb_8 > 0;
    call {:si_unique_call 1764} FatCheckFreeDirentBitmap(IrpContext_73, Dcb_8);
    Zero_1 := 1;
    assume {:nonnull} Vbo_5 != 0;
    assume Vbo_5 > 0;
    assume {:nonnull} Dcb_8 != 0;
    assume Dcb_8 > 0;
    havoc ByteCount_9;
    goto L19;

  L19:
    assume {:nonnull} Dcb_8 != 0;
    assume Dcb_8 > 0;
    call {:si_unique_call 1765} ClusterSize := corral_nondet();
    goto L59;

  L59:
    call {:si_unique_call 1766} BytesToPin, Tmp_1561, sdv_907, ByteCount_9 := FatPrepareWriteDirectoryFile_loop_L59(Vbo_5, BytesToPin, LocalBuffer_1, Tmp_1561, sdv_907, ClusterSize, IrpContext_73, ByteCount_9, Bcb_9, Buffer_22, Zero_1);
    goto L59_last;

  L59_last:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} ByteCount_9 > 0;
    assume {:nonnull} Bcb_9 != 0;
    assume Bcb_9 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} ByteCount_9 > ClusterSize;
    BytesToPin := ClusterSize;
    goto L68;

  L68:
    assume {:nonnull} IrpContext_73 != 0;
    assume IrpContext_73 > 0;
    havoc Tmp_1561;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Tmp_1561 == 0;
    goto L146;

  L146:
    call {:si_unique_call 1767} sdv_907 := corral_nondet();
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_907 != 0;
    goto L75;

  L75:
    assume {:nonnull} Buffer_22 != 0;
    assume Buffer_22 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L77;

  L77:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Zero_1 != 0;
    call {:si_unique_call 1768} sdv_RtlZeroMemory(0, BytesToPin);
    goto L78;

  L78:
    ByteCount_9 := ByteCount_9 - BytesToPin;
    assume {:nonnull} Vbo_5 != 0;
    assume Vbo_5 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} ByteCount_9 > 0;
    assume {:nonnull} Bcb_9 != 0;
    assume Bcb_9 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Bcb_9 != 0;
    assume Bcb_9 > 0;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    assume false;
    return;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon42_Then:
    assume {:partition} 0 >= ByteCount_9;
    goto anon42_Then_dummy;

  anon42_Then_dummy:
    assume false;
    return;

  anon32_Then:
    assume {:partition} Zero_1 == 0;
    goto L78;

  anon31_Then:
    assume {:nonnull} Buffer_22 != 0;
    assume Buffer_22 > 0;
    goto L77;

  anon30_Then:
    assume {:partition} sdv_907 == 0;
    assume {:nonnull} IrpContext_73 != 0;
    assume IrpContext_73 > 0;
    call {:si_unique_call 1769} ExRaiseStatus(-1073741608);
    goto L75;

  anon41_Then:
    assume {:partition} Tmp_1561 != 0;
    goto L146;

  anon40_Then:
    assume {:partition} ClusterSize >= ByteCount_9;
    BytesToPin := ByteCount_9;
    goto L68;

  anon29_Then:
    assume {:partition} 0 >= ByteCount_9;
    assume {:nonnull} Bcb_9 != 0;
    assume Bcb_9 > 0;
    assume {:nonnull} Dcb_8 != 0;
    assume Dcb_8 > 0;
    havoc vslice_dummy_var_1341;
    havoc vslice_dummy_var_1342;
    call {:si_unique_call 1770} FatSetDirtyBcb#1(IrpContext_73, vslice_dummy_var_1341, vslice_dummy_var_1342, Reversible_1);
    assume {:nonnull} Status_23 != 0;
    assume Status_23 > 0;
    call {:si_unique_call 1771} sdv_908 := sdv_AbnormalTermination();
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_908 != 0;
    assume {:nonnull} Bcb_9 != 0;
    assume Bcb_9 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Bcb_9 != 0;
    assume Bcb_9 > 0;
    goto L102;

  L102:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} UnwindWeAllocatedDiskSpace_1 == 1;
    call {:si_unique_call 1772} FatTruncateFileAllocation(IrpContext_73, Dcb_8, InitialAllocation);
    assume {:nonnull} Dcb_8 != 0;
    assume Dcb_8 > 0;
    goto L1;

  L1:
    return;

  anon36_Then:
    assume {:partition} UnwindWeAllocatedDiskSpace_1 != 1;
    goto L1;

  anon35_Then:
    goto L102;

  anon34_Then:
    assume {:partition} sdv_908 == 0;
    goto L1;

  anon39_Then:
    goto L21;

  anon38_Then:
    goto L21;

  anon37_Then:
    goto L19;
}



procedure {:origName "FatPinMappedData"} FatPinMappedData(actual_IrpContext_74: int, actual_Dcb_9: int, actual_StartingVbo_4: int, actual_ByteCount_10: int, actual_Bcb_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPinMappedData"} FatPinMappedData(actual_IrpContext_74: int, actual_Dcb_9: int, actual_StartingVbo_4: int, actual_ByteCount_10: int, actual_Bcb_10: int)
{
  var {:scalar} Vbo_6: int;
  var {:scalar} sdv_909: int;
  var {:scalar} Tmp_1567: int;
  var {:pointer} IrpContext_74: int;
  var {:scalar} StartingVbo_4: int;
  var vslice_dummy_var_238: int;

  anon0:
    call {:si_unique_call 1773} Vbo_6 := __HAVOC_malloc(20);
    call {:si_unique_call 1774} vslice_dummy_var_238 := __HAVOC_malloc(4);
    IrpContext_74 := actual_IrpContext_74;
    StartingVbo_4 := actual_StartingVbo_4;
    call {:si_unique_call 1775} sdv_do_paged_code_check();
    assume {:nonnull} Vbo_6 != 0;
    assume Vbo_6 > 0;
    assume {:nonnull} IrpContext_74 != 0;
    assume IrpContext_74 > 0;
    havoc Tmp_1567;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Tmp_1567 == 0;
    goto L25;

  L25:
    call {:si_unique_call 1776} sdv_909 := corral_nondet();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} sdv_909 == 0;
    assume {:nonnull} IrpContext_74 != 0;
    assume IrpContext_74 > 0;
    call {:si_unique_call 1777} ExRaiseStatus(-1073741608);
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} sdv_909 != 0;
    goto L1;

  anon6_Then:
    assume {:partition} Tmp_1567 != 0;
    goto L25;
}



procedure {:origName "FatOpenEaFile"} FatOpenEaFile(actual_IrpContext_76: int, actual_EaFcb: int) returns (Tmp_1571: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOpenEaFile"} FatOpenEaFile(actual_IrpContext_76: int, actual_EaFcb: int) returns (Tmp_1571: int)
{
  var {:pointer} Tmp_1572: int;
  var {:pointer} Tmp_1573: int;
  var {:pointer} Tmp_1574: int;
  var {:scalar} sdv_915: int;
  var {:pointer} Tmp_1575: int;
  var {:pointer} Tmp_1576: int;
  var {:pointer} EaFileObject: int;
  var {:pointer} IrpContext_76: int;
  var {:pointer} EaFcb: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_1343: int;

  anon0:
    IrpContext_76 := actual_IrpContext_76;
    EaFcb := actual_EaFcb;
    EaFileObject := 0;
    call {:si_unique_call 1778} sdv_do_paged_code_check();
    assume {:nonnull} EaFcb != 0;
    assume EaFcb > 0;
    havoc Tmp_1575;
    assume {:nonnull} Tmp_1575 != 0;
    assume Tmp_1575 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    EaFileObject := 0;
    goto L14;

  L14:
    assume {:nonnull} IrpContext_76 != 0;
    assume IrpContext_76 > 0;
    havoc vslice_dummy_var_1343;
    call {:si_unique_call 1779} FatPreallocateCloseContext(vslice_dummy_var_1343);
    call {:si_unique_call 1780} FatSetFileObject(EaFileObject, 7, EaFcb, 0);
    assume {:nonnull} EaFcb != 0;
    assume EaFcb > 0;
    havoc Tmp_1572;
    call {:si_unique_call 1781} Tmp_1576 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1572 != 0;
    assume Tmp_1572 > 0;
    assume {:nonnull} Tmp_1576 != 0;
    assume Tmp_1576 > 0;
    call {:si_unique_call 1782} vslice_dummy_var_240 := sdv_InterlockedIncrement(Tmp_1576);
    assume {:nonnull} Tmp_1572 != 0;
    assume Tmp_1572 > 0;
    assume {:nonnull} Tmp_1576 != 0;
    assume Tmp_1576 > 0;
    assume {:nonnull} EaFcb != 0;
    assume EaFcb > 0;
    havoc Tmp_1573;
    call {:si_unique_call 1783} Tmp_1576 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1573 != 0;
    assume Tmp_1573 > 0;
    assume {:nonnull} Tmp_1576 != 0;
    assume Tmp_1576 > 0;
    call {:si_unique_call 1784} vslice_dummy_var_241 := sdv_InterlockedIncrement(Tmp_1576);
    assume {:nonnull} Tmp_1573 != 0;
    assume Tmp_1573 > 0;
    assume {:nonnull} Tmp_1576 != 0;
    assume Tmp_1576 > 0;
    assume {:nonnull} EaFcb != 0;
    assume EaFcb > 0;
    havoc Tmp_1574;
    assume {:nonnull} EaFileObject != 0;
    assume EaFileObject > 0;
    assume {:nonnull} Tmp_1574 != 0;
    assume Tmp_1574 > 0;
    assume {:nonnull} EaFileObject != 0;
    assume EaFileObject > 0;
    assume {:nonnull} EaFileObject != 0;
    assume EaFileObject > 0;
    assume {:nonnull} EaFcb != 0;
    assume EaFcb > 0;
    assume {:nonnull} EaFcb != 0;
    assume EaFcb > 0;
    assume {:nonnull} EaFcb != 0;
    assume EaFcb > 0;
    assume {:nonnull} EaFcb != 0;
    assume EaFcb > 0;
    assume {:nonnull} EaFcb != 0;
    assume EaFcb > 0;
    call {:si_unique_call 1785} sdv_915 := sdv_AbnormalTermination();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} sdv_915 != 0;
    call {:si_unique_call 1786} vslice_dummy_var_239 := sdv_ObDereferenceObject(0);
    goto L47;

  L47:
    Tmp_1571 := EaFileObject;
    return;

  anon5_Then:
    assume {:partition} sdv_915 == 0;
    goto L47;

  anon6_Then:
    call {:si_unique_call 1787} EaFileObject := __HAVOC_malloc(1);
    goto L14;
}



procedure {:origName "FatSyncUninitializeCacheMap"} FatSyncUninitializeCacheMap(actual_IrpContext_78: int, actual_FileObject_30: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSyncUninitializeCacheMap"} FatSyncUninitializeCacheMap(actual_IrpContext_78: int, actual_FileObject_30: int)
{
  var {:scalar} UninitializeCompleteEvent: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;

  anon0:
    call {:si_unique_call 1788} vslice_dummy_var_242 := __HAVOC_malloc(4);
    call {:si_unique_call 1789} UninitializeCompleteEvent := __HAVOC_malloc(128);
    call {:si_unique_call 1790} sdv_do_paged_code_check();
    assume {:nonnull} UninitializeCompleteEvent != 0;
    assume UninitializeCompleteEvent > 0;
    call {:si_unique_call 1791} KeInitializeEvent(Event__CACHE_UNINITIALIZE_EVENT(UninitializeCompleteEvent), 1, 0);
    call {:si_unique_call 1792} vslice_dummy_var_243 := corral_nondet();
    call {:si_unique_call 1793} vslice_dummy_var_244 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    return;
}



procedure {:origName "FatZeroData"} FatZeroData(actual_IrpContext_79: int, actual_Vcb_45: int, actual_FileObject_31: int, actual_StartingZero: int, actual_ByteCount_11: int) returns (Tmp_1589: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatZeroData"} FatZeroData(actual_IrpContext_79: int, actual_Vcb_45: int, actual_FileObject_31: int, actual_StartingZero: int, actual_ByteCount_11: int) returns (Tmp_1589: int)
{
  var {:scalar} Tmp_1590: int;
  var {:scalar} ZeroStart: int;
  var {:scalar} BeyondZeroEnd: int;
  var {:scalar} Finished: int;
  var {:scalar} SectorSize_2: int;
  var {:pointer} IrpContext_79: int;
  var {:pointer} Vcb_45: int;
  var {:scalar} StartingZero: int;
  var {:scalar} ByteCount_11: int;

  anon0:
    call {:si_unique_call 1794} ZeroStart := __HAVOC_malloc(20);
    call {:si_unique_call 1795} BeyondZeroEnd := __HAVOC_malloc(20);
    IrpContext_79 := actual_IrpContext_79;
    Vcb_45 := actual_Vcb_45;
    StartingZero := actual_StartingZero;
    ByteCount_11 := actual_ByteCount_11;
    call {:si_unique_call 1796} sdv_do_paged_code_check();
    assume {:nonnull} Vcb_45 != 0;
    assume Vcb_45 > 0;
    havoc SectorSize_2;
    assume {:nonnull} ZeroStart != 0;
    assume ZeroStart > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} StartingZero != 0;
    assume {:nonnull} ZeroStart != 0;
    assume ZeroStart > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_1589 := 1;
    goto L1;

  L1:
    return;

  anon9_Then:
    goto L15;

  L15:
    assume {:nonnull} BeyondZeroEnd != 0;
    assume BeyondZeroEnd > 0;
    assume {:nonnull} BeyondZeroEnd != 0;
    assume BeyondZeroEnd > 0;
    assume {:nonnull} ZeroStart != 0;
    assume ZeroStart > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_1589 := 1;
    goto L1;

  anon11_Then:
    assume {:nonnull} IrpContext_79 != 0;
    assume IrpContext_79 > 0;
    havoc Tmp_1590;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Tmp_1590 == 0;
    goto L37;

  L37:
    call {:si_unique_call 1797} Finished := corral_nondet();
    Tmp_1589 := Finished;
    goto L1;

  anon12_Then:
    assume {:partition} Tmp_1590 != 0;
    goto L37;

  anon10_Then:
    assume {:partition} StartingZero == 0;
    goto L15;
}



procedure {:origName "FatCloseEaFile"} FatCloseEaFile(actual_IrpContext_80: int, actual_Vcb_46: int, actual_FlushFirst: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCloseEaFile"} FatCloseEaFile(actual_IrpContext_80: int, actual_Vcb_46: int, actual_FlushFirst: int)
{
  var {:pointer} Tmp_1594: int;
  var {:pointer} EaFileObject_1: int;
  var {:pointer} IrpContext_80: int;
  var {:pointer} Vcb_46: int;
  var {:scalar} FlushFirst: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;

  anon0:
    call {:si_unique_call 1798} vslice_dummy_var_245 := __HAVOC_malloc(4);
    IrpContext_80 := actual_IrpContext_80;
    Vcb_46 := actual_Vcb_46;
    FlushFirst := actual_FlushFirst;
    assume {:nonnull} Vcb_46 != 0;
    assume Vcb_46 > 0;
    havoc EaFileObject_1;
    call {:si_unique_call 1799} sdv_do_paged_code_check();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} EaFileObject_1 != 0;
    assume {:nonnull} Vcb_46 != 0;
    assume Vcb_46 > 0;
    havoc EaFileObject_1;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} FlushFirst != 0;
    assume {:nonnull} Vcb_46 != 0;
    assume Vcb_46 > 0;
    goto L11;

  L11:
    assume {:nonnull} Vcb_46 != 0;
    assume Vcb_46 > 0;
    assume {:nonnull} Vcb_46 != 0;
    assume Vcb_46 > 0;
    havoc Tmp_1594;
    assume {:nonnull} Tmp_1594 != 0;
    assume Tmp_1594 > 0;
    call {:si_unique_call 1800} FatRemoveMcbEntry(Vcb_46, Mcb__FCB(Tmp_1594), 0, -1);
    call {:si_unique_call 1801} FatSyncUninitializeCacheMap(IrpContext_80, EaFileObject_1);
    call {:si_unique_call 1802} vslice_dummy_var_246 := sdv_ObDereferenceObject(0);
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} FlushFirst == 0;
    goto L11;

  anon5_Then:
    assume {:partition} EaFileObject_1 == 0;
    goto L1;
}



procedure {:origName "FatRepinBcb"} FatRepinBcb(actual_IrpContext_81: int, actual_Bcb_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatRepinBcb"} FatRepinBcb(actual_IrpContext_81: int, actual_Bcb_12: int)
{
  var {:scalar} i_12: int;
  var {:pointer} Tmp_1597: int;
  var {:scalar} Tmp_1598: int;
  var {:scalar} Tmp_1599: int;
  var {:pointer} sdv_931: int;
  var {:pointer} Tmp_1601: int;
  var {:pointer} Tmp_1602: int;
  var {:scalar} Tmp_1604: int;
  var {:pointer} Repinned_1: int;
  var {:pointer} IrpContext_81: int;
  var {:pointer} Bcb_12: int;
  var vslice_dummy_var_247: int;

  anon0:
    call {:si_unique_call 1803} vslice_dummy_var_247 := __HAVOC_malloc(4);
    IrpContext_81 := actual_IrpContext_81;
    Bcb_12 := actual_Bcb_12;
    call {:si_unique_call 1804} Tmp_1597 := __HAVOC_malloc(16);
    call {:si_unique_call 1805} Tmp_1601 := __HAVOC_malloc(16);
    call {:si_unique_call 1806} Tmp_1602 := __HAVOC_malloc(16);
    call {:si_unique_call 1807} sdv_do_paged_code_check();
    assume {:nonnull} IrpContext_81 != 0;
    assume IrpContext_81 > 0;
    Repinned_1 := Repinned__IRP_CONTEXT(IrpContext_81);
    goto L10;

  L10:
    call {:si_unique_call 1808} i_12, Tmp_1597, Tmp_1598, Tmp_1599, sdv_931, Tmp_1602, Repinned_1 := FatRepinBcb_loop_L10(i_12, Tmp_1597, Tmp_1598, Tmp_1599, sdv_931, Tmp_1602, Repinned_1, Bcb_12);
    goto L10_last;

  L10_last:
    i_12 := 0;
    goto L11;

  L11:
    call {:si_unique_call 1809} i_12, Tmp_1597, Tmp_1598, Tmp_1599, Tmp_1602 := FatRepinBcb_loop_L11(i_12, Tmp_1597, Tmp_1598, Tmp_1599, Tmp_1602, Repinned_1, Bcb_12);
    goto L11_last;

  L11_last:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} 4 > i_12;
    Tmp_1598 := i_12;
    assume {:nonnull} Repinned_1 != 0;
    assume Repinned_1 > 0;
    havoc Tmp_1602;
    assume {:nonnull} Tmp_1602 != 0;
    assume Tmp_1602 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Tmp_1599 := i_12;
    assume {:nonnull} Repinned_1 != 0;
    assume Repinned_1 > 0;
    havoc Tmp_1597;
    assume {:nonnull} Tmp_1597 != 0;
    assume Tmp_1597 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    i_12 := i_12 + 1;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    assume false;
    return;

  anon20_Then:
    Tmp_1604 := i_12;
    assume {:nonnull} Repinned_1 != 0;
    assume Repinned_1 > 0;
    havoc Tmp_1601;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume Tmp_1604 <= 2;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume Tmp_1604 != 2;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume Tmp_1604 != 1;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume Tmp_1604 != 0;
    goto L33;

  L33:
    goto L1;

  L1:
    return;

  anon24_Then:
    assume Tmp_1604 == 0;
    Tmp_1604 := 0;
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    goto L33;

  anon23_Then:
    assume Tmp_1604 == 1;
    Tmp_1604 := 1;
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    goto L33;

  anon22_Then:
    assume Tmp_1604 == 2;
    Tmp_1604 := 2;
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    goto L33;

  anon21_Then:
    assume Tmp_1604 > 2;
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    goto L33;

  anon19_Then:
    goto L1;

  anon17_Then:
    assume {:partition} i_12 >= 4;
    assume {:nonnull} Repinned_1 != 0;
    assume Repinned_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L25;

  L25:
    assume {:nonnull} Repinned_1 != 0;
    assume Repinned_1 > 0;
    havoc Repinned_1;
    goto L25_dummy;

  L25_dummy:
    assume false;
    return;

  anon18_Then:
    call {:si_unique_call 1810} sdv_931 := ExAllocatePoolWithTag(17, 20, -764124858);
    assume {:nonnull} Repinned_1 != 0;
    assume Repinned_1 > 0;
    call {:si_unique_call 1811} sdv_RtlZeroMemory(0, 20);
    goto L25;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init12"} _sdv_init12()
{
  var vslice_dummy_var_248: int;

  anon0:
    call {:si_unique_call 1812} vslice_dummy_var_248 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatPerformDevIoCtrl"} FatPerformDevIoCtrl(actual_IrpContext_82: int, actual_IoControlCode_1: int, actual_Device: int, actual_OutputBuffer_1: int, actual_OutputBufferLength_1: int, actual_InternalDeviceIoControl_1: int, actual_OverrideVerify: int, actual_Iosb_14: int) returns (Tmp_1607: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPerformDevIoCtrl"} FatPerformDevIoCtrl(actual_IrpContext_82: int, actual_IoControlCode_1: int, actual_Device: int, actual_OutputBuffer_1: int, actual_OutputBufferLength_1: int, actual_InternalDeviceIoControl_1: int, actual_OverrideVerify: int, actual_Iosb_14: int) returns (Tmp_1607: int)
{
  var {:scalar} LocalIosb: int;
  var {:pointer} Irp_22: int;
  var {:scalar} Status_24: int;
  var {:scalar} Event_5: int;
  var {:pointer} sdv_934: int;
  var {:pointer} IosbToUse: int;
  var {:scalar} IoControlCode_1: int;
  var {:pointer} Device: int;
  var {:scalar} OutputBufferLength_1: int;
  var {:scalar} InternalDeviceIoControl_1: int;
  var {:scalar} OverrideVerify: int;
  var {:pointer} Iosb_14: int;
  var vslice_dummy_var_249: int;

  anon0:
    call {:si_unique_call 1813} LocalIosb := __HAVOC_malloc(12);
    call {:si_unique_call 1814} Event_5 := __HAVOC_malloc(124);
    IoControlCode_1 := actual_IoControlCode_1;
    Device := actual_Device;
    OutputBufferLength_1 := actual_OutputBufferLength_1;
    InternalDeviceIoControl_1 := actual_InternalDeviceIoControl_1;
    OverrideVerify := actual_OverrideVerify;
    Iosb_14 := actual_Iosb_14;
    IosbToUse := LocalIosb;
    call {:si_unique_call 1815} sdv_do_paged_code_check();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Iosb_14 != 0;
    IosbToUse := Iosb_14;
    goto L13;

  L13:
    assume {:nonnull} IosbToUse != 0;
    assume IosbToUse > 0;
    assume {:nonnull} IosbToUse != 0;
    assume IosbToUse > 0;
    call {:si_unique_call 1816} KeInitializeEvent(Event_5, 0, 0);
    call {:si_unique_call 1817} Irp_22 := IoBuildDeviceIoControlRequest(IoControlCode_1, 0, 0, 0, 0, OutputBufferLength_1, InternalDeviceIoControl_1, 0, IosbToUse);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Irp_22 != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} OverrideVerify != 0;
    call {:si_unique_call 1818} sdv_934 := sdv_IoGetNextIrpStackLocation(Irp_22);
    assume {:nonnull} sdv_934 != 0;
    assume sdv_934 > 0;
    goto L26;

  L26:
    call {:si_unique_call 1819} Status_24 := sdv_IoCallDriver(Device, Irp_22);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_24 == 259;
    call {:si_unique_call 1820} vslice_dummy_var_249 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} IosbToUse != 0;
    assume IosbToUse > 0;
    havoc Status_24;
    goto L35;

  L35:
    Tmp_1607 := Status_24;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} Status_24 != 259;
    goto L35;

  anon11_Then:
    assume {:partition} OverrideVerify == 0;
    goto L26;

  anon10_Then:
    assume {:partition} Irp_22 == 0;
    Tmp_1607 := -1073741670;
    goto L1;

  anon9_Then:
    assume {:partition} Iosb_14 == 0;
    goto L13;
}



procedure {:origName "FatMultipleAsync"} FatMultipleAsync(actual_IrpContext_83: int, actual_Vcb_47: int, actual_MasterIrp: int, actual_MultipleIrpCount: int, actual_IoRuns: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatMultipleAsync"} FatMultipleAsync(actual_IrpContext_83: int, actual_Vcb_47: int, actual_MasterIrp: int, actual_MultipleIrpCount: int, actual_IoRuns: int)
{
  var {:scalar} i_13: int;
  var {:scalar} Tmp_1609: int;
  var {:scalar} Tmp_1610: int;
  var {:pointer} Irp_23: int;
  var {:scalar} Tmp_1611: int;
  var {:pointer} Mdl_3: int;
  var {:scalar} Tmp_1612: int;
  var {:scalar} Tmp_1613: int;
  var {:pointer} Tmp_1614: int;
  var {:pointer} sdv_936: int;
  var {:scalar} CalledByFatVerifyVolume: int;
  var {:scalar} ExceptionExpected: int;
  var {:scalar} Tmp_1618: int;
  var {:scalar} Wait_7: int;
  var {:pointer} IrpSp_9: int;
  var {:scalar} Tmp_1619: int;
  var {:scalar} Tmp_1620: int;
  var {:scalar} sdv_938: int;
  var {:pointer} Context_6: int;
  var {:scalar} Tmp_1621: int;
  var {:scalar} Tmp_1623: int;
  var {:scalar} Tmp_1624: int;
  var {:scalar} Tmp_1625: int;
  var {:scalar} Tmp_1626: int;
  var {:scalar} UnwindRunCount: int;
  var {:scalar} Tmp_1627: int;
  var {:scalar} Tmp_1628: int;
  var {:pointer} IrpContext_83: int;
  var {:pointer} Vcb_47: int;
  var {:pointer} MasterIrp: int;
  var {:scalar} MultipleIrpCount: int;
  var {:pointer} IoRuns: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_1344: int;

  anon0:
    call {:si_unique_call 1821} vslice_dummy_var_250 := __HAVOC_malloc(4);
    IrpContext_83 := actual_IrpContext_83;
    Vcb_47 := actual_Vcb_47;
    MasterIrp := actual_MasterIrp;
    MultipleIrpCount := actual_MultipleIrpCount;
    IoRuns := actual_IoRuns;
    UnwindRunCount := 0;
    ExceptionExpected := 1;
    CalledByFatVerifyVolume := 0;
    call {:si_unique_call 1822} sdv_936 := sdv_KeGetCurrentThread();
    assume {:nonnull} Vcb_47 != 0;
    assume Vcb_47 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    CalledByFatVerifyVolume := 1;
    goto L18;

  L18:
    assume {:nonnull} IrpContext_83 != 0;
    assume IrpContext_83 > 0;
    havoc Tmp_1626;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Tmp_1626 == 0;
    Wait_7 := 0;
    goto L155;

  L155:
    assume {:nonnull} IrpContext_83 != 0;
    assume IrpContext_83 > 0;
    havoc Context_6;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    UnwindRunCount := 0;
    goto L24;

  L24:
    call {:si_unique_call 1823} Tmp_1609, Tmp_1610, Irp_23, Mdl_3, Tmp_1612, Tmp_1613, Tmp_1614, Tmp_1618, IrpSp_9, Tmp_1619, Tmp_1620, Tmp_1621, Tmp_1623, Tmp_1625, UnwindRunCount, Tmp_1627, Tmp_1628 := FatMultipleAsync_loop_L24(Tmp_1609, Tmp_1610, Irp_23, Mdl_3, Tmp_1612, Tmp_1613, Tmp_1614, CalledByFatVerifyVolume, Tmp_1618, Wait_7, IrpSp_9, Tmp_1619, Tmp_1620, Context_6, Tmp_1621, Tmp_1623, Tmp_1625, UnwindRunCount, Tmp_1627, Tmp_1628, IrpContext_83, Vcb_47, MasterIrp, MultipleIrpCount, IoRuns);
    goto L24_last;

  L24_last:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} MultipleIrpCount > UnwindRunCount;
    Tmp_1612 := UnwindRunCount;
    assume {:nonnull} IoRuns != 0;
    assume IoRuns > 0;
    assume {:nonnull} Vcb_47 != 0;
    assume Vcb_47 > 0;
    havoc Tmp_1614;
    assume {:nonnull} Tmp_1614 != 0;
    assume Tmp_1614 > 0;
    havoc Tmp_1623;
    call {:si_unique_call 1824} Irp_23 := IoMakeAssociatedIrp(MasterIrp, Tmp_1623);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Irp_23 != 0;
    goto L55;

  L55:
    Tmp_1621 := UnwindRunCount;
    assume {:nonnull} IoRuns != 0;
    assume IoRuns > 0;
    Tmp_1609 := UnwindRunCount;
    assume {:nonnull} IoRuns != 0;
    assume IoRuns > 0;
    havoc Tmp_1628;
    assume {:nonnull} MasterIrp != 0;
    assume MasterIrp > 0;
    call {:si_unique_call 1825} Mdl_3 := IoAllocateMdl(0, Tmp_1628, 0, 0, 0);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mdl_3 != 0;
    goto L64;

  L64:
    Tmp_1625 := UnwindRunCount;
    assume {:nonnull} IoRuns != 0;
    assume IoRuns > 0;
    havoc Tmp_1613;
    assume {:nonnull} MasterIrp != 0;
    assume MasterIrp > 0;
    call {:si_unique_call 1826} IoBuildPartialMdl(0, 0, 0, Tmp_1613);
    call {:si_unique_call 1827} sdv_IoSetNextIrpStackLocation(0);
    call {:si_unique_call 1828} IrpSp_9 := sdv_IoGetCurrentIrpStackLocation(Irp_23);
    assume {:nonnull} IrpContext_83 != 0;
    assume IrpContext_83 > 0;
    assume {:nonnull} IrpSp_9 != 0;
    assume IrpSp_9 > 0;
    Tmp_1610 := UnwindRunCount;
    assume {:nonnull} IoRuns != 0;
    assume IoRuns > 0;
    assume {:nonnull} IrpSp_9 != 0;
    assume IrpSp_9 > 0;
    Tmp_1618 := UnwindRunCount;
    assume {:nonnull} IoRuns != 0;
    assume IoRuns > 0;
    assume {:nonnull} IrpSp_9 != 0;
    assume IrpSp_9 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Wait_7 != 0;
    Tmp_1619 := li2bplFunctionConstant732;
    goto L82;

  L82:
    call {:si_unique_call 1829} sdv_IoSetCompletionRoutine(Irp_23, Tmp_1619, Context_6, 1, 1, 1);
    call {:si_unique_call 1830} IrpSp_9 := sdv_IoGetNextIrpStackLocation(Irp_23);
    assume {:nonnull} IrpContext_83 != 0;
    assume IrpContext_83 > 0;
    assume {:nonnull} IrpSp_9 != 0;
    assume IrpSp_9 > 0;
    Tmp_1627 := UnwindRunCount;
    assume {:nonnull} IoRuns != 0;
    assume IoRuns > 0;
    assume {:nonnull} IrpSp_9 != 0;
    assume IrpSp_9 > 0;
    Tmp_1620 := UnwindRunCount;
    assume {:nonnull} IoRuns != 0;
    assume IoRuns > 0;
    assume {:nonnull} IrpSp_9 != 0;
    assume IrpSp_9 > 0;
    assume {:nonnull} IrpContext_83 != 0;
    assume IrpContext_83 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} IrpSp_9 != 0;
    assume IrpSp_9 > 0;
    goto L93;

  L93:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} CalledByFatVerifyVolume != 0;
    assume {:nonnull} IrpSp_9 != 0;
    assume IrpSp_9 > 0;
    goto L95;

  L95:
    UnwindRunCount := UnwindRunCount + 1;
    goto L95_dummy;

  L95_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} CalledByFatVerifyVolume == 0;
    goto L95;

  anon43_Then:
    goto L93;

  anon42_Then:
    assume {:partition} Wait_7 == 0;
    Tmp_1619 := li2bplFunctionConstant731;
    goto L82;

  anon34_Then:
    assume {:partition} Mdl_3 == 0;
    assume {:nonnull} IrpContext_83 != 0;
    assume IrpContext_83 > 0;
    call {:si_unique_call 1831} ExRaiseStatus(-1073741670);
    goto L64;

  anon33_Then:
    assume {:partition} Irp_23 == 0;
    assume {:nonnull} IrpContext_83 != 0;
    assume IrpContext_83 > 0;
    call {:si_unique_call 1832} ExRaiseStatus(-1073741670);
    goto L55;

  anon32_Then:
    assume {:partition} UnwindRunCount >= MultipleIrpCount;
    ExceptionExpected := 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} MasterIrp != 0;
    assume MasterIrp > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Wait_7 != 0;
    assume {:nonnull} MasterIrp != 0;
    assume MasterIrp > 0;
    goto L106;

  L106:
    UnwindRunCount := 0;
    goto L108;

  L108:
    call {:si_unique_call 1833} Irp_23, Tmp_1611, UnwindRunCount, vslice_dummy_var_251 := FatMultipleAsync_loop_L108(Irp_23, Tmp_1611, UnwindRunCount, Vcb_47, MultipleIrpCount, IoRuns, vslice_dummy_var_251);
    goto L108_last;

  L108_last:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} MultipleIrpCount <= UnwindRunCount;
    call {:si_unique_call 1834} sdv_938 := sdv_AbnormalTermination();
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_938 != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} ExceptionExpected != 0;
    goto L124;

  L124:
    i_13 := 0;
    goto L125;

  L125:
    call {:si_unique_call 1835} i_13, Irp_23, Tmp_1624 := FatMultipleAsync_loop_L125(i_13, Irp_23, Tmp_1624, UnwindRunCount, IoRuns);
    goto L125_last;

  L125_last:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} UnwindRunCount >= i_13;
    Tmp_1624 := i_13;
    assume {:nonnull} IoRuns != 0;
    assume IoRuns > 0;
    havoc Irp_23;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Irp_23 != 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 1836} IoFreeMdl(0);
    goto L130;

  L130:
    call {:si_unique_call 1837} IoFreeIrp(0);
    goto L128;

  L128:
    i_13 := i_13 + 1;
    goto L128_dummy;

  L128_dummy:
    assume false;
    return;

  anon40_Then:
    goto L130;

  anon45_Then:
    assume {:partition} Irp_23 == 0;
    goto L128;

  anon39_Then:
    assume {:partition} i_13 > UnwindRunCount;
    goto L1;

  L1:
    return;

  anon38_Then:
    assume {:partition} ExceptionExpected == 0;
    call {:si_unique_call 1838} KeBugCheckEx(35, 526010, 0, 0, 0);
    goto L124;

  anon37_Then:
    assume {:partition} sdv_938 == 0;
    goto L1;

  anon36_Then:
    assume {:partition} UnwindRunCount < MultipleIrpCount;
    Tmp_1611 := UnwindRunCount;
    assume {:nonnull} IoRuns != 0;
    assume IoRuns > 0;
    havoc Irp_23;
    assume {:nonnull} Vcb_47 != 0;
    assume Vcb_47 > 0;
    havoc vslice_dummy_var_1344;
    call {:si_unique_call 1839} vslice_dummy_var_251 := sdv_IoCallDriver(vslice_dummy_var_1344, Irp_23);
    UnwindRunCount := UnwindRunCount + 1;
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    assume false;
    return;

  anon44_Then:
    assume {:partition} Wait_7 == 0;
    goto L106;

  anon41_Then:
    assume {:partition} Tmp_1626 != 0;
    Wait_7 := 1;
    goto L155;

  anon31_Then:
    goto L18;
}



procedure {:origName "FatToggleMediaEjectDisable"} FatToggleMediaEjectDisable(actual_IrpContext_84: int, actual_Vcb_48: int, actual_PreventRemoval: int) returns (Tmp_1629: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatToggleMediaEjectDisable"} FatToggleMediaEjectDisable(actual_IrpContext_84: int, actual_Vcb_48: int, actual_PreventRemoval: int) returns (Tmp_1629: int)
{
  var {:scalar} SavedIrql_2: int;
  var {:pointer} Irp_24: int;
  var {:pointer} Tmp_1630: int;
  var {:scalar} Status_25: int;
  var {:scalar} Iosb_15: int;
  var {:scalar} Event_6: int;
  var {:scalar} Prevent: int;
  var {:pointer} Vcb_48: int;
  var {:scalar} PreventRemoval: int;
  var boogieTmp: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_1345: int;

  anon0:
    call {:si_unique_call 1840} Iosb_15 := __HAVOC_malloc(12);
    call {:si_unique_call 1841} Event_6 := __HAVOC_malloc(124);
    call {:si_unique_call 1842} Prevent := __HAVOC_malloc(4);
    Vcb_48 := actual_Vcb_48;
    PreventRemoval := actual_PreventRemoval;
    call {:si_unique_call 1843} Tmp_1630 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    call {:si_unique_call 1844} sdv_KeAcquireSpinLock(0, Tmp_1630);
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    havoc SavedIrql_2;
    assume {:nonnull} Vcb_48 != 0;
    assume Vcb_48 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Vcb_48 != 0;
    assume Vcb_48 > 0;
    call {:si_unique_call 1845} boogieTmp := corral_nondet();
    call {:si_unique_call 1846} sdv_KeReleaseSpinLock(0, SavedIrql_2);
    assume {:nonnull} Prevent != 0;
    assume Prevent > 0;
    call {:si_unique_call 1847} KeInitializeEvent(Event_6, 0, 0);
    call {:si_unique_call 1848} Irp_24 := IoBuildDeviceIoControlRequest(477188, 0, 0, 1, 0, 0, 0, 0, Iosb_15);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Irp_24 != 0;
    call {:si_unique_call 1849} sdv_IoSetCompletionRoutine(Irp_24, li2bplFunctionConstant739, Event_6, 1, 1, 1);
    assume {:nonnull} Vcb_48 != 0;
    assume Vcb_48 > 0;
    havoc vslice_dummy_var_1345;
    call {:si_unique_call 1850} Status_25 := sdv_IoCallDriver(vslice_dummy_var_1345, Irp_24);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Status_25 == 259;
    call {:si_unique_call 1851} vslice_dummy_var_252 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Iosb_15 != 0;
    assume Iosb_15 > 0;
    havoc Status_25;
    goto L39;

  L39:
    Tmp_1629 := Status_25;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} Status_25 != 259;
    goto L39;

  anon7_Then:
    assume {:partition} Irp_24 == 0;
    Tmp_1629 := -1073741670;
    goto L1;

  anon9_Then:
    call {:si_unique_call 1852} sdv_KeReleaseSpinLock(0, SavedIrql_2);
    Tmp_1629 := 0;
    goto L1;
}



procedure {:origName "FatSingleAsync"} FatSingleAsync(actual_IrpContext_85: int, actual_Vcb_49: int, actual_Lbo_7: int, actual_ByteCount_12: int, actual_Irp_25: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSingleAsync"} FatSingleAsync(actual_IrpContext_85: int, actual_Vcb_49: int, actual_Lbo_7: int, actual_ByteCount_12: int, actual_Irp_25: int)
{
  var {:pointer} IrpSp_10: int;
  var {:pointer} sdv_948: int;
  var {:scalar} Tmp_1634: int;
  var {:pointer} IrpContext_85: int;
  var {:pointer} Vcb_49: int;
  var {:scalar} Lbo_7: int;
  var {:scalar} ByteCount_12: int;
  var {:pointer} Irp_25: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_1346: int;
  var vslice_dummy_var_1347: int;

  anon0:
    call {:si_unique_call 1853} vslice_dummy_var_253 := __HAVOC_malloc(4);
    IrpContext_85 := actual_IrpContext_85;
    Vcb_49 := actual_Vcb_49;
    Lbo_7 := actual_Lbo_7;
    ByteCount_12 := actual_ByteCount_12;
    Irp_25 := actual_Irp_25;
    assume {:nonnull} IrpContext_85 != 0;
    assume IrpContext_85 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_1634 := li2bplFunctionConstant735;
    goto L7;

  L7:
    assume {:nonnull} IrpContext_85 != 0;
    assume IrpContext_85 > 0;
    havoc vslice_dummy_var_1346;
    call {:si_unique_call 1854} sdv_IoSetCompletionRoutine(Irp_25, Tmp_1634, vslice_dummy_var_1346, 1, 1, 1);
    call {:si_unique_call 1855} IrpSp_10 := sdv_IoGetNextIrpStackLocation(Irp_25);
    assume {:nonnull} IrpContext_85 != 0;
    assume IrpContext_85 > 0;
    assume {:nonnull} IrpSp_10 != 0;
    assume IrpSp_10 > 0;
    assume {:nonnull} IrpSp_10 != 0;
    assume IrpSp_10 > 0;
    assume {:nonnull} IrpSp_10 != 0;
    assume IrpSp_10 > 0;
    assume {:nonnull} IrpContext_85 != 0;
    assume IrpContext_85 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} IrpSp_10 != 0;
    assume IrpSp_10 > 0;
    goto L18;

  L18:
    call {:si_unique_call 1856} sdv_948 := sdv_KeGetCurrentThread();
    assume {:nonnull} Vcb_49 != 0;
    assume Vcb_49 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} IrpSp_10 != 0;
    assume IrpSp_10 > 0;
    goto L23;

  L23:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume Irp_25 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1857} SLIC_sdv_IoCallDriver_entry(0);
    goto L31;

  L31:
    assume {:nonnull} Vcb_49 != 0;
    assume Vcb_49 > 0;
    havoc vslice_dummy_var_1347;
    call {:si_unique_call 1858} vslice_dummy_var_254 := sdv_IoCallDriver(vslice_dummy_var_1347, Irp_25);
    return;

  anon11_Then:
    assume !(Irp_25 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L31;

  anon10_Then:
    goto L23;

  anon12_Then:
    goto L18;

  anon9_Then:
    Tmp_1634 := li2bplFunctionConstant734;
    goto L7;
}



procedure {:origName "FatNonCachedIo"} FatNonCachedIo(actual_IrpContext_86: int, actual_Irp_26: int, actual_FcbOrDcb_4: int, actual_StartingVbo_5: int, actual_ByteCount_13: int, actual_UserByteCount: int) returns (Tmp_1635: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatNonCachedIo"} FatNonCachedIo(actual_IrpContext_86: int, actual_Irp_26: int, actual_FcbOrDcb_4: int, actual_StartingVbo_5: int, actual_ByteCount_13: int, actual_UserByteCount: int) returns (Tmp_1635: int)
{
  var {:dopa} {:scalar} LastIsAllocated: int;
  var {:pointer} Tmp_1636: int;
  var {:pointer} Tmp_1637: int;
  var {:pointer} StackIoRuns: int;
  var {:scalar} Tmp_1638: int;
  var {:pointer} Tmp_1639: int;
  var {:scalar} Tmp_1640: int;
  var {:pointer} Mdl_4: int;
  var {:pointer} IoRuns_1: int;
  var {:pointer} Tmp_1641: int;
  var {:dopa} {:scalar} EndOnMax_1: int;
  var {:pointer} Stats_6: int;
  var {:scalar} CurrentIndex: int;
  var {:scalar} Tmp_1642: int;
  var {:scalar} Tmp_1643: int;
  var {:scalar} BufferOffset: int;
  var {:scalar} Tmp_1644: int;
  var {:dopa} {:scalar} LastIndex: int;
  var {:pointer} Stats_7: int;
  var {:dopa} {:scalar} FirstIndex: int;
  var {:scalar} Tmp_1645: int;
  var {:dopa} {:scalar} LastLbo: int;
  var {:scalar} Tmp_1646: int;
  var {:scalar} Tmp_1647: int;
  var {:scalar} Wait_8: int;
  var {:scalar} Tmp_1648: int;
  var {:scalar} Tmp_1649: int;
  var {:dopa} {:scalar} NextIsAllocated: int;
  var {:dopa} {:scalar} NextVbo: int;
  var {:scalar} sdv_952: int;
  var {:pointer} sdv_953: int;
  var {:pointer} Tmp_1651: int;
  var {:dopa} {:scalar} LastByteCount: int;
  var {:scalar} sdv_954: int;
  var {:pointer} Tmp_1652: int;
  var {:scalar} sdv_955: int;
  var {:pointer} sdv_956: int;
  var {:scalar} Tmp_1653: int;
  var {:pointer} Stats_8: int;
  var {:scalar} Tmp_1656: int;
  var {:dopa} {:scalar} NextByteCount: int;
  var {:scalar} NextRun: int;
  var {:scalar} Tmp_1657: int;
  var {:pointer} Stats_9: int;
  var {:scalar} sdv_957: int;
  var {:scalar} Tmp_1658: int;
  var {:pointer} Tmp_1659: int;
  var {:dopa} {:scalar} NextLbo: int;
  var {:pointer} Tmp_1660: int;
  var {:pointer} Tmp_1661: int;
  var {:scalar} Tmp_1662: int;
  var {:scalar} OriginalByteCount: int;
  var {:pointer} IrpContext_86: int;
  var {:pointer} Irp_26: int;
  var {:pointer} FcbOrDcb_4: int;
  var {:scalar} StartingVbo_5: int;
  var {:scalar} ByteCount_13: int;
  var {:scalar} UserByteCount: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_1348: int;
  var vslice_dummy_var_1349: int;
  var vslice_dummy_var_1350: int;
  var vslice_dummy_var_1351: int;

  anon0:
    call {:si_unique_call 1859} LastIsAllocated := __HAVOC_malloc(4);
    call {:si_unique_call 1860} EndOnMax_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1861} LastIndex := __HAVOC_malloc(4);
    call {:si_unique_call 1862} FirstIndex := __HAVOC_malloc(4);
    call {:si_unique_call 1863} LastLbo := __HAVOC_malloc(4);
    call {:si_unique_call 1864} NextIsAllocated := __HAVOC_malloc(4);
    call {:si_unique_call 1865} NextVbo := __HAVOC_malloc(4);
    call {:si_unique_call 1866} LastByteCount := __HAVOC_malloc(4);
    call {:si_unique_call 1867} NextByteCount := __HAVOC_malloc(4);
    call {:si_unique_call 1868} NextLbo := __HAVOC_malloc(4);
    IrpContext_86 := actual_IrpContext_86;
    Irp_26 := actual_Irp_26;
    FcbOrDcb_4 := actual_FcbOrDcb_4;
    StartingVbo_5 := actual_StartingVbo_5;
    ByteCount_13 := actual_ByteCount_13;
    UserByteCount := actual_UserByteCount;
    call {:si_unique_call 1869} StackIoRuns := __HAVOC_malloc(100);
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    call {:si_unique_call 1870} sdv_952 := KeGetCurrentProcessorNumber();
    Tmp_1648 := sdv_952;
    assume {:nonnull} FcbOrDcb_4 != 0;
    assume FcbOrDcb_4 > 0;
    havoc Tmp_1651;
    assume {:nonnull} Tmp_1651 != 0;
    assume Tmp_1651 > 0;
    havoc Tmp_1637;
    Stats_7 := Tmp_1637 + Tmp_1648 * 240;
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} Stats_7 != 0;
    assume Stats_7 > 0;
    assume {:nonnull} Stats_7 != 0;
    assume Stats_7 > 0;
    goto L22;

  L22:
    NextRun := 0;
    BufferOffset := 0;
    OriginalByteCount := ByteCount_13;
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    havoc Tmp_1653;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Tmp_1653 == 0;
    Wait_8 := 0;
    goto L193;

  L193:
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    Tmp_1656 := 1;
    goto L30;

  L30:
    call {:si_unique_call 1871} FatLockUserBuffer(IrpContext_86, Irp_26, Tmp_1656, ByteCount_13);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} UserByteCount != ByteCount_13;
    Tmp_1643 := ByteCount_13 - UserByteCount;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    call {:si_unique_call 1872} Mdl_4 := IoAllocateMdl(0, Tmp_1643, 0, 0, 0);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mdl_4 != 0;
    goto L46;

  L46:
    Tmp_1644 := ByteCount_13 - UserByteCount;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    call {:si_unique_call 1873} IoBuildPartialMdl(0, 0, 0, Tmp_1644);
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    havoc Tmp_1639;
    assume {:nonnull} Tmp_1639 != 0;
    assume Tmp_1639 > 0;
    call {:si_unique_call 1874} sdv_953 := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_953 == 0;
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    call {:si_unique_call 1875} ExRaiseStatus(-1073741670);
    goto L34;

  L34:
    call {:si_unique_call 1876} FatLookupFileAllocation#1(IrpContext_86, FcbOrDcb_4, StartingVbo_5, NextLbo, NextByteCount, NextIsAllocated, EndOnMax_1, FirstIndex);
    assume {:nonnull} NextIsAllocated != 0;
    assume NextIsAllocated > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L67;

  L67:
    assume {:nonnull} EndOnMax_1 != 0;
    assume EndOnMax_1 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_1662 := 1;
    goto L70;

  L70:
    assume {:nonnull} NextByteCount != 0;
    assume NextByteCount > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 1877} sdv_955 := KeGetCurrentProcessorNumber();
    Tmp_1638 := sdv_955;
    assume {:nonnull} FcbOrDcb_4 != 0;
    assume FcbOrDcb_4 > 0;
    havoc Tmp_1636;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    havoc Tmp_1652;
    Stats_8 := Tmp_1652 + Tmp_1638 * 240;
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Stats_8 != 0;
    assume Stats_8 > 0;
    goto L84;

  L84:
    assume {:nonnull} FcbOrDcb_4 != 0;
    assume FcbOrDcb_4 > 0;
    assume {:nonnull} NextLbo != 0;
    assume NextLbo > 0;
    havoc vslice_dummy_var_1348;
    havoc vslice_dummy_var_1349;
    call {:si_unique_call 1878} FatSingleAsync(IrpContext_86, vslice_dummy_var_1348, vslice_dummy_var_1349, ByteCount_13, Irp_26);
    goto L87;

  L87:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Wait_8 != 0;
    call {:si_unique_call 1879} FatWaitSync(IrpContext_86);
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    havoc Tmp_1635;
    goto L1;

  L1:
    return;

  anon63_Then:
    assume {:partition} Wait_8 == 0;
    Tmp_1635 := 259;
    goto L1;

  anon74_Then:
    assume {:nonnull} Stats_8 != 0;
    assume Stats_8 > 0;
    goto L84;

  anon60_Then:
    call {:si_unique_call 1880} sdv_954 := KeGetCurrentProcessorNumber();
    Tmp_1645 := sdv_954;
    assume {:nonnull} FcbOrDcb_4 != 0;
    assume FcbOrDcb_4 > 0;
    havoc Tmp_1659;
    assume {:nonnull} Tmp_1659 != 0;
    assume Tmp_1659 > 0;
    havoc Tmp_1661;
    assume {:nonnull} Tmp_1661 != 0;
    assume Tmp_1661 > 0;
    Stats_9 := Common__FILE_SYSTEM_STATISTICS(Tmp_1661 + Tmp_1645 * 240);
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Stats_9 != 0;
    assume Stats_9 > 0;
    goto L84;

  anon62_Then:
    assume {:nonnull} Stats_9 != 0;
    assume Stats_9 > 0;
    goto L84;

  anon73_Then:
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Stats_9 != 0;
    assume Stats_9 > 0;
    goto L84;

  anon61_Then:
    assume {:nonnull} Stats_9 != 0;
    assume Stats_9 > 0;
    goto L84;

  anon59_Then:
    Tmp_1649 := StartingVbo_5 + ByteCount_13 - 1;
    call {:si_unique_call 1881} FatLookupFileAllocation#1(IrpContext_86, FcbOrDcb_4, Tmp_1649, LastLbo, LastByteCount, LastIsAllocated, EndOnMax_1, LastIndex);
    assume {:nonnull} LastIsAllocated != 0;
    assume LastIsAllocated > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L109;

  L109:
    assume {:nonnull} FirstIndex != 0;
    assume FirstIndex > 0;
    assume {:nonnull} LastIndex != 0;
    assume LastIndex > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} FirstIndex != 0;
    assume FirstIndex > 0;
    assume {:nonnull} LastIndex != 0;
    assume LastIndex > 0;
    havoc Tmp_1658;
    call {:si_unique_call 1882} sdv_956 := ExAllocatePoolWithTag(17, Tmp_1658, -378248890);
    IoRuns_1 := sdv_956;
    goto L116;

  L116:
    assume {:nonnull} FirstIndex != 0;
    assume FirstIndex > 0;
    havoc CurrentIndex;
    goto L117;

  L117:
    call {:si_unique_call 1883} Tmp_1640, CurrentIndex, Tmp_1642, BufferOffset, Tmp_1646, NextRun, Tmp_1657, StartingVbo_5, ByteCount_13, vslice_dummy_var_255 := FatNonCachedIo_loop_L117(Tmp_1640, IoRuns_1, CurrentIndex, Tmp_1642, BufferOffset, LastIndex, Tmp_1646, NextVbo, NextByteCount, NextRun, Tmp_1657, NextLbo, FcbOrDcb_4, StartingVbo_5, ByteCount_13, vslice_dummy_var_255);
    goto L117_last;

  L117_last:
    assume {:nonnull} LastIndex != 0;
    assume LastIndex > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} NextByteCount != 0;
    assume NextByteCount > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} NextByteCount != 0;
    assume NextByteCount > 0;
    goto L120;

  L120:
    Tmp_1640 := NextRun;
    assume {:nonnull} IoRuns_1 != 0;
    assume IoRuns_1 > 0;
    Tmp_1642 := NextRun;
    assume {:nonnull} IoRuns_1 != 0;
    assume IoRuns_1 > 0;
    assume {:nonnull} NextLbo != 0;
    assume NextLbo > 0;
    Tmp_1646 := NextRun;
    assume {:nonnull} IoRuns_1 != 0;
    assume IoRuns_1 > 0;
    Tmp_1657 := NextRun;
    assume {:nonnull} IoRuns_1 != 0;
    assume IoRuns_1 > 0;
    assume {:nonnull} NextByteCount != 0;
    assume NextByteCount > 0;
    NextRun := NextRun + 1;
    assume {:nonnull} NextByteCount != 0;
    assume NextByteCount > 0;
    havoc StartingVbo_5;
    assume {:nonnull} NextByteCount != 0;
    assume NextByteCount > 0;
    havoc BufferOffset;
    assume {:nonnull} NextByteCount != 0;
    assume NextByteCount > 0;
    havoc ByteCount_13;
    CurrentIndex := CurrentIndex + 1;
    assume {:nonnull} LastIndex != 0;
    assume LastIndex > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} FcbOrDcb_4 != 0;
    assume FcbOrDcb_4 > 0;
    havoc vslice_dummy_var_1350;
    call {:si_unique_call 1884} vslice_dummy_var_255 := FatGetNextMcbEntry(vslice_dummy_var_1350, Mcb__FCB(FcbOrDcb_4), CurrentIndex, NextVbo, NextLbo, NextByteCount);
    goto anon75_Else_dummy;

  anon75_Else_dummy:
    assume false;
    return;

  anon75_Then:
    goto anon75_Then_dummy;

  anon75_Then_dummy:
    assume false;
    return;

  anon67_Then:
    goto L120;

  anon66_Then:
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 1885} sdv_957 := KeGetCurrentProcessorNumber();
    Tmp_1647 := sdv_957;
    assume {:nonnull} FcbOrDcb_4 != 0;
    assume FcbOrDcb_4 > 0;
    havoc Tmp_1641;
    assume {:nonnull} Tmp_1641 != 0;
    assume Tmp_1641 > 0;
    havoc Tmp_1660;
    assume {:nonnull} Tmp_1660 != 0;
    assume Tmp_1660 > 0;
    Stats_6 := Common__FILE_SYSTEM_STATISTICS(Tmp_1660 + Tmp_1647 * 240);
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Stats_6 != 0;
    assume Stats_6 > 0;
    goto L136;

  L136:
    assume {:nonnull} FcbOrDcb_4 != 0;
    assume FcbOrDcb_4 > 0;
    havoc vslice_dummy_var_1351;
    call {:si_unique_call 1886} FatMultipleAsync(IrpContext_86, vslice_dummy_var_1351, Irp_26, NextRun, IoRuns_1);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} IoRuns_1 != StackIoRuns;
    call {:si_unique_call 1887} sdv_ExFreePool(0);
    goto L87;

  anon70_Then:
    assume {:partition} IoRuns_1 == StackIoRuns;
    goto L87;

  anon69_Then:
    assume {:nonnull} Stats_6 != 0;
    assume Stats_6 > 0;
    goto L136;

  anon77_Then:
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Stats_6 != 0;
    assume Stats_6 > 0;
    goto L136;

  anon68_Then:
    assume {:nonnull} Stats_6 != 0;
    assume Stats_6 > 0;
    goto L136;

  anon76_Then:
    goto L136;

  anon65_Then:
    IoRuns_1 := StackIoRuns;
    goto L116;

  anon64_Then:
    call {:si_unique_call 1888} FatPopUpFileCorrupt#1(IrpContext_86, FcbOrDcb_4);
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    call {:si_unique_call 1889} ExRaiseStatus(-1073741566);
    goto L109;

  anon58_Then:
    Tmp_1662 := 0;
    goto L70;

  anon57_Then:
    call {:si_unique_call 1890} FatPopUpFileCorrupt#1(IrpContext_86, FcbOrDcb_4);
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    call {:si_unique_call 1891} ExRaiseStatus(-1073741566);
    goto L67;

  anon56_Then:
    assume {:partition} sdv_953 != 0;
    goto L34;

  anon55_Then:
    assume {:partition} Mdl_4 == 0;
    assume {:nonnull} IrpContext_86 != 0;
    assume IrpContext_86 > 0;
    call {:si_unique_call 1892} ExRaiseStatus(-1073741670);
    goto L46;

  anon54_Then:
    assume {:partition} UserByteCount == ByteCount_13;
    goto L34;

  anon72_Then:
    Tmp_1656 := 0;
    goto L30;

  anon71_Then:
    assume {:partition} Tmp_1653 != 0;
    Wait_8 := 1;
    goto L193;

  anon78_Then:
    assume {:nonnull} Stats_7 != 0;
    assume Stats_7 > 0;
    assume {:nonnull} Stats_7 != 0;
    assume Stats_7 > 0;
    goto L22;

  anon53_Then:
    goto L22;
}



procedure {:origName "FatPagingFileIo"} FatPagingFileIo(actual_Irp_27: int, actual_Fcb_30: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPagingFileIo"} FatPagingFileIo(actual_Irp_27: int, actual_Fcb_30: int)
{
  var {:scalar} RemainingByteCount: int;
  var {:pointer} Mdl_5: int;
  var {:pointer} AssocIrp: int;
  var {:scalar} Vbo_7: int;
  var {:pointer} Tmp_1663: int;
  var {:scalar} CurrentIndex_1: int;
  var {:scalar} IrpCount: int;
  var {:scalar} BufferOffset_1: int;
  var {:dopa} {:scalar} LastIndex_1: int;
  var {:pointer} NextIrpSp: int;
  var {:dopa} {:scalar} FirstIndex_1: int;
  var {:dopa} {:scalar} LastLbo_1: int;
  var {:scalar} Tmp_1664: int;
  var {:pointer} IrpSp_11: int;
  var {:dopa} {:scalar} NextVbo_1: int;
  var {:pointer} DeviceObject_10: int;
  var {:scalar} Context_7: int;
  var {:dopa} {:scalar} LastByteCount_1: int;
  var {:scalar} MustSucceed: int;
  var {:dopa} {:scalar} NextByteCount_1: int;
  var {:scalar} IrpIsMaster: int;
  var {:dopa} {:scalar} NextLbo_1: int;
  var {:scalar} Tmp_1669: int;
  var {:scalar} Tmp_1670: int;
  var {:scalar} MdlIsReserve: int;
  var {:scalar} ByteCount_14: int;
  var {:pointer} Irp_27: int;
  var {:pointer} Fcb_30: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_1352: int;
  var vslice_dummy_var_1353: int;
  var vslice_dummy_var_1354: int;
  var vslice_dummy_var_1355: int;
  var vslice_dummy_var_1356: int;

  anon0:
    call {:si_unique_call 1893} LastIndex_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1894} FirstIndex_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1895} LastLbo_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1896} NextVbo_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1897} vslice_dummy_var_256 := __HAVOC_malloc(4);
    call {:si_unique_call 1898} Context_7 := __HAVOC_malloc(128);
    call {:si_unique_call 1899} LastByteCount_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1900} NextByteCount_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1901} NextLbo_1 := __HAVOC_malloc(4);
    Irp_27 := actual_Irp_27;
    Fcb_30 := actual_Fcb_30;
    MdlIsReserve := 0;
    IrpIsMaster := 0;
    BufferOffset_1 := 0;
    assume {:nonnull} Fcb_30 != 0;
    assume Fcb_30 > 0;
    havoc Tmp_1663;
    assume {:nonnull} Tmp_1663 != 0;
    assume Tmp_1663 > 0;
    havoc DeviceObject_10;
    call {:si_unique_call 1902} IrpSp_11 := sdv_IoGetCurrentIrpStackLocation(Irp_27);
    assume {:nonnull} IrpSp_11 != 0;
    assume IrpSp_11 > 0;
    havoc Vbo_7;
    assume {:nonnull} IrpSp_11 != 0;
    assume IrpSp_11 > 0;
    havoc ByteCount_14;
    assume {:nonnull} Fcb_30 != 0;
    assume Fcb_30 > 0;
    havoc vslice_dummy_var_1352;
    call {:si_unique_call 1903} MustSucceed := FatLookupMcbEntry(vslice_dummy_var_1352, Mcb__FCB(Fcb_30), Vbo_7, NextLbo_1, NextByteCount_1, FirstIndex_1);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} MustSucceed != 0;
    goto L43;

  L43:
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1904} NextIrpSp := sdv_IoGetNextIrpStackLocation(Irp_27);
    assume {:nonnull} IrpSp_11 != 0;
    assume IrpSp_11 > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    assume {:nonnull} NextLbo_1 != 0;
    assume NextLbo_1 > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    call {:si_unique_call 1905} sdv_IoSetCompletionRoutine(Irp_27, li2bplFunctionConstant726, Irp_27, 0, 1, 1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume Irp_27 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1906} SLIC_sdv_IoCallDriver_entry(0);
    goto L200;

  L200:
    call {:si_unique_call 1907} vslice_dummy_var_262 := sdv_IoCallDriver(DeviceObject_10, Irp_27);
    goto L1;

  L1:
    return;

  anon51_Then:
    assume !(Irp_27 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L200;

  anon50_Then:
    Tmp_1670 := Vbo_7 + ByteCount_14 - 1;
    assume {:nonnull} Fcb_30 != 0;
    assume Fcb_30 > 0;
    havoc vslice_dummy_var_1353;
    call {:si_unique_call 1908} MustSucceed := FatLookupMcbEntry(vslice_dummy_var_1353, Mcb__FCB(Fcb_30), Tmp_1670, LastLbo_1, LastByteCount_1, LastIndex_1);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} MustSucceed != 0;
    goto L66;

  L66:
    assume {:nonnull} FirstIndex_1 != 0;
    assume FirstIndex_1 > 0;
    havoc CurrentIndex_1;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} FirstIndex_1 != 0;
    assume FirstIndex_1 > 0;
    assume {:nonnull} LastIndex_1 != 0;
    assume LastIndex_1 > 0;
    havoc IrpCount;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    goto L71;

  L71:
    call {:si_unique_call 1909} RemainingByteCount, Mdl_5, AssocIrp, Vbo_7, CurrentIndex_1, IrpCount, BufferOffset_1, NextIrpSp, IrpIsMaster, Tmp_1669, MdlIsReserve, ByteCount_14, vslice_dummy_var_257, vslice_dummy_var_258, vslice_dummy_var_259, vslice_dummy_var_260, vslice_dummy_var_263 := FatPagingFileIo_loop_L71(RemainingByteCount, Mdl_5, AssocIrp, Vbo_7, CurrentIndex_1, IrpCount, BufferOffset_1, LastIndex_1, NextIrpSp, IrpSp_11, NextVbo_1, DeviceObject_10, Context_7, NextByteCount_1, IrpIsMaster, NextLbo_1, Tmp_1669, MdlIsReserve, ByteCount_14, Irp_27, Fcb_30, vslice_dummy_var_257, vslice_dummy_var_258, vslice_dummy_var_259, vslice_dummy_var_260, vslice_dummy_var_263);
    goto L71_last;

  L71_last:
    assume {:nonnull} LastIndex_1 != 0;
    assume LastIndex_1 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    AssocIrp := 0;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    goto L75;

  L75:
    RemainingByteCount := 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    havoc vslice_dummy_var_1354;
    call {:si_unique_call 1910} Mdl_5 := IoAllocateMdl(0, vslice_dummy_var_1354, 0, 0, 0);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mdl_5 != 0;
    goto L86;

  L86:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    havoc vslice_dummy_var_1355;
    call {:si_unique_call 1911} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_1355);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} MdlIsReserve != 0;
    goto L92;

  L92:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} AssocIrp != 0;
    IrpCount := IrpCount - 1;
    goto L95;

  L95:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} IrpIsMaster != 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 1912} KeInitializeEvent(Event_FAT_PAGING_FILE_CONTEXT(Context_7), 1, 0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    goto L103;

  L103:
    assume {:nonnull} AssocIrp != 0;
    assume AssocIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} IrpIsMaster != 0;
    call {:si_unique_call 1913} sdv_IoSetCompletionRoutine(AssocIrp, li2bplFunctionConstant727, Context_7, 1, 1, 1);
    goto L111;

  L111:
    call {:si_unique_call 1914} NextIrpSp := sdv_IoGetNextIrpStackLocation(AssocIrp);
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    assume {:nonnull} IrpSp_11 != 0;
    assume IrpSp_11 > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    assume {:nonnull} NextLbo_1 != 0;
    assume NextLbo_1 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume AssocIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1915} SLIC_sdv_IoCallDriver_entry(0);
    goto L203;

  L203:
    call {:si_unique_call 1916} vslice_dummy_var_263 := sdv_IoCallDriver(DeviceObject_10, AssocIrp);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} IrpIsMaster != 0;
    call {:si_unique_call 1917} vslice_dummy_var_258 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    MdlIsReserve := 0;
    IrpIsMaster := MdlIsReserve;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L123;

  L123:
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    havoc Vbo_7;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    havoc BufferOffset_1;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    havoc ByteCount_14;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} RemainingByteCount != 0;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    assume {:nonnull} NextLbo_1 != 0;
    assume NextLbo_1 > 0;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    assume {:nonnull} NextVbo_1 != 0;
    assume NextVbo_1 > 0;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    goto anon70_Else_dummy;

  anon70_Else_dummy:
    assume false;
    return;

  anon70_Then:
    assume {:partition} RemainingByteCount == 0;
    CurrentIndex_1 := CurrentIndex_1 + 1;
    assume {:nonnull} LastIndex_1 != 0;
    assume LastIndex_1 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Fcb_30 != 0;
    assume Fcb_30 > 0;
    havoc vslice_dummy_var_1356;
    call {:si_unique_call 1918} vslice_dummy_var_259 := FatGetNextMcbEntry(vslice_dummy_var_1356, Mcb__FCB(Fcb_30), CurrentIndex_1, NextVbo_1, NextLbo_1, NextByteCount_1);
    goto anon71_Else_dummy;

  anon71_Else_dummy:
    assume false;
    return;

  anon71_Then:
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    assume false;
    return;

  anon69_Then:
    goto L72;

  L72:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} IrpCount != 0;
    goto L170;

  L170:
    call {:si_unique_call 1919} vslice_dummy_var_261 := FatPagingFileIo_loop_L170(IrpCount, Irp_27, vslice_dummy_var_261);
    goto L170_last;

  L170_last:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    call {:si_unique_call 1920} vslice_dummy_var_261 := KeDelayExecutionThread(0, 0, 0);
    goto anon65_Else_dummy;

  anon65_Else_dummy:
    assume false;
    return;

  anon65_Then:
    call {:si_unique_call 1921} sdv_IoCompleteRequest(0, 1);
    goto L1;

  anon54_Then:
    assume {:partition} IrpCount == 0;
    goto L1;

  anon60_Then:
    assume {:partition} IrpIsMaster == 0;
    goto L123;

  anon68_Then:
    assume !(AssocIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L203;

  anon67_Then:
    assume {:partition} IrpIsMaster == 0;
    call {:si_unique_call 1922} sdv_IoSetCompletionRoutine(AssocIrp, li2bplFunctionConstant726, Irp_27, 0, 1, 1);
    goto L111;

  anon59_Then:
    assume {:partition} IrpIsMaster == 0;
    call {:si_unique_call 1923} sdv_IoSetNextIrpStackLocation(0);
    call {:si_unique_call 1924} NextIrpSp := sdv_IoGetCurrentIrpStackLocation(AssocIrp);
    assume {:nonnull} IrpSp_11 != 0;
    assume IrpSp_11 > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    assume {:nonnull} IrpSp_11 != 0;
    assume IrpSp_11 > 0;
    assume {:nonnull} NextIrpSp != 0;
    assume NextIrpSp > 0;
    goto L103;

  anon58_Then:
    assume {:partition} AssocIrp == 0;
    AssocIrp := Irp_27;
    IrpIsMaster := 1;
    goto L151;

  L151:
    call {:si_unique_call 1925} vslice_dummy_var_260 := FatPagingFileIo_loop_L151(IrpCount, Irp_27, vslice_dummy_var_260);
    goto L151_last;

  L151_last:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 1926} vslice_dummy_var_260 := KeDelayExecutionThread(0, 0, 0);
    goto anon61_Else_dummy;

  anon61_Else_dummy:
    assume false;
    return;

  anon61_Then:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L95;

  anon62_Then:
    goto L72;

  anon56_Then:
    assume {:partition} MdlIsReserve == 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} IrpCount != 1;
    goto L158;

  L158:
    assume {:nonnull} DeviceObject_10 != 0;
    assume DeviceObject_10 > 0;
    havoc Tmp_1669;
    call {:si_unique_call 1927} AssocIrp := IoMakeAssociatedIrp(Irp_27, Tmp_1669);
    goto L92;

  anon57_Then:
    assume {:partition} IrpCount == 1;
    assume {:nonnull} LastIndex_1 != 0;
    assume LastIndex_1 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} RemainingByteCount == 0;
    goto L158;

  anon64_Then:
    assume {:partition} RemainingByteCount != 0;
    goto L92;

  anon63_Then:
    goto L92;

  anon55_Then:
    assume {:partition} Mdl_5 == 0;
    call {:si_unique_call 1928} vslice_dummy_var_257 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    Mdl_5 := FatReserveMdl;
    MdlIsReserve := 1;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    havoc RemainingByteCount;
    assume {:nonnull} NextByteCount_1 != 0;
    assume NextByteCount_1 > 0;
    goto L86;

  anon72_Then:
    goto L86;

  anon66_Then:
    goto L75;

  anon53_Then:
    goto L72;

  anon52_Then:
    assume {:partition} MustSucceed == 0;
    Tmp_1664 := Vbo_7 + ByteCount_14 - 1;
    call {:si_unique_call 1929} KeBugCheckEx(35, 524634, Tmp_1664, 1, 0);
    goto L66;

  anon49_Then:
    assume {:partition} MustSucceed == 0;
    call {:si_unique_call 1930} KeBugCheckEx(35, 524560, Vbo_7, ByteCount_14, 0);
    goto L43;
}



procedure {:origName "_sdv_init31"} _sdv_init31();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init31"} _sdv_init31()
{
  var vslice_dummy_var_264: int;

  anon0:
    call {:si_unique_call 1931} vslice_dummy_var_264 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatNonCachedNonAlignedRead"} FatNonCachedNonAlignedRead(actual_IrpContext_87: int, actual_Irp_28: int, actual_FcbOrDcb_5: int, actual_StartingVbo_6: int, actual_ByteCount_15: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatNonCachedNonAlignedRead"} FatNonCachedNonAlignedRead(actual_IrpContext_87: int, actual_Irp_28: int, actual_FcbOrDcb_5: int, actual_StartingVbo_6: int, actual_ByteCount_15: int)
{
  var {:scalar} LastSectorVbo: int;
  var {:pointer} Mdl_6: int;
  var {:pointer} SavedUserBuffer: int;
  var {:dopa} {:scalar} EndOnMax_2: int;
  var {:pointer} sdv_973: int;
  var {:pointer} DiskBuffer: int;
  var {:scalar} Tmp_1675: int;
  var {:dopa} {:scalar} NextIsAllocated_1: int;
  var {:pointer} sdv_975: int;
  var {:pointer} UserBuffer: int;
  var {:pointer} SavedMdl: int;
  var {:scalar} Tmp_1677: int;
  var {:scalar} sdv_977: int;
  var {:pointer} sdv_978: int;
  var {:scalar} Hole: int;
  var {:scalar} BytesToCopy_2: int;
  var {:dopa} {:scalar} NextByteCount_2: int;
  var {:scalar} SectorSize_3: int;
  var {:scalar} Tmp_1678: int;
  var {:scalar} Tmp_1679: int;
  var {:dopa} {:scalar} NextLbo_2: int;
  var {:scalar} OriginalByteCount_1: int;
  var {:pointer} Tmp_1680: int;
  var {:pointer} IrpContext_87: int;
  var {:pointer} Irp_28: int;
  var {:pointer} FcbOrDcb_5: int;
  var {:scalar} StartingVbo_6: int;
  var {:scalar} ByteCount_15: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_1357: int;
  var vslice_dummy_var_1358: int;
  var vslice_dummy_var_1359: int;

  anon0:
    call {:si_unique_call 1932} EndOnMax_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1933} vslice_dummy_var_265 := __HAVOC_malloc(4);
    call {:si_unique_call 1934} NextIsAllocated_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1935} NextByteCount_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1936} NextLbo_2 := __HAVOC_malloc(4);
    IrpContext_87 := actual_IrpContext_87;
    Irp_28 := actual_Irp_28;
    FcbOrDcb_5 := actual_FcbOrDcb_5;
    StartingVbo_6 := actual_StartingVbo_6;
    ByteCount_15 := actual_ByteCount_15;
    DiskBuffer := 0;
    OriginalByteCount_1 := ByteCount_15;
    assume {:nonnull} FcbOrDcb_5 != 0;
    assume FcbOrDcb_5 > 0;
    havoc Tmp_1680;
    assume {:nonnull} Tmp_1680 != 0;
    assume Tmp_1680 > 0;
    havoc SectorSize_3;
    call {:si_unique_call 1937} FatLockUserBuffer(IrpContext_87, Irp_28, 1, ByteCount_15);
    call {:si_unique_call 1938} sdv_973 := FatMapUserBuffer(IrpContext_87, Irp_28);
    UserBuffer := sdv_973;
    Tmp_1679 := BAND(SectorSize_3 + 4096 - 1, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 1939} sdv_975 := ExAllocatePoolWithTag(20, Tmp_1679, -814456506);
    DiskBuffer := sdv_975;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} BAND(StartingVbo_6, SectorSize_3 - 1) != 0;
    call {:si_unique_call 1940} FatLookupFileAllocation#1(IrpContext_87, FcbOrDcb_5, StartingVbo_6, NextLbo_2, NextByteCount_2, NextIsAllocated_1, EndOnMax_2, 0);
    assume {:nonnull} NextIsAllocated_1 != 0;
    assume NextIsAllocated_1 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L54;

  L54:
    assume {:nonnull} NextLbo_2 != 0;
    assume NextLbo_2 > 0;
    havoc Tmp_1675;
    assume {:nonnull} FcbOrDcb_5 != 0;
    assume FcbOrDcb_5 > 0;
    havoc vslice_dummy_var_1357;
    call {:si_unique_call 1941} FatSingleNonAlignedSync(IrpContext_87, vslice_dummy_var_1357, DiskBuffer, Tmp_1675, SectorSize_3, Irp_28);
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L73;

  L73:
    call {:si_unique_call 1942} sdv_ExFreePool(0);
    call {:si_unique_call 1943} sdv_977 := sdv_AbnormalTermination();
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_977 == 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    call {:si_unique_call 1944} sdv_KeFlushIoBuffers(0, 1, 0);
    goto L1;

  L1:
    return;

  anon29_Then:
    goto L1;

  anon28_Then:
    assume {:partition} sdv_977 != 0;
    goto L1;

  anon27_Then:
    Hole := BAND(StartingVbo_6, SectorSize_3 - 1);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} ByteCount_15 >= SectorSize_3 - Hole;
    Tmp_1677 := SectorSize_3 - Hole;
    goto L64;

  L64:
    BytesToCopy_2 := Tmp_1677;
    call {:si_unique_call 1945} sdv_RtlCopyMemory(0, 0, BytesToCopy_2);
    StartingVbo_6 := StartingVbo_6 + BytesToCopy_2;
    ByteCount_15 := ByteCount_15 - BytesToCopy_2;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} ByteCount_15 == 0;
    goto L73;

  anon35_Then:
    assume {:partition} ByteCount_15 != 0;
    goto L33;

  L33:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} BAND(ByteCount_15, SectorSize_3 - 1) != 0;
    Tmp_1678 := BAND(ByteCount_15, BNOT(SectorSize_3 - 1));
    LastSectorVbo := StartingVbo_6 + Tmp_1678;
    call {:si_unique_call 1946} FatLookupFileAllocation#1(IrpContext_87, FcbOrDcb_5, LastSectorVbo, NextLbo_2, NextByteCount_2, NextIsAllocated_1, EndOnMax_2, 0);
    assume {:nonnull} NextIsAllocated_1 != 0;
    assume NextIsAllocated_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L101;

  L101:
    assume {:nonnull} FcbOrDcb_5 != 0;
    assume FcbOrDcb_5 > 0;
    assume {:nonnull} NextLbo_2 != 0;
    assume NextLbo_2 > 0;
    havoc vslice_dummy_var_1358;
    havoc vslice_dummy_var_1359;
    call {:si_unique_call 1947} FatSingleNonAlignedSync(IrpContext_87, vslice_dummy_var_1358, DiskBuffer, vslice_dummy_var_1359, SectorSize_3, Irp_28);
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    BytesToCopy_2 := BAND(ByteCount_15, SectorSize_3 - 1);
    call {:si_unique_call 1948} sdv_RtlCopyMemory(0, 0, BytesToCopy_2);
    ByteCount_15 := ByteCount_15 - BytesToCopy_2;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} ByteCount_15 != 0;
    goto L90;

  L90:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    havoc SavedMdl;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    havoc SavedUserBuffer;
    call {:si_unique_call 1949} sdv_978 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    call {:si_unique_call 1950} Mdl_6 := IoAllocateMdl(0, ByteCount_15, 0, 0, 0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Mdl_6 != 0;
    goto L130;

  L130:
    call {:si_unique_call 1951} IoBuildPartialMdl(0, 0, 0, ByteCount_15);
    call {:si_unique_call 1952} vslice_dummy_var_266 := FatNonCachedIo(IrpContext_87, Irp_28, FcbOrDcb_5, StartingVbo_6, ByteCount_15, ByteCount_15);
    call {:si_unique_call 1953} IoFreeMdl(0);
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto L73;

  anon32_Then:
    assume {:partition} Mdl_6 == 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} IrpContext_87 != 0;
    assume IrpContext_87 > 0;
    call {:si_unique_call 1954} ExRaiseStatus(-1073741670);
    goto L130;

  anon36_Then:
    assume {:partition} ByteCount_15 == 0;
    goto L73;

  anon31_Then:
    goto L73;

  anon30_Then:
    call {:si_unique_call 1955} FatPopUpFileCorrupt#1(IrpContext_87, FcbOrDcb_5);
    assume {:nonnull} IrpContext_87 != 0;
    assume IrpContext_87 > 0;
    call {:si_unique_call 1956} ExRaiseStatus(-1073741566);
    goto L101;

  anon25_Then:
    assume {:partition} BAND(ByteCount_15, SectorSize_3 - 1) == 0;
    goto L90;

  anon34_Then:
    assume {:partition} SectorSize_3 - Hole > ByteCount_15;
    Tmp_1677 := ByteCount_15;
    goto L64;

  anon26_Then:
    call {:si_unique_call 1957} FatPopUpFileCorrupt#1(IrpContext_87, FcbOrDcb_5);
    assume {:nonnull} IrpContext_87 != 0;
    assume IrpContext_87 > 0;
    call {:si_unique_call 1958} ExRaiseStatus(-1073741566);
    goto L54;

  anon33_Then:
    assume {:partition} BAND(StartingVbo_6, SectorSize_3 - 1) == 0;
    goto L33;
}



procedure {:origName "FatWaitSync"} FatWaitSync(actual_IrpContext_88: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatWaitSync"} FatWaitSync(actual_IrpContext_88: int)
{
  var {:pointer} Tmp_1684: int;
  var {:pointer} IrpContext_88: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;

  anon0:
    call {:si_unique_call 1959} vslice_dummy_var_267 := __HAVOC_malloc(4);
    IrpContext_88 := actual_IrpContext_88;
    assume {:nonnull} IrpContext_88 != 0;
    assume IrpContext_88 > 0;
    call {:si_unique_call 1960} vslice_dummy_var_268 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} IrpContext_88 != 0;
    assume IrpContext_88 > 0;
    havoc Tmp_1684;
    assume {:nonnull} Tmp_1684 != 0;
    assume Tmp_1684 > 0;
    call {:si_unique_call 1961} KeClearEvent(SyncEvent_unnamed_tag_63(Wait__FAT_IO_CONTEXT(Tmp_1684)));
    return;
}



procedure {:origName "FatMapUserBuffer"} FatMapUserBuffer(actual_IrpContext_89: int, actual_Irp_29: int) returns (Tmp_1685: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatMapUserBuffer"} FatMapUserBuffer(actual_IrpContext_89: int, actual_Irp_29: int) returns (Tmp_1685: int)
{
  var {:pointer} Address_3: int;
  var {:pointer} Irp_29: int;

  anon0:
    Irp_29 := actual_Irp_29;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 1962} Address_3 := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Address_3 != 0;
    goto L14;

  L14:
    Tmp_1685 := Address_3;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} Address_3 == 0;
    call {:si_unique_call 1963} ExRaiseStatus(-1073741670);
    goto L14;

  anon5_Then:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc Tmp_1685;
    goto L1;
}



procedure {:origName "FatSingleNonAlignedSync"} FatSingleNonAlignedSync(actual_IrpContext_90: int, actual_Vcb_50: int, actual_Buffer_23: int, actual_Lbo_8: int, actual_ByteCount_16: int, actual_Irp_30: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSingleNonAlignedSync"} FatSingleNonAlignedSync(actual_IrpContext_90: int, actual_Vcb_50: int, actual_Buffer_23: int, actual_Lbo_8: int, actual_ByteCount_16: int, actual_Irp_30: int)
{
  var {:pointer} Mdl_7: int;
  var {:pointer} IrpSp_12: int;
  var {:pointer} SavedMdl_1: int;
  var {:scalar} sdv_985: int;
  var {:pointer} sdv_987: int;
  var {:pointer} IrpContext_90: int;
  var {:pointer} Vcb_50: int;
  var {:scalar} Lbo_8: int;
  var {:scalar} ByteCount_16: int;
  var {:pointer} Irp_30: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_1360: int;
  var vslice_dummy_var_1361: int;

  anon0:
    call {:si_unique_call 1964} vslice_dummy_var_269 := __HAVOC_malloc(4);
    IrpContext_90 := actual_IrpContext_90;
    Vcb_50 := actual_Vcb_50;
    Lbo_8 := actual_Lbo_8;
    ByteCount_16 := actual_ByteCount_16;
    Irp_30 := actual_Irp_30;
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    havoc SavedMdl_1;
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    call {:si_unique_call 1965} Mdl_7 := IoAllocateMdl(0, ByteCount_16, 0, 0, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mdl_7 != 0;
    goto L14;

  L14:
    call {:si_unique_call 1966} MmProbeAndLockPages(0, 0, 1);
    call {:si_unique_call 1967} sdv_985 := sdv_AbnormalTermination();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_985 != 0;
    call {:si_unique_call 1968} IoFreeMdl(0);
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    goto L29;

  L29:
    assume {:nonnull} IrpContext_90 != 0;
    assume IrpContext_90 > 0;
    havoc vslice_dummy_var_1360;
    call {:si_unique_call 1969} sdv_IoSetCompletionRoutine(Irp_30, li2bplFunctionConstant735, vslice_dummy_var_1360, 1, 1, 1);
    call {:si_unique_call 1970} IrpSp_12 := sdv_IoGetNextIrpStackLocation(Irp_30);
    assume {:nonnull} IrpContext_90 != 0;
    assume IrpContext_90 > 0;
    assume {:nonnull} IrpSp_12 != 0;
    assume IrpSp_12 > 0;
    assume {:nonnull} IrpSp_12 != 0;
    assume IrpSp_12 > 0;
    assume {:nonnull} IrpSp_12 != 0;
    assume IrpSp_12 > 0;
    call {:si_unique_call 1971} sdv_987 := sdv_KeGetCurrentThread();
    assume {:nonnull} Vcb_50 != 0;
    assume Vcb_50 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} IrpSp_12 != 0;
    assume IrpSp_12 > 0;
    goto L47;

  L47:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume Irp_30 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1972} SLIC_sdv_IoCallDriver_entry(0);
    goto L77;

  L77:
    assume {:nonnull} Vcb_50 != 0;
    assume Vcb_50 > 0;
    havoc vslice_dummy_var_1361;
    call {:si_unique_call 1973} vslice_dummy_var_270 := sdv_IoCallDriver(vslice_dummy_var_1361, Irp_30);
    call {:si_unique_call 1974} FatWaitSync(IrpContext_90);
    call {:si_unique_call 1975} MmUnlockPages(0);
    call {:si_unique_call 1976} IoFreeMdl(0);
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    return;

  anon12_Then:
    assume !(Irp_30 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L77;

  anon11_Then:
    goto L47;

  anon10_Then:
    assume {:partition} sdv_985 == 0;
    goto L29;

  anon9_Then:
    assume {:partition} Mdl_7 == 0;
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    assume {:nonnull} IrpContext_90 != 0;
    assume IrpContext_90 > 0;
    call {:si_unique_call 1977} ExRaiseStatus(-1073741670);
    goto L14;
}



procedure {:origName "FatLockUserBuffer"} FatLockUserBuffer(actual_IrpContext_91: int, actual_Irp_31: int, actual_Operation_1: int, actual_BufferLength: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLockUserBuffer"} FatLockUserBuffer(actual_IrpContext_91: int, actual_Irp_31: int, actual_Operation_1: int, actual_BufferLength: int)
{
  var {:pointer} Mdl_8: int;
  var {:pointer} IrpContext_91: int;
  var {:pointer} Irp_31: int;
  var {:scalar} Operation_1: int;
  var {:scalar} BufferLength: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_1362: int;

  anon0:
    call {:si_unique_call 1978} vslice_dummy_var_271 := __HAVOC_malloc(4);
    IrpContext_91 := actual_IrpContext_91;
    Irp_31 := actual_Irp_31;
    Operation_1 := actual_Operation_1;
    BufferLength := actual_BufferLength;
    Mdl_8 := 0;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    call {:si_unique_call 1979} Mdl_8 := IoAllocateMdl(0, BufferLength, 0, 0, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Mdl_8 != 0;
    goto L12;

  L12:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    havoc vslice_dummy_var_1362;
    call {:si_unique_call 1980} MmProbeAndLockPages(0, vslice_dummy_var_1362, Operation_1);
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} Mdl_8 == 0;
    assume {:nonnull} IrpContext_91 != 0;
    assume IrpContext_91 > 0;
    call {:si_unique_call 1981} ExRaiseStatus(-1073741670);
    goto L12;

  anon6_Then:
    goto L1;
}



procedure {:origName "FatForceCacheMiss"} FatForceCacheMiss(actual_IrpContext_92: int, actual_Fcb_31: int, actual_FlushType: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatForceCacheMiss"} FatForceCacheMiss(actual_IrpContext_92: int, actual_Fcb_31: int, actual_FlushType: int)
{
  var {:pointer} Links_2: int;
  var {:scalar} ChildrenAcquired: int;
  var {:scalar} DataSectionExists: int;
  var {:pointer} Tmp_1691: int;
  var {:pointer} Tmp_1692: int;
  var {:scalar} sdv_996: int;
  var {:pointer} sdv_997: int;
  var {:pointer} Vcb_51: int;
  var {:pointer} Links_3: int;
  var {:scalar} ImageSectionExists: int;
  var {:pointer} sdv_1000: int;
  var {:pointer} TempFcb_2: int;
  var {:pointer} Section: int;
  var {:pointer} IrpContext_92: int;
  var {:pointer} Fcb_31: int;
  var {:scalar} FlushType: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;

  anon0:
    call {:si_unique_call 1982} vslice_dummy_var_272 := __HAVOC_malloc(4);
    IrpContext_92 := actual_IrpContext_92;
    Fcb_31 := actual_Fcb_31;
    FlushType := actual_FlushType;
    ChildrenAcquired := 0;
    assume {:nonnull} IrpContext_92 != 0;
    assume IrpContext_92 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L8;

  L8:
    Tmp_1692 := Fcb_31;
    assume {:nonnull} Tmp_1692 != 0;
    assume Tmp_1692 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 1983} sdv_996 := sdv_IsListEmpty(0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_996 == 0;
    ChildrenAcquired := 1;
    assume {:nonnull} Fcb_31 != 0;
    assume Fcb_31 > 0;
    havoc Links_2;
    goto L20;

  L20:
    call {:si_unique_call 1984} Links_2, sdv_997, TempFcb_2, vslice_dummy_var_277 := FatForceCacheMiss_loop_L20(Links_2, sdv_997, TempFcb_2, IrpContext_92, vslice_dummy_var_277);
    goto L20_last;

  L20_last:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 1985} sdv_997 := sdv_containing_record(Links_2, 72);
    TempFcb_2 := sdv_997;
    call {:si_unique_call 1986} vslice_dummy_var_277 := FatAcquireExclusiveFcb(IrpContext_92, TempFcb_2);
    assume {:nonnull} Links_2 != 0;
    assume Links_2 > 0;
    havoc Links_2;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    assume false;
    return;

  anon28_Then:
    goto L9;

  L9:
    call {:si_unique_call 1987} vslice_dummy_var_273 := FatAcquireExclusiveFcb(IrpContext_92, Fcb_31);
    assume {:nonnull} Fcb_31 != 0;
    assume Fcb_31 > 0;
    havoc Vcb_51;
    assume {:nonnull} Fcb_31 != 0;
    assume Fcb_31 > 0;
    assume {:nonnull} Vcb_51 != 0;
    assume Vcb_51 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} FlushType != 0;
    call {:si_unique_call 1988} vslice_dummy_var_274 := FatFlushFile(IrpContext_92, Fcb_31, FlushType);
    goto L36;

  L36:
    assume {:nonnull} Vcb_51 != 0;
    assume Vcb_51 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L59;

  L59:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ChildrenAcquired != 0;
    assume {:nonnull} Fcb_31 != 0;
    assume Fcb_31 > 0;
    havoc Links_3;
    goto L64;

  L64:
    call {:si_unique_call 1989} Links_3, sdv_1000 := FatForceCacheMiss_loop_L64(Links_3, sdv_1000);
    goto L64_last;

  L64_last:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1990} sdv_1000 := sdv_containing_record(Links_3, 72);
    call {:si_unique_call 1991} ExReleaseResourceLite(0);
    assume {:nonnull} Links_3 != 0;
    assume Links_3 > 0;
    havoc Links_3;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    assume false;
    return;

  anon32_Then:
    goto L60;

  L60:
    assume {:nonnull} Vcb_51 != 0;
    assume Vcb_51 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} Fcb_31 != 0;
    assume Fcb_31 > 0;
    call {:si_unique_call 1992} ExReleaseResourceLite(0);
    goto L1;

  L1:
    return;

  anon31_Then:
    goto L1;

  anon30_Then:
    assume {:partition} ChildrenAcquired == 0;
    goto L60;

  anon29_Then:
    assume {:nonnull} Fcb_31 != 0;
    assume Fcb_31 > 0;
    havoc Tmp_1691;
    assume {:nonnull} Tmp_1691 != 0;
    assume Tmp_1691 > 0;
    Section := SectionObjectPointers__NON_PAGED_FCB(Tmp_1691);
    assume {:nonnull} Section != 0;
    assume Section > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    DataSectionExists := 0;
    goto L115;

  L115:
    assume {:nonnull} Section != 0;
    assume Section > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    ImageSectionExists := 0;
    goto L118;

  L118:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} ImageSectionExists != 0;
    call {:si_unique_call 1993} vslice_dummy_var_275 := corral_nondet();
    goto L80;

  L80:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} DataSectionExists != 0;
    call {:si_unique_call 1994} vslice_dummy_var_276 := corral_nondet();
    goto L59;

  anon33_Then:
    assume {:partition} DataSectionExists == 0;
    goto L59;

  anon39_Then:
    assume {:partition} ImageSectionExists == 0;
    goto L80;

  anon38_Then:
    ImageSectionExists := 1;
    goto L118;

  anon37_Then:
    DataSectionExists := 1;
    goto L115;

  anon36_Then:
    assume {:partition} FlushType == 0;
    goto L36;

  anon27_Then:
    assume {:partition} sdv_996 != 0;
    goto L9;

  anon35_Then:
    goto L9;

  anon34_Then:
    assume {:nonnull} IrpContext_92 != 0;
    assume IrpContext_92 > 0;
    call {:si_unique_call 1995} ExRaiseStatus(-1073741608);
    goto L8;
}



procedure {:origName "FatSetFileObject"} FatSetFileObject(actual_FileObject_32: int, actual_TypeOfOpen_3: int, actual_VcbOrFcbOrDcb: int, actual_Ccb_15: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetFileObject"} FatSetFileObject(actual_FileObject_32: int, actual_TypeOfOpen_3: int, actual_VcbOrFcbOrDcb: int, actual_Ccb_15: int)
{
  var {:pointer} Tmp_1695: int;
  var {:pointer} Tmp_1698: int;
  var {:pointer} Tmp_1699: int;
  var {:pointer} Tmp_1700: int;
  var {:pointer} Tmp_1701: int;
  var {:pointer} FileObject_32: int;
  var {:pointer} VcbOrFcbOrDcb: int;
  var {:pointer} Ccb_15: int;
  var vslice_dummy_var_278: int;

  anon0:
    call {:si_unique_call 1996} vslice_dummy_var_278 := __HAVOC_malloc(4);
    FileObject_32 := actual_FileObject_32;
    VcbOrFcbOrDcb := actual_VcbOrFcbOrDcb;
    Ccb_15 := actual_Ccb_15;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} VcbOrFcbOrDcb != 0;
    Tmp_1695 := VcbOrFcbOrDcb;
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_1699 := VcbOrFcbOrDcb;
    assume {:nonnull} FileObject_32 != 0;
    assume FileObject_32 > 0;
    assume {:nonnull} Tmp_1699 != 0;
    assume Tmp_1699 > 0;
    goto L4;

  L4:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} FileObject_32 != 0;
    assume {:nonnull} FileObject_32 != 0;
    assume FileObject_32 > 0;
    assume {:nonnull} FileObject_32 != 0;
    assume FileObject_32 > 0;
    goto L1;

  L1:
    return;

  anon10_Then:
    assume {:partition} FileObject_32 == 0;
    goto L1;

  anon11_Then:
    Tmp_1698 := VcbOrFcbOrDcb;
    assume {:nonnull} Tmp_1698 != 0;
    assume Tmp_1698 > 0;
    havoc Tmp_1701;
    assume {:nonnull} FileObject_32 != 0;
    assume FileObject_32 > 0;
    assume {:nonnull} Tmp_1701 != 0;
    assume Tmp_1701 > 0;
    Tmp_1700 := VcbOrFcbOrDcb;
    assume {:nonnull} Tmp_1700 != 0;
    assume Tmp_1700 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} FileObject_32 != 0;
    assume FileObject_32 > 0;
    goto L4;

  anon12_Then:
    goto L4;

  anon9_Then:
    assume {:partition} VcbOrFcbOrDcb == 0;
    goto L4;
}



procedure {:origName "FatPurgeReferencedFileObjects"} FatPurgeReferencedFileObjects(actual_IrpContext_93: int, actual_Fcb_32: int, actual_FlushType_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPurgeReferencedFileObjects"} FatPurgeReferencedFileObjects(actual_IrpContext_93: int, actual_Fcb_32: int, actual_FlushType_1: int)
{
  var {:pointer} NextFcb_2: int;
  var {:pointer} OriginalFcb: int;
  var {:pointer} IrpContext_93: int;
  var {:pointer} Fcb_32: int;
  var {:scalar} FlushType_1: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_1363: int;

  anon0:
    call {:si_unique_call 1997} vslice_dummy_var_279 := __HAVOC_malloc(4);
    IrpContext_93 := actual_IrpContext_93;
    Fcb_32 := actual_Fcb_32;
    FlushType_1 := actual_FlushType_1;
    OriginalFcb := Fcb_32;
    assume {:nonnull} Fcb_32 != 0;
    assume Fcb_32 > 0;
    havoc vslice_dummy_var_1363;
    call {:si_unique_call 1998} FatFspClose#1(vslice_dummy_var_1363);
    goto L9;

  L9:
    call {:si_unique_call 1999} NextFcb_2, Fcb_32 := FatPurgeReferencedFileObjects_loop_L9(NextFcb_2, OriginalFcb, IrpContext_93, Fcb_32, FlushType_1);
    goto L9_last;

  L9_last:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Fcb_32 != 0;
    call {:si_unique_call 2000} NextFcb_2 := FatGetNextFcbTopDown(IrpContext_93, Fcb_32, OriginalFcb);
    assume {:nonnull} Fcb_32 != 0;
    assume Fcb_32 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L19;

  L19:
    Fcb_32 := NextFcb_2;
    goto L19_dummy;

  L19_dummy:
    assume false;
    return;

  anon6_Then:
    call {:si_unique_call 2001} FatForceCacheMiss(IrpContext_93, Fcb_32, FlushType_1);
    goto L19;

  anon5_Then:
    assume {:partition} Fcb_32 == 0;
    return;
}



procedure {:origName "FatDecodeFileObject"} FatDecodeFileObject(actual_FileObject_33: int, actual_Vcb_52: int, actual_FcbOrDcb_6: int, actual_Ccb_16: int) returns (Tmp_1704: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} Tmp_1704 == 3 || Tmp_1704 == 6 || Tmp_1704 == 2 || Tmp_1704 == 7 || Tmp_1704 == 4 || Tmp_1704 == 5 || Tmp_1704 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDecodeFileObject"} FatDecodeFileObject(actual_FileObject_33: int, actual_Vcb_52: int, actual_FcbOrDcb_6: int, actual_Ccb_16: int) returns (Tmp_1704: int)
{
  var {:pointer} FsContext2: int;
  var {:pointer} Tmp_1705: int;
  var {:pointer} Tmp_1706: int;
  var {:scalar} Tmp_1707: int;
  var {:scalar} TypeOfOpen_4: int;
  var {:scalar} Tmp_1708: int;
  var {:pointer} Tmp_1709: int;
  var {:scalar} Tmp_1710: int;
  var {:pointer} FsContext_1: int;
  var {:scalar} Tmp_1712: int;
  var {:pointer} Tmp_1713: int;
  var {:pointer} FileObject_33: int;
  var {:pointer} Vcb_52: int;
  var {:pointer} FcbOrDcb_6: int;
  var {:pointer} Ccb_16: int;

  anon0:
    FileObject_33 := actual_FileObject_33;
    Vcb_52 := actual_Vcb_52;
    FcbOrDcb_6 := actual_FcbOrDcb_6;
    Ccb_16 := actual_Ccb_16;
    assume {:nonnull} FileObject_33 != 0;
    assume FileObject_33 > 0;
    havoc FsContext_1;
    assume {:nonnull} FileObject_33 != 0;
    assume FileObject_33 > 0;
    havoc FsContext2;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} FsContext_1 != 0;
    Tmp_1706 := FsContext_1;
    assume {:nonnull} Tmp_1706 != 0;
    assume Tmp_1706 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Tmp_1706 != 0;
    assume Tmp_1706 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Tmp_1706 != 0;
    assume Tmp_1706 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Tmp_1706 != 0;
    assume Tmp_1706 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L14;

  L14:
    assume {:nonnull} Ccb_16 != 0;
    assume Ccb_16 > 0;
    assume {:nonnull} FcbOrDcb_6 != 0;
    assume FcbOrDcb_6 > 0;
    assume {:nonnull} FcbOrDcb_6 != 0;
    assume FcbOrDcb_6 > 0;
    havoc Tmp_1705;
    assume {:nonnull} Tmp_1705 != 0;
    assume Tmp_1705 > 0;
    assume {:nonnull} Vcb_52 != 0;
    assume Vcb_52 > 0;
    assume {:nonnull} Ccb_16 != 0;
    assume Ccb_16 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_1710 := 3;
    goto L20;

  L20:
    TypeOfOpen_4 := Tmp_1710;
    goto L22;

  L22:
    Tmp_1704 := TypeOfOpen_4;
    return;

  anon24_Then:
    Tmp_1710 := 6;
    goto L20;

  anon17_Then:
    Tmp_1709 := FsContext_1;
    assume {:nonnull} Tmp_1709 != 0;
    assume Tmp_1709 > 0;
    havoc Tmp_1708;
    call {:si_unique_call 2002} KeBugCheckEx(35, 1114415, Tmp_1708, 0, 0);
    goto L22;

  anon18_Then:
    goto L14;

  anon19_Then:
    assume {:nonnull} Ccb_16 != 0;
    assume Ccb_16 > 0;
    assume {:nonnull} FcbOrDcb_6 != 0;
    assume FcbOrDcb_6 > 0;
    assume {:nonnull} FcbOrDcb_6 != 0;
    assume FcbOrDcb_6 > 0;
    havoc Tmp_1713;
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    assume {:nonnull} Vcb_52 != 0;
    assume Vcb_52 > 0;
    assume {:nonnull} Ccb_16 != 0;
    assume Ccb_16 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_1712 := 2;
    goto L28;

  L28:
    TypeOfOpen_4 := Tmp_1712;
    goto L22;

  anon23_Then:
    Tmp_1712 := 7;
    goto L28;

  anon21_Then:
    assume {:nonnull} Ccb_16 != 0;
    assume Ccb_16 > 0;
    assume {:nonnull} FcbOrDcb_6 != 0;
    assume FcbOrDcb_6 > 0;
    assume {:nonnull} Vcb_52 != 0;
    assume Vcb_52 > 0;
    assume {:nonnull} Ccb_16 != 0;
    assume Ccb_16 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    Tmp_1707 := 4;
    goto L35;

  L35:
    TypeOfOpen_4 := Tmp_1707;
    goto L22;

  anon22_Then:
    Tmp_1707 := 5;
    goto L35;

  anon20_Then:
    assume {:partition} FsContext_1 == 0;
    assume {:nonnull} Ccb_16 != 0;
    assume Ccb_16 > 0;
    assume {:nonnull} FcbOrDcb_6 != 0;
    assume FcbOrDcb_6 > 0;
    assume {:nonnull} Vcb_52 != 0;
    assume Vcb_52 > 0;
    TypeOfOpen_4 := 1;
    goto L22;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_280: int;

  anon0:
    call {:si_unique_call 2003} vslice_dummy_var_280 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatGetVolumeBitmap"} FatGetVolumeBitmap(actual_IrpContext_94: int, actual_Irp_32: int) returns (Tmp_1716: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1716 == -1073741811 || Tmp_1716 == 5 || Tmp_1716 == 0 || Tmp_1716 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetVolumeBitmap"} FatGetVolumeBitmap(actual_IrpContext_94: int, actual_Irp_32: int) returns (Tmp_1716: int)
{
  var {:scalar} TotalClusters: int;
  var {:pointer} Ccb_17: int;
  var {:pointer} Fcb_33: int;
  var {:scalar} EndingCluster: int;
  var {:pointer} Tmp_1718: int;
  var {:scalar} Status_27: int;
  var {:pointer} OutputBuffer_2: int;
  var {:scalar} Tmp_1719: int;
  var {:scalar} Tmp_1720: int;
  var {:pointer} IrpSp_13: int;
  var {:pointer} Tmp_1721: int;
  var {:scalar} sdv_1006: int;
  var {:scalar} StartingCluster_1: int;
  var {:pointer} sdv_1007: int;
  var {:scalar} OutputBufferLength_2: int;
  var {:pointer} Vcb_53: int;
  var {:scalar} BytesToCopy_3: int;
  var {:scalar} DesiredClusters: int;
  var {:pointer} Tmp_1723: int;
  var {:pointer} Tmp_1724: int;
  var {:scalar} InputBufferLength_1: int;
  var {:scalar} StartingLcn: int;
  var {:pointer} IrpContext_94: int;
  var {:pointer} Irp_32: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_1364: int;
  var vslice_dummy_var_1365: int;
  var vslice_dummy_var_1366: int;
  var vslice_dummy_var_1367: int;

  anon0:
    call {:si_unique_call 2004} Ccb_17 := __HAVOC_malloc(4);
    call {:si_unique_call 2005} Fcb_33 := __HAVOC_malloc(4);
    call {:si_unique_call 2006} Vcb_53 := __HAVOC_malloc(4);
    call {:si_unique_call 2007} StartingLcn := __HAVOC_malloc(20);
    IrpContext_94 := actual_IrpContext_94;
    Irp_32 := actual_Irp_32;
    call {:si_unique_call 2008} Tmp_1723 := __HAVOC_malloc(4);
    call {:si_unique_call 2009} Tmp_1724 := __HAVOC_malloc(4);
    call {:si_unique_call 2010} IrpSp_13 := sdv_IoGetCurrentIrpStackLocation(Irp_32);
    assume {:nonnull} IrpContext_94 != 0;
    assume IrpContext_94 > 0;
    assume {:nonnull} IrpSp_13 != 0;
    assume IrpSp_13 > 0;
    havoc vslice_dummy_var_1364;
    call {:si_unique_call 2011} sdv_1006 := FatDecodeFileObject(vslice_dummy_var_1364, Vcb_53, Fcb_33, Ccb_17);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_1006 != 4;
    call {:si_unique_call 2012} FatCompleteRequest_Real(IrpContext_94, Irp_32, -1073741811);
    Tmp_1716 := -1073741811;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} sdv_1006 == 4;
    assume {:nonnull} Ccb_17 != 0;
    assume Ccb_17 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Ccb_17 != 0;
    assume Ccb_17 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} IrpSp_13 != 0;
    assume IrpSp_13 > 0;
    havoc InputBufferLength_1;
    assume {:nonnull} IrpSp_13 != 0;
    assume IrpSp_13 > 0;
    havoc OutputBufferLength_2;
    call {:si_unique_call 2013} sdv_1007 := FatMapUserBuffer(IrpContext_94, Irp_32);
    OutputBuffer_2 := sdv_1007;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} 8 > InputBufferLength_1;
    goto L43;

  L43:
    call {:si_unique_call 2014} FatCompleteRequest_Real(IrpContext_94, Irp_32, -1073741789);
    Tmp_1716 := -1073741789;
    goto L1;

  anon28_Then:
    assume {:partition} InputBufferLength_1 >= 8;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 24 <= OutputBufferLength_2;
    assume {:nonnull} Vcb_53 != 0;
    assume Vcb_53 > 0;
    havoc TotalClusters;
    assume {:nonnull} Irp_32 != 0;
    assume Irp_32 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 2015} ProbeForRead(0, InputBufferLength_1, 1);
    call {:si_unique_call 2016} ProbeForWrite(0, OutputBufferLength_2, 1);
    goto L49;

  L49:
    assume {:nonnull} IrpSp_13 != 0;
    assume IrpSp_13 > 0;
    havoc Tmp_1718;
    assume {:nonnull} StartingLcn != 0;
    assume StartingLcn > 0;
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    assume {:nonnull} StartingLcn != 0;
    assume StartingLcn > 0;
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    assume {:nonnull} StartingLcn != 0;
    assume StartingLcn > 0;
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    assume {:nonnull} StartingLcn != 0;
    assume StartingLcn > 0;
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    assume {:nonnull} StartingLcn != 0;
    assume StartingLcn > 0;
    assume {:nonnull} Tmp_1718 != 0;
    assume Tmp_1718 > 0;
    assume {:nonnull} StartingLcn != 0;
    assume StartingLcn > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L79;

  L79:
    call {:si_unique_call 2017} FatCompleteRequest_Real(IrpContext_94, Irp_32, -1073741811);
    Tmp_1716 := -1073741811;
    goto L1;

  anon30_Then:
    assume {:nonnull} StartingLcn != 0;
    assume StartingLcn > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} StartingLcn != 0;
    assume StartingLcn > 0;
    havoc StartingCluster_1;
    assume {:nonnull} Vcb_53 != 0;
    assume Vcb_53 > 0;
    havoc vslice_dummy_var_1365;
    call {:si_unique_call 2018} vslice_dummy_var_281 := FatAcquireExclusiveVcb(IrpContext_94, vslice_dummy_var_1365);
    OutputBufferLength_2 := OutputBufferLength_2 - 16;
    DesiredClusters := TotalClusters - StartingCluster_1;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} INTDIV(DesiredClusters + 7, 8) > OutputBufferLength_2;
    BytesToCopy_3 := OutputBufferLength_2;
    Status_27 := 5;
    goto L93;

  L93:
    assume {:nonnull} Vcb_53 != 0;
    assume Vcb_53 > 0;
    havoc vslice_dummy_var_1366;
    call {:si_unique_call 2019} FatQuickVerifyVcb(IrpContext_94, vslice_dummy_var_1366);
    assume {:nonnull} OutputBuffer_2 != 0;
    assume OutputBuffer_2 > 0;
    assume {:nonnull} OutputBuffer_2 != 0;
    assume OutputBuffer_2 > 0;
    assume {:nonnull} Vcb_53 != 0;
    assume Vcb_53 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Vcb_53 != 0;
    assume Vcb_53 > 0;
    assume {:nonnull} OutputBuffer_2 != 0;
    assume OutputBuffer_2 > 0;
    havoc Tmp_1723;
    call {:si_unique_call 2020} sdv_RtlCopyMemory(0, 0, BytesToCopy_3);
    goto L123;

  L123:
    call {:si_unique_call 2021} ExReleaseResourceLite(0);
    assume {:nonnull} Irp_32 != 0;
    assume Irp_32 > 0;
    call {:si_unique_call 2022} FatCompleteRequest_Real(IrpContext_94, Irp_32, Status_27);
    Tmp_1716 := Status_27;
    goto L1;

  anon32_Then:
    EndingCluster := StartingCluster_1 + BytesToCopy_3 * 8;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} EndingCluster > TotalClusters;
    EndingCluster := TotalClusters;
    goto L141;

  L141:
    assume {:nonnull} OutputBuffer_2 != 0;
    assume OutputBuffer_2 > 0;
    havoc Tmp_1724;
    Tmp_1721 := Tmp_1724;
    Tmp_1719 := EndingCluster + 2 - 1;
    Tmp_1720 := StartingCluster_1 + 2;
    assume {:nonnull} Vcb_53 != 0;
    assume Vcb_53 > 0;
    havoc vslice_dummy_var_1367;
    call {:si_unique_call 2023} FatExamineFatEntries(IrpContext_94, vslice_dummy_var_1367, Tmp_1720, Tmp_1719, 0, 0, Tmp_1721);
    goto L123;

  anon33_Then:
    assume {:partition} TotalClusters >= EndingCluster;
    goto L141;

  anon31_Then:
    assume {:partition} OutputBufferLength_2 >= INTDIV(DesiredClusters + 7, 8);
    BytesToCopy_3 := INTDIV(DesiredClusters + 7, 8);
    Status_27 := 0;
    goto L93;

  anon27_Then:
    goto L79;

  anon29_Then:
    goto L49;

  anon26_Then:
    assume {:partition} OutputBufferLength_2 < 24;
    goto L43;

  anon25_Then:
    goto L31;

  L31:
    call {:si_unique_call 2024} FatCompleteRequest_Real(IrpContext_94, Irp_32, -1073741811);
    Tmp_1716 := -1073741811;
    goto L1;

  anon24_Then:
    goto L31;
}



procedure {:origName "FatComputeMoveFileSplicePoints"} FatComputeMoveFileSplicePoints(actual_IrpContext_95: int, actual_FcbOrDcb_7: int, actual_FileOffset: int, actual_TargetCluster: int, actual_BytesToReallocate: int, actual_FirstSpliceSourceCluster: int, actual_FirstSpliceTargetCluster: int, actual_SecondSpliceSourceCluster: int, actual_SecondSpliceTargetCluster: int, actual_SourceMcb: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatComputeMoveFileSplicePoints"} FatComputeMoveFileSplicePoints(actual_IrpContext_95: int, actual_FcbOrDcb_7: int, actual_FileOffset: int, actual_TargetCluster: int, actual_BytesToReallocate: int, actual_FirstSpliceSourceCluster: int, actual_FirstSpliceTargetCluster: int, actual_SecondSpliceSourceCluster: int, actual_SecondSpliceTargetCluster: int, actual_SourceMcb: int)
{
  var {:scalar} SourceMcbVbo: int;
  var {:dopa} {:scalar} SourceLbo: int;
  var {:dopa} {:scalar} SourceVbo_2: int;
  var {:scalar} SourceMcbBytesInRun: int;
  var {:scalar} SourceBytesRemaining: int;
  var {:scalar} Tmp_1727: int;
  var {:scalar} sdv_1017: int;
  var {:dopa} {:scalar} SourceIndex: int;
  var {:pointer} Vcb_54: int;
  var {:dopa} {:scalar} SourceBytesInRun: int;
  var {:scalar} Tmp_1729: int;
  var {:pointer} FcbOrDcb_7: int;
  var {:scalar} FileOffset: int;
  var {:scalar} TargetCluster: int;
  var {:scalar} BytesToReallocate: int;
  var {:pointer} FirstSpliceSourceCluster: int;
  var {:pointer} FirstSpliceTargetCluster: int;
  var {:pointer} SecondSpliceSourceCluster: int;
  var {:pointer} SecondSpliceTargetCluster: int;
  var {:pointer} SourceMcb: int;
  var boogieTmp: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_1368: int;
  var vslice_dummy_var_1369: int;
  var vslice_dummy_var_1370: int;
  var vslice_dummy_var_1371: int;

  anon0:
    call {:si_unique_call 2025} SourceLbo := __HAVOC_malloc(4);
    call {:si_unique_call 2026} SourceVbo_2 := __HAVOC_malloc(4);
    call {:si_unique_call 2027} vslice_dummy_var_282 := __HAVOC_malloc(4);
    call {:si_unique_call 2028} SourceIndex := __HAVOC_malloc(4);
    call {:si_unique_call 2029} SourceBytesInRun := __HAVOC_malloc(4);
    FcbOrDcb_7 := actual_FcbOrDcb_7;
    FileOffset := actual_FileOffset;
    TargetCluster := actual_TargetCluster;
    BytesToReallocate := actual_BytesToReallocate;
    FirstSpliceSourceCluster := actual_FirstSpliceSourceCluster;
    FirstSpliceTargetCluster := actual_FirstSpliceTargetCluster;
    SecondSpliceSourceCluster := actual_SecondSpliceSourceCluster;
    SecondSpliceTargetCluster := actual_SecondSpliceTargetCluster;
    SourceMcb := actual_SourceMcb;
    assume {:nonnull} FcbOrDcb_7 != 0;
    assume FcbOrDcb_7 > 0;
    havoc Vcb_54;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} FileOffset != 0;
    Tmp_1729 := FileOffset - 1;
    assume {:nonnull} FcbOrDcb_7 != 0;
    assume FcbOrDcb_7 > 0;
    call {:si_unique_call 2030} vslice_dummy_var_284 := FatLookupMcbEntry(Vcb_54, Mcb__FCB(FcbOrDcb_7), Tmp_1729, SourceLbo, SourceBytesInRun, SourceIndex);
    assume {:nonnull} FirstSpliceSourceCluster != 0;
    assume FirstSpliceSourceCluster > 0;
    call {:si_unique_call 2031} boogieTmp := corral_nondet();
    assume {:nonnull} SourceBytesInRun != 0;
    assume SourceBytesInRun > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} SourceIndex != 0;
    assume SourceIndex > 0;
    assume {:nonnull} FcbOrDcb_7 != 0;
    assume FcbOrDcb_7 > 0;
    assume {:nonnull} SourceIndex != 0;
    assume SourceIndex > 0;
    havoc vslice_dummy_var_1368;
    call {:si_unique_call 2032} vslice_dummy_var_285 := FatGetNextMcbEntry(Vcb_54, Mcb__FCB(FcbOrDcb_7), vslice_dummy_var_1368, SourceVbo_2, SourceLbo, SourceBytesInRun);
    goto L25;

  L25:
    assume {:nonnull} FirstSpliceTargetCluster != 0;
    assume FirstSpliceTargetCluster > 0;
    assume {:nonnull} SecondSpliceSourceCluster != 0;
    assume SecondSpliceSourceCluster > 0;
    call {:si_unique_call 2033} boogieTmp := corral_nondet();
    SourceBytesRemaining := BytesToReallocate;
    SourceMcbVbo := 0;
    goto L29;

  L29:
    call {:si_unique_call 2034} SourceMcbVbo, SourceMcbBytesInRun, SourceBytesRemaining, Tmp_1727, vslice_dummy_var_283, vslice_dummy_var_286 := FatComputeMoveFileSplicePoints_loop_L29(SourceMcbVbo, SourceLbo, SourceVbo_2, SourceMcbBytesInRun, SourceBytesRemaining, Tmp_1727, SourceIndex, Vcb_54, SourceBytesInRun, FcbOrDcb_7, SourceMcb, vslice_dummy_var_283, vslice_dummy_var_286);
    goto L29_last;

  L29_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} SourceBytesRemaining > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} SourceMcbVbo != 0;
    assume {:nonnull} FcbOrDcb_7 != 0;
    assume FcbOrDcb_7 > 0;
    assume {:nonnull} SourceIndex != 0;
    assume SourceIndex > 0;
    havoc vslice_dummy_var_1369;
    call {:si_unique_call 2035} vslice_dummy_var_283 := FatGetNextMcbEntry(Vcb_54, Mcb__FCB(FcbOrDcb_7), vslice_dummy_var_1369, SourceVbo_2, SourceLbo, SourceBytesInRun);
    goto L32;

  L32:
    assume {:nonnull} SourceBytesInRun != 0;
    assume SourceBytesInRun > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} SourceBytesInRun != 0;
    assume SourceBytesInRun > 0;
    havoc Tmp_1727;
    goto L38;

  L38:
    SourceMcbBytesInRun := Tmp_1727;
    assume {:nonnull} SourceLbo != 0;
    assume SourceLbo > 0;
    havoc vslice_dummy_var_1370;
    call {:si_unique_call 2036} vslice_dummy_var_286 := FatAddMcbEntry(Vcb_54, SourceMcb, SourceMcbVbo, vslice_dummy_var_1370, SourceMcbBytesInRun);
    assume {:nonnull} SourceIndex != 0;
    assume SourceIndex > 0;
    SourceBytesRemaining := SourceBytesRemaining - SourceMcbBytesInRun;
    SourceMcbVbo := SourceMcbVbo + SourceMcbBytesInRun;
    goto L38_dummy;

  L38_dummy:
    assume false;
    return;

  anon18_Then:
    Tmp_1727 := SourceBytesRemaining;
    goto L38;

  anon17_Then:
    assume {:partition} SourceMcbVbo == 0;
    goto L32;

  anon15_Then:
    assume {:partition} 0 >= SourceBytesRemaining;
    assume {:nonnull} SourceBytesInRun != 0;
    assume SourceBytesInRun > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} SecondSpliceTargetCluster != 0;
    assume SecondSpliceTargetCluster > 0;
    call {:si_unique_call 2037} boogieTmp := corral_nondet();
    goto L1;

  L1:
    return;

  anon16_Then:
    assume {:nonnull} FcbOrDcb_7 != 0;
    assume FcbOrDcb_7 > 0;
    assume {:nonnull} SourceIndex != 0;
    assume SourceIndex > 0;
    havoc vslice_dummy_var_1371;
    call {:si_unique_call 2038} sdv_1017 := FatGetNextMcbEntry(Vcb_54, Mcb__FCB(FcbOrDcb_7), vslice_dummy_var_1371, SourceVbo_2, SourceLbo, SourceBytesInRun);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_1017 != 0;
    assume {:nonnull} SecondSpliceTargetCluster != 0;
    assume SecondSpliceTargetCluster > 0;
    call {:si_unique_call 2039} boogieTmp := corral_nondet();
    goto L1;

  anon19_Then:
    assume {:partition} sdv_1017 == 0;
    assume {:nonnull} SecondSpliceTargetCluster != 0;
    assume SecondSpliceTargetCluster > 0;
    goto L1;

  anon21_Then:
    assume {:nonnull} SourceVbo_2 != 0;
    assume SourceVbo_2 > 0;
    assume {:nonnull} SourceLbo != 0;
    assume SourceLbo > 0;
    assume {:nonnull} SourceBytesInRun != 0;
    assume SourceBytesInRun > 0;
    goto L25;

  anon20_Then:
    assume {:partition} FileOffset == 0;
    assume {:nonnull} SourceIndex != 0;
    assume SourceIndex > 0;
    assume {:nonnull} FirstSpliceSourceCluster != 0;
    assume FirstSpliceSourceCluster > 0;
    assume {:nonnull} FcbOrDcb_7 != 0;
    assume FcbOrDcb_7 > 0;
    call {:si_unique_call 2040} vslice_dummy_var_287 := FatGetNextMcbEntry(Vcb_54, Mcb__FCB(FcbOrDcb_7), 0, SourceVbo_2, SourceLbo, SourceBytesInRun);
    goto L25;
}



procedure {:origName "FatAddMcbEntry"} FatAddMcbEntry(actual_Vcb_55: int, actual_Mcb_4: int, actual_Vbo_8: int, actual_Lbo_9: int, actual_SectorCount: int) returns (Tmp_1730: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAddMcbEntry"} FatAddMcbEntry(actual_Vcb_55: int, actual_Mcb_4: int, actual_Vbo_8: int, actual_Lbo_9: int, actual_SectorCount: int) returns (Tmp_1730: int)
{
  var {:scalar} Vbo_8: int;
  var {:scalar} SectorCount: int;
  var vslice_dummy_var_288: int;

  anon0:
    Vbo_8 := actual_Vbo_8;
    SectorCount := actual_SectorCount;
    call {:si_unique_call 2041} sdv_do_paged_code_check();
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} SectorCount != 0;
    SectorCount := SectorCount - 1;
    call {:si_unique_call 2042} SectorCount := corral_nondet();
    SectorCount := SectorCount + 1;
    goto L7;

  L7:
    call {:si_unique_call 2043} Vbo_8 := corral_nondet();
    call {:si_unique_call 2044} vslice_dummy_var_288 := corral_nondet();
    call {:si_unique_call 2045} Tmp_1730 := corral_nondet();
    return;

  anon3_Then:
    assume {:partition} SectorCount == 0;
    goto L7;
}



procedure {:origName "FatQueryRetrievalPointers"} FatQueryRetrievalPointers(actual_IrpContext_96: int, actual_Irp_33: int) returns (Tmp_1734: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} Tmp_1734 == -1073741811 || Tmp_1734 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueryRetrievalPointers"} FatQueryRetrievalPointers(actual_IrpContext_96: int, actual_Irp_33: int) returns (Tmp_1734: int)
{
  var {:scalar} i_14: int;
  var {:pointer} MappingPairs: int;
  var {:pointer} Tmp_1735: int;
  var {:dopa} {:scalar} SectorCount_1: int;
  var {:pointer} Ccb_18: int;
  var {:dopa} {:scalar} Lbo_10: int;
  var {:pointer} Fcb_34: int;
  var {:scalar} Tmp_1736: int;
  var {:dopa} {:scalar} Vbo_9: int;
  var {:pointer} Tmp_1737: int;
  var {:scalar} Status_28: int;
  var {:scalar} Tmp_1738: int;
  var {:scalar} Tmp_1739: int;
  var {:pointer} RequestedMapSize: int;
  var {:pointer} IrpSp_14: int;
  var {:scalar} Tmp_1741: int;
  var {:scalar} sdv_1025: int;
  var {:scalar} MapSize: int;
  var {:pointer} Vcb_56: int;
  var {:scalar} Tmp_1742: int;
  var {:pointer} sdv_1026: int;
  var {:pointer} Tmp_1743: int;
  var {:dopa} {:scalar} Index_3: int;
  var {:pointer} IrpContext_96: int;
  var {:pointer} Irp_33: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_1372: int;
  var vslice_dummy_var_1373: int;
  var vslice_dummy_var_1374: int;
  var vslice_dummy_var_1375: int;
  var vslice_dummy_var_1376: int;
  var vslice_dummy_var_1377: int;
  var vslice_dummy_var_1378: int;

  anon0:
    call {:si_unique_call 2046} SectorCount_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2047} Ccb_18 := __HAVOC_malloc(4);
    call {:si_unique_call 2048} Lbo_10 := __HAVOC_malloc(4);
    call {:si_unique_call 2049} Fcb_34 := __HAVOC_malloc(4);
    call {:si_unique_call 2050} Vbo_9 := __HAVOC_malloc(4);
    call {:si_unique_call 2051} Vcb_56 := __HAVOC_malloc(4);
    call {:si_unique_call 2052} Index_3 := __HAVOC_malloc(4);
    IrpContext_96 := actual_IrpContext_96;
    Irp_33 := actual_Irp_33;
    call {:si_unique_call 2053} IrpSp_14 := sdv_IoGetCurrentIrpStackLocation(Irp_33);
    assume {:nonnull} IrpContext_96 != 0;
    assume IrpContext_96 > 0;
    assume {:nonnull} IrpSp_14 != 0;
    assume IrpSp_14 > 0;
    havoc vslice_dummy_var_1372;
    call {:si_unique_call 2054} vslice_dummy_var_290 := FatDecodeFileObject(vslice_dummy_var_1372, Vcb_56, Fcb_34, Ccb_18);
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L26;

  L26:
    call {:si_unique_call 2055} FatCompleteRequest_Real(IrpContext_96, Irp_33, -1073741811);
    Tmp_1734 := -1073741811;
    goto L1;

  L1:
    return;

  anon15_Then:
    assume {:nonnull} Fcb_34 != 0;
    assume Fcb_34 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Fcb_34 != 0;
    assume Fcb_34 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} IrpSp_14 != 0;
    assume IrpSp_14 > 0;
    havoc RequestedMapSize;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    havoc MappingPairs;
    assume {:nonnull} Fcb_34 != 0;
    assume Fcb_34 > 0;
    havoc vslice_dummy_var_1373;
    call {:si_unique_call 2056} vslice_dummy_var_291 := FatAcquireExclusiveFcb(IrpContext_96, vslice_dummy_var_1373);
    assume {:nonnull} Fcb_34 != 0;
    assume Fcb_34 > 0;
    havoc vslice_dummy_var_1374;
    call {:si_unique_call 2057} FatVerifyFcb(IrpContext_96, vslice_dummy_var_1374);
    assume {:nonnull} Fcb_34 != 0;
    assume Fcb_34 > 0;
    assume {:nonnull} RequestedMapSize != 0;
    assume RequestedMapSize > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    Status_28 := -1073741811;
    goto L53;

  L53:
    call {:si_unique_call 2058} ExReleaseResourceLite(0);
    call {:si_unique_call 2059} sdv_1025 := sdv_AbnormalTermination();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_1025 != 0;
    goto L63;

  L63:
    Tmp_1734 := Status_28;
    goto L1;

  anon19_Then:
    assume {:partition} sdv_1025 == 0;
    call {:si_unique_call 2060} FatCompleteRequest_Real(IrpContext_96, Irp_33, Status_28);
    goto L63;

  anon18_Then:
    assume {:nonnull} RequestedMapSize != 0;
    assume RequestedMapSize > 0;
    havoc Tmp_1736;
    assume {:nonnull} Fcb_34 != 0;
    assume Fcb_34 > 0;
    havoc vslice_dummy_var_1375;
    havoc vslice_dummy_var_1376;
    call {:si_unique_call 2061} vslice_dummy_var_292 := FatLookupMcbEntry(vslice_dummy_var_1375, vslice_dummy_var_1376, Tmp_1736, Lbo_10, 0, Index_3);
    assume {:nonnull} Index_3 != 0;
    assume Index_3 > 0;
    havoc Tmp_1739;
    call {:si_unique_call 2062} sdv_1026 := ExAllocatePoolWithTag(16, Tmp_1739, -797679290);
    assume {:nonnull} MappingPairs != 0;
    assume MappingPairs > 0;
    assume {:nonnull} RequestedMapSize != 0;
    assume RequestedMapSize > 0;
    havoc MapSize;
    i_14 := 0;
    goto L74;

  L74:
    call {:si_unique_call 2063} i_14, Tmp_1735, Tmp_1737, Tmp_1738, MapSize, Tmp_1742, vslice_dummy_var_289 := FatQueryRetrievalPointers_loop_L74(i_14, MappingPairs, Tmp_1735, SectorCount_1, Lbo_10, Fcb_34, Vbo_9, Tmp_1737, Tmp_1738, MapSize, Tmp_1742, Index_3, vslice_dummy_var_289);
    goto L74_last;

  L74_last:
    assume {:nonnull} Index_3 != 0;
    assume Index_3 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Fcb_34 != 0;
    assume Fcb_34 > 0;
    havoc vslice_dummy_var_1377;
    havoc vslice_dummy_var_1378;
    call {:si_unique_call 2064} vslice_dummy_var_289 := FatGetNextMcbEntry(vslice_dummy_var_1377, vslice_dummy_var_1378, i_14, Vbo_9, Lbo_10, SectorCount_1);
    assume {:nonnull} SectorCount_1 != 0;
    assume SectorCount_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} SectorCount_1 != 0;
    assume SectorCount_1 > 0;
    goto L80;

  L80:
    Tmp_1742 := i_14 * 2 + 0;
    assume {:nonnull} MappingPairs != 0;
    assume MappingPairs > 0;
    havoc Tmp_1735;
    assume {:nonnull} SectorCount_1 != 0;
    assume SectorCount_1 > 0;
    assume {:nonnull} Tmp_1735 != 0;
    assume Tmp_1735 > 0;
    Tmp_1738 := i_14 * 2 + 1;
    assume {:nonnull} MappingPairs != 0;
    assume MappingPairs > 0;
    havoc Tmp_1737;
    assume {:nonnull} Lbo_10 != 0;
    assume Lbo_10 > 0;
    assume {:nonnull} Tmp_1737 != 0;
    assume Tmp_1737 > 0;
    assume {:nonnull} SectorCount_1 != 0;
    assume SectorCount_1 > 0;
    havoc MapSize;
    i_14 := i_14 + 1;
    goto L80_dummy;

  L80_dummy:
    assume false;
    return;

  anon21_Then:
    goto L80;

  anon20_Then:
    Tmp_1741 := i_14 * 2 + 0;
    assume {:nonnull} MappingPairs != 0;
    assume MappingPairs > 0;
    havoc Tmp_1743;
    assume {:nonnull} Tmp_1743 != 0;
    assume Tmp_1743 > 0;
    Status_28 := 0;
    goto L53;

  anon17_Then:
    goto L26;

  anon16_Then:
    goto L26;
}



procedure {:origName "FatUnlockVolume"} FatUnlockVolume(actual_IrpContext_97: int, actual_Irp_34: int) returns (Tmp_1744: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1744 == -1073741811 || Tmp_1744 == 0 || Tmp_1744 == -1073741782;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatUnlockVolume"} FatUnlockVolume(actual_IrpContext_97: int, actual_Irp_34: int) returns (Tmp_1744: int)
{
  var {:pointer} Ccb_19: int;
  var {:pointer} Fcb_35: int;
  var {:scalar} Status_29: int;
  var {:pointer} IrpSp_15: int;
  var {:scalar} sdv_1028: int;
  var {:pointer} Vcb_57: int;
  var {:pointer} IrpContext_97: int;
  var {:pointer} Irp_34: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_1379: int;
  var vslice_dummy_var_1380: int;
  var vslice_dummy_var_1381: int;

  anon0:
    call {:si_unique_call 2065} Ccb_19 := __HAVOC_malloc(4);
    call {:si_unique_call 2066} Fcb_35 := __HAVOC_malloc(4);
    call {:si_unique_call 2067} Vcb_57 := __HAVOC_malloc(4);
    IrpContext_97 := actual_IrpContext_97;
    Irp_34 := actual_Irp_34;
    call {:si_unique_call 2068} IrpSp_15 := sdv_IoGetCurrentIrpStackLocation(Irp_34);
    assume {:nonnull} IrpSp_15 != 0;
    assume IrpSp_15 > 0;
    havoc vslice_dummy_var_1379;
    call {:si_unique_call 2069} sdv_1028 := FatDecodeFileObject(vslice_dummy_var_1379, Vcb_57, Fcb_35, Ccb_19);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_1028 != 4;
    call {:si_unique_call 2070} FatCompleteRequest_Real(IrpContext_97, Irp_34, -1073741811);
    Tmp_1744 := -1073741811;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} sdv_1028 == 4;
    assume {:nonnull} Ccb_19 != 0;
    assume Ccb_19 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Ccb_19 != 0;
    assume Ccb_19 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} IrpSp_15 != 0;
    assume IrpSp_15 > 0;
    assume {:nonnull} Vcb_57 != 0;
    assume Vcb_57 > 0;
    havoc vslice_dummy_var_1380;
    havoc vslice_dummy_var_1381;
    call {:si_unique_call 2071} Status_29 := FatUnlockVolumeInternal(IrpContext_97, vslice_dummy_var_1380, vslice_dummy_var_1381);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_29 >= 0;
    call {:si_unique_call 2072} vslice_dummy_var_293 := corral_nondet();
    goto L30;

  L30:
    call {:si_unique_call 2073} FatCompleteRequest_Real(IrpContext_97, Irp_34, Status_29);
    Tmp_1744 := Status_29;
    goto L1;

  anon12_Then:
    assume {:partition} 0 > Status_29;
    goto L30;

  anon11_Then:
    goto L21;

  L21:
    call {:si_unique_call 2074} FatCompleteRequest_Real(IrpContext_97, Irp_34, -1073741811);
    Tmp_1744 := -1073741811;
    goto L1;

  anon10_Then:
    goto L21;
}



procedure {:origName "FatPerformVerifyDiskRead"} FatPerformVerifyDiskRead(actual_IrpContext_98: int, actual_Vcb_58: int, actual_Buffer_24: int, actual_Lbo_11: int, actual_NumberOfBytesToRead: int, actual_ReturnOnError: int) returns (Tmp_1746: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1746 == 0 || Tmp_1746 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPerformVerifyDiskRead"} FatPerformVerifyDiskRead(actual_IrpContext_98: int, actual_Vcb_58: int, actual_Buffer_24: int, actual_Lbo_11: int, actual_NumberOfBytesToRead: int, actual_ReturnOnError: int) returns (Tmp_1746: int)
{
  var {:pointer} Irp_35: int;
  var {:scalar} Status_30: int;
  var {:scalar} Iosb_16: int;
  var {:scalar} Event_7: int;
  var {:pointer} sdv_1032: int;
  var {:scalar} ByteOffset: int;
  var {:scalar} sdv_1034: int;
  var {:pointer} IrpContext_98: int;
  var {:pointer} Vcb_58: int;
  var {:scalar} Lbo_11: int;
  var {:scalar} NumberOfBytesToRead: int;
  var {:scalar} ReturnOnError: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_1382: int;

  anon0:
    call {:si_unique_call 2075} Iosb_16 := __HAVOC_malloc(12);
    call {:si_unique_call 2076} Event_7 := __HAVOC_malloc(124);
    call {:si_unique_call 2077} ByteOffset := __HAVOC_malloc(20);
    IrpContext_98 := actual_IrpContext_98;
    Vcb_58 := actual_Vcb_58;
    Lbo_11 := actual_Lbo_11;
    NumberOfBytesToRead := actual_NumberOfBytesToRead;
    ReturnOnError := actual_ReturnOnError;
    call {:si_unique_call 2078} KeInitializeEvent(Event_7, 0, 0);
    assume {:nonnull} ByteOffset != 0;
    assume ByteOffset > 0;
    call {:si_unique_call 2079} Irp_35 := IoBuildSynchronousFsdRequest(3, 0, 0, NumberOfBytesToRead, 0, 0, Iosb_16);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Irp_35 != 0;
    goto L18;

  L18:
    call {:si_unique_call 2080} sdv_1032 := sdv_IoGetNextIrpStackLocation(Irp_35);
    assume {:nonnull} sdv_1032 != 0;
    assume sdv_1032 > 0;
    assume {:nonnull} Vcb_58 != 0;
    assume Vcb_58 > 0;
    havoc vslice_dummy_var_1382;
    call {:si_unique_call 2081} Status_30 := sdv_IoCallDriver(vslice_dummy_var_1382, Irp_35);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_30 == 259;
    call {:si_unique_call 2082} vslice_dummy_var_294 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Iosb_16 != 0;
    assume Iosb_16 > 0;
    havoc Status_30;
    goto L27;

  L27:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Status_30 == -1073741811;
    Tmp_1746 := 0;
    goto L1;

  L1:
    return;

  anon13_Then:
    assume {:partition} Status_30 != -1073741811;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Status_30 >= 0;
    goto L35;

  L35:
    Tmp_1746 := 1;
    goto L1;

  anon14_Then:
    assume {:partition} 0 > Status_30;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} ReturnOnError != 0;
    Tmp_1746 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} ReturnOnError == 0;
    assume {:nonnull} IrpContext_98 != 0;
    assume IrpContext_98 > 0;
    call {:si_unique_call 2083} sdv_1034 := corral_nondet();
    call {:si_unique_call 2084} ExRaiseStatus(sdv_1034);
    goto L35;

  anon12_Then:
    assume {:partition} Status_30 != 259;
    goto L27;

  anon11_Then:
    assume {:partition} Irp_35 == 0;
    assume {:nonnull} IrpContext_98 != 0;
    assume IrpContext_98 > 0;
    call {:si_unique_call 2085} ExRaiseStatus(-1073741670);
    goto L18;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init11"} _sdv_init11()
{
  var vslice_dummy_var_295: int;

  anon0:
    call {:si_unique_call 2086} vslice_dummy_var_295 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatLookupLastMcbEntry"} FatLookupLastMcbEntry(actual_Vcb_59: int, actual_Mcb_5: int, actual_Vbo_10: int, actual_Lbo_12: int, actual_Index_4: int) returns (Tmp_1750: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLookupLastMcbEntry"} FatLookupLastMcbEntry(actual_Vcb_59: int, actual_Mcb_5: int, actual_Vbo_10: int, actual_Lbo_12: int, actual_Index_4: int) returns (Tmp_1750: int)
{
  var {:scalar} LiLbo: int;
  var {:scalar} Results: int;
  var {:scalar} LocalIndex: int;
  var {:pointer} Vbo_10: int;
  var {:pointer} Lbo_12: int;
  var {:pointer} Index_4: int;
  var boogieTmp: int;

  anon0:
    Vbo_10 := actual_Vbo_10;
    Lbo_12 := actual_Lbo_12;
    Index_4 := actual_Index_4;
    call {:si_unique_call 2087} sdv_do_paged_code_check();
    LiLbo := 0;
    LocalIndex := 0;
    call {:si_unique_call 2088} Results := corral_nondet();
    assume {:nonnull} Vbo_10 != 0;
    assume Vbo_10 > 0;
    call {:si_unique_call 2089} boogieTmp := corral_nondet();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} LiLbo != -1;
    assume {:nonnull} Lbo_12 != 0;
    assume Lbo_12 > 0;
    call {:si_unique_call 2090} boogieTmp := corral_nondet();
    assume {:nonnull} Lbo_12 != 0;
    assume Lbo_12 > 0;
    call {:si_unique_call 2091} boogieTmp := corral_nondet();
    assume {:nonnull} Vbo_10 != 0;
    assume Vbo_10 > 0;
    call {:si_unique_call 2092} boogieTmp := corral_nondet();
    goto L23;

  L23:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Index_4 != 0;
    assume {:nonnull} Index_4 != 0;
    assume Index_4 > 0;
    goto L24;

  L24:
    Tmp_1750 := Results;
    return;

  anon5_Then:
    assume {:partition} Index_4 == 0;
    goto L24;

  anon6_Then:
    assume {:partition} LiLbo == -1;
    assume {:nonnull} Lbo_12 != 0;
    assume Lbo_12 > 0;
    goto L23;
}



procedure {:origName "FatDismountVolume"} FatDismountVolume(actual_IrpContext_99: int, actual_Irp_36: int) returns (Tmp_1752: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1752 == -1073741811 || Tmp_1752 == -1073741790 || Tmp_1752 == -1073741202 || Tmp_1752 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDismountVolume"} FatDismountVolume(actual_IrpContext_99: int, actual_Irp_36: int) returns (Tmp_1752: int)
{
  var {:pointer} Fcb_36: int;
  var {:scalar} Tmp_1753: int;
  var {:scalar} sdv_1037: int;
  var {:pointer} Ccb_20: int;
  var {:pointer} Fcb_37: int;
  var {:scalar} Status_31: int;
  var {:pointer} IrpSp_16: int;
  var {:scalar} sdv_1043: int;
  var {:pointer} Fcb_38: int;
  var {:scalar} VcbHeld: int;
  var {:pointer} Vcb_60: int;
  var {:scalar} Tmp_1755: int;
  var {:pointer} IrpContext_99: int;
  var {:pointer} Irp_36: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_1383: int;
  var vslice_dummy_var_1384: int;
  var vslice_dummy_var_1385: int;
  var vslice_dummy_var_1386: int;
  var vslice_dummy_var_1387: int;

  anon0:
    call {:si_unique_call 2093} Ccb_20 := __HAVOC_malloc(4);
    call {:si_unique_call 2094} Fcb_37 := __HAVOC_malloc(4);
    call {:si_unique_call 2095} Vcb_60 := __HAVOC_malloc(4);
    IrpContext_99 := actual_IrpContext_99;
    Irp_36 := actual_Irp_36;
    VcbHeld := 0;
    call {:si_unique_call 2096} IrpSp_16 := sdv_IoGetCurrentIrpStackLocation(Irp_36);
    assume {:nonnull} IrpSp_16 != 0;
    assume IrpSp_16 > 0;
    havoc vslice_dummy_var_1383;
    call {:si_unique_call 2097} sdv_1043 := FatDecodeFileObject(vslice_dummy_var_1383, Vcb_60, Fcb_37, Ccb_20);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_1043 != 4;
    Status_31 := -1073741811;
    goto L21;

  L21:
    call {:si_unique_call 2098} FatCompleteRequest_Real(IrpContext_99, Irp_36, Status_31);
    Tmp_1752 := Status_31;
    goto L1;

  L1:
    return;

  anon27_Then:
    assume {:partition} sdv_1043 == 4;
    assume {:nonnull} Ccb_20 != 0;
    assume Ccb_20 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Ccb_20 != 0;
    assume Ccb_20 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Vcb_60 != 0;
    assume Vcb_60 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    Status_31 := -1073741790;
    goto L21;

  anon30_Then:
    assume {:nonnull} Vcb_60 != 0;
    assume Vcb_60 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    Status_31 := -1073741202;
    goto L21;

  anon31_Then:
    call {:si_unique_call 2099} vslice_dummy_var_296 := corral_nondet();
    assume {:nonnull} IrpContext_99 != 0;
    assume IrpContext_99 > 0;
    assume {:nonnull} IrpContext_99 != 0;
    assume IrpContext_99 > 0;
    havoc Tmp_1755;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Tmp_1755 == 0;
    Tmp_1753 := 0;
    goto L139;

  L139:
    call {:si_unique_call 2100} vslice_dummy_var_299 := ExAcquireResourceExclusiveLite(0, Tmp_1753);
    Fcb_36 := 0;
    assume {:nonnull} Vcb_60 != 0;
    assume Vcb_60 > 0;
    havoc vslice_dummy_var_1384;
    call {:si_unique_call 2101} vslice_dummy_var_300 := FatAcquireExclusiveVcb(IrpContext_99, vslice_dummy_var_1384);
    goto L75;

  L75:
    call {:si_unique_call 2102} Fcb_36, vslice_dummy_var_297 := FatDismountVolume_loop_L75(Fcb_36, Vcb_60, IrpContext_99, vslice_dummy_var_297);
    goto L75_last;

  L75_last:
    assume {:nonnull} Vcb_60 != 0;
    assume Vcb_60 > 0;
    havoc vslice_dummy_var_1387;
    call {:si_unique_call 2113} Fcb_36 := FatGetNextFcbBottomUp(IrpContext_99, Fcb_36, vslice_dummy_var_1387);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Fcb_36 != 0;
    call {:si_unique_call 2103} vslice_dummy_var_297 := FatAcquireExclusiveFcb(IrpContext_99, Fcb_36);
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    assume false;
    return;

  anon32_Then:
    assume {:partition} Fcb_36 == 0;
    VcbHeld := 1;
    assume {:nonnull} Vcb_60 != 0;
    assume Vcb_60 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    Status_31 := -1073741202;
    goto L90;

  L90:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} VcbHeld != 0;
    Fcb_38 := 0;
    goto L96;

  L96:
    call {:si_unique_call 2104} Fcb_38 := FatDismountVolume_loop_L96(Fcb_38, Vcb_60, IrpContext_99);
    goto L96_last;

  L96_last:
    assume {:nonnull} Vcb_60 != 0;
    assume Vcb_60 > 0;
    havoc vslice_dummy_var_1386;
    call {:si_unique_call 2112} Fcb_38 := FatGetNextFcbBottomUp(IrpContext_99, Fcb_38, vslice_dummy_var_1386);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Fcb_38 != 0;
    call {:si_unique_call 2105} ExReleaseResourceLite(0);
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    assume false;
    return;

  anon34_Then:
    assume {:partition} Fcb_38 == 0;
    call {:si_unique_call 2106} ExReleaseResourceLite(0);
    goto L91;

  L91:
    call {:si_unique_call 2107} ExReleaseResourceLite(0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Status_31 >= 0;
    goto L109;

  L109:
    call {:si_unique_call 2108} sdv_1037 := sdv_AbnormalTermination();
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_1037 != 0;
    goto L113;

  L113:
    call {:si_unique_call 2109} vslice_dummy_var_298 := corral_nondet();
    goto L21;

  anon37_Then:
    assume {:partition} sdv_1037 == 0;
    goto L21;

  anon35_Then:
    assume {:partition} 0 > Status_31;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Status_31 != -1073741202;
    goto L113;

  anon36_Then:
    assume {:partition} Status_31 == -1073741202;
    goto L109;

  anon33_Then:
    assume {:partition} VcbHeld == 0;
    goto L91;

  anon39_Then:
    assume {:nonnull} Vcb_60 != 0;
    assume Vcb_60 > 0;
    havoc vslice_dummy_var_1385;
    call {:si_unique_call 2110} FatFlushAndCleanVolume(IrpContext_99, Irp_36, vslice_dummy_var_1385, 2);
    assume {:nonnull} Ccb_20 != 0;
    assume Ccb_20 > 0;
    assume {:nonnull} Vcb_60 != 0;
    assume Vcb_60 > 0;
    assume {:nonnull} Vcb_60 != 0;
    assume Vcb_60 > 0;
    Status_31 := 0;
    goto L90;

  anon38_Then:
    assume {:partition} Tmp_1755 != 0;
    Tmp_1753 := 1;
    goto L139;

  anon29_Then:
    goto L25;

  L25:
    call {:si_unique_call 2111} FatCompleteRequest_Real(IrpContext_99, Irp_36, -1073741811);
    Tmp_1752 := -1073741811;
    goto L1;

  anon28_Then:
    goto L25;
}



procedure {:origName "FatMoveFile"} FatMoveFile(actual_IrpContext_100: int, actual_Irp_37: int) returns (Tmp_1756: int);
  modifies alloc, locked, queuedWithoutMarking, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1756 == -1073741811 || Tmp_1756 == 0 || Tmp_1756 == -1073741823 || Tmp_1756 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatMoveFile"} FatMoveFile(actual_IrpContext_100: int, actual_Irp_37: int) returns (Tmp_1756: int)
{
  var {:scalar} StackEvent: int;
  var {:dopa} {:scalar} FirstSpliceSourceCluster_1: int;
  var {:scalar} EventArmed: int;
  var {:scalar} sdv_1053: int;
  var {:pointer} InputBuffer_1: int;
  var {:scalar} sdv_1055: int;
  var {:scalar} SourceMcb_1: int;
  var {:pointer} Ccb_21: int;
  var {:pointer} sdv_1059: int;
  var {:scalar} LargeTargetLbo: int;
  var {:dopa} {:scalar} BytesToReallocate_1: int;
  var {:dopa} {:scalar} TempVbo: int;
  var {:scalar} TargetCluster_1: int;
  var {:dopa} {:scalar} BytesToWrite: int;
  var {:pointer} Dirent_18: int;
  var {:scalar} Status_32: int;
  var {:pointer} FileObject_34: int;
  var {:dopa} {:scalar} TempLbo: int;
  var {:scalar} TargetMcbInitialized: int;
  var {:scalar} Iosb_17: int;
  var {:pointer} Tmp_1757: int;
  var {:pointer} Buffer_25: int;
  var {:scalar} FcbAcquired_3: int;
  var {:pointer} DirentBcb_8: int;
  var {:scalar} TypeOfOpen_5: int;
  var {:scalar} MaxClusters: int;
  var {:pointer} DirStreamFileObject: int;
  var {:pointer} IrpSp_17: int;
  var {:scalar} LocalAbnormalTermination_2: int;
  var {:scalar} BufferSize: int;
  var {:scalar} sdv_1073: int;
  var {:dopa} {:scalar} SecondSpliceSourceCluster_1: int;
  var {:scalar} LargeSourceLbo: int;
  var {:pointer} IoIrp: int;
  var {:scalar} sdv_1074: int;
  var {:scalar} IoEvent: int;
  var {:scalar} sdv_1075: int;
  var {:scalar} FileOffset_1: int;
  var {:dopa} {:scalar} FirstSpliceTargetCluster_1: int;
  var {:scalar} TargetLbo: int;
  var {:scalar} Tmp_1759: int;
  var {:dopa} {:scalar} SecondSpliceTargetCluster_1: int;
  var {:pointer} Vcb_61: int;
  var {:scalar} SourceMcbInitialized: int;
  var {:scalar} TargetMcb: int;
  var {:scalar} sdv_1087: int;
  var {:pointer} FcbOrDcb_8: int;
  var {:dopa} {:scalar} TempByteCount: int;
  var {:scalar} sdv_1093: int;
  var {:scalar} InputBufferLength_2: int;
  var {:scalar} sdv_1094: int;
  var {:scalar} DiskSpaceAllocated: int;
  var {:dopa} {:scalar} ByteCount_17: int;
  var {:pointer} IrpContext_100: int;
  var {:pointer} Irp_37: int;
  var boogieTmp: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_1388: int;
  var vslice_dummy_var_1389: int;
  var vslice_dummy_var_1390: int;
  var vslice_dummy_var_1391: int;
  var vslice_dummy_var_1392: int;
  var vslice_dummy_var_1393: int;
  var vslice_dummy_var_1394: int;
  var vslice_dummy_var_1395: int;
  var vslice_dummy_var_1396: int;
  var vslice_dummy_var_1397: int;
  var vslice_dummy_var_1398: int;
  var vslice_dummy_var_1399: int;
  var vslice_dummy_var_1400: int;
  var vslice_dummy_var_1401: int;
  var vslice_dummy_var_1402: int;
  var vslice_dummy_var_1403: int;
  var vslice_dummy_var_1404: int;
  var vslice_dummy_var_1405: int;
  var vslice_dummy_var_1406: int;
  var vslice_dummy_var_1407: int;
  var vslice_dummy_var_1408: int;
  var vslice_dummy_var_1409: int;
  var vslice_dummy_var_1410: int;
  var vslice_dummy_var_1411: int;
  var vslice_dummy_var_1412: int;
  var vslice_dummy_var_1413: int;
  var vslice_dummy_var_1414: int;
  var vslice_dummy_var_1415: int;
  var vslice_dummy_var_1416: int;
  var vslice_dummy_var_1417: int;
  var vslice_dummy_var_1418: int;
  var vslice_dummy_var_1419: int;
  var vslice_dummy_var_1420: int;
  var vslice_dummy_var_1421: int;
  var vslice_dummy_var_1422: int;
  var vslice_dummy_var_1423: int;
  var vslice_dummy_var_1424: int;
  var vslice_dummy_var_1425: int;
  var vslice_dummy_var_1426: int;
  var vslice_dummy_var_1427: int;
  var vslice_dummy_var_1428: int;
  var vslice_dummy_var_1429: int;
  var vslice_dummy_var_1430: int;
  var vslice_dummy_var_1431: int;

  anon0:
    call {:si_unique_call 2114} StackEvent := __HAVOC_malloc(124);
    call {:si_unique_call 2115} FirstSpliceSourceCluster_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2116} SourceMcb_1 := __HAVOC_malloc(24);
    call {:si_unique_call 2117} Ccb_21 := __HAVOC_malloc(4);
    call {:si_unique_call 2118} LargeTargetLbo := __HAVOC_malloc(20);
    call {:si_unique_call 2119} BytesToReallocate_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2120} TempVbo := __HAVOC_malloc(4);
    call {:si_unique_call 2121} BytesToWrite := __HAVOC_malloc(4);
    call {:si_unique_call 2122} Dirent_18 := __HAVOC_malloc(4);
    call {:si_unique_call 2123} TempLbo := __HAVOC_malloc(4);
    call {:si_unique_call 2124} Iosb_17 := __HAVOC_malloc(12);
    call {:si_unique_call 2125} DirentBcb_8 := __HAVOC_malloc(4);
    call {:si_unique_call 2126} SecondSpliceSourceCluster_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2127} LargeSourceLbo := __HAVOC_malloc(20);
    call {:si_unique_call 2128} IoEvent := __HAVOC_malloc(124);
    call {:si_unique_call 2129} FirstSpliceTargetCluster_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2130} SecondSpliceTargetCluster_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2131} Vcb_61 := __HAVOC_malloc(4);
    call {:si_unique_call 2132} TargetMcb := __HAVOC_malloc(24);
    call {:si_unique_call 2133} FcbOrDcb_8 := __HAVOC_malloc(4);
    call {:si_unique_call 2134} TempByteCount := __HAVOC_malloc(4);
    call {:si_unique_call 2135} ByteCount_17 := __HAVOC_malloc(4);
    IrpContext_100 := actual_IrpContext_100;
    Irp_37 := actual_Irp_37;
    SourceMcbInitialized := 0;
    TargetMcbInitialized := 0;
    FcbAcquired_3 := 0;
    EventArmed := 0;
    DiskSpaceAllocated := 0;
    assume {:nonnull} DirentBcb_8 != 0;
    assume DirentBcb_8 > 0;
    LocalAbnormalTermination_2 := 0;
    call {:si_unique_call 2136} IrpSp_17 := sdv_IoGetCurrentIrpStackLocation(Irp_37);
    assume {:nonnull} IrpContext_100 != 0;
    assume IrpContext_100 > 0;
    assume {:nonnull} IrpSp_17 != 0;
    assume IrpSp_17 > 0;
    havoc vslice_dummy_var_1388;
    call {:si_unique_call 2137} sdv_1074 := FatDecodeFileObject(vslice_dummy_var_1388, Vcb_61, FcbOrDcb_8, Ccb_21);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} sdv_1074 != 4;
    call {:si_unique_call 2138} FatCompleteRequest_Real(IrpContext_100, Irp_37, -1073741811);
    Tmp_1756 := -1073741811;
    goto L1;

  L1:
    return;

  anon105_Then:
    assume {:partition} sdv_1074 == 4;
    assume {:nonnull} Ccb_21 != 0;
    assume Ccb_21 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} Ccb_21 != 0;
    assume Ccb_21 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} IrpSp_17 != 0;
    assume IrpSp_17 > 0;
    havoc InputBufferLength_2;
    assume {:nonnull} Irp_37 != 0;
    assume Irp_37 > 0;
    havoc InputBuffer_1;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} InputBuffer_1 != 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} 32 <= InputBufferLength_2;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc MaxClusters;
    assume {:nonnull} InputBuffer_1 != 0;
    assume InputBuffer_1 > 0;
    havoc TargetCluster_1;
    assume {:nonnull} InputBuffer_1 != 0;
    assume InputBuffer_1 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    goto L76;

  L76:
    call {:si_unique_call 2139} FatCompleteRequest_Real(IrpContext_100, Irp_37, -1073741811);
    Tmp_1756 := -1073741811;
    goto L1;

  anon149_Then:
    assume {:nonnull} InputBuffer_1 != 0;
    assume InputBuffer_1 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} 2 <= TargetCluster_1;
    assume {:nonnull} InputBuffer_1 != 0;
    assume InputBuffer_1 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} InputBuffer_1 != 0;
    assume InputBuffer_1 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} InputBuffer_1 != 0;
    assume InputBuffer_1 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Irp_37 != 0;
    assume Irp_37 > 0;
    havoc vslice_dummy_var_1389;
    call {:si_unique_call 2140} Status_32 := ObReferenceObjectByHandle(0, 0, 0, vslice_dummy_var_1389, 0, 0);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} Status_32 >= 0;
    assume {:nonnull} FileObject_34 != 0;
    assume FileObject_34 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    call {:si_unique_call 2141} vslice_dummy_var_301 := sdv_ObDereferenceObject(0);
    call {:si_unique_call 2142} FatCompleteRequest_Real(IrpContext_100, Irp_37, -1073741811);
    Tmp_1756 := -1073741811;
    goto L1;

  anon115_Then:
    call {:si_unique_call 2143} TypeOfOpen_5 := FatDecodeFileObject(FileObject_34, Vcb_61, FcbOrDcb_8, Ccb_21);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} TypeOfOpen_5 != 2;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} TypeOfOpen_5 != 3;
    goto L107;

  L107:
    call {:si_unique_call 2144} vslice_dummy_var_302 := sdv_ObDereferenceObject(0);
    call {:si_unique_call 2145} FatCompleteRequest_Real(IrpContext_100, Irp_37, -1073741811);
    Tmp_1756 := -1073741811;
    goto L1;

  anon118_Then:
    assume {:partition} TypeOfOpen_5 == 3;
    goto L105;

  L105:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} TypeOfOpen_5 == 3;
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc Tmp_1757;
    assume {:nonnull} Tmp_1757 != 0;
    assume Tmp_1757 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto L116;

  L116:
    assume {:nonnull} InputBuffer_1 != 0;
    assume InputBuffer_1 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    goto L114;

  L114:
    assume {:nonnull} IrpContext_100 != 0;
    assume IrpContext_100 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    call {:si_unique_call 2146} FileOffset_1 := corral_nondet();
    assume {:nonnull} ByteCount_17 != 0;
    assume ByteCount_17 > 0;
    call {:si_unique_call 2147} boogieTmp := corral_nondet();
    call {:si_unique_call 2148} TargetLbo := corral_nondet();
    assume {:nonnull} LargeTargetLbo != 0;
    assume LargeTargetLbo > 0;
    Buffer_25 := 0;
    assume {:nonnull} ByteCount_17 != 0;
    assume ByteCount_17 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    Status_32 := -1073741811;
    goto L130;

  L130:
    call {:si_unique_call 2149} sdv_1087 := sdv_AbnormalTermination();
    LocalAbnormalTermination_2 := BOR(LocalAbnormalTermination_2, sdv_1087);
    assume {:nonnull} IrpContext_100 != 0;
    assume IrpContext_100 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} Buffer_25 != 0;
    call {:si_unique_call 2150} sdv_ExFreePool(0);
    goto L136;

  L136:
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} DiskSpaceAllocated != 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1390;
    call {:si_unique_call 2151} FatDeallocateDiskSpace(IrpContext_100, vslice_dummy_var_1390, TargetMcb);
    call {:si_unique_call 2152} FatUnpinRepinnedBcbs(IrpContext_100);
    goto L140;

  L140:
    call {:si_unique_call 2153} sdv_1073 := sdv_AbnormalTermination();
    LocalAbnormalTermination_2 := BOR(LocalAbnormalTermination_2, sdv_1073);
    assume {:nonnull} DirentBcb_8 != 0;
    assume DirentBcb_8 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} DirentBcb_8 != 0;
    assume DirentBcb_8 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} DirentBcb_8 != 0;
    assume DirentBcb_8 > 0;
    goto L195;

  L195:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} SourceMcbInitialized != 0;
    goto L201;

  L201:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} TargetMcbInitialized != 0;
    goto L205;

  L205:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} LocalAbnormalTermination_2 != 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} FcbAcquired_3 != 0;
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    goto L214;

  L214:
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1391;
    havoc vslice_dummy_var_1392;
    call {:si_unique_call 2154} FatRemoveMcbEntry(vslice_dummy_var_1391, vslice_dummy_var_1392, 0, -1);
    goto L209;

  L209:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} EventArmed != 0;
    call {:si_unique_call 2155} vslice_dummy_var_303 := KeSetEvent(StackEvent, 0, 0);
    call {:si_unique_call 2156} vslice_dummy_var_304 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    call {:si_unique_call 2157} ExReleaseResourceLite(0);
    goto L217;

  L217:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} FcbAcquired_3 != 0;
    call {:si_unique_call 2158} ExReleaseResourceLite(0);
    goto L228;

  L228:
    call {:si_unique_call 2159} vslice_dummy_var_305 := sdv_ObDereferenceObject(0);
    call {:si_unique_call 2160} FatCompleteRequest_Real(IrpContext_100, Irp_37, Status_32);
    Tmp_1756 := Status_32;
    goto L1;

  anon129_Then:
    assume {:partition} FcbAcquired_3 == 0;
    goto L228;

  anon126_Then:
    assume {:partition} EventArmed == 0;
    goto L217;

  anon128_Then:
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    goto L214;

  anon127_Then:
    assume {:partition} FcbAcquired_3 == 0;
    goto L209;

  anon125_Then:
    assume {:partition} LocalAbnormalTermination_2 == 0;
    goto L209;

  anon124_Then:
    assume {:partition} TargetMcbInitialized == 0;
    goto L205;

  anon122_Then:
    assume {:partition} SourceMcbInitialized == 0;
    goto L201;

  anon123_Then:
    goto L195;

  anon153_Then:
    goto L195;

  anon121_Then:
    assume {:partition} DiskSpaceAllocated == 0;
    goto L140;

  anon152_Then:
    assume {:partition} Buffer_25 == 0;
    goto L136;

  anon151_Then:
    call {:si_unique_call 2161} KeInitializeEvent(StackEvent, 0, 0);
    SourceMcbInitialized := 1;
    TargetMcbInitialized := 1;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} TypeOfOpen_5 == 3;
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1393;
    call {:si_unique_call 2162} vslice_dummy_var_306 := FatAcquireExclusiveFcb(IrpContext_100, vslice_dummy_var_1393);
    FcbAcquired_3 := 1;
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1394;
    call {:si_unique_call 2163} FatVerifyFcb(IrpContext_100, vslice_dummy_var_1394);
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1395;
    call {:si_unique_call 2164} FatOpenDirectoryFile#1(IrpContext_100, vslice_dummy_var_1395);
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc DirStreamFileObject;
    call {:si_unique_call 2165} vslice_dummy_var_316 := sdv_ObReferenceObject(0);
    call {:si_unique_call 2166} vslice_dummy_var_307 := sdv_ObDereferenceObject(0);
    FileObject_34 := DirStreamFileObject;
    goto L351;

  L351:
    BufferSize := 65536;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    call {:si_unique_call 2167} BufferSize := corral_nondet();
    goto L372;

  L372:
    call {:si_unique_call 2168} EventArmed, sdv_1053, sdv_1055, sdv_1059, TargetCluster_1, Status_32, Buffer_25, FcbAcquired_3, IoIrp, sdv_1075, FileOffset_1, TargetLbo, Tmp_1759, sdv_1093, sdv_1094, DiskSpaceAllocated, boogieTmp, vslice_dummy_var_308, vslice_dummy_var_309, vslice_dummy_var_310, vslice_dummy_var_311, vslice_dummy_var_312, vslice_dummy_var_313, vslice_dummy_var_314, vslice_dummy_var_315 := FatMoveFile_loop_L372(StackEvent, FirstSpliceSourceCluster_1, EventArmed, sdv_1053, sdv_1055, SourceMcb_1, sdv_1059, LargeTargetLbo, BytesToReallocate_1, TempVbo, TargetCluster_1, BytesToWrite, Dirent_18, Status_32, TempLbo, Iosb_17, Buffer_25, FcbAcquired_3, DirentBcb_8, BufferSize, SecondSpliceSourceCluster_1, LargeSourceLbo, IoIrp, IoEvent, sdv_1075, FileOffset_1, FirstSpliceTargetCluster_1, TargetLbo, Tmp_1759, SecondSpliceTargetCluster_1, Vcb_61, TargetMcb, FcbOrDcb_8, TempByteCount, sdv_1093, sdv_1094, DiskSpaceAllocated, ByteCount_17, IrpContext_100, Irp_37, boogieTmp, vslice_dummy_var_308, vslice_dummy_var_309, vslice_dummy_var_310, vslice_dummy_var_311, vslice_dummy_var_312, vslice_dummy_var_313, vslice_dummy_var_314, vslice_dummy_var_315);
    goto L372_last;

  L372_last:
    assume {:nonnull} ByteCount_17 != 0;
    assume ByteCount_17 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    call {:si_unique_call 2169} vslice_dummy_var_308 := corral_nondet();
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} FcbAcquired_3 != 0;
    goto L385;

  L385:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} Buffer_25 != 0;
    goto L389;

  L389:
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1396;
    call {:si_unique_call 2170} FatComputeMoveFileParameter(IrpContext_100, vslice_dummy_var_1396, BufferSize, FileOffset_1, ByteCount_17, BytesToReallocate_1, BytesToWrite, LargeSourceLbo);
    assume {:nonnull} ByteCount_17 != 0;
    assume ByteCount_17 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} BytesToReallocate_1 != 0;
    assume BytesToReallocate_1 > 0;
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1397;
    havoc vslice_dummy_var_1398;
    call {:si_unique_call 2171} FatComputeMoveFileSplicePoints(IrpContext_100, vslice_dummy_var_1397, FileOffset_1, TargetCluster_1, vslice_dummy_var_1398, FirstSpliceSourceCluster_1, FirstSpliceTargetCluster_1, SecondSpliceSourceCluster_1, SecondSpliceTargetCluster_1, SourceMcb_1);
    assume {:nonnull} BytesToReallocate_1 != 0;
    assume BytesToReallocate_1 > 0;
    assume {:nonnull} TempByteCount != 0;
    assume TempByteCount > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1399;
    call {:si_unique_call 2172} FatAllocateDiskSpace(IrpContext_100, vslice_dummy_var_1399, TargetCluster_1, TempByteCount, 1, TargetMcb);
    DiskSpaceAllocated := 1;
    call {:si_unique_call 2173} sdv_1055 := corral_nondet();
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} sdv_1055 != 1;
    goto L409;

  L409:
    Status_32 := -1073741811;
    goto L130;

  anon134_Then:
    assume {:partition} sdv_1055 == 1;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1400;
    call {:si_unique_call 2174} sdv_1075 := FatGetNextMcbEntry(vslice_dummy_var_1400, TargetMcb, 0, TempVbo, TempLbo, TempByteCount);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_1075 != 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} BytesToReallocate_1 != 0;
    assume BytesToReallocate_1 > 0;
    assume {:nonnull} TempByteCount != 0;
    assume TempByteCount > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    call {:si_unique_call 2175} Tmp_1759 := corral_nondet();
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1401;
    call {:si_unique_call 2176} FatFlushFatEntries(IrpContext_100, vslice_dummy_var_1401, TargetCluster_1, Tmp_1759);
    call {:si_unique_call 2177} vslice_dummy_var_310 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    EventArmed := 1;
    call {:si_unique_call 2178} ExReleaseResourceLite(0);
    assume {:nonnull} BytesToWrite != 0;
    assume BytesToWrite > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    call {:si_unique_call 2179} KeInitializeEvent(IoEvent, 0, 0);
    assume {:nonnull} BytesToWrite != 0;
    assume BytesToWrite > 0;
    havoc vslice_dummy_var_1402;
    call {:si_unique_call 2180} IoIrp := IoBuildSynchronousFsdRequest(3, 0, 0, vslice_dummy_var_1402, 0, 0, Iosb_17);
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} IoIrp != 0;
    goto L442;

  L442:
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1403;
    call {:si_unique_call 2181} Status_32 := sdv_IoCallDriver(vslice_dummy_var_1403, IoIrp);
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} Status_32 == 259;
    call {:si_unique_call 2182} vslice_dummy_var_311 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Iosb_17 != 0;
    assume Iosb_17 > 0;
    havoc Status_32;
    goto L447;

  L447:
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Status_32 >= 0;
    goto L453;

  L453:
    call {:si_unique_call 2183} KeInitializeEvent(IoEvent, 0, 0);
    assume {:nonnull} BytesToWrite != 0;
    assume BytesToWrite > 0;
    havoc vslice_dummy_var_1404;
    call {:si_unique_call 2184} IoIrp := IoBuildSynchronousFsdRequest(4, 0, 0, vslice_dummy_var_1404, 0, 0, Iosb_17);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} IoIrp != 0;
    goto L462;

  L462:
    call {:si_unique_call 2185} sdv_1059 := sdv_IoGetNextIrpStackLocation(IoIrp);
    assume {:nonnull} sdv_1059 != 0;
    assume sdv_1059 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1405;
    call {:si_unique_call 2186} Status_32 := sdv_IoCallDriver(vslice_dummy_var_1405, IoIrp);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Status_32 == 259;
    call {:si_unique_call 2187} vslice_dummy_var_312 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Iosb_17 != 0;
    assume Iosb_17 > 0;
    havoc Status_32;
    goto L471;

  L471:
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} Status_32 < 0;
    assume {:nonnull} IrpContext_100 != 0;
    assume IrpContext_100 > 0;
    call {:si_unique_call 2188} sdv_1053 := corral_nondet();
    call {:si_unique_call 2189} ExRaiseStatus(sdv_1053);
    goto L427;

  L427:
    assume {:nonnull} SecondSpliceSourceCluster_1 != 0;
    assume SecondSpliceSourceCluster_1 > 0;
    assume {:nonnull} SecondSpliceTargetCluster_1 != 0;
    assume SecondSpliceTargetCluster_1 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1406;
    havoc vslice_dummy_var_1407;
    havoc vslice_dummy_var_1408;
    call {:si_unique_call 2190} FatSetFatEntry#1(IrpContext_100, vslice_dummy_var_1406, vslice_dummy_var_1407, vslice_dummy_var_1408);
    assume {:nonnull} SecondSpliceSourceCluster_1 != 0;
    assume SecondSpliceSourceCluster_1 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1409;
    havoc vslice_dummy_var_1410;
    call {:si_unique_call 2191} FatFlushFatEntries(IrpContext_100, vslice_dummy_var_1409, vslice_dummy_var_1410, 1);
    assume {:nonnull} FirstSpliceSourceCluster_1 != 0;
    assume FirstSpliceSourceCluster_1 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} FirstSpliceSourceCluster_1 != 0;
    assume FirstSpliceSourceCluster_1 > 0;
    assume {:nonnull} FirstSpliceTargetCluster_1 != 0;
    assume FirstSpliceTargetCluster_1 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1411;
    havoc vslice_dummy_var_1412;
    havoc vslice_dummy_var_1413;
    call {:si_unique_call 2192} FatSetFatEntry#1(IrpContext_100, vslice_dummy_var_1411, vslice_dummy_var_1412, vslice_dummy_var_1413);
    assume {:nonnull} FirstSpliceSourceCluster_1 != 0;
    assume FirstSpliceSourceCluster_1 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1414;
    havoc vslice_dummy_var_1415;
    call {:si_unique_call 2193} FatFlushFatEntries(IrpContext_100, vslice_dummy_var_1414, vslice_dummy_var_1415, 1);
    goto L508;

  L508:
    DiskSpaceAllocated := 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1416;
    call {:si_unique_call 2194} FatDeallocateDiskSpace(IrpContext_100, vslice_dummy_var_1416, SourceMcb_1);
    call {:si_unique_call 2195} FatUnpinRepinnedBcbs(IrpContext_100);
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1417;
    call {:si_unique_call 2196} Status_32 := FatHijackIrpAndFlushDevice(IrpContext_100, Irp_37, vslice_dummy_var_1417);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} Status_32 >= 0;
    goto L521;

  L521:
    assume {:nonnull} BytesToReallocate_1 != 0;
    assume BytesToReallocate_1 > 0;
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1418;
    havoc vslice_dummy_var_1419;
    havoc vslice_dummy_var_1420;
    call {:si_unique_call 2197} FatRemoveMcbEntry(vslice_dummy_var_1418, vslice_dummy_var_1419, FileOffset_1, vslice_dummy_var_1420);
    assume {:nonnull} BytesToReallocate_1 != 0;
    assume BytesToReallocate_1 > 0;
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1421;
    havoc vslice_dummy_var_1422;
    havoc vslice_dummy_var_1423;
    call {:si_unique_call 2198} vslice_dummy_var_313 := FatAddMcbEntry(vslice_dummy_var_1421, vslice_dummy_var_1422, FileOffset_1, TargetLbo, vslice_dummy_var_1423);
    call {:si_unique_call 2199} vslice_dummy_var_314 := KeSetEvent(StackEvent, 0, 0);
    call {:si_unique_call 2200} vslice_dummy_var_315 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    EventArmed := 0;
    call {:si_unique_call 2201} ExReleaseResourceLite(0);
    call {:si_unique_call 2202} ExReleaseResourceLite(0);
    FcbAcquired_3 := 0;
    call {:si_unique_call 2203} TargetCluster_1 := corral_nondet();
    assume {:nonnull} BytesToReallocate_1 != 0;
    assume BytesToReallocate_1 > 0;
    havoc FileOffset_1;
    assume {:nonnull} BytesToReallocate_1 != 0;
    assume BytesToReallocate_1 > 0;
    havoc TargetLbo;
    assume {:nonnull} ByteCount_17 != 0;
    assume ByteCount_17 > 0;
    assume {:nonnull} BytesToReallocate_1 != 0;
    assume BytesToReallocate_1 > 0;
    assume {:nonnull} BytesToReallocate_1 != 0;
    assume BytesToReallocate_1 > 0;
    assume {:nonnull} LargeTargetLbo != 0;
    assume LargeTargetLbo > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1424;
    call {:si_unique_call 2204} FatRemoveMcbEntry(vslice_dummy_var_1424, SourceMcb_1, 0, -1);
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1425;
    call {:si_unique_call 2205} FatRemoveMcbEntry(vslice_dummy_var_1425, TargetMcb, 0, -1);
    call {:si_unique_call 2206} KeClearEvent(StackEvent);
    goto L521_dummy;

  L521_dummy:
    assume false;
    return;

  anon146_Then:
    assume {:partition} 0 > Status_32;
    assume {:nonnull} IrpContext_100 != 0;
    assume IrpContext_100 > 0;
    call {:si_unique_call 2207} sdv_1094 := corral_nondet();
    call {:si_unique_call 2208} ExRaiseStatus(sdv_1094);
    goto L521;

  anon145_Then:
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1426;
    call {:si_unique_call 2209} FatGetDirentFromFcbOrDcb(IrpContext_100, vslice_dummy_var_1426, Dirent_18, DirentBcb_8);
    assume {:nonnull} Dirent_18 != 0;
    assume Dirent_18 > 0;
    assume {:nonnull} FirstSpliceTargetCluster_1 != 0;
    assume FirstSpliceTargetCluster_1 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_18] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_18] > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Dirent_18 != 0;
    assume Dirent_18 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_18] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_18] > 0;
    call {:si_unique_call 2210} boogieTmp := corral_nondet();
    goto L564;

  L564:
    assume {:nonnull} DirentBcb_8 != 0;
    assume DirentBcb_8 > 0;
    assume {:nonnull} Vcb_61 != 0;
    assume Vcb_61 > 0;
    havoc vslice_dummy_var_1427;
    havoc vslice_dummy_var_1428;
    call {:si_unique_call 2211} FatSetDirtyBcb#1(IrpContext_100, vslice_dummy_var_1427, vslice_dummy_var_1428, 1);
    assume {:nonnull} DirentBcb_8 != 0;
    assume DirentBcb_8 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} DirentBcb_8 != 0;
    assume DirentBcb_8 > 0;
    goto L569;

  L569:
    assume {:nonnull} DirentBcb_8 != 0;
    assume DirentBcb_8 > 0;
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1429;
    call {:si_unique_call 2212} FatFlushDirentForFile(IrpContext_100, vslice_dummy_var_1429);
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    assume {:nonnull} FirstSpliceTargetCluster_1 != 0;
    assume FirstSpliceTargetCluster_1 > 0;
    goto L508;

  anon147_Then:
    goto L569;

  anon156_Then:
    goto L564;

  anon144_Then:
    assume {:partition} 0 <= Status_32;
    goto L427;

  anon143_Then:
    assume {:partition} Status_32 != 259;
    goto L471;

  anon142_Then:
    assume {:partition} IoIrp == 0;
    assume {:nonnull} IrpContext_100 != 0;
    assume IrpContext_100 > 0;
    call {:si_unique_call 2213} ExRaiseStatus(-1073741670);
    goto L462;

  anon141_Then:
    assume {:partition} 0 > Status_32;
    assume {:nonnull} IrpContext_100 != 0;
    assume IrpContext_100 > 0;
    call {:si_unique_call 2214} sdv_1093 := corral_nondet();
    call {:si_unique_call 2215} ExRaiseStatus(sdv_1093);
    goto L453;

  anon140_Then:
    assume {:partition} Status_32 != 259;
    goto L447;

  anon139_Then:
    assume {:partition} IoIrp == 0;
    assume {:nonnull} IrpContext_100 != 0;
    assume IrpContext_100 > 0;
    call {:si_unique_call 2216} ExRaiseStatus(-1073741670);
    goto L442;

  anon138_Then:
    goto L427;

  anon137_Then:
    goto L409;

  anon136_Then:
    goto L409;

  anon135_Then:
    assume {:partition} sdv_1075 == 0;
    goto L409;

  anon133_Then:
    goto L374;

  L374:
    Status_32 := 0;
    goto L130;

  anon132_Then:
    assume {:partition} Buffer_25 == 0;
    call {:si_unique_call 2217} Buffer_25 := ExAllocatePoolWithTag(16, BufferSize, -948674234);
    goto L389;

  anon131_Then:
    assume {:partition} FcbAcquired_3 == 0;
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1430;
    call {:si_unique_call 2218} vslice_dummy_var_309 := FatAcquireExclusiveFcb(IrpContext_100, vslice_dummy_var_1430);
    FcbAcquired_3 := 1;
    assume {:nonnull} FcbOrDcb_8 != 0;
    assume FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1431;
    call {:si_unique_call 2219} FatVerifyFcb(IrpContext_100, vslice_dummy_var_1431);
    goto L385;

  anon130_Then:
    goto L374;

  anon155_Then:
    goto L372;

  anon154_Then:
    assume {:partition} TypeOfOpen_5 != 3;
    goto L351;

  anon119_Then:
    goto L107;

  anon120_Then:
    goto L107;

  anon150_Then:
    goto L116;

  anon117_Then:
    assume {:partition} TypeOfOpen_5 != 3;
    goto L114;

  anon116_Then:
    assume {:partition} TypeOfOpen_5 == 2;
    goto L105;

  anon114_Then:
    assume {:partition} 0 > Status_32;
    call {:si_unique_call 2220} FatCompleteRequest_Real(IrpContext_100, Irp_37, Status_32);
    Tmp_1756 := Status_32;
    goto L1;

  anon113_Then:
    goto L76;

  anon112_Then:
    goto L76;

  anon111_Then:
    goto L76;

  anon110_Then:
    assume {:partition} TargetCluster_1 < 2;
    goto L76;

  anon109_Then:
    goto L76;

  anon108_Then:
    assume {:partition} InputBufferLength_2 < 32;
    goto L68;

  L68:
    call {:si_unique_call 2221} FatCompleteRequest_Real(IrpContext_100, Irp_37, -1073741789);
    Tmp_1756 := -1073741789;
    goto L1;

  anon148_Then:
    assume {:partition} InputBuffer_1 == 0;
    goto L68;

  anon107_Then:
    goto L61;

  L61:
    call {:si_unique_call 2222} FatCompleteRequest_Real(IrpContext_100, Irp_37, -1073741811);
    Tmp_1756 := -1073741811;
    goto L1;

  anon106_Then:
    goto L61;
}



procedure {:origName "FatUnlockVolumeInternal"} FatUnlockVolumeInternal(actual_IrpContext_101: int, actual_Vcb_62: int, actual_FileObject_35: int) returns (Tmp_1760: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1760 == 0 || Tmp_1760 == -1073741782;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatUnlockVolumeInternal"} FatUnlockVolumeInternal(actual_IrpContext_101: int, actual_Vcb_62: int, actual_FileObject_35: int) returns (Tmp_1760: int)
{
  var {:scalar} SavedIrql_3: int;
  var {:pointer} Tmp_1761: int;
  var {:scalar} Status_33: int;
  var {:pointer} Tmp_1762: int;
  var {:pointer} Tmp_1763: int;
  var {:pointer} Tmp_1764: int;
  var {:pointer} Vcb_62: int;
  var {:pointer} FileObject_35: int;

  anon0:
    Vcb_62 := actual_Vcb_62;
    FileObject_35 := actual_FileObject_35;
    Status_33 := -1073741782;
    call {:si_unique_call 2223} Tmp_1763 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1763 != 0;
    assume Tmp_1763 > 0;
    call {:si_unique_call 2224} IoAcquireVpbSpinLock(Tmp_1763);
    assume {:nonnull} Tmp_1763 != 0;
    assume Tmp_1763 > 0;
    havoc SavedIrql_3;
    assume {:nonnull} Vcb_62 != 0;
    assume Vcb_62 > 0;
    havoc Tmp_1764;
    assume {:nonnull} Tmp_1764 != 0;
    assume Tmp_1764 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Vcb_62 != 0;
    assume Vcb_62 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} Vcb_62 != 0;
    assume Vcb_62 > 0;
    havoc Tmp_1762;
    assume {:nonnull} Vcb_62 != 0;
    assume Vcb_62 > 0;
    havoc Tmp_1761;
    assume {:nonnull} Tmp_1761 != 0;
    assume Tmp_1761 > 0;
    assume {:nonnull} Tmp_1762 != 0;
    assume Tmp_1762 > 0;
    assume {:nonnull} Vcb_62 != 0;
    assume Vcb_62 > 0;
    assume {:nonnull} Vcb_62 != 0;
    assume Vcb_62 > 0;
    Status_33 := 0;
    goto L10;

  L10:
    call {:si_unique_call 2225} IoReleaseVpbSpinLock(SavedIrql_3);
    Tmp_1760 := Status_33;
    return;

  anon5_Then:
    goto L10;

  anon6_Then:
    goto L10;
}



procedure {:origName "FatAllowExtendedDasdIo"} FatAllowExtendedDasdIo(actual_IrpContext_102: int, actual_Irp_38: int) returns (Tmp_1765: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1765 == -1073741811 || Tmp_1765 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAllowExtendedDasdIo"} FatAllowExtendedDasdIo(actual_IrpContext_102: int, actual_Irp_38: int) returns (Tmp_1765: int)
{
  var {:pointer} Ccb_22: int;
  var {:pointer} Fcb_39: int;
  var {:pointer} IrpSp_18: int;
  var {:scalar} sdv_1098: int;
  var {:pointer} Vcb_63: int;
  var {:pointer} IrpContext_102: int;
  var {:pointer} Irp_38: int;
  var vslice_dummy_var_1432: int;

  anon0:
    call {:si_unique_call 2226} Ccb_22 := __HAVOC_malloc(4);
    call {:si_unique_call 2227} Fcb_39 := __HAVOC_malloc(4);
    call {:si_unique_call 2228} Vcb_63 := __HAVOC_malloc(4);
    IrpContext_102 := actual_IrpContext_102;
    Irp_38 := actual_Irp_38;
    call {:si_unique_call 2229} IrpSp_18 := sdv_IoGetCurrentIrpStackLocation(Irp_38);
    assume {:nonnull} IrpSp_18 != 0;
    assume IrpSp_18 > 0;
    havoc vslice_dummy_var_1432;
    call {:si_unique_call 2230} sdv_1098 := FatDecodeFileObject(vslice_dummy_var_1432, Vcb_63, Fcb_39, Ccb_22);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_1098 != 4;
    call {:si_unique_call 2231} FatCompleteRequest_Real(IrpContext_102, Irp_38, -1073741811);
    Tmp_1765 := -1073741811;
    goto L1;

  L1:
    return;

  anon7_Then:
    assume {:partition} sdv_1098 == 4;
    assume {:nonnull} Ccb_22 != 0;
    assume Ccb_22 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} Ccb_22 != 0;
    assume Ccb_22 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Ccb_22 != 0;
    assume Ccb_22 > 0;
    call {:si_unique_call 2232} FatCompleteRequest_Real(IrpContext_102, Irp_38, 0);
    Tmp_1765 := 0;
    goto L1;

  anon9_Then:
    goto L20;

  L20:
    call {:si_unique_call 2233} FatCompleteRequest_Real(IrpContext_102, Irp_38, -1073741811);
    Tmp_1765 := -1073741811;
    goto L1;

  anon8_Then:
    goto L20;
}



procedure {:origName "FatIsBootSectorFat"} FatIsBootSectorFat(actual_BootSector: int) returns (Tmp_1767: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1767 == 0 || Tmp_1767 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsBootSectorFat"} FatIsBootSectorFat(actual_BootSector: int) returns (Tmp_1767: int)
{
  var {:pointer} Tmp_1768: int;
  var {:pointer} Tmp_1769: int;
  var {:pointer} Tmp_1770: int;
  var {:pointer} Tmp_1771: int;
  var {:pointer} Tmp_1772: int;
  var {:pointer} Tmp_1773: int;
  var {:pointer} Tmp_1774: int;
  var {:pointer} Tmp_1776: int;
  var {:pointer} Tmp_1777: int;
  var {:pointer} Tmp_1778: int;
  var {:pointer} Tmp_1779: int;
  var {:pointer} Tmp_1780: int;
  var {:pointer} Tmp_1781: int;
  var {:pointer} Tmp_1782: int;
  var {:pointer} Tmp_1783: int;
  var {:pointer} Tmp_1784: int;
  var {:pointer} Tmp_1785: int;
  var {:pointer} Tmp_1786: int;
  var {:pointer} Tmp_1787: int;
  var {:pointer} Tmp_1788: int;
  var {:pointer} Tmp_1789: int;
  var {:pointer} Tmp_1790: int;
  var {:pointer} Tmp_1791: int;
  var {:pointer} Tmp_1792: int;
  var {:pointer} Tmp_1793: int;
  var {:pointer} Tmp_1794: int;
  var {:pointer} Tmp_1795: int;
  var {:pointer} Tmp_1796: int;
  var {:pointer} Tmp_1797: int;
  var {:pointer} Tmp_1798: int;
  var {:pointer} Tmp_1799: int;
  var {:pointer} Tmp_1800: int;
  var {:pointer} Tmp_1801: int;
  var {:pointer} Tmp_1802: int;
  var {:pointer} Tmp_1803: int;
  var {:pointer} Tmp_1804: int;
  var {:pointer} Tmp_1805: int;
  var {:pointer} Tmp_1806: int;
  var {:pointer} Tmp_1807: int;
  var {:pointer} Tmp_1808: int;
  var {:pointer} Tmp_1809: int;
  var {:pointer} Tmp_1810: int;
  var {:pointer} Tmp_1811: int;
  var {:pointer} Tmp_1812: int;
  var {:pointer} Tmp_1813: int;
  var {:pointer} Tmp_1814: int;
  var {:pointer} Tmp_1815: int;
  var {:pointer} Tmp_1816: int;
  var {:scalar} Bpb: int;
  var {:pointer} Tmp_1817: int;
  var {:pointer} Tmp_1818: int;
  var {:pointer} Tmp_1819: int;
  var {:pointer} Tmp_1820: int;
  var {:pointer} Tmp_1821: int;
  var {:pointer} Tmp_1822: int;
  var {:pointer} Tmp_1823: int;
  var {:pointer} Tmp_1824: int;
  var {:pointer} Tmp_1825: int;
  var {:scalar} Result_4: int;
  var {:pointer} BootSector: int;

  anon0:
    call {:si_unique_call 2234} Bpb := __HAVOC_malloc(88);
    BootSector := actual_BootSector;
    call {:si_unique_call 2235} Tmp_1769 := __HAVOC_malloc(8);
    call {:si_unique_call 2236} Tmp_1771 := __HAVOC_malloc(8);
    call {:si_unique_call 2237} Tmp_1772 := __HAVOC_malloc(8);
    call {:si_unique_call 2238} Tmp_1781 := __HAVOC_malloc(16);
    call {:si_unique_call 2239} Tmp_1782 := __HAVOC_malloc(16);
    call {:si_unique_call 2240} Tmp_1783 := __HAVOC_malloc(8);
    call {:si_unique_call 2241} Tmp_1784 := __HAVOC_malloc(16);
    call {:si_unique_call 2242} Tmp_1785 := __HAVOC_malloc(8);
    call {:si_unique_call 2243} Tmp_1791 := __HAVOC_malloc(4);
    call {:si_unique_call 2244} Tmp_1793 := __HAVOC_malloc(8);
    call {:si_unique_call 2245} Tmp_1794 := __HAVOC_malloc(8);
    call {:si_unique_call 2246} Tmp_1797 := __HAVOC_malloc(16);
    call {:si_unique_call 2247} Tmp_1799 := __HAVOC_malloc(8);
    call {:si_unique_call 2248} Tmp_1804 := __HAVOC_malloc(8);
    call {:si_unique_call 2249} Tmp_1807 := __HAVOC_malloc(12);
    call {:si_unique_call 2250} Tmp_1808 := __HAVOC_malloc(12);
    call {:si_unique_call 2251} Tmp_1811 := __HAVOC_malloc(8);
    call {:si_unique_call 2252} Tmp_1814 := __HAVOC_malloc(12);
    call {:si_unique_call 2253} Tmp_1818 := __HAVOC_malloc(4);
    call {:si_unique_call 2254} Tmp_1819 := __HAVOC_malloc(8);
    call {:si_unique_call 2255} Tmp_1823 := __HAVOC_malloc(4);
    Result_4 := 1;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1788 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1788 != 0;
    assume Tmp_1788 > 0;
    havoc Tmp_1783;
    Tmp_1817 := Tmp_1783;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1817 != 0;
    assume Tmp_1817 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1777 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1777 != 0;
    assume Tmp_1777 > 0;
    havoc Tmp_1823;
    Tmp_1802 := Tmp_1823;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1802 != 0;
    assume Tmp_1802 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1792 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1792 != 0;
    assume Tmp_1792 > 0;
    havoc Tmp_1811;
    Tmp_1805 := Tmp_1811;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1805 != 0;
    assume Tmp_1805 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1806 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1806 != 0;
    assume Tmp_1806 > 0;
    havoc Tmp_1818;
    Tmp_1812 := Tmp_1818;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1812 != 0;
    assume Tmp_1812 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1822 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1822 != 0;
    assume Tmp_1822 > 0;
    havoc Tmp_1794;
    Tmp_1778 := Tmp_1794;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1778 != 0;
    assume Tmp_1778 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1824 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1824 != 0;
    assume Tmp_1824 > 0;
    havoc Tmp_1819;
    Tmp_1768 := Tmp_1819;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1768 != 0;
    assume Tmp_1768 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1790 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1790 != 0;
    assume Tmp_1790 > 0;
    havoc Tmp_1791;
    Tmp_1780 := Tmp_1791;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1780 != 0;
    assume Tmp_1780 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1789 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1789 != 0;
    assume Tmp_1789 > 0;
    havoc Tmp_1793;
    Tmp_1810 := Tmp_1793;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1810 != 0;
    assume Tmp_1810 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1813 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1813 != 0;
    assume Tmp_1813 > 0;
    havoc Tmp_1785;
    Tmp_1795 := Tmp_1785;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1795 != 0;
    assume Tmp_1795 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1773 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1773 != 0;
    assume Tmp_1773 > 0;
    havoc Tmp_1772;
    Tmp_1800 := Tmp_1772;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1800 != 0;
    assume Tmp_1800 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1786 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1786 != 0;
    assume Tmp_1786 > 0;
    havoc Tmp_1797;
    Tmp_1796 := Tmp_1797;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1796 != 0;
    assume Tmp_1796 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1770 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1770 != 0;
    assume Tmp_1770 > 0;
    havoc Tmp_1784;
    Tmp_1787 := Tmp_1784;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1787 != 0;
    assume Tmp_1787 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1776 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1776 != 0;
    assume Tmp_1776 > 0;
    havoc Tmp_1782;
    Tmp_1798 := Tmp_1782;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1798 != 0;
    assume Tmp_1798 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1825 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1825 != 0;
    assume Tmp_1825 > 0;
    havoc Tmp_1769;
    Tmp_1820 := Tmp_1769;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1820 != 0;
    assume Tmp_1820 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1779 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1779 != 0;
    assume Tmp_1779 > 0;
    havoc Tmp_1799;
    Tmp_1809 := Tmp_1799;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1809 != 0;
    assume Tmp_1809 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1815 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1815 != 0;
    assume Tmp_1815 > 0;
    havoc Tmp_1781;
    Tmp_1774 := Tmp_1781;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1774 != 0;
    assume Tmp_1774 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1816 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1816 != 0;
    assume Tmp_1816 > 0;
    havoc Tmp_1771;
    Tmp_1803 := Tmp_1771;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1803 != 0;
    assume Tmp_1803 > 0;
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    Tmp_1801 := PackedBpb__PACKED_BOOT_SECTOR(BootSector);
    assume {:nonnull} Tmp_1801 != 0;
    assume Tmp_1801 > 0;
    havoc Tmp_1804;
    Tmp_1821 := Tmp_1804;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    assume {:nonnull} Tmp_1821 != 0;
    assume Tmp_1821 > 0;
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto L25;

  L25:
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    havoc Tmp_1814;
    assume {:nonnull} Tmp_1814 != 0;
    assume Tmp_1814 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    havoc Tmp_1807;
    assume {:nonnull} Tmp_1807 != 0;
    assume Tmp_1807 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} BootSector != 0;
    assume BootSector > 0;
    havoc Tmp_1808;
    assume {:nonnull} Tmp_1808 != 0;
    assume Tmp_1808 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    Result_4 := 0;
    goto L31;

  L31:
    Tmp_1767 := Result_4;
    return;

  anon123_Then:
    goto L27;

  L27:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    Result_4 := 0;
    goto L31;

  anon89_Then:
    goto L32;

  L32:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Result_4 := 0;
    goto L31;

  anon97_Then:
    goto L39;

  L39:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L53;

  L53:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto L55;

  L55:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    goto L65;

  L65:
    Result_4 := 0;
    goto L31;

  anon115_Then:
    goto L56;

  L56:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    Result_4 := 0;
    goto L31;

  anon117_Then:
    goto L69;

  L69:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    Result_4 := 0;
    goto L31;

  anon118_Then:
    goto L31;

  anon116_Then:
    goto L31;

  anon104_Then:
    goto L69;

  anon114_Then:
    goto L56;

  anon113_Then:
    goto L56;

  anon112_Then:
    goto L65;

  anon111_Then:
    goto L56;

  anon110_Then:
    goto L56;

  anon109_Then:
    goto L56;

  anon108_Then:
    goto L56;

  anon107_Then:
    goto L56;

  anon106_Then:
    goto L56;

  anon105_Then:
    goto L56;

  anon103_Then:
    goto L56;

  anon101_Then:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    goto L74;

  L74:
    Result_4 := 0;
    goto L31;

  anon119_Then:
    goto L55;

  anon102_Then:
    goto L74;

  anon99_Then:
    assume {:nonnull} Bpb != 0;
    assume Bpb > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    Result_4 := 0;
    goto L31;

  anon100_Then:
    goto L53;

  anon98_Then:
    Result_4 := 0;
    goto L31;

  anon90_Then:
    Result_4 := 0;
    goto L31;

  anon96_Then:
    goto L39;

  anon95_Then:
    goto L39;

  anon94_Then:
    goto L39;

  anon93_Then:
    goto L39;

  anon92_Then:
    goto L39;

  anon91_Then:
    goto L39;

  anon84_Then:
    goto L39;

  anon88_Then:
    goto L32;

  anon87_Then:
    goto L32;

  anon86_Then:
    goto L32;

  anon85_Then:
    goto L32;

  anon83_Then:
    goto L32;

  anon122_Then:
    goto L27;

  anon121_Then:
    goto L27;

  anon120_Then:
    goto L25;
}



procedure {:origName "FatOplockRequest"} FatOplockRequest(actual_IrpContext_103: int, actual_Irp_39: int) returns (Tmp_1826: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOplockRequest"} FatOplockRequest(actual_IrpContext_103: int, actual_Irp_39: int) returns (Tmp_1826: int)
{
  var {:pointer} Ccb_23: int;
  var {:pointer} Tmp_1827: int;
  var {:pointer} Fcb_40: int;
  var {:scalar} AcquiredFcb: int;
  var {:scalar} Status_34: int;
  var {:scalar} Tmp_1831: int;
  var {:pointer} Tmp_1832: int;
  var {:pointer} IrpSp_19: int;
  var {:scalar} sdv_1102: int;
  var {:scalar} sdv_1103: int;
  var {:pointer} Tmp_1833: int;
  var {:pointer} Tmp_1834: int;
  var {:scalar} FsControlCode: int;
  var {:pointer} Vcb_64: int;
  var {:scalar} sdv_1107: int;
  var {:scalar} Tmp_1836: int;
  var {:scalar} AcquiredVcb: int;
  var {:pointer} IrpContext_103: int;
  var {:pointer} Irp_39: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_1433: int;
  var vslice_dummy_var_1434: int;
  var vslice_dummy_var_1435: int;
  var vslice_dummy_var_1436: int;

  anon0:
    call {:si_unique_call 2256} Ccb_23 := __HAVOC_malloc(4);
    call {:si_unique_call 2257} Fcb_40 := __HAVOC_malloc(4);
    call {:si_unique_call 2258} Vcb_64 := __HAVOC_malloc(4);
    IrpContext_103 := actual_IrpContext_103;
    Irp_39 := actual_Irp_39;
    call {:si_unique_call 2259} IrpSp_19 := sdv_IoGetCurrentIrpStackLocation(Irp_39);
    AcquiredVcb := 0;
    AcquiredFcb := 0;
    assume {:nonnull} IrpSp_19 != 0;
    assume IrpSp_19 > 0;
    havoc FsControlCode;
    assume {:nonnull} IrpSp_19 != 0;
    assume IrpSp_19 > 0;
    havoc vslice_dummy_var_1433;
    call {:si_unique_call 2260} sdv_1103 := FatDecodeFileObject(vslice_dummy_var_1433, Vcb_64, Fcb_40, Ccb_23);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_1103 != 2;
    call {:si_unique_call 2261} FatCompleteRequest_Real(IrpContext_103, Irp_39, -1073741811);
    Tmp_1826 := -1073741811;
    goto L1;

  L1:
    return;

  anon37_Then:
    assume {:partition} sdv_1103 == 2;
    assume {:nonnull} IrpContext_103 != 0;
    assume IrpContext_103 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} FsControlCode != 589824;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} FsControlCode != 589828;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} FsControlCode != 589832;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} FsControlCode != 589836;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} FsControlCode != 589840;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} FsControlCode != 589844;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} FsControlCode != 589904;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} FsControlCode == 589916;
    goto L33;

  L33:
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    havoc vslice_dummy_var_1434;
    call {:si_unique_call 2262} vslice_dummy_var_317 := FatAcquireSharedVcb(IrpContext_103, vslice_dummy_var_1434);
    AcquiredVcb := 1;
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    havoc vslice_dummy_var_1435;
    call {:si_unique_call 2263} vslice_dummy_var_319 := FatAcquireExclusiveFcb(IrpContext_103, vslice_dummy_var_1435);
    AcquiredFcb := 1;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} FsControlCode == 589828;
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    havoc Tmp_1827;
    assume {:nonnull} Tmp_1827 != 0;
    assume Tmp_1827 > 0;
    goto L56;

  L56:
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    call {:si_unique_call 2264} Status_34 := corral_nondet();
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto L64;

  L64:
    Tmp_1836 := 0;
    goto L65;

  L65:
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} AcquiredVcb != 0;
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    call {:si_unique_call 2265} ExReleaseResourceLite(0);
    goto L67;

  L67:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} AcquiredFcb != 0;
    call {:si_unique_call 2266} ExReleaseResourceLite(0);
    goto L71;

  L71:
    call {:si_unique_call 2267} sdv_1102 := sdv_AbnormalTermination();
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} sdv_1102 != 0;
    goto L81;

  L81:
    Tmp_1826 := Status_34;
    goto L1;

  anon40_Then:
    assume {:partition} sdv_1102 == 0;
    call {:si_unique_call 2268} FatCompleteRequest_Real(IrpContext_103, 0, 0);
    goto L81;

  anon39_Then:
    assume {:partition} AcquiredFcb == 0;
    goto L71;

  anon51_Then:
    assume {:partition} AcquiredVcb == 0;
    goto L67;

  anon38_Then:
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    call {:si_unique_call 2269} sdv_1107 := corral_nondet();
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} sdv_1107 != 0;
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    havoc Tmp_1832;
    assume {:nonnull} Tmp_1832 != 0;
    assume Tmp_1832 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L85;

  L85:
    Tmp_1831 := 2;
    goto L86;

  L86:
    Tmp_1836 := Tmp_1831;
    goto L65;

  anon52_Then:
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    havoc Tmp_1834;
    assume {:nonnull} Tmp_1834 != 0;
    assume Tmp_1834 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    havoc Tmp_1833;
    assume {:nonnull} Tmp_1833 != 0;
    assume Tmp_1833 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    Tmp_1831 := 1;
    goto L86;

  anon54_Then:
    goto L85;

  anon53_Then:
    goto L85;

  anon41_Then:
    assume {:partition} sdv_1107 == 0;
    goto L64;

  anon50_Then:
    assume {:partition} FsControlCode != 589828;
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    goto L56;

  anon42_Then:
    assume {:partition} FsControlCode != 589916;
    call {:si_unique_call 2270} KeBugCheckEx(35, 1247956, FsControlCode, 0, 0);
    goto L56;

  anon43_Then:
    assume {:partition} FsControlCode == 589904;
    goto L36;

  L36:
    assume {:nonnull} Fcb_40 != 0;
    assume Fcb_40 > 0;
    havoc vslice_dummy_var_1436;
    call {:si_unique_call 2271} vslice_dummy_var_318 := FatAcquireSharedFcb(IrpContext_103, vslice_dummy_var_1436);
    AcquiredFcb := 1;
    goto L56;

  anon44_Then:
    assume {:partition} FsControlCode == 589844;
    goto L36;

  anon45_Then:
    assume {:partition} FsControlCode == 589840;
    goto L36;

  anon46_Then:
    assume {:partition} FsControlCode == 589836;
    goto L36;

  anon47_Then:
    assume {:partition} FsControlCode == 589832;
    goto L33;

  anon48_Then:
    assume {:partition} FsControlCode == 589828;
    goto L33;

  anon49_Then:
    assume {:partition} FsControlCode == 589824;
    goto L33;
}



procedure {:origName "FatGetRetrievalPointers"} FatGetRetrievalPointers(actual_IrpContext_104: int, actual_Irp_40: int) returns (Tmp_1837: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} Tmp_1837 == -1073741811 || Tmp_1837 == 5 || Tmp_1837 == 0 || Tmp_1837 == -1073741807 || Tmp_1837 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetRetrievalPointers"} FatGetRetrievalPointers(actual_IrpContext_104: int, actual_Irp_40: int) returns (Tmp_1837: int)
{
  var {:scalar} Tmp_1838: int;
  var {:scalar} Tmp_1839: int;
  var {:scalar} Tmp_1840: int;
  var {:pointer} Tmp_1841: int;
  var {:pointer} Ccb_24: int;
  var {:dopa} {:scalar} Lbo_13: int;
  var {:scalar} sdv_1109: int;
  var {:pointer} Tmp_1842: int;
  var {:pointer} Tmp_1845: int;
  var {:scalar} StartingVcn: int;
  var {:scalar} Status_35: int;
  var {:pointer} OutputBuffer_3: int;
  var {:scalar} RunCount: int;
  var {:pointer} Tmp_1847: int;
  var {:scalar} TypeOfOpen_6: int;
  var {:pointer} IrpSp_20: int;
  var {:scalar} sdv_1115: int;
  var {:pointer} sdv_1116: int;
  var {:scalar} OutputBufferLength_3: int;
  var {:pointer} Vcb_65: int;
  var {:dopa} {:scalar} Vcn: int;
  var {:scalar} Run: int;
  var {:dopa} {:scalar} Lbo_14: int;
  var {:pointer} FcbOrDcb_9: int;
  var {:pointer} Tmp_1849: int;
  var {:dopa} {:scalar} ByteLength: int;
  var {:scalar} Index_5: int;
  var {:pointer} Tmp_1853: int;
  var {:dopa} {:scalar} StartingRun: int;
  var {:scalar} InputBufferLength_3: int;
  var {:scalar} sdv_1120: int;
  var {:pointer} IrpContext_104: int;
  var {:pointer} Irp_40: int;
  var boogieTmp: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_1437: int;
  var vslice_dummy_var_1438: int;
  var vslice_dummy_var_1439: int;
  var vslice_dummy_var_1440: int;
  var vslice_dummy_var_1441: int;
  var vslice_dummy_var_1442: int;
  var vslice_dummy_var_1443: int;
  var vslice_dummy_var_1444: int;
  var vslice_dummy_var_1445: int;
  var vslice_dummy_var_1446: int;
  var vslice_dummy_var_1447: int;
  var vslice_dummy_var_1448: int;
  var vslice_dummy_var_1449: int;
  var vslice_dummy_var_1450: int;

  anon0:
    call {:si_unique_call 2272} Ccb_24 := __HAVOC_malloc(4);
    call {:si_unique_call 2273} Lbo_13 := __HAVOC_malloc(4);
    call {:si_unique_call 2274} StartingVcn := __HAVOC_malloc(20);
    call {:si_unique_call 2275} Vcb_65 := __HAVOC_malloc(4);
    call {:si_unique_call 2276} Vcn := __HAVOC_malloc(4);
    call {:si_unique_call 2277} Lbo_14 := __HAVOC_malloc(4);
    call {:si_unique_call 2278} FcbOrDcb_9 := __HAVOC_malloc(4);
    call {:si_unique_call 2279} ByteLength := __HAVOC_malloc(4);
    call {:si_unique_call 2280} StartingRun := __HAVOC_malloc(4);
    IrpContext_104 := actual_IrpContext_104;
    Irp_40 := actual_Irp_40;
    call {:si_unique_call 2281} Tmp_1842 := __HAVOC_malloc(40);
    call {:si_unique_call 2282} Tmp_1847 := __HAVOC_malloc(40);
    call {:si_unique_call 2283} IrpSp_20 := sdv_IoGetCurrentIrpStackLocation(Irp_40);
    assume {:nonnull} IrpContext_104 != 0;
    assume IrpContext_104 > 0;
    assume {:nonnull} IrpSp_20 != 0;
    assume IrpSp_20 > 0;
    havoc vslice_dummy_var_1437;
    call {:si_unique_call 2284} TypeOfOpen_6 := FatDecodeFileObject(vslice_dummy_var_1437, Vcb_65, FcbOrDcb_9, Ccb_24);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} TypeOfOpen_6 != 2;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} TypeOfOpen_6 != 3;
    call {:si_unique_call 2285} FatCompleteRequest_Real(IrpContext_104, Irp_40, -1073741811);
    Tmp_1837 := -1073741811;
    goto L1;

  L1:
    return;

  anon38_Then:
    assume {:partition} TypeOfOpen_6 == 3;
    goto L30;

  L30:
    assume {:nonnull} IrpSp_20 != 0;
    assume IrpSp_20 > 0;
    havoc InputBufferLength_3;
    assume {:nonnull} IrpSp_20 != 0;
    assume IrpSp_20 > 0;
    havoc OutputBufferLength_3;
    call {:si_unique_call 2286} sdv_1116 := FatMapUserBuffer(IrpContext_104, Irp_40);
    OutputBuffer_3 := sdv_1116;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} 8 > InputBufferLength_3;
    goto L43;

  L43:
    call {:si_unique_call 2287} FatCompleteRequest_Real(IrpContext_104, Irp_40, -1073741789);
    Tmp_1837 := -1073741789;
    goto L1;

  anon47_Then:
    assume {:partition} InputBufferLength_3 >= 8;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} 32 <= OutputBufferLength_3;
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    havoc Tmp_1849;
    assume {:nonnull} Tmp_1849 != 0;
    assume Tmp_1849 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    havoc vslice_dummy_var_1438;
    call {:si_unique_call 2288} vslice_dummy_var_321 := FatAcquireSharedFcb(IrpContext_104, vslice_dummy_var_1438);
    goto L54;

  L54:
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    havoc vslice_dummy_var_1439;
    call {:si_unique_call 2289} FatVerifyFcb(IrpContext_104, vslice_dummy_var_1439);
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    havoc vslice_dummy_var_1440;
    call {:si_unique_call 2290} FatLookupFileAllocationSize#1(IrpContext_104, vslice_dummy_var_1440);
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    havoc Tmp_1841;
    assume {:nonnull} Tmp_1841 != 0;
    assume Tmp_1841 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L74;

  L74:
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    goto L68;

  L68:
    assume {:nonnull} Vcb_65 != 0;
    assume Vcb_65 > 0;
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    assume {:nonnull} Irp_40 != 0;
    assume Irp_40 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 2291} ProbeForRead(0, InputBufferLength_3, 1);
    call {:si_unique_call 2292} ProbeForWrite(0, OutputBufferLength_3, 1);
    goto L78;

  L78:
    assume {:nonnull} IrpSp_20 != 0;
    assume IrpSp_20 > 0;
    havoc Tmp_1845;
    assume {:nonnull} StartingVcn != 0;
    assume StartingVcn > 0;
    assume {:nonnull} Tmp_1845 != 0;
    assume Tmp_1845 > 0;
    assume {:nonnull} StartingVcn != 0;
    assume StartingVcn > 0;
    assume {:nonnull} Tmp_1845 != 0;
    assume Tmp_1845 > 0;
    assume {:nonnull} StartingVcn != 0;
    assume StartingVcn > 0;
    assume {:nonnull} Tmp_1845 != 0;
    assume Tmp_1845 > 0;
    assume {:nonnull} StartingVcn != 0;
    assume StartingVcn > 0;
    assume {:nonnull} Tmp_1845 != 0;
    assume Tmp_1845 > 0;
    assume {:nonnull} StartingVcn != 0;
    assume StartingVcn > 0;
    assume {:nonnull} Tmp_1845 != 0;
    assume Tmp_1845 > 0;
    assume {:nonnull} StartingVcn != 0;
    assume StartingVcn > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L108;

  L108:
    Status_35 := -1073741807;
    goto L110;

  L110:
    call {:si_unique_call 2293} ExReleaseResourceLite(0);
    call {:si_unique_call 2294} sdv_1120 := sdv_AbnormalTermination();
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_1120 != 0;
    goto L120;

  L120:
    Tmp_1837 := Status_35;
    goto L1;

  anon43_Then:
    assume {:partition} sdv_1120 == 0;
    call {:si_unique_call 2295} FatCompleteRequest_Real(IrpContext_104, Irp_40, Status_35);
    goto L120;

  anon51_Then:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    call {:si_unique_call 2296} Tmp_1840 := corral_nondet();
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    havoc vslice_dummy_var_1441;
    havoc vslice_dummy_var_1442;
    call {:si_unique_call 2297} sdv_1115 := FatLookupMcbEntry(vslice_dummy_var_1441, vslice_dummy_var_1442, Tmp_1840, Lbo_13, 0, StartingRun);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_1115 != 0;
    goto L130;

  L130:
    call {:si_unique_call 2298} RunCount := corral_nondet();
    Index_5 := 0;
    assume {:nonnull} StartingRun != 0;
    assume StartingRun > 0;
    havoc Run;
    goto L136;

  L136:
    call {:si_unique_call 2299} Tmp_1838, Tmp_1839, sdv_1109, Tmp_1842, Tmp_1847, Run, Index_5, boogieTmp := FatGetRetrievalPointers_loop_L136(Tmp_1838, Tmp_1839, sdv_1109, Tmp_1842, OutputBuffer_3, RunCount, Tmp_1847, OutputBufferLength_3, Vcb_65, Vcn, Run, Lbo_14, FcbOrDcb_9, ByteLength, Index_5, StartingRun, boogieTmp);
    goto L136_last;

  L136_last:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} RunCount > Run;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !true;
    assume {:nonnull} OutputBuffer_3 != 0;
    assume OutputBuffer_3 > 0;
    assume {:nonnull} Irp_40 != 0;
    assume Irp_40 > 0;
    Status_35 := 5;
    goto L110;

  anon52_Then:
    assume {:partition} true;
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    assume {:nonnull} Vcb_65 != 0;
    assume Vcb_65 > 0;
    havoc vslice_dummy_var_1443;
    havoc vslice_dummy_var_1444;
    call {:si_unique_call 2300} sdv_1109 := FatGetNextMcbEntry(vslice_dummy_var_1443, vslice_dummy_var_1444, Run, Vcn, Lbo_14, ByteLength);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_1109 != 0;
    goto L153;

  L153:
    Tmp_1838 := Index_5;
    assume {:nonnull} OutputBuffer_3 != 0;
    assume OutputBuffer_3 > 0;
    havoc Tmp_1847;
    assume {:nonnull} Tmp_1847 != 0;
    assume Tmp_1847 > 0;
    call {:si_unique_call 2301} boogieTmp := corral_nondet();
    Tmp_1839 := Index_5;
    assume {:nonnull} OutputBuffer_3 != 0;
    assume OutputBuffer_3 > 0;
    havoc Tmp_1842;
    assume {:nonnull} Tmp_1842 != 0;
    assume Tmp_1842 > 0;
    call {:si_unique_call 2302} boogieTmp := corral_nondet();
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Index_5 != 0;
    goto L157;

  L157:
    Index_5 := Index_5 + 1;
    Run := Run + 1;
    goto L157_dummy;

  L157_dummy:
    assume false;
    return;

  anon53_Then:
    assume {:partition} Index_5 == 0;
    assume {:nonnull} OutputBuffer_3 != 0;
    assume OutputBuffer_3 > 0;
    assume {:nonnull} StartingRun != 0;
    assume StartingRun > 0;
    assume {:nonnull} OutputBuffer_3 != 0;
    assume OutputBuffer_3 > 0;
    call {:si_unique_call 2303} boogieTmp := corral_nondet();
    goto L157;

  anon46_Then:
    assume {:partition} sdv_1109 == 0;
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    havoc vslice_dummy_var_1445;
    havoc vslice_dummy_var_1446;
    call {:si_unique_call 2304} KeBugCheckEx(35, 1250142, vslice_dummy_var_1445, vslice_dummy_var_1446, Run);
    goto L153;

  anon45_Then:
    assume {:partition} Run >= RunCount;
    assume {:nonnull} Irp_40 != 0;
    assume Irp_40 > 0;
    Status_35 := 0;
    goto L110;

  anon44_Then:
    assume {:partition} sdv_1115 == 0;
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    assume {:nonnull} StartingVcn != 0;
    assume StartingVcn > 0;
    havoc vslice_dummy_var_1447;
    havoc vslice_dummy_var_1448;
    havoc vslice_dummy_var_1449;
    call {:si_unique_call 2305} KeBugCheckEx(35, 1250091, vslice_dummy_var_1447, vslice_dummy_var_1448, vslice_dummy_var_1449);
    goto L130;

  anon42_Then:
    goto L108;

  anon50_Then:
    goto L78;

  anon49_Then:
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    havoc Tmp_1853;
    assume {:nonnull} Tmp_1853 != 0;
    assume Tmp_1853 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Vcb_65 != 0;
    assume Vcb_65 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto L74;

  anon41_Then:
    goto L68;

  anon54_Then:
    goto L68;

  anon40_Then:
    goto L68;

  anon48_Then:
    assume {:nonnull} FcbOrDcb_9 != 0;
    assume FcbOrDcb_9 > 0;
    havoc vslice_dummy_var_1450;
    call {:si_unique_call 2306} vslice_dummy_var_320 := FatAcquireExclusiveFcb(IrpContext_104, vslice_dummy_var_1450);
    goto L54;

  anon39_Then:
    assume {:partition} OutputBufferLength_3 < 32;
    goto L43;

  anon37_Then:
    assume {:partition} TypeOfOpen_6 == 2;
    goto L30;
}



procedure {:origName "FatUserFsCtrl"} FatUserFsCtrl(actual_IrpContext_105: int, actual_Irp_41: int) returns (Tmp_1854: int);
  modifies alloc, locked, queuedWithoutMarking, Mem_T.P_PACKED_DIRENT, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatUserFsCtrl"} FatUserFsCtrl(actual_IrpContext_105: int, actual_Irp_41: int) returns (Tmp_1854: int)
{
  var {:scalar} Tmp_1855: int;
  var {:scalar} Status_36: int;
  var {:pointer} IrpSp_21: int;
  var {:scalar} FsControlCode_1: int;
  var {:pointer} IrpContext_105: int;
  var {:pointer} Irp_41: int;

  anon0:
    IrpContext_105 := actual_IrpContext_105;
    Irp_41 := actual_Irp_41;
    call {:si_unique_call 2307} IrpSp_21 := sdv_IoGetCurrentIrpStackLocation(Irp_41);
    assume {:nonnull} IrpSp_21 != 0;
    assume IrpSp_21 > 0;
    havoc FsControlCode_1;
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    Tmp_1855 := BAND(FsControlCode_1, BOR(1, 2));
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Tmp_1855 == 3;
    assume {:nonnull} IrpContext_105 != 0;
    assume IrpContext_105 > 0;
    goto L12;

  L12:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} FsControlCode_1 != 589824;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} FsControlCode_1 != 589828;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} FsControlCode_1 != 589832;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} FsControlCode_1 != 589836;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} FsControlCode_1 != 589840;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} FsControlCode_1 != 589844;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} FsControlCode_1 != 589848;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} FsControlCode_1 != 589852;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} FsControlCode_1 != 589856;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} FsControlCode_1 != 589864;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} FsControlCode_1 != 589868;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} FsControlCode_1 != 589872;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} FsControlCode_1 != 589883;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} FsControlCode_1 != 589904;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} FsControlCode_1 != 589912;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} FsControlCode_1 != 589916;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} FsControlCode_1 != 589920;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} FsControlCode_1 != 589935;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} FsControlCode_1 != 589939;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} FsControlCode_1 != 589940;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} FsControlCode_1 != 589944;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} FsControlCode_1 == 589955;
    call {:si_unique_call 2308} Status_36 := FatAllowExtendedDasdIo(IrpContext_105, Irp_41);
    goto L66;

  L66:
    Tmp_1854 := Status_36;
    return;

  anon50_Then:
    assume {:partition} FsControlCode_1 != 589955;
    call {:si_unique_call 2309} FatCompleteRequest_Real(IrpContext_105, Irp_41, -1073741808);
    Status_36 := -1073741808;
    goto L66;

  anon51_Then:
    assume {:partition} FsControlCode_1 == 589944;
    call {:si_unique_call 2310} Status_36 := FatIsVolumeDirty(IrpContext_105, Irp_41);
    goto L66;

  anon52_Then:
    assume {:partition} FsControlCode_1 == 589940;
    call {:si_unique_call 2311} Status_36 := FatMoveFile(IrpContext_105, Irp_41);
    goto L66;

  anon53_Then:
    assume {:partition} FsControlCode_1 == 589939;
    call {:si_unique_call 2312} Status_36 := FatGetRetrievalPointers(IrpContext_105, Irp_41);
    goto L66;

  anon54_Then:
    assume {:partition} FsControlCode_1 == 589935;
    call {:si_unique_call 2313} Status_36 := FatGetVolumeBitmap(IrpContext_105, Irp_41);
    goto L66;

  anon55_Then:
    assume {:partition} FsControlCode_1 == 589920;
    call {:si_unique_call 2314} Status_36 := FatGetStatistics(IrpContext_105, Irp_41);
    goto L66;

  anon56_Then:
    assume {:partition} FsControlCode_1 == 589916;
    goto L19;

  L19:
    call {:si_unique_call 2315} Status_36 := FatOplockRequest(IrpContext_105, Irp_41);
    goto L66;

  anon57_Then:
    assume {:partition} FsControlCode_1 == 589912;
    call {:si_unique_call 2316} Status_36 := FatQueryBpb(IrpContext_105, Irp_41);
    goto L66;

  anon58_Then:
    assume {:partition} FsControlCode_1 == 589904;
    goto L19;

  anon59_Then:
    assume {:partition} FsControlCode_1 == 589883;
    call {:si_unique_call 2317} Status_36 := FatQueryRetrievalPointers(IrpContext_105, Irp_41);
    goto L66;

  anon60_Then:
    assume {:partition} FsControlCode_1 == 589872;
    call {:si_unique_call 2318} Status_36 := FatDirtyVolume(IrpContext_105, Irp_41);
    goto L66;

  anon61_Then:
    assume {:partition} FsControlCode_1 == 589868;
    call {:si_unique_call 2319} Status_36 := FatIsPathnameValid(IrpContext_105, Irp_41);
    goto L66;

  anon62_Then:
    assume {:partition} FsControlCode_1 == 589864;
    call {:si_unique_call 2320} Status_36 := FatIsVolumeMounted(IrpContext_105, Irp_41);
    goto L66;

  anon63_Then:
    assume {:partition} FsControlCode_1 == 589856;
    call {:si_unique_call 2321} Status_36 := FatDismountVolume(IrpContext_105, Irp_41);
    goto L66;

  anon64_Then:
    assume {:partition} FsControlCode_1 == 589852;
    call {:si_unique_call 2322} Status_36 := FatUnlockVolume(IrpContext_105, Irp_41);
    goto L66;

  anon65_Then:
    assume {:partition} FsControlCode_1 == 589848;
    call {:si_unique_call 2323} Status_36 := FatLockVolume(IrpContext_105, Irp_41);
    goto L66;

  anon66_Then:
    assume {:partition} FsControlCode_1 == 589844;
    goto L19;

  anon67_Then:
    assume {:partition} FsControlCode_1 == 589840;
    goto L19;

  anon68_Then:
    assume {:partition} FsControlCode_1 == 589836;
    goto L19;

  anon69_Then:
    assume {:partition} FsControlCode_1 == 589832;
    goto L19;

  anon70_Then:
    assume {:partition} FsControlCode_1 == 589828;
    goto L19;

  anon49_Then:
    assume {:partition} FsControlCode_1 == 589824;
    goto L19;

  anon72_Then:
    assume {:partition} Tmp_1855 != 3;
    goto L12;

  anon71_Then:
    goto L12;
}



procedure {:origName "FatSearchBufferForLabel"} FatSearchBufferForLabel(actual_IrpContext_106: int, actual_Vpb_2: int, actual_Buffer_26: int, actual_Size_1: int, actual_LabelFound: int) returns (Tmp_1857: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1857 == 0 || Tmp_1857 == -1073741806 || Tmp_1857 == -1073741675;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSearchBufferForLabel"} FatSearchBufferForLabel(actual_IrpContext_106: int, actual_Vpb_2: int, actual_Buffer_26: int, actual_Size_1: int, actual_LabelFound: int) returns (Tmp_1857: int)
{
  var {:pointer} Tmp_1858: int;
  var {:pointer} UnicodeBuffer_1: int;
  var {:scalar} Tmp_1859: int;
  var {:scalar} OemString: int;
  var {:scalar} UnicodeString_2: int;
  var {:pointer} TerminationDirent: int;
  var {:pointer} Dirent_19: int;
  var {:scalar} Status_37: int;
  var {:pointer} Tmp_1860: int;
  var {:scalar} VolumeLabelLength: int;
  var {:scalar} sdv_1138: int;
  var {:pointer} Tmp_1862: int;
  var {:scalar} Tmp_1863: int;
  var {:scalar} Tmp_1864: int;
  var {:pointer} Tmp_1865: int;
  var {:pointer} Tmp_1866: int;
  var {:pointer} Vpb_2: int;
  var {:pointer} Buffer_26: int;
  var {:pointer} LabelFound: int;
  var vslice_dummy_var_322: int;

  anon0:
    call {:si_unique_call 2324} OemString := __HAVOC_malloc(12);
    call {:si_unique_call 2325} UnicodeString_2 := __HAVOC_malloc(12);
    Vpb_2 := actual_Vpb_2;
    Buffer_26 := actual_Buffer_26;
    LabelFound := actual_LabelFound;
    call {:si_unique_call 2326} Tmp_1858 := __HAVOC_malloc(44);
    call {:si_unique_call 2327} UnicodeBuffer_1 := __HAVOC_malloc(44);
    call {:si_unique_call 2328} Tmp_1860 := __HAVOC_malloc(44);
    call {:si_unique_call 2329} vslice_dummy_var_322 := __HAVOC_malloc(128);
    call {:si_unique_call 2330} Tmp_1862 := __HAVOC_malloc(44);
    call {:si_unique_call 2331} Tmp_1865 := __HAVOC_malloc(44);
    call {:si_unique_call 2332} Tmp_1866 := __HAVOC_malloc(44);
    Dirent_19 := Buffer_26;
    TerminationDirent := Dirent_19;
    goto L12;

  L12:
    call {:si_unique_call 2333} Tmp_1860, Tmp_1863, Tmp_1866 := FatSearchBufferForLabel_loop_L12(TerminationDirent, Dirent_19, Tmp_1860, Tmp_1863, Tmp_1866);
    goto L12_last;

  L12_last:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} TerminationDirent > Dirent_19;
    assume {:nonnull} Dirent_19 != 0;
    assume Dirent_19 > 0;
    havoc Tmp_1860;
    assume {:nonnull} Tmp_1860 != 0;
    assume Tmp_1860 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Dirent_19 != 0;
    assume Dirent_19 > 0;
    havoc Tmp_1863;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Tmp_1863 == 8;
    assume {:nonnull} Dirent_19 != 0;
    assume Dirent_19 > 0;
    havoc Tmp_1866;
    assume {:nonnull} Tmp_1866 != 0;
    assume Tmp_1866 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L18;

  L18:
    goto L18_dummy;

  L18_dummy:
    assume false;
    return;

  anon29_Then:
    goto L13;

  L13:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Dirent_19 >= TerminationDirent;
    assume {:nonnull} LabelFound != 0;
    assume LabelFound > 0;
    Tmp_1857 := 0;
    goto L1;

  L1:
    return;

  anon24_Then:
    assume {:partition} TerminationDirent > Dirent_19;
    assume {:nonnull} Dirent_19 != 0;
    assume Dirent_19 > 0;
    havoc Tmp_1865;
    assume {:nonnull} OemString != 0;
    assume OemString > 0;
    assume {:nonnull} OemString != 0;
    assume OemString > 0;
    assume {:nonnull} OemString != 0;
    assume OemString > 0;
    goto L27;

  L27:
    call {:si_unique_call 2334} Tmp_1858, Tmp_1859, Tmp_1862, Tmp_1864 := FatSearchBufferForLabel_loop_L27(Tmp_1858, Tmp_1859, OemString, Dirent_19, Tmp_1862, Tmp_1864);
    goto L27_last;

  L27_last:
    assume {:CounterLoop 11} true;
    assume {:nonnull} OemString != 0;
    assume OemString > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} OemString != 0;
    assume OemString > 0;
    havoc Tmp_1864;
    assume {:nonnull} Dirent_19 != 0;
    assume Dirent_19 > 0;
    havoc Tmp_1862;
    assume {:nonnull} Tmp_1862 != 0;
    assume Tmp_1862 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} OemString != 0;
    assume OemString > 0;
    havoc Tmp_1859;
    assume {:nonnull} Dirent_19 != 0;
    assume Dirent_19 > 0;
    havoc Tmp_1858;
    assume {:nonnull} Tmp_1858 != 0;
    assume Tmp_1858 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L30;

  L30:
    assume {:nonnull} OemString != 0;
    assume OemString > 0;
    goto L30_dummy;

  L30_dummy:
    assume false;
    return;

  anon31_Then:
    goto L28;

  L28:
    assume {:nonnull} UnicodeString_2 != 0;
    assume UnicodeString_2 > 0;
    assume {:nonnull} UnicodeString_2 != 0;
    assume UnicodeString_2 > 0;
    call {:si_unique_call 2335} Status_37 := RtlOemStringToCountedUnicodeString(0, 0, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Status_37 >= 0;
    assume {:nonnull} UnicodeString_2 != 0;
    assume UnicodeString_2 > 0;
    havoc VolumeLabelLength;
    assume {:nonnull} Vpb_2 != 0;
    assume Vpb_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L43;

  L43:
    Tmp_1857 := -1073741806;
    goto L1;

  anon32_Then:
    assume {:nonnull} Vpb_2 != 0;
    assume Vpb_2 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_1138 == 0;
    assume {:nonnull} LabelFound != 0;
    assume LabelFound > 0;
    Tmp_1857 := 0;
    goto L1;

  anon33_Then:
    assume {:partition} sdv_1138 != 0;
    goto L43;

  anon26_Then:
    assume {:partition} 0 > Status_37;
    Tmp_1857 := Status_37;
    goto L1;

  anon30_Then:
    goto L30;

  anon25_Then:
    goto L28;

  anon28_Then:
    assume {:partition} Tmp_1863 != 8;
    goto L18;

  anon27_Then:
    Dirent_19 := TerminationDirent;
    goto L13;

  anon23_Then:
    assume {:partition} Dirent_19 >= TerminationDirent;
    goto L13;
}



procedure {:origName "FatMountVolume"} FatMountVolume(actual_IrpContext_107: int, actual_TargetDeviceObject_2: int, actual_Vpb_3: int, actual_FsDeviceObject_1: int) returns (Tmp_1868: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatMountVolume"} FatMountVolume(actual_IrpContext_107: int, actual_TargetDeviceObject_2: int, actual_Vpb_3: int, actual_FsDeviceObject_1: int) returns (Tmp_1868: int)
{
  var {:pointer} Links_4: int;
  var {:pointer} Tmp_1869: int;
  var {:pointer} Tmp_1870: int;
  var {:pointer} Tmp_1871: int;
  var {:pointer} sdv_1140: int;
  var {:pointer} Tmp_1872: int;
  var {:pointer} Tmp_1873: int;
  var {:pointer} Tmp_1874: int;
  var {:scalar} sdv_1142: int;
  var {:pointer} OldVcb: int;
  var {:pointer} Tmp_1875: int;
  var {:pointer} Tmp_1876: int;
  var {:pointer} RootDirectoryFile: int;
  var {:pointer} Tmp_1877: int;
  var {:pointer} Tmp_1878: int;
  var {:scalar} OemString_1: int;
  var {:pointer} Tmp_1879: int;
  var {:pointer} Tmp_1880: int;
  var {:pointer} Dirent_20: int;
  var {:scalar} Status_38: int;
  var {:scalar} Iosb_18: int;
  var {:pointer} Tmp_1881: int;
  var {:dopa} {:scalar} ChangeCount: int;
  var {:pointer} Tmp_1882: int;
  var {:pointer} Tmp_1883: int;
  var {:pointer} Tmp_1884: int;
  var {:scalar} Tmp_1885: int;
  var {:pointer} Tmp_1886: int;
  var {:pointer} Tmp_1887: int;
  var {:pointer} Tmp_1888: int;
  var {:pointer} Tmp_1890: int;
  var {:pointer} Tmp_1891: int;
  var {:scalar} WeClearedVerifyRequiredBit: int;
  var {:scalar} FileSizes_2: int;
  var {:scalar} PartitionInformation: int;
  var {:pointer} IrpSp_22: int;
  var {:pointer} Tmp_1892: int;
  var {:pointer} Tmp_1893: int;
  var {:pointer} Tmp_1894: int;
  var {:pointer} Tmp_1895: int;
  var {:pointer} VolDo: int;
  var {:dopa} {:scalar} ByteOffset_1: int;
  var {:pointer} Tmp_1896: int;
  var {:pointer} RealDevice_3: int;
  var {:pointer} Tmp_1897: int;
  var {:scalar} sdv_1148: int;
  var {:pointer} OldVpb_1: int;
  var {:pointer} Tmp_1899: int;
  var {:pointer} Vcb_66: int;
  var {:pointer} Tmp_1900: int;
  var {:scalar} sdv_1151: int;
  var {:pointer} Tmp_1901: int;
  var {:pointer} Tmp_1902: int;
  var {:scalar} sdv_1152: int;
  var {:pointer} Tmp_1903: int;
  var {:pointer} EaFcb_1: int;
  var {:pointer} Tmp_1904: int;
  var {:pointer} Tmp_1905: int;
  var {:pointer} Tmp_1906: int;
  var {:pointer} BootSector_1: int;
  var {:pointer} Tmp_1907: int;
  var {:pointer} Tmp_1908: int;
  var {:pointer} Tmp_1909: int;
  var {:pointer} Tmp_1910: int;
  var {:pointer} Tmp_1911: int;
  var {:pointer} Tmp_1912: int;
  var {:pointer} Tmp_1913: int;
  var {:pointer} Tmp_1914: int;
  var {:pointer} Tmp_1915: int;
  var {:pointer} Tmp_1916: int;
  var {:pointer} Tmp_1917: int;
  var {:pointer} Tmp_1918: int;
  var {:scalar} sdv_1154: int;
  var {:pointer} Tmp_1919: int;
  var {:pointer} Tmp_1920: int;
  var {:pointer} Tmp_1921: int;
  var {:pointer} Tmp_1922: int;
  var {:scalar} Geometry: int;
  var {:pointer} IrpVpb: int;
  var {:pointer} Tmp_1923: int;
  var {:scalar} TempDirent: int;
  var {:pointer} Tmp_1924: int;
  var {:scalar} sdv_1156: int;
  var {:pointer} Tmp_1925: int;
  var {:pointer} Tmp_1926: int;
  var {:pointer} Tmp_1927: int;
  var {:pointer} Tmp_1928: int;
  var {:pointer} sdv_1157: int;
  var {:pointer} Tmp_1929: int;
  var {:pointer} Tmp_1930: int;
  var {:pointer} Tmp_1932: int;
  var {:scalar} MountNewVolume: int;
  var {:scalar} UnicodeString_3: int;
  var {:pointer} Tmp_1933: int;
  var {:pointer} Tmp_1934: int;
  var {:pointer} Tmp_1935: int;
  var {:scalar} Tmp_1936: int;
  var {:pointer} Tmp_1938: int;
  var {:pointer} Tmp_1939: int;
  var {:pointer} Tmp_1940: int;
  var {:pointer} Tmp_1941: int;
  var {:pointer} Tmp_1942: int;
  var {:pointer} Tmp_1943: int;
  var {:pointer} Tmp_1944: int;
  var {:pointer} Tmp_1945: int;
  var {:pointer} DirentBcb_9: int;
  var {:pointer} Tmp_1946: int;
  var {:pointer} sdv_1160: int;
  var {:pointer} Tmp_1947: int;
  var {:pointer} Tmp_1948: int;
  var {:pointer} Tmp_1949: int;
  var {:pointer} Tmp_1950: int;
  var {:scalar} sdv_1162: int;
  var {:scalar} DoARemount: int;
  var {:pointer} Tmp_1951: int;
  var {:pointer} Tmp_1952: int;
  var {:pointer} Tmp_1953: int;
  var {:pointer} Tmp_1954: int;
  var {:pointer} Tmp_1955: int;
  var {:pointer} Tmp_1957: int;
  var {:scalar} Tmp_1958: int;
  var {:scalar} StatusPartInfo: int;
  var {:pointer} Tmp_1959: int;
  var {:pointer} BootBcb: int;
  var {:pointer} Tmp_1960: int;
  var {:scalar} sdv_1167: int;
  var {:scalar} Tmp_1961: int;
  var {:pointer} Tmp_1962: int;
  var {:pointer} Tmp_1963: int;
  var {:pointer} IrpContext_107: int;
  var {:pointer} TargetDeviceObject_2: int;
  var {:pointer} Vpb_3: int;
  var {:pointer} FsDeviceObject_1: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_1451: int;
  var vslice_dummy_var_1452: int;
  var vslice_dummy_var_1453: int;
  var vslice_dummy_var_1454: int;
  var vslice_dummy_var_1455: int;
  var vslice_dummy_var_1456: int;

  anon0:
    call {:si_unique_call 2336} OemString_1 := __HAVOC_malloc(12);
    call {:si_unique_call 2337} Dirent_20 := __HAVOC_malloc(4);
    call {:si_unique_call 2338} Iosb_18 := __HAVOC_malloc(12);
    call {:si_unique_call 2339} ChangeCount := __HAVOC_malloc(4);
    call {:si_unique_call 2340} FileSizes_2 := __HAVOC_malloc(60);
    call {:si_unique_call 2341} PartitionInformation := __HAVOC_malloc(108);
    call {:si_unique_call 2342} VolDo := __HAVOC_malloc(4);
    call {:si_unique_call 2343} ByteOffset_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2344} BootSector_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2345} Geometry := __HAVOC_malloc(36);
    call {:si_unique_call 2346} TempDirent := __HAVOC_malloc(92);
    call {:si_unique_call 2347} UnicodeString_3 := __HAVOC_malloc(12);
    call {:si_unique_call 2348} DirentBcb_9 := __HAVOC_malloc(4);
    call {:si_unique_call 2349} BootBcb := __HAVOC_malloc(4);
    IrpContext_107 := actual_IrpContext_107;
    TargetDeviceObject_2 := actual_TargetDeviceObject_2;
    Vpb_3 := actual_Vpb_3;
    FsDeviceObject_1 := actual_FsDeviceObject_1;
    call {:si_unique_call 2350} Tmp_1870 := __HAVOC_malloc(8);
    call {:si_unique_call 2351} Tmp_1879 := __HAVOC_malloc(8);
    call {:si_unique_call 2352} Tmp_1880 := __HAVOC_malloc(8);
    call {:si_unique_call 2353} Tmp_1886 := __HAVOC_malloc(8);
    call {:si_unique_call 2354} vslice_dummy_var_329 := __HAVOC_malloc(128);
    call {:si_unique_call 2355} Tmp_1894 := __HAVOC_malloc(4);
    call {:si_unique_call 2356} vslice_dummy_var_330 := __HAVOC_malloc(48);
    call {:si_unique_call 2357} Tmp_1899 := __HAVOC_malloc(44);
    call {:si_unique_call 2358} Tmp_1901 := __HAVOC_malloc(16);
    call {:si_unique_call 2359} Tmp_1904 := __HAVOC_malloc(8);
    call {:si_unique_call 2360} Tmp_1908 := __HAVOC_malloc(16);
    call {:si_unique_call 2361} Tmp_1912 := __HAVOC_malloc(4);
    call {:si_unique_call 2362} Tmp_1920 := __HAVOC_malloc(4);
    call {:si_unique_call 2363} Tmp_1921 := __HAVOC_malloc(8);
    call {:si_unique_call 2364} Tmp_1923 := __HAVOC_malloc(8);
    call {:si_unique_call 2365} Tmp_1924 := __HAVOC_malloc(44);
    call {:si_unique_call 2366} Tmp_1926 := __HAVOC_malloc(128);
    call {:si_unique_call 2367} Tmp_1929 := __HAVOC_malloc(8);
    call {:si_unique_call 2368} Tmp_1933 := __HAVOC_malloc(8);
    call {:si_unique_call 2369} Tmp_1934 := __HAVOC_malloc(8);
    call {:si_unique_call 2370} Tmp_1935 := __HAVOC_malloc(8);
    call {:si_unique_call 2371} Tmp_1940 := __HAVOC_malloc(16);
    call {:si_unique_call 2372} Tmp_1944 := __HAVOC_malloc(16);
    call {:si_unique_call 2373} vslice_dummy_var_331 := __HAVOC_malloc(128);
    call {:si_unique_call 2374} Tmp_1963 := __HAVOC_malloc(44);
    assume {:nonnull} IrpContext_107 != 0;
    assume IrpContext_107 > 0;
    havoc vslice_dummy_var_1451;
    call {:si_unique_call 2375} IrpSp_22 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1451);
    MountNewVolume := 0;
    WeClearedVerifyRequiredBit := 0;
    DoARemount := 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    Vcb_66 := 0;
    RootDirectoryFile := 0;
    assume {:nonnull} ChangeCount != 0;
    assume ChangeCount > 0;
    call {:si_unique_call 2376} Status_38 := FatPerformDevIoCtrl(IrpContext_107, 477184, TargetDeviceObject_2, ChangeCount, 4, 0, 1, Iosb_18);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} Status_38 >= 0;
    assume {:nonnull} Iosb_18 != 0;
    assume Iosb_18 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} ChangeCount != 0;
    assume ChangeCount > 0;
    goto L43;

  L43:
    assume {:nonnull} TargetDeviceObject_2 != 0;
    assume TargetDeviceObject_2 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    call {:si_unique_call 2377} sdv_1148 := FatScanForDataTrack(IrpContext_107, TargetDeviceObject_2);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} sdv_1148 == 0;
    Tmp_1868 := -1073741489;
    goto L1;

  L1:
    return;

  anon111_Then:
    assume {:partition} sdv_1148 != 0;
    goto L45;

  L45:
    call {:si_unique_call 2378} StatusPartInfo := FatPerformDevIoCtrl(IrpContext_107, 458824, TargetDeviceObject_2, PartitionInformation, 144, 0, 1, Iosb_18);
    assume {:nonnull} IrpContext_107 != 0;
    assume IrpContext_107 > 0;
    call {:si_unique_call 2379} FatScanForDismountedVcb(IrpContext_107);
    assume {:nonnull} BootBcb != 0;
    assume BootBcb > 0;
    assume {:nonnull} DirentBcb_9 != 0;
    assume DirentBcb_9 > 0;
    Vcb_66 := 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    MountNewVolume := 0;
    assume {:nonnull} IrpContext_107 != 0;
    assume IrpContext_107 > 0;
    havoc Tmp_1885;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} Tmp_1885 == 0;
    Tmp_1958 := 0;
    goto L466;

  L466:
    call {:si_unique_call 2380} vslice_dummy_var_332 := ExAcquireResourceExclusiveLite(0, Tmp_1958);
    call {:si_unique_call 2381} Status_38 := IoCreateDevice(0, 752, 0, 8, 0, 0, VolDo);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} Status_38 < 0;
    goto L172;

  L172:
    assume {:nonnull} BootBcb != 0;
    assume BootBcb > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} BootBcb != 0;
    assume BootBcb > 0;
    goto L173;

  L173:
    assume {:nonnull} DirentBcb_9 != 0;
    assume DirentBcb_9 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} DirentBcb_9 != 0;
    assume DirentBcb_9 > 0;
    goto L178;

  L178:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} MountNewVolume != 0;
    goto L184;

  L184:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} WeClearedVerifyRequiredBit == 1;
    assume {:nonnull} RealDevice_3 != 0;
    assume RealDevice_3 > 0;
    goto L185;

  L185:
    call {:si_unique_call 2382} ExReleaseResourceLite(0);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} RootDirectoryFile != 0;
    call {:si_unique_call 2383} vslice_dummy_var_323 := corral_nondet();
    call {:si_unique_call 2384} vslice_dummy_var_324 := sdv_ObDereferenceObject(0);
    goto L190;

  L190:
    Tmp_1868 := Status_38;
    goto L1;

  anon126_Then:
    assume {:partition} RootDirectoryFile == 0;
    goto L190;

  anon125_Then:
    assume {:partition} WeClearedVerifyRequiredBit != 1;
    goto L185;

  anon123_Then:
    assume {:partition} MountNewVolume == 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} Vcb_66 != 0;
    call {:si_unique_call 2385} vslice_dummy_var_325 := FatCheckForDismount#1(IrpContext_107, Vcb_66, 1);
    assume {:nonnull} IrpContext_107 != 0;
    assume IrpContext_107 > 0;
    goto L202;

  L202:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} DoARemount != 0;
    call {:si_unique_call 2386} sdv_1151 := sdv_AbnormalTermination();
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} sdv_1151 != 0;
    call {:si_unique_call 2387} vslice_dummy_var_326 := FatCheckForDismount#1(IrpContext_107, OldVcb, 1);
    goto L184;

  anon129_Then:
    assume {:partition} sdv_1151 == 0;
    goto L184;

  anon128_Then:
    assume {:partition} DoARemount == 0;
    goto L184;

  anon124_Then:
    assume {:partition} Vcb_66 == 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    call {:si_unique_call 2388} IoDeleteDevice(0);
    goto L202;

  anon127_Then:
    goto L202;

  anon122_Then:
    goto L178;

  anon121_Then:
    goto L173;

  anon112_Then:
    assume {:partition} 0 <= Status_38;
    assume {:nonnull} TargetDeviceObject_2 != 0;
    assume TargetDeviceObject_2 > 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} TargetDeviceObject_2 != 0;
    assume TargetDeviceObject_2 > 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    goto L108;

  L108:
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    havoc vslice_dummy_var_1452;
    call {:si_unique_call 2389} InitializeListHead(vslice_dummy_var_1452);
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    call {:si_unique_call 2390} Tmp_1932 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1932 != 0;
    assume Tmp_1932 > 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    call {:si_unique_call 2391} sdv_KeInitializeSpinLock(Tmp_1932);
    assume {:nonnull} Tmp_1932 != 0;
    assume Tmp_1932 > 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    assume {:nonnull} TargetDeviceObject_2 != 0;
    assume TargetDeviceObject_2 > 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    call {:si_unique_call 2392} Status_38 := FatPerformDevIoCtrl(IrpContext_107, 458752, TargetDeviceObject_2, Geometry, 24, 0, 1, 0);
    assume {:nonnull} Geometry != 0;
    assume Geometry > 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    havoc RealDevice_3;
    assume {:nonnull} RealDevice_3 != 0;
    assume RealDevice_3 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} RealDevice_3 != 0;
    assume RealDevice_3 > 0;
    WeClearedVerifyRequiredBit := 1;
    goto L127;

  L127:
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    havoc vslice_dummy_var_1453;
    call {:si_unique_call 2393} FatInitializeVcb(IrpContext_107, vslice_dummy_var_1453, TargetDeviceObject_2, Vpb_3, FsDeviceObject_1);
    assume {:nonnull} VolDo != 0;
    assume VolDo > 0;
    havoc Vcb_66;
    call {:si_unique_call 2394} FatReadVolumeFile(IrpContext_107, Vcb_66, 0, 62, BootBcb, BootSector_1);
    assume {:nonnull} BootBcb != 0;
    assume BootBcb > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc vslice_dummy_var_1454;
    call {:si_unique_call 2395} sdv_1162 := FatIsBootSectorFat(vslice_dummy_var_1454);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} sdv_1162 != 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1957 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1875;
    assume {:nonnull} Tmp_1875 != 0;
    assume Tmp_1875 > 0;
    havoc Tmp_1880;
    Tmp_1952 := Tmp_1880;
    assume {:nonnull} Tmp_1952 != 0;
    assume Tmp_1952 > 0;
    assume {:nonnull} Tmp_1957 != 0;
    assume Tmp_1957 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1911 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1960;
    assume {:nonnull} Tmp_1960 != 0;
    assume Tmp_1960 > 0;
    havoc Tmp_1912;
    Tmp_1915 := Tmp_1912;
    assume {:nonnull} Tmp_1911 != 0;
    assume Tmp_1911 > 0;
    assume {:nonnull} Tmp_1915 != 0;
    assume Tmp_1915 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1941 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1919;
    assume {:nonnull} Tmp_1919 != 0;
    assume Tmp_1919 > 0;
    havoc Tmp_1886;
    Tmp_1903 := Tmp_1886;
    assume {:nonnull} Tmp_1903 != 0;
    assume Tmp_1903 > 0;
    assume {:nonnull} Tmp_1941 != 0;
    assume Tmp_1941 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1874 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1895;
    assume {:nonnull} Tmp_1895 != 0;
    assume Tmp_1895 > 0;
    havoc Tmp_1894;
    Tmp_1909 := Tmp_1894;
    assume {:nonnull} Tmp_1874 != 0;
    assume Tmp_1874 > 0;
    assume {:nonnull} Tmp_1909 != 0;
    assume Tmp_1909 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1938 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1939;
    assume {:nonnull} Tmp_1939 != 0;
    assume Tmp_1939 > 0;
    havoc Tmp_1921;
    Tmp_1945 := Tmp_1921;
    assume {:nonnull} Tmp_1938 != 0;
    assume Tmp_1938 > 0;
    assume {:nonnull} Tmp_1945 != 0;
    assume Tmp_1945 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1917 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1951;
    assume {:nonnull} Tmp_1951 != 0;
    assume Tmp_1951 > 0;
    havoc Tmp_1904;
    Tmp_1962 := Tmp_1904;
    assume {:nonnull} Tmp_1917 != 0;
    assume Tmp_1917 > 0;
    assume {:nonnull} Tmp_1962 != 0;
    assume Tmp_1962 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1914 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1946;
    assume {:nonnull} Tmp_1946 != 0;
    assume Tmp_1946 > 0;
    havoc Tmp_1920;
    Tmp_1869 := Tmp_1920;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    assume {:nonnull} Tmp_1914 != 0;
    assume Tmp_1914 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1872 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1902;
    assume {:nonnull} Tmp_1902 != 0;
    assume Tmp_1902 > 0;
    havoc Tmp_1879;
    Tmp_1890 := Tmp_1879;
    assume {:nonnull} Tmp_1872 != 0;
    assume Tmp_1872 > 0;
    assume {:nonnull} Tmp_1890 != 0;
    assume Tmp_1890 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1897 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1907;
    assume {:nonnull} Tmp_1907 != 0;
    assume Tmp_1907 > 0;
    havoc Tmp_1923;
    Tmp_1881 := Tmp_1923;
    assume {:nonnull} Tmp_1881 != 0;
    assume Tmp_1881 > 0;
    assume {:nonnull} Tmp_1897 != 0;
    assume Tmp_1897 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1927 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1928;
    assume {:nonnull} Tmp_1928 != 0;
    assume Tmp_1928 > 0;
    havoc Tmp_1870;
    Tmp_1953 := Tmp_1870;
    assume {:nonnull} Tmp_1927 != 0;
    assume Tmp_1927 > 0;
    assume {:nonnull} Tmp_1953 != 0;
    assume Tmp_1953 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1954 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1887;
    assume {:nonnull} Tmp_1887 != 0;
    assume Tmp_1887 > 0;
    havoc Tmp_1908;
    Tmp_1871 := Tmp_1908;
    assume {:nonnull} Tmp_1871 != 0;
    assume Tmp_1871 > 0;
    assume {:nonnull} Tmp_1954 != 0;
    assume Tmp_1954 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1922 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1896;
    assume {:nonnull} Tmp_1896 != 0;
    assume Tmp_1896 > 0;
    havoc Tmp_1901;
    Tmp_1918 := Tmp_1901;
    assume {:nonnull} Tmp_1918 != 0;
    assume Tmp_1918 > 0;
    assume {:nonnull} Tmp_1922 != 0;
    assume Tmp_1922 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1893 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1916;
    assume {:nonnull} Tmp_1916 != 0;
    assume Tmp_1916 > 0;
    havoc Tmp_1940;
    Tmp_1905 := Tmp_1940;
    assume {:nonnull} Tmp_1893 != 0;
    assume Tmp_1893 > 0;
    assume {:nonnull} Tmp_1905 != 0;
    assume Tmp_1905 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1930 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1913;
    assume {:nonnull} Tmp_1913 != 0;
    assume Tmp_1913 > 0;
    havoc Tmp_1929;
    Tmp_1877 := Tmp_1929;
    assume {:nonnull} Tmp_1877 != 0;
    assume Tmp_1877 > 0;
    assume {:nonnull} Tmp_1930 != 0;
    assume Tmp_1930 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1950 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1884;
    assume {:nonnull} Tmp_1884 != 0;
    assume Tmp_1884 > 0;
    havoc Tmp_1935;
    Tmp_1948 := Tmp_1935;
    assume {:nonnull} Tmp_1948 != 0;
    assume Tmp_1948 > 0;
    assume {:nonnull} Tmp_1950 != 0;
    assume Tmp_1950 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1943 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1910;
    assume {:nonnull} Tmp_1910 != 0;
    assume Tmp_1910 > 0;
    havoc Tmp_1944;
    Tmp_1882 := Tmp_1944;
    assume {:nonnull} Tmp_1882 != 0;
    assume Tmp_1882 > 0;
    assume {:nonnull} Tmp_1943 != 0;
    assume Tmp_1943 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1888 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1906;
    assume {:nonnull} Tmp_1906 != 0;
    assume Tmp_1906 > 0;
    havoc Tmp_1933;
    Tmp_1900 := Tmp_1933;
    assume {:nonnull} Tmp_1888 != 0;
    assume Tmp_1888 > 0;
    assume {:nonnull} Tmp_1900 != 0;
    assume Tmp_1900 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    Tmp_1959 := Bpb__VCB(Vcb_66);
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1955;
    assume {:nonnull} Tmp_1955 != 0;
    assume Tmp_1955 > 0;
    havoc Tmp_1934;
    Tmp_1947 := Tmp_1934;
    assume {:nonnull} Tmp_1947 != 0;
    assume Tmp_1947 > 0;
    assume {:nonnull} Tmp_1959 != 0;
    assume Tmp_1959 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} StatusPartInfo >= 0;
    assume {:nonnull} PartitionInformation != 0;
    assume PartitionInformation > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} PartitionInformation != 0;
    assume PartitionInformation > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    Status_38 := -1073741489;
    goto L172;

  anon120_Then:
    goto L165;

  L165:
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} Status_38 >= 0;
    assume {:nonnull} Geometry != 0;
    assume Geometry > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto L216;

  L216:
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1942;
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    Tmp_1878 := SectorsPerFat__PACKED_BIOS_PARAMETER_BLOCK(Tmp_1942);
    assume {:nonnull} Tmp_1878 != 0;
    assume Tmp_1878 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1892;
    assume {:nonnull} Tmp_1892 != 0;
    assume Tmp_1892 > 0;
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    call {:si_unique_call 2396} sdv_1140 := ExAllocatePoolWithTag(17, 36, -747347642);
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    call {:si_unique_call 2397} sdv_RtlCopyMemory(0, 0, 36);
    goto L227;

  L227:
    assume {:nonnull} BootBcb != 0;
    assume BootBcb > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} BootBcb != 0;
    assume BootBcb > 0;
    goto L228;

  L228:
    call {:si_unique_call 2398} FatSetupAllocationSupport(IrpContext_107, Vcb_66);
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto L236;

  L236:
    call {:si_unique_call 2399} FatCreateRootDcb(IrpContext_107, Vcb_66);
    call {:si_unique_call 2400} FatLocateVolumeLabel(IrpContext_107, Vcb_66, Dirent_20, DirentBcb_9, ByteOffset_1);
    assume {:nonnull} Dirent_20 != 0;
    assume Dirent_20 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_20] != 0;
    assume {:nonnull} Dirent_20 != 0;
    assume Dirent_20 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_20] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_20] > 0;
    havoc Tmp_1899;
    assume {:nonnull} OemString_1 != 0;
    assume OemString_1 > 0;
    assume {:nonnull} OemString_1 != 0;
    assume OemString_1 > 0;
    assume {:nonnull} OemString_1 != 0;
    assume OemString_1 > 0;
    goto L265;

  L265:
    call {:si_unique_call 2401} Tmp_1924, Tmp_1936, Tmp_1961, Tmp_1963 := FatMountVolume_loop_L265(OemString_1, Dirent_20, Tmp_1924, Tmp_1936, Tmp_1961, Tmp_1963);
    goto L265_last;

  L265_last:
    assume {:CounterLoop 11} true;
    assume {:nonnull} OemString_1 != 0;
    assume OemString_1 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} OemString_1 != 0;
    assume OemString_1 > 0;
    havoc Tmp_1961;
    assume {:nonnull} Dirent_20 != 0;
    assume Dirent_20 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_20] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_20] > 0;
    havoc Tmp_1963;
    assume {:nonnull} Tmp_1963 != 0;
    assume Tmp_1963 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:nonnull} OemString_1 != 0;
    assume OemString_1 > 0;
    havoc Tmp_1936;
    assume {:nonnull} Dirent_20 != 0;
    assume Dirent_20 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_20] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_20] > 0;
    havoc Tmp_1924;
    assume {:nonnull} Tmp_1924 != 0;
    assume Tmp_1924 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    goto L268;

  L268:
    assume {:nonnull} OemString_1 != 0;
    assume OemString_1 > 0;
    goto L268_dummy;

  L268_dummy:
    assume false;
    return;

  anon153_Then:
    goto L266;

  L266:
    assume {:nonnull} UnicodeString_3 != 0;
    assume UnicodeString_3 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    havoc Tmp_1876;
    assume {:nonnull} Tmp_1876 != 0;
    assume Tmp_1876 > 0;
    havoc Tmp_1926;
    assume {:nonnull} UnicodeString_3 != 0;
    assume UnicodeString_3 > 0;
    call {:si_unique_call 2402} Status_38 := RtlOemStringToCountedUnicodeString(0, 0, 0);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} Status_38 >= 0;
    assume {:nonnull} UnicodeString_3 != 0;
    assume UnicodeString_3 > 0;
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    goto L279;

  L279:
    assume {:nonnull} ChangeCount != 0;
    assume ChangeCount > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    havoc Links_4;
    goto L281;

  L281:
    call {:si_unique_call 2403} Links_4, OldVcb, OldVpb_1, sdv_1160 := FatMountVolume_loop_L281(Links_4, sdv_1142, OldVcb, RealDevice_3, OldVpb_1, Vcb_66, sdv_1160, sdv_1167, Vpb_3);
    goto L281_last;

  L281_last:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    call {:si_unique_call 2404} sdv_1160 := sdv_containing_record(Links_4, 64);
    OldVcb := sdv_1160;
    assume {:nonnull} OldVcb != 0;
    assume OldVcb > 0;
    havoc OldVpb_1;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} OldVpb_1 == Vpb_3;
    goto L291;

  L291:
    assume {:nonnull} Links_4 != 0;
    assume Links_4 > 0;
    havoc Links_4;
    goto L291_dummy;

  L291_dummy:
    assume false;
    return;

  anon154_Then:
    assume {:partition} OldVpb_1 != Vpb_3;
    assume {:nonnull} OldVpb_1 != 0;
    assume OldVpb_1 > 0;
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} OldVcb != 0;
    assume OldVcb > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} OldVpb_1 != 0;
    assume OldVpb_1 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} OldVpb_1 != 0;
    assume OldVpb_1 > 0;
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    assume {:nonnull} OldVpb_1 != 0;
    assume OldVpb_1 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} sdv_1142 == 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} sdv_1167 == 0;
    DoARemount := 1;
    goto L282;

  L282:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} DoARemount != 0;
    assume {:nonnull} OldVcb != 0;
    assume OldVcb > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    assume {:nonnull} OldVcb != 0;
    assume OldVcb > 0;
    assume {:nonnull} OldVcb != 0;
    assume OldVcb > 0;
    assume {:nonnull} OldVpb_1 != 0;
    assume OldVpb_1 > 0;
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    assume {:nonnull} OldVcb != 0;
    assume OldVcb > 0;
    assume {:nonnull} OldVpb_1 != 0;
    assume OldVpb_1 > 0;
    havoc Tmp_1949;
    assume {:nonnull} Tmp_1949 != 0;
    assume Tmp_1949 > 0;
    assume {:nonnull} OldVcb != 0;
    assume OldVcb > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    assume {:nonnull} IrpContext_107 != 0;
    assume IrpContext_107 > 0;
    havoc vslice_dummy_var_1455;
    call {:si_unique_call 2405} sdv_1157 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1455);
    assume {:nonnull} sdv_1157 != 0;
    assume sdv_1157 > 0;
    IrpVpb := Vpb_unnamed_tag_23(MountVolume_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_1157)));
    assume {:nonnull} IrpVpb != 0;
    assume IrpVpb > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} IrpVpb != 0;
    assume IrpVpb > 0;
    goto L325;

  L325:
    Vpb_3 := 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    assume {:nonnull} FileSizes_2 != 0;
    assume FileSizes_2 > 0;
    assume {:nonnull} FileSizes_2 != 0;
    assume FileSizes_2 > 0;
    assume {:nonnull} FileSizes_2 != 0;
    assume FileSizes_2 > 0;
    assume {:nonnull} FileSizes_2 != 0;
    assume FileSizes_2 > 0;
    assume {:nonnull} FileSizes_2 != 0;
    assume FileSizes_2 > 0;
    assume {:nonnull} FileSizes_2 != 0;
    assume FileSizes_2 > 0;
    assume {:nonnull} FileSizes_2 != 0;
    assume FileSizes_2 > 0;
    call {:si_unique_call 2406} FatSetupAllocationSupport(IrpContext_107, OldVcb);
    call {:si_unique_call 2407} FatCheckDirtyBit(IrpContext_107, OldVcb);
    call {:si_unique_call 2408} sdv_1154 := FatIsMediaWriteProtected(IrpContext_107, TargetDeviceObject_2);
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} sdv_1154 != 0;
    assume {:nonnull} OldVcb != 0;
    assume OldVcb > 0;
    goto L348;

  L348:
    Status_38 := 0;
    goto L172;

  anon145_Then:
    assume {:partition} sdv_1154 == 0;
    assume {:nonnull} OldVcb != 0;
    assume OldVcb > 0;
    goto L348;

  anon157_Then:
    goto L325;

  anon139_Then:
    assume {:partition} DoARemount == 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    call {:si_unique_call 2409} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} TempDirent != 0;
    assume TempDirent > 0;
    call {:si_unique_call 2410} sdv_RtlCopyMemory(0, 0, 11);
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    havoc vslice_dummy_var_1456;
    call {:si_unique_call 2411} EaFcb_1 := FatCreateFcb(IrpContext_107, Vcb_66, vslice_dummy_var_1456, 0, 0, TempDirent, 0, 0, 1);
    assume {:nonnull} EaFcb_1 != 0;
    assume EaFcb_1 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto L351;

  L351:
    call {:si_unique_call 2412} FatCheckDirtyBit(IrpContext_107, Vcb_66);
    call {:si_unique_call 2413} sdv_1156 := FatIsMediaWriteProtected(IrpContext_107, TargetDeviceObject_2);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} sdv_1156 != 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto L360;

  L360:
    assume {:nonnull} RealDevice_3 != 0;
    assume RealDevice_3 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    call {:si_unique_call 2414} vslice_dummy_var_327 := FatToggleMediaEjectDisable(IrpContext_107, Vcb_66, 1);
    goto L361;

  L361:
    MountNewVolume := 1;
    Status_38 := 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    havoc Tmp_1891;
    assume {:nonnull} Tmp_1891 != 0;
    assume Tmp_1891 > 0;
    havoc RootDirectoryFile;
    call {:si_unique_call 2415} vslice_dummy_var_333 := sdv_ObReferenceObject(0);
    call {:si_unique_call 2416} vslice_dummy_var_328 := sdv_ObDereferenceObject(0);
    goto L172;

  anon158_Then:
    goto L361;

  anon147_Then:
    goto L361;

  anon146_Then:
    assume {:partition} sdv_1156 == 0;
    assume {:nonnull} Vcb_66 != 0;
    assume Vcb_66 > 0;
    goto L360;

  anon144_Then:
    goto L351;

  anon156_Then:
    assume {:partition} sdv_1167 != 0;
    goto L291;

  anon155_Then:
    assume {:partition} sdv_1142 != 0;
    goto L291;

  anon143_Then:
    goto L291;

  anon142_Then:
    goto L291;

  anon141_Then:
    goto L291;

  anon140_Then:
    goto L291;

  anon138_Then:
    goto L282;

  anon137_Then:
    assume {:partition} 0 > Status_38;
    goto L172;

  anon152_Then:
    goto L268;

  anon136_Then:
    goto L266;

  anon135_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_20] == 0;
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    goto L279;

  anon134_Then:
    goto L236;

  anon133_Then:
    goto L236;

  anon132_Then:
    goto L228;

  anon151_Then:
    assume {:nonnull} BootSector_1 != 0;
    assume BootSector_1 > 0;
    havoc Tmp_1925;
    assume {:nonnull} Tmp_1925 != 0;
    assume Tmp_1925 > 0;
    Tmp_1883 := Id__PACKED_BOOT_SECTOR_EX(Tmp_1925);
    assume {:nonnull} Tmp_1883 != 0;
    assume Tmp_1883 > 0;
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    goto L227;

  anon131_Then:
    goto L216;

  anon130_Then:
    goto L213;

  L213:
    Status_38 := -1073741489;
    goto L172;

  anon116_Then:
    assume {:partition} 0 > Status_38;
    goto L213;

  anon119_Then:
    goto L165;

  anon118_Then:
    goto L165;

  anon117_Then:
    goto L165;

  anon150_Then:
    assume {:partition} 0 > StatusPartInfo;
    goto L165;

  anon115_Then:
    assume {:partition} sdv_1162 == 0;
    goto L141;

  L141:
    Status_38 := -1073741489;
    goto L172;

  anon114_Then:
    goto L141;

  anon149_Then:
    goto L127;

  anon113_Then:
    goto L108;

  anon148_Then:
    assume {:partition} Tmp_1885 != 0;
    Tmp_1958 := 1;
    goto L466;

  anon110_Then:
    goto L45;

  anon109_Then:
    goto L43;

  anon107_Then:
    assume {:partition} 0 > Status_38;
    assume {:nonnull} IrpSp_22 != 0;
    assume IrpSp_22 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto L392;

  L392:
    Tmp_1868 := Status_38;
    goto L1;

  anon108_Then:
    assume {:nonnull} Vpb_3 != 0;
    assume Vpb_3 > 0;
    havoc Tmp_1873;
    assume {:nonnull} Tmp_1873 != 0;
    assume Tmp_1873 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} IrpContext_107 != 0;
    assume IrpContext_107 > 0;
    call {:si_unique_call 2417} sdv_1152 := corral_nondet();
    call {:si_unique_call 2418} ExRaiseStatus(sdv_1152);
    goto L392;

  anon159_Then:
    goto L392;
}



procedure {:origName "FatVerifyVolume"} FatVerifyVolume(actual_IrpContext_108: int, actual_Irp_42: int) returns (Tmp_1964: int);
  modifies alloc, markedPending, locked, queued, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatVerifyVolume"} FatVerifyVolume(actual_IrpContext_108: int, actual_Irp_42: int) returns (Tmp_1964: int)
{
  var {:pointer} Fcb_41: int;
  var {:scalar} sdv_1169: int;
  var {:pointer} sdv_1170: int;
  var {:pointer} Vpb_4: int;
  var {:scalar} sdv_1171: int;
  var {:pointer} Tmp_1965: int;
  var {:pointer} Tmp_1966: int;
  var {:scalar} sdv_1173: int;
  var {:scalar} sdv_1174: int;
  var {:pointer} Tmp_1967: int;
  var {:pointer} Tmp_1968: int;
  var {:pointer} Tmp_1969: int;
  var {:scalar} Tmp_1970: int;
  var {:pointer} RootDirectory: int;
  var {:pointer} Tmp_1971: int;
  var {:pointer} Tmp_1972: int;
  var {:pointer} Tmp_1973: int;
  var {:scalar} RootDirectorySize: int;
  var {:scalar} Status_39: int;
  var {:scalar} Iosb_19: int;
  var {:dopa} {:scalar} ChangeCount_1: int;
  var {:pointer} Tmp_1974: int;
  var {:pointer} Tmp_1975: int;
  var {:pointer} Tmp_1976: int;
  var {:scalar} PartitionInformation_1: int;
  var {:pointer} IrpSp_23: int;
  var {:pointer} Tmp_1977: int;
  var {:pointer} Tmp_1978: int;
  var {:pointer} Tmp_1979: int;
  var {:scalar} Tmp_1980: int;
  var {:pointer} VolDo_1: int;
  var {:scalar} VerifyAlreadyDone: int;
  var {:pointer} Tmp_1981: int;
  var {:pointer} Tmp_1982: int;
  var {:pointer} Tmp_1983: int;
  var {:pointer} Tmp_1984: int;
  var {:pointer} Tmp_1985: int;
  var {:pointer} Tmp_1986: int;
  var {:scalar} ClearVerify: int;
  var {:scalar} sdv_1183: int;
  var {:pointer} Vcb_67: int;
  var {:scalar} sdv_1184: int;
  var {:scalar} Tmp_1987: int;
  var {:pointer} Tmp_1988: int;
  var {:pointer} Tmp_1989: int;
  var {:pointer} Tmp_1990: int;
  var {:pointer} Tmp_1991: int;
  var {:scalar} Tmp_1992: int;
  var {:pointer} BootSector_2: int;
  var {:pointer} Tmp_1993: int;
  var {:pointer} Tmp_1994: int;
  var {:pointer} Tmp_1995: int;
  var {:scalar} RootDirectoryLbo: int;
  var {:pointer} Tmp_1996: int;
  var {:scalar} Tmp_1997: int;
  var {:pointer} Tmp_1998: int;
  var {:pointer} Tmp_1999: int;
  var {:pointer} Tmp_2000: int;
  var {:pointer} Tmp_2001: int;
  var {:pointer} sdv_1188: int;
  var {:pointer} Tmp_2002: int;
  var {:pointer} Tmp_2003: int;
  var {:scalar} DiskGeometry: int;
  var {:pointer} Tmp_2004: int;
  var {:pointer} Tmp_2005: int;
  var {:pointer} Tmp_2006: int;
  var {:scalar} sdv_1190: int;
  var {:pointer} Tmp_2007: int;
  var {:pointer} Tmp_2008: int;
  var {:pointer} Fcb_42: int;
  var {:pointer} Tmp_2010: int;
  var {:scalar} sdv_1191: int;
  var {:pointer} Tmp_2011: int;
  var {:pointer} Tmp_2012: int;
  var {:pointer} Tmp_2013: int;
  var {:pointer} Tmp_2014: int;
  var {:pointer} Tmp_2015: int;
  var {:dopa} {:scalar} LabelFound_1: int;
  var {:scalar} sdv_1193: int;
  var {:pointer} Tmp_2016: int;
  var {:scalar} ReleaseEntireVolume: int;
  var {:scalar} Tmp_2017: int;
  var {:pointer} Tmp_2018: int;
  var {:pointer} Tmp_2019: int;
  var {:pointer} Tmp_2020: int;
  var {:scalar} sdv_1196: int;
  var {:pointer} Fcb_43: int;
  var {:scalar} AllowRawMount: int;
  var {:pointer} Tmp_2021: int;
  var {:pointer} Tmp_2022: int;
  var {:dopa} {:scalar} RootDirectoryCluster: int;
  var {:pointer} Tmp_2023: int;
  var {:scalar} Tmp_2024: int;
  var {:pointer} Tmp_2025: int;
  var {:pointer} Tmp_2026: int;
  var {:scalar} SectorSize_4: int;
  var {:scalar} SerialNumber: int;
  var {:pointer} Tmp_2027: int;
  var {:pointer} Tmp_2028: int;
  var {:pointer} Tmp_2029: int;
  var {:scalar} Bpb_1: int;
  var {:pointer} Tmp_2030: int;
  var {:pointer} Tmp_2031: int;
  var {:pointer} Tmp_2032: int;
  var {:pointer} Tmp_2033: int;
  var {:scalar} sdv_1201: int;
  var {:pointer} Tmp_2034: int;
  var {:pointer} Tmp_2035: int;
  var {:pointer} Tmp_2036: int;
  var {:pointer} Tmp_2037: int;
  var {:pointer} IrpContext_108: int;
  var {:pointer} Irp_42: int;
  var boogieTmp: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_1457: int;
  var vslice_dummy_var_1458: int;
  var vslice_dummy_var_1459: int;
  var vslice_dummy_var_1460: int;
  var vslice_dummy_var_1461: int;
  var vslice_dummy_var_1462: int;
  var vslice_dummy_var_1463: int;
  var vslice_dummy_var_1464: int;
  var vslice_dummy_var_1465: int;
  var vslice_dummy_var_1466: int;
  var vslice_dummy_var_1467: int;
  var vslice_dummy_var_1468: int;
  var vslice_dummy_var_1469: int;

  anon0:
    call {:si_unique_call 2419} Iosb_19 := __HAVOC_malloc(12);
    call {:si_unique_call 2420} ChangeCount_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2421} PartitionInformation_1 := __HAVOC_malloc(108);
    call {:si_unique_call 2422} DiskGeometry := __HAVOC_malloc(36);
    call {:si_unique_call 2423} LabelFound_1 := __HAVOC_malloc(4);
    call {:si_unique_call 2424} RootDirectoryCluster := __HAVOC_malloc(4);
    call {:si_unique_call 2425} Bpb_1 := __HAVOC_malloc(88);
    IrpContext_108 := actual_IrpContext_108;
    Irp_42 := actual_Irp_42;
    call {:si_unique_call 2426} Tmp_1965 := __HAVOC_malloc(16);
    call {:si_unique_call 2427} Tmp_1967 := __HAVOC_malloc(8);
    call {:si_unique_call 2428} Tmp_1974 := __HAVOC_malloc(8);
    call {:si_unique_call 2429} Tmp_1975 := __HAVOC_malloc(8);
    call {:si_unique_call 2430} Tmp_1981 := __HAVOC_malloc(8);
    call {:si_unique_call 2431} Tmp_1982 := __HAVOC_malloc(16);
    call {:si_unique_call 2432} Tmp_1994 := __HAVOC_malloc(8);
    call {:si_unique_call 2433} Tmp_1998 := __HAVOC_malloc(8);
    call {:si_unique_call 2434} Tmp_2002 := __HAVOC_malloc(4);
    call {:si_unique_call 2435} Tmp_2005 := __HAVOC_malloc(8);
    call {:si_unique_call 2436} Tmp_2006 := __HAVOC_malloc(8);
    call {:si_unique_call 2437} Tmp_2010 := __HAVOC_malloc(4);
    call {:si_unique_call 2438} Tmp_2014 := __HAVOC_malloc(8);
    call {:si_unique_call 2439} Tmp_2019 := __HAVOC_malloc(16);
    call {:si_unique_call 2440} Tmp_2023 := __HAVOC_malloc(4);
    call {:si_unique_call 2441} Tmp_2026 := __HAVOC_malloc(8);
    call {:si_unique_call 2442} Tmp_2032 := __HAVOC_malloc(16);
    call {:si_unique_call 2443} Tmp_2033 := __HAVOC_malloc(8);
    Status_39 := 0;
    RootDirectory := 0;
    BootSector_2 := 0;
    ClearVerify := 0;
    ReleaseEntireVolume := 0;
    VerifyAlreadyDone := 0;
    assume {:nonnull} ChangeCount_1 != 0;
    assume ChangeCount_1 > 0;
    call {:si_unique_call 2444} IrpSp_23 := sdv_IoGetCurrentIrpStackLocation(Irp_42);
    assume {:nonnull} IrpSp_23 != 0;
    assume IrpSp_23 > 0;
    havoc VolDo_1;
    assume {:nonnull} IrpSp_23 != 0;
    assume IrpSp_23 > 0;
    havoc Vpb_4;
    assume {:nonnull} VolDo_1 != 0;
    assume VolDo_1 > 0;
    Vcb_67 := Vcb__VOLUME_DEVICE_OBJECT(VolDo_1);
    assume {:nonnull} IrpContext_108 != 0;
    assume IrpContext_108 > 0;
    assume {:nonnull} IrpContext_108 != 0;
    assume IrpContext_108 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} IrpContext_108 != 0;
    assume IrpContext_108 > 0;
    havoc Tmp_2017;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} Tmp_2017 == 0;
    Tmp_1997 := 0;
    goto L423;

  L423:
    call {:si_unique_call 2445} vslice_dummy_var_341 := ExAcquireResourceExclusiveLite(0, Tmp_1997);
    call {:si_unique_call 2446} vslice_dummy_var_334 := FatAcquireExclusiveVcb(IrpContext_108, Vcb_67);
    assume {:nonnull} IrpSp_23 != 0;
    assume IrpSp_23 > 0;
    havoc Tmp_2024;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} Tmp_2024 == 0;
    AllowRawMount := 0;
    goto L427;

  L427:
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    call {:si_unique_call 2447} boogieTmp := sdv_KeGetCurrentThread();
    assume {:nonnull} Vpb_4 != 0;
    assume Vpb_4 > 0;
    havoc Tmp_1984;
    assume {:nonnull} Tmp_1984 != 0;
    assume Tmp_1984 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1457;
    call {:si_unique_call 2448} vslice_dummy_var_335 := FatPerformDevIoCtrl(IrpContext_108, 458824, vslice_dummy_var_1457, PartitionInformation_1, 144, 0, 1, Iosb_19);
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1458;
    call {:si_unique_call 2449} Status_39 := FatPerformDevIoCtrl(IrpContext_108, 477184, vslice_dummy_var_1458, ChangeCount_1, 4, 0, 1, Iosb_19);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} Status_39 >= 0;
    goto L103;

  L103:
    assume {:nonnull} Iosb_19 != 0;
    assume Iosb_19 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} ChangeCount_1 != 0;
    assume ChangeCount_1 > 0;
    goto L104;

  L104:
    assume {:nonnull} ChangeCount_1 != 0;
    assume ChangeCount_1 > 0;
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc Tmp_1993;
    assume {:nonnull} Tmp_1993 != 0;
    assume Tmp_1993 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1459;
    call {:si_unique_call 2450} sdv_1196 := FatScanForDataTrack(IrpContext_108, vslice_dummy_var_1459);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} sdv_1196 == 0;
    Status_39 := -1073741806;
    goto L116;

  L116:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Status_39 != 0;
    Tmp_1992 := 0;
    goto L436;

  L436:
    call {:si_unique_call 2451} FatCloseEaFile(IrpContext_108, Vcb_67, Tmp_1992);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} VerifyAlreadyDone != 0;
    goto L124;

  L124:
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    Status_39 := -1073741806;
    goto L127;

  L127:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} ClearVerify != 0;
    assume {:nonnull} Vpb_4 != 0;
    assume Vpb_4 > 0;
    havoc Tmp_1979;
    assume {:nonnull} Vpb_4 != 0;
    assume Vpb_4 > 0;
    havoc Tmp_2034;
    assume {:nonnull} Tmp_1979 != 0;
    assume Tmp_1979 > 0;
    assume {:nonnull} Tmp_2034 != 0;
    assume Tmp_2034 > 0;
    goto L128;

  L128:
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} BootSector_2 != 0;
    call {:si_unique_call 2452} sdv_ExFreePool(0);
    goto L130;

  L130:
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} RootDirectory != 0;
    call {:si_unique_call 2453} sdv_ExFreePool(0);
    goto L134;

  L134:
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} ReleaseEntireVolume != 0;
    Fcb_42 := 0;
    goto L144;

  L144:
    call {:si_unique_call 2454} Fcb_42 := FatVerifyVolume_loop_L144(Vcb_67, Fcb_42, IrpContext_108);
    goto L144_last;

  L144_last:
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1467;
    call {:si_unique_call 2498} Fcb_42 := FatGetNextFcbBottomUp(IrpContext_108, Fcb_42, vslice_dummy_var_1467);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} Fcb_42 != 0;
    call {:si_unique_call 2455} ExReleaseResourceLite(0);
    goto anon108_Else_dummy;

  anon108_Else_dummy:
    assume false;
    return;

  anon108_Then:
    assume {:partition} Fcb_42 == 0;
    call {:si_unique_call 2456} ExReleaseResourceLite(0);
    goto L139;

  L139:
    call {:si_unique_call 2457} ExReleaseResourceLite(0);
    call {:si_unique_call 2458} ExReleaseResourceLite(0);
    call {:si_unique_call 2459} sdv_1174 := sdv_AbnormalTermination();
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} sdv_1174 != 0;
    goto L165;

  L165:
    Tmp_1964 := Status_39;
    goto L1;

  L1:
    return;

  anon109_Then:
    assume {:partition} sdv_1174 == 0;
    call {:si_unique_call 2460} FatCompleteRequest_Real(IrpContext_108, Irp_42, Status_39);
    goto L165;

  anon141_Then:
    assume {:partition} ReleaseEntireVolume == 0;
    goto L139;

  anon107_Then:
    assume {:partition} RootDirectory == 0;
    goto L134;

  anon106_Then:
    assume {:partition} BootSector_2 == 0;
    goto L130;

  anon105_Then:
    assume {:partition} ClearVerify == 0;
    goto L128;

  anon103_Then:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Status_39 == -1073741806;
    Fcb_41 := 0;
    call {:si_unique_call 2461} vslice_dummy_var_342 := FatAcquireExclusiveVcb(IrpContext_108, Vcb_67);
    goto L172;

  L172:
    call {:si_unique_call 2462} Fcb_41, vslice_dummy_var_336 := FatVerifyVolume_loop_L172(Fcb_41, Vcb_67, IrpContext_108, vslice_dummy_var_336);
    goto L172_last;

  L172_last:
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1468;
    call {:si_unique_call 2499} Fcb_41 := FatGetNextFcbBottomUp(IrpContext_108, Fcb_41, vslice_dummy_var_1468);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} Fcb_41 != 0;
    call {:si_unique_call 2463} vslice_dummy_var_336 := FatAcquireExclusiveFcb(IrpContext_108, Fcb_41);
    goto anon111_Else_dummy;

  anon111_Else_dummy:
    assume false;
    return;

  anon111_Then:
    assume {:partition} Fcb_41 == 0;
    ReleaseEntireVolume := 1;
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1460;
    call {:si_unique_call 2464} FatPurgeReferencedFileObjects(IrpContext_108, vslice_dummy_var_1460, 0);
    call {:si_unique_call 2465} vslice_dummy_var_337 := corral_nondet();
    call {:si_unique_call 2466} FatTearDownAllocationSupport(IrpContext_108, Vcb_67);
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    ClearVerify := 1;
    goto L127;

  anon104_Then:
    assume {:partition} Status_39 != -1073741806;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} VerifyAlreadyDone == 0;
    Fcb_43 := 0;
    call {:si_unique_call 2467} vslice_dummy_var_343 := FatAcquireExclusiveVcb(IrpContext_108, Vcb_67);
    goto L197;

  L197:
    call {:si_unique_call 2468} Fcb_43, vslice_dummy_var_338 := FatVerifyVolume_loop_L197(Vcb_67, Fcb_43, IrpContext_108, vslice_dummy_var_338);
    goto L197_last;

  L197_last:
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1469;
    call {:si_unique_call 2500} Fcb_43 := FatGetNextFcbBottomUp(IrpContext_108, Fcb_43, vslice_dummy_var_1469);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} Fcb_43 != 0;
    call {:si_unique_call 2469} vslice_dummy_var_338 := FatAcquireExclusiveFcb(IrpContext_108, Fcb_43);
    goto anon112_Else_dummy;

  anon112_Else_dummy:
    assume false;
    return;

  anon112_Then:
    assume {:partition} Fcb_43 == 0;
    ReleaseEntireVolume := 1;
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1461;
    call {:si_unique_call 2470} FatPurgeReferencedFileObjects(IrpContext_108, vslice_dummy_var_1461, 1);
    call {:si_unique_call 2471} vslice_dummy_var_339 := FatFlushFat(IrpContext_108, Vcb_67);
    call {:si_unique_call 2472} vslice_dummy_var_340 := corral_nondet();
    call {:si_unique_call 2473} FatTearDownAllocationSupport(IrpContext_108, Vcb_67);
    call {:si_unique_call 2474} FatSetupAllocationSupport(IrpContext_108, Vcb_67);
    call {:si_unique_call 2475} FatCheckDirtyBit(IrpContext_108, Vcb_67);
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1462;
    call {:si_unique_call 2476} sdv_1191 := FatIsMediaWriteProtected(IrpContext_108, vslice_dummy_var_1462);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} sdv_1191 != 0;
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    goto L230;

  L230:
    ClearVerify := 1;
    goto L127;

  anon113_Then:
    assume {:partition} sdv_1191 == 0;
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    goto L230;

  anon110_Then:
    assume {:partition} VerifyAlreadyDone != 0;
    goto L127;

  anon102_Then:
    assume {:partition} VerifyAlreadyDone == 0;
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1463;
    call {:si_unique_call 2477} FatMarkFcbCondition(IrpContext_108, vslice_dummy_var_1463, 3, 1);
    goto L124;

  anon101_Then:
    assume {:partition} Status_39 == 0;
    Tmp_1992 := 1;
    goto L436;

  anon100_Then:
    assume {:partition} sdv_1196 != 0;
    goto L107;

  L107:
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc vslice_dummy_var_1464;
    call {:si_unique_call 2478} Status_39 := FatPerformDevIoCtrl(IrpContext_108, 458752, vslice_dummy_var_1464, DiskGeometry, 24, 0, 1, 0);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} Status_39 >= 0;
    goto L234;

  L234:
    assume {:nonnull} Vcb_67 != 0;
    assume Vcb_67 > 0;
    havoc SectorSize_4;
    assume {:nonnull} DiskGeometry != 0;
    assume DiskGeometry > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    Status_39 := -1073741806;
    goto L116;

  anon140_Then:
    Tmp_1980 := BAND(SectorSize_4 + 4096 - 1, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 2479} sdv_1188 := ExAllocatePoolWithTag(20, Tmp_1980, -210476730);
    BootSector_2 := sdv_1188;
    call {:si_unique_call 2480} sdv_1190 := FatPerformVerifyDiskRead(IrpContext_108, Vcb_67, BootSector_2, 0, SectorSize_4, AllowRawMount);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} sdv_1190 != 0;
    call {:si_unique_call 2481} sdv_1184 := FatIsBootSectorFat(BootSector_2);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} sdv_1184 != 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2004 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2004 != 0;
    assume Tmp_2004 > 0;
    Tmp_2011 := SectorsPerFat__PACKED_BIOS_PARAMETER_BLOCK(Tmp_2004);
    assume {:nonnull} Tmp_2011 != 0;
    assume Tmp_2011 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2022 := Id__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2022 != 0;
    assume Tmp_2022 > 0;
    havoc SerialNumber;
    goto L257;

  L257:
    assume {:nonnull} Vpb_4 != 0;
    assume Vpb_4 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    Status_39 := -1073741806;
    goto L116;

  anon118_Then:
    call {:si_unique_call 2482} sdv_RtlZeroMemory(0, 48);
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_1973 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_1973 != 0;
    assume Tmp_1973 > 0;
    havoc Tmp_1967;
    Tmp_2013 := Tmp_1967;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_2013 != 0;
    assume Tmp_2013 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2028 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2028 != 0;
    assume Tmp_2028 > 0;
    havoc Tmp_2010;
    Tmp_1990 := Tmp_2010;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_1990 != 0;
    assume Tmp_1990 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2029 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2029 != 0;
    assume Tmp_2029 > 0;
    havoc Tmp_1998;
    Tmp_2007 := Tmp_1998;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_2007 != 0;
    assume Tmp_2007 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2021 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2021 != 0;
    assume Tmp_2021 > 0;
    havoc Tmp_2002;
    Tmp_2008 := Tmp_2002;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_2008 != 0;
    assume Tmp_2008 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_1995 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_1995 != 0;
    assume Tmp_1995 > 0;
    havoc Tmp_2033;
    Tmp_2025 := Tmp_2033;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_2025 != 0;
    assume Tmp_2025 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_1996 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_1996 != 0;
    assume Tmp_1996 > 0;
    havoc Tmp_1981;
    Tmp_2020 := Tmp_1981;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_2020 != 0;
    assume Tmp_2020 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_1978 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_1978 != 0;
    assume Tmp_1978 > 0;
    havoc Tmp_2023;
    Tmp_1969 := Tmp_2023;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_1969 != 0;
    assume Tmp_1969 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2000 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2000 != 0;
    assume Tmp_2000 > 0;
    havoc Tmp_1994;
    Tmp_2018 := Tmp_1994;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_2018 != 0;
    assume Tmp_2018 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_1991 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_1991 != 0;
    assume Tmp_1991 > 0;
    havoc Tmp_2026;
    Tmp_1988 := Tmp_2026;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_1988 != 0;
    assume Tmp_1988 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_1976 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_1976 != 0;
    assume Tmp_1976 > 0;
    havoc Tmp_2014;
    Tmp_1972 := Tmp_2014;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_1972 != 0;
    assume Tmp_1972 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2036 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2036 != 0;
    assume Tmp_2036 > 0;
    havoc Tmp_2032;
    Tmp_1986 := Tmp_2032;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_1986 != 0;
    assume Tmp_1986 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2015 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2015 != 0;
    assume Tmp_2015 > 0;
    havoc Tmp_2019;
    Tmp_1989 := Tmp_2019;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_1989 != 0;
    assume Tmp_1989 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_1983 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_1983 != 0;
    assume Tmp_1983 > 0;
    havoc Tmp_1982;
    Tmp_1968 := Tmp_1982;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_1968 != 0;
    assume Tmp_1968 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_1971 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_1971 != 0;
    assume Tmp_1971 > 0;
    havoc Tmp_2005;
    Tmp_2016 := Tmp_2005;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_2016 != 0;
    assume Tmp_2016 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2003 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2003 != 0;
    assume Tmp_2003 > 0;
    havoc Tmp_2006;
    Tmp_1977 := Tmp_2006;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_1977 != 0;
    assume Tmp_1977 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2031 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2031 != 0;
    assume Tmp_2031 > 0;
    havoc Tmp_1965;
    Tmp_1966 := Tmp_1965;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_1966 != 0;
    assume Tmp_1966 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_1985 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_1985 != 0;
    assume Tmp_1985 > 0;
    havoc Tmp_1974;
    Tmp_2037 := Tmp_1974;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_2037 != 0;
    assume Tmp_2037 > 0;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_1999 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_1999 != 0;
    assume Tmp_1999 > 0;
    havoc Tmp_1975;
    Tmp_2001 := Tmp_1975;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} Tmp_2001 != 0;
    assume Tmp_2001 > 0;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    goto L282;

  L282:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} sdv_1201 != 0;
    Status_39 := -1073741806;
    goto L116;

  anon119_Then:
    assume {:partition} sdv_1201 == 0;
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    havoc RootDirectorySize;
    goto L295;

  L295:
    Tmp_1987 := BAND(RootDirectorySize + 4096 - 1, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 2483} sdv_1170 := ExAllocatePoolWithTag(20, Tmp_1987, -227253946);
    RootDirectory := sdv_1170;
    assume {:nonnull} BootSector_2 != 0;
    assume BootSector_2 > 0;
    Tmp_2030 := PackedBpb__PACKED_BOOT_SECTOR(BootSector_2);
    assume {:nonnull} Tmp_2030 != 0;
    assume Tmp_2030 > 0;
    Tmp_2027 := SectorsPerFat__PACKED_BIOS_PARAMETER_BLOCK(Tmp_2030);
    assume {:nonnull} Tmp_2027 != 0;
    assume Tmp_2027 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    assume {:nonnull} RootDirectoryCluster != 0;
    assume RootDirectoryCluster > 0;
    goto L323;

  L323:
    call {:si_unique_call 2484} sdv_1171, Status_39, sdv_1183, RootDirectoryLbo := FatVerifyVolume_loop_L323(Vpb_4, sdv_1171, RootDirectory, RootDirectorySize, Status_39, sdv_1183, Vcb_67, RootDirectoryLbo, LabelFound_1, AllowRawMount, RootDirectoryCluster, IrpContext_108);
    goto L323_last;

  L323_last:
    assume {:nonnull} RootDirectoryCluster != 0;
    assume RootDirectoryCluster > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    call {:si_unique_call 2485} RootDirectoryLbo := corral_nondet();
    call {:si_unique_call 2486} sdv_1171 := FatPerformVerifyDiskRead(IrpContext_108, Vcb_67, RootDirectory, RootDirectoryLbo, RootDirectorySize, AllowRawMount);
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} sdv_1171 != 0;
    call {:si_unique_call 2487} Status_39 := FatSearchBufferForLabel(IrpContext_108, Vpb_4, RootDirectory, RootDirectorySize, LabelFound_1);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} Status_39 >= 0;
    assume {:nonnull} LabelFound_1 != 0;
    assume LabelFound_1 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} RootDirectoryCluster != 0;
    assume RootDirectoryCluster > 0;
    havoc vslice_dummy_var_1465;
    call {:si_unique_call 2488} FatVerifyLookupFatEntry(IrpContext_108, Vcb_67, vslice_dummy_var_1465, RootDirectoryCluster);
    assume {:nonnull} RootDirectoryCluster != 0;
    assume RootDirectoryCluster > 0;
    havoc vslice_dummy_var_1466;
    call {:si_unique_call 2489} sdv_1183 := FatInterpretClusterType(Vcb_67, vslice_dummy_var_1466);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} sdv_1183 != 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} sdv_1183 != 1;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} sdv_1183 == 2;
    goto L347;

  L347:
    assume {:nonnull} IrpContext_108 != 0;
    assume IrpContext_108 > 0;
    call {:si_unique_call 2490} ExRaiseStatus(-1073741566);
    goto L347_dummy;

  L347_dummy:
    assume false;
    return;

  anon133_Then:
    assume {:partition} sdv_1183 != 2;
    goto anon133_Then_dummy;

  anon133_Then_dummy:
    assume false;
    return;

  anon134_Then:
    assume {:partition} sdv_1183 == 1;
    goto L347;

  anon131_Then:
    assume {:partition} sdv_1183 == 0;
    goto L347;

  anon130_Then:
    goto L324;

  L324:
    assume {:nonnull} RootDirectoryCluster != 0;
    assume RootDirectoryCluster > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} Vpb_4 != 0;
    assume Vpb_4 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    Status_39 := -1073741806;
    goto L116;

  anon132_Then:
    goto L116;

  anon127_Then:
    goto L116;

  anon129_Then:
    assume {:partition} 0 > Status_39;
    goto L116;

  anon128_Then:
    assume {:partition} sdv_1171 == 0;
    Status_39 := -1073741806;
    goto L116;

  anon126_Then:
    goto L324;

  anon144_Then:
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    havoc Tmp_1970;
    goto L305;

  L305:
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    havoc RootDirectoryLbo;
    call {:si_unique_call 2491} sdv_1193 := FatPerformVerifyDiskRead(IrpContext_108, Vcb_67, RootDirectory, RootDirectoryLbo, RootDirectorySize, AllowRawMount);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} sdv_1193 != 0;
    call {:si_unique_call 2492} Status_39 := FatSearchBufferForLabel(IrpContext_108, Vpb_4, RootDirectory, RootDirectorySize, LabelFound_1);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} Status_39 >= 0;
    assume {:nonnull} LabelFound_1 != 0;
    assume LabelFound_1 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Vpb_4 != 0;
    assume Vpb_4 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    Status_39 := -1073741806;
    goto L116;

  anon125_Then:
    goto L116;

  anon124_Then:
    goto L116;

  anon123_Then:
    assume {:partition} 0 > Status_39;
    goto L116;

  anon122_Then:
    assume {:partition} sdv_1193 == 0;
    Status_39 := -1073741806;
    goto L116;

  anon121_Then:
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    havoc Tmp_1970;
    goto L305;

  anon120_Then:
    assume {:nonnull} Bpb_1 != 0;
    assume Bpb_1 > 0;
    havoc RootDirectorySize;
    goto L295;

  anon143_Then:
    goto L282;

  anon142_Then:
    Tmp_2035 := BootSector_2;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    Tmp_2012 := Id__PACKED_BOOT_SECTOR_EX(Tmp_2035);
    assume {:nonnull} Tmp_2012 != 0;
    assume Tmp_2012 > 0;
    havoc SerialNumber;
    goto L257;

  anon117_Then:
    assume {:partition} sdv_1184 == 0;
    Status_39 := -1073741806;
    goto L116;

  anon116_Then:
    assume {:partition} sdv_1190 == 0;
    Status_39 := -1073741806;
    goto L116;

  anon114_Then:
    assume {:partition} 0 > Status_39;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} AllowRawMount != 0;
    Status_39 := -1073741806;
    goto L116;

  anon115_Then:
    assume {:partition} AllowRawMount == 0;
    assume {:nonnull} IrpContext_108 != 0;
    assume IrpContext_108 > 0;
    call {:si_unique_call 2493} sdv_1169 := corral_nondet();
    call {:si_unique_call 2494} ExRaiseStatus(sdv_1169);
    goto L234;

  anon139_Then:
    goto L107;

  anon99_Then:
    goto L104;

  anon97_Then:
    assume {:partition} 0 > Status_39;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} AllowRawMount != 0;
    Status_39 := -1073741806;
    goto L116;

  anon98_Then:
    assume {:partition} AllowRawMount == 0;
    assume {:nonnull} IrpContext_108 != 0;
    assume IrpContext_108 > 0;
    call {:si_unique_call 2495} sdv_1173 := corral_nondet();
    call {:si_unique_call 2496} ExRaiseStatus(sdv_1173);
    goto L103;

  anon138_Then:
    VerifyAlreadyDone := 1;
    Status_39 := 0;
    goto L116;

  anon137_Then:
    assume {:partition} Tmp_2024 != 0;
    AllowRawMount := 1;
    goto L427;

  anon136_Then:
    assume {:partition} Tmp_2017 != 0;
    Tmp_1997 := 1;
    goto L423;

  anon135_Then:
    call {:si_unique_call 2497} Status_39 := FatFsdPostRequest(IrpContext_108, Irp_42);
    Tmp_1964 := Status_39;
    goto L1;
}



procedure {:origName "FatFsdFileSystemControl"} FatFsdFileSystemControl(actual_VolumeDeviceObject_6: int, actual_Irp_43: int) returns (Tmp_2038: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking, yogi_error, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdFileSystemControl"} FatFsdFileSystemControl(actual_VolumeDeviceObject_6: int, actual_Irp_43: int) returns (Tmp_2038: int)
{
  var {:scalar} TopLevel_3: int;
  var {:pointer} sdv_1204: int;
  var {:scalar} Status_40: int;
  var {:scalar} Wait_9: int;
  var {:pointer} IrpSp_24: int;
  var {:pointer} IrpContext_109: int;
  var {:pointer} VolumeDeviceObject_6: int;
  var {:pointer} Irp_43: int;

  anon0:
    VolumeDeviceObject_6 := actual_VolumeDeviceObject_6;
    Irp_43 := actual_Irp_43;
    IrpContext_109 := 0;
    call {:si_unique_call 2501} sdv_1204 := sdv_IoGetCurrentIrpStackLocation(Irp_43);
    assume {:nonnull} sdv_1204 != 0;
    assume sdv_1204 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 2502} Wait_9 := corral_nondet();
    goto L19;

  L19:
    call {:si_unique_call 2503} KeEnterCriticalRegion();
    call {:si_unique_call 2504} TopLevel_3 := FatIsIrpTopLevel(Irp_43);
    call {:si_unique_call 2505} IrpSp_24 := sdv_IoGetCurrentIrpStackLocation(Irp_43);
    assume {:nonnull} IrpSp_24 != 0;
    assume IrpSp_24 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L55;

  L55:
    assume {:nonnull} IrpSp_24 != 0;
    assume IrpSp_24 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} IrpSp_24 != 0;
    assume IrpSp_24 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} IrpSp_24 != 0;
    assume IrpSp_24 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 2506} Status_40 := FatInvalidateVolumes(Irp_43);
    goto L44;

  L44:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} TopLevel_3 != 0;
    goto L45;

  L45:
    call {:si_unique_call 2507} KeLeaveCriticalRegion();
    Tmp_2038 := Status_40;
    call {:si_unique_call 2508} SLIC_FatFsdFileSystemControl_exit(strConst__li2bpl2, Tmp_2038);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} TopLevel_3 == 0;
    goto L45;

  anon23_Then:
    goto L56;

  L56:
    call {:si_unique_call 2509} IrpContext_109 := FatCreateIrpContext(Irp_43, Wait_9);
    call {:si_unique_call 2510} Status_40 := FatCommonFileSystemControl(IrpContext_109, Irp_43);
    goto L44;

  anon22_Then:
    goto L56;

  anon21_Then:
    goto L56;

  anon19_Then:
    assume {:nonnull} IrpSp_24 != 0;
    assume IrpSp_24 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L56;

  anon20_Then:
    goto L55;

  anon17_Then:
    Wait_9 := 1;
    goto L19;
}



procedure {:origName "FatLookupMcbEntry"} FatLookupMcbEntry(actual_Vcb_68: int, actual_Mcb_6: int, actual_Vbo_11: int, actual_Lbo_15: int, actual_SectorCount_2: int, actual_Index_6: int) returns (Tmp_2040: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLookupMcbEntry"} FatLookupMcbEntry(actual_Vcb_68: int, actual_Mcb_6: int, actual_Vbo_11: int, actual_Lbo_15: int, actual_SectorCount_2: int, actual_Index_6: int) returns (Tmp_2040: int)
{
  var {:dopa} {:scalar} LiSectorCount: int;
  var {:scalar} Remainder: int;
  var {:scalar} LiLbo_1: int;
  var {:scalar} Results_1: int;
  var {:pointer} Lbo_15: int;
  var {:pointer} SectorCount_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_344: int;

  anon0:
    call {:si_unique_call 2511} LiSectorCount := __HAVOC_malloc(4);
    Lbo_15 := actual_Lbo_15;
    SectorCount_2 := actual_SectorCount_2;
    LiLbo_1 := 0;
    assume {:nonnull} LiSectorCount != 0;
    assume LiSectorCount > 0;
    call {:si_unique_call 2512} Remainder := corral_nondet();
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} SectorCount_2 != 0;
    goto L13;

  L13:
    call {:si_unique_call 2513} vslice_dummy_var_344 := corral_nondet();
    call {:si_unique_call 2514} Results_1 := corral_nondet();
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} LiLbo_1 != -1;
    assume {:nonnull} Lbo_15 != 0;
    assume Lbo_15 > 0;
    call {:si_unique_call 2515} boogieTmp := corral_nondet();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Results_1 != 0;
    assume {:nonnull} Lbo_15 != 0;
    assume Lbo_15 > 0;
    goto L22;

  L22:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} SectorCount_2 != 0;
    assume {:nonnull} LiSectorCount != 0;
    assume LiSectorCount > 0;
    assume {:nonnull} SectorCount_2 != 0;
    assume SectorCount_2 > 0;
    assume {:nonnull} SectorCount_2 != 0;
    assume SectorCount_2 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} SectorCount_2 != 0;
    assume SectorCount_2 > 0;
    call {:si_unique_call 2516} boogieTmp := corral_nondet();
    assume {:nonnull} SectorCount_2 != 0;
    assume SectorCount_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L30;

  L30:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Results_1 != 0;
    assume {:nonnull} SectorCount_2 != 0;
    assume SectorCount_2 > 0;
    goto L24;

  L24:
    Tmp_2040 := Results_1;
    return;

  anon17_Then:
    assume {:partition} Results_1 == 0;
    goto L24;

  anon21_Then:
    assume {:nonnull} SectorCount_2 != 0;
    assume SectorCount_2 > 0;
    goto L30;

  anon20_Then:
    goto L24;

  anon16_Then:
    assume {:partition} SectorCount_2 == 0;
    goto L24;

  anon19_Then:
    assume {:partition} Results_1 == 0;
    goto L22;

  anon15_Then:
    assume {:partition} LiLbo_1 == -1;
    assume {:nonnull} Lbo_15 != 0;
    assume Lbo_15 > 0;
    goto L22;

  anon18_Then:
    assume {:partition} SectorCount_2 == 0;
    goto L13;
}



procedure {:origName "FatIsVolumeDirty"} FatIsVolumeDirty(actual_IrpContext_110: int, actual_Irp_44: int) returns (Tmp_2044: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2044 == -1073741670 || Tmp_2044 == -1073741811 || Tmp_2044 == -1073741202 || Tmp_2044 == 0 || Tmp_2044 == -1073741592;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsVolumeDirty"} FatIsVolumeDirty(actual_IrpContext_110: int, actual_Irp_44: int) returns (Tmp_2044: int)
{
  var {:pointer} Ccb_25: int;
  var {:pointer} VolumeState: int;
  var {:pointer} Fcb_44: int;
  var {:scalar} TypeOfOpen_7: int;
  var {:pointer} IrpSp_25: int;
  var {:pointer} sdv_1218: int;
  var {:pointer} Vcb_69: int;
  var {:pointer} IrpContext_110: int;
  var {:pointer} Irp_44: int;
  var vslice_dummy_var_1470: int;
  var vslice_dummy_var_1471: int;

  anon0:
    call {:si_unique_call 2517} Ccb_25 := __HAVOC_malloc(4);
    call {:si_unique_call 2518} Fcb_44 := __HAVOC_malloc(4);
    call {:si_unique_call 2519} Vcb_69 := __HAVOC_malloc(4);
    IrpContext_110 := actual_IrpContext_110;
    Irp_44 := actual_Irp_44;
    call {:si_unique_call 2520} IrpSp_25 := sdv_IoGetCurrentIrpStackLocation(Irp_44);
    assume {:nonnull} Irp_44 != 0;
    assume Irp_44 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Irp_44 != 0;
    assume Irp_44 > 0;
    havoc VolumeState;
    goto L16;

  L16:
    assume {:nonnull} IrpSp_25 != 0;
    assume IrpSp_25 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 2521} FatCompleteRequest_Real(IrpContext_110, Irp_44, -1073741811);
    Tmp_2044 := -1073741811;
    goto L1;

  L1:
    return;

  anon17_Then:
    assume {:nonnull} VolumeState != 0;
    assume VolumeState > 0;
    assume {:nonnull} IrpSp_25 != 0;
    assume IrpSp_25 > 0;
    havoc vslice_dummy_var_1470;
    call {:si_unique_call 2522} TypeOfOpen_7 := FatDecodeFileObject(vslice_dummy_var_1470, Vcb_69, Fcb_44, Ccb_25);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} TypeOfOpen_7 != 4;
    call {:si_unique_call 2523} FatCompleteRequest_Real(IrpContext_110, Irp_44, -1073741811);
    Tmp_2044 := -1073741811;
    goto L1;

  anon18_Then:
    assume {:partition} TypeOfOpen_7 == 4;
    assume {:nonnull} Vcb_69 != 0;
    assume Vcb_69 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 2524} FatCompleteRequest_Real(IrpContext_110, Irp_44, -1073741202);
    Tmp_2044 := -1073741202;
    goto L1;

  anon19_Then:
    assume {:nonnull} IrpContext_110 != 0;
    assume IrpContext_110 > 0;
    assume {:nonnull} Vcb_69 != 0;
    assume Vcb_69 > 0;
    havoc vslice_dummy_var_1471;
    call {:si_unique_call 2525} FatVerifyVcb(IrpContext_110, vslice_dummy_var_1471);
    assume {:nonnull} Vcb_69 != 0;
    assume Vcb_69 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} VolumeState != 0;
    assume VolumeState > 0;
    goto L41;

  L41:
    assume {:nonnull} Irp_44 != 0;
    assume Irp_44 > 0;
    call {:si_unique_call 2526} FatCompleteRequest_Real(IrpContext_110, Irp_44, 0);
    Tmp_2044 := 0;
    goto L1;

  anon20_Then:
    goto L41;

  anon15_Then:
    assume {:nonnull} Irp_44 != 0;
    assume Irp_44 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 2527} sdv_1218 := sdv_MmGetSystemAddressForMdlSafe(0, 0);
    VolumeState := sdv_1218;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} VolumeState == 0;
    call {:si_unique_call 2528} FatCompleteRequest_Real(IrpContext_110, Irp_44, -1073741670);
    Tmp_2044 := -1073741670;
    goto L1;

  anon21_Then:
    assume {:partition} VolumeState != 0;
    goto L16;

  anon16_Then:
    call {:si_unique_call 2529} FatCompleteRequest_Real(IrpContext_110, Irp_44, -1073741592);
    Tmp_2044 := -1073741592;
    goto L1;
}



procedure {:origName "FatInvalidateVolumes"} FatInvalidateVolumes(actual_Irp_45: int) returns (Tmp_2046: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2046 == -1073741811 || Tmp_2046 == 0 || Tmp_2046 == -1073741823 || Tmp_2046 == -1073741727;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatInvalidateVolumes"} FatInvalidateVolumes(actual_Irp_45: int) returns (Tmp_2046: int)
{
  var {:pointer} Links_5: int;
  var {:pointer} ExistingVcb: int;
  var {:pointer} DeviceToMarkBad: int;
  var {:pointer} NewVpb: int;
  var {:scalar} Tmp_2047: int;
  var {:scalar} Status_41: int;
  var {:pointer} sdv_1220: int;
  var {:pointer} IrpSp_26: int;
  var {:scalar} sdv_1221: int;
  var {:scalar} OldIrql: int;
  var {:scalar} TcbPrivilege: int;
  var {:pointer} Tmp_2048: int;
  var {:scalar} IrpContext_111: int;
  var {:scalar} Tmp_2049: int;
  var {:pointer} Tmp_2050: int;
  var {:pointer} Tmp_2051: int;
  var {:pointer} FileToMarkBad: int;
  var {:pointer} Tmp_2052: int;
  var {:pointer} Tmp_2053: int;
  var {:pointer} Irp_45: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_1472: int;
  var vslice_dummy_var_1473: int;
  var vslice_dummy_var_1474: int;

  anon0:
    call {:si_unique_call 2530} TcbPrivilege := __HAVOC_malloc(8);
    call {:si_unique_call 2531} IrpContext_111 := __HAVOC_malloc(68);
    Irp_45 := actual_Irp_45;
    assume {:nonnull} TcbPrivilege != 0;
    assume TcbPrivilege > 0;
    assume {:nonnull} TcbPrivilege != 0;
    assume TcbPrivilege > 0;
    call {:si_unique_call 2532} IrpSp_26 := sdv_IoGetCurrentIrpStackLocation(Irp_45);
    assume {:nonnull} Irp_45 != 0;
    assume Irp_45 > 0;
    havoc vslice_dummy_var_1472;
    call {:si_unique_call 2533} sdv_1221 := SeSinglePrivilegeCheck(TcbPrivilege, vslice_dummy_var_1472);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_1221 != 0;
    assume {:nonnull} IrpSp_26 != 0;
    assume IrpSp_26 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 2534} FatCompleteRequest_Real(0, Irp_45, -1073741811);
    Tmp_2046 := -1073741811;
    goto L1;

  L1:
    return;

  anon20_Then:
    assume {:nonnull} Irp_45 != 0;
    assume Irp_45 > 0;
    havoc Tmp_2051;
    assume {:nonnull} Tmp_2051 != 0;
    assume Tmp_2051 > 0;
    call {:si_unique_call 2535} Status_41 := ObReferenceObjectByHandle(0, 0, 0, 0, 0, 0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Status_41 >= 0;
    call {:si_unique_call 2536} vslice_dummy_var_345 := sdv_ObDereferenceObject(0);
    assume {:nonnull} FileToMarkBad != 0;
    assume FileToMarkBad > 0;
    havoc DeviceToMarkBad;
    call {:si_unique_call 2537} sdv_RtlZeroMemory(0, 68);
    assume {:nonnull} IrpContext_111 != 0;
    assume IrpContext_111 > 0;
    assume {:nonnull} IrpContext_111 != 0;
    assume IrpContext_111 > 0;
    assume {:nonnull} IrpSp_26 != 0;
    assume IrpSp_26 > 0;
    assume {:nonnull} IrpContext_111 != 0;
    assume IrpContext_111 > 0;
    assume {:nonnull} IrpSp_26 != 0;
    assume IrpSp_26 > 0;
    assume {:nonnull} IrpContext_111 != 0;
    assume IrpContext_111 > 0;
    havoc Tmp_2049;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Tmp_2049 == 0;
    Tmp_2047 := 0;
    goto L125;

  L125:
    call {:si_unique_call 2538} vslice_dummy_var_347 := ExAcquireResourceExclusiveLite(0, Tmp_2047);
    havoc Links_5;
    goto L54;

  L54:
    call {:si_unique_call 2539} Links_5, ExistingVcb, NewVpb, sdv_1220, OldIrql, Tmp_2048, Tmp_2050, Tmp_2052, Tmp_2053, vslice_dummy_var_346 := FatInvalidateVolumes_loop_L54(Links_5, ExistingVcb, DeviceToMarkBad, NewVpb, sdv_1220, OldIrql, Tmp_2048, IrpContext_111, Tmp_2050, Tmp_2052, Tmp_2053, vslice_dummy_var_346);
    goto L54_last;

  L54_last:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2540} sdv_1220 := sdv_containing_record(Links_5, 64);
    ExistingVcb := sdv_1220;
    assume {:nonnull} Links_5 != 0;
    assume Links_5 > 0;
    havoc Links_5;
    assume {:nonnull} ExistingVcb != 0;
    assume ExistingVcb > 0;
    havoc Tmp_2053;
    assume {:nonnull} Tmp_2053 != 0;
    assume Tmp_2053 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 2541} vslice_dummy_var_346 := FatAcquireExclusiveVcb(IrpContext_111, ExistingVcb);
    assume {:nonnull} DeviceToMarkBad != 0;
    assume DeviceToMarkBad > 0;
    assume {:nonnull} ExistingVcb != 0;
    assume ExistingVcb > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 2542} Tmp_2048 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2048 != 0;
    assume Tmp_2048 > 0;
    call {:si_unique_call 2543} IoAcquireVpbSpinLock(Tmp_2048);
    assume {:nonnull} Tmp_2048 != 0;
    assume Tmp_2048 > 0;
    havoc OldIrql;
    assume {:nonnull} DeviceToMarkBad != 0;
    assume DeviceToMarkBad > 0;
    havoc Tmp_2050;
    assume {:nonnull} Tmp_2050 != 0;
    assume Tmp_2050 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} ExistingVcb != 0;
    assume ExistingVcb > 0;
    havoc NewVpb;
    assume {:nonnull} ExistingVcb != 0;
    assume ExistingVcb > 0;
    assume {:nonnull} ExistingVcb != 0;
    assume ExistingVcb > 0;
    call {:si_unique_call 2544} sdv_RtlZeroMemory(0, 88);
    assume {:nonnull} NewVpb != 0;
    assume NewVpb > 0;
    assume {:nonnull} NewVpb != 0;
    assume NewVpb > 0;
    assume {:nonnull} NewVpb != 0;
    assume NewVpb > 0;
    assume {:nonnull} DeviceToMarkBad != 0;
    assume DeviceToMarkBad > 0;
    havoc Tmp_2052;
    assume {:nonnull} NewVpb != 0;
    assume NewVpb > 0;
    assume {:nonnull} Tmp_2052 != 0;
    assume Tmp_2052 > 0;
    assume {:nonnull} DeviceToMarkBad != 0;
    assume DeviceToMarkBad > 0;
    goto L75;

  L75:
    call {:si_unique_call 2545} IoReleaseVpbSpinLock(OldIrql);
    goto L69;

  L69:
    assume {:nonnull} ExistingVcb != 0;
    assume ExistingVcb > 0;
    assume {:nonnull} ExistingVcb != 0;
    assume ExistingVcb > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} ExistingVcb != 0;
    assume ExistingVcb > 0;
    havoc vslice_dummy_var_1473;
    call {:si_unique_call 2546} FatMarkFcbCondition(IrpContext_111, vslice_dummy_var_1473, 2, 1);
    assume {:nonnull} ExistingVcb != 0;
    assume ExistingVcb > 0;
    havoc vslice_dummy_var_1474;
    call {:si_unique_call 2547} FatPurgeReferencedFileObjects(IrpContext_111, vslice_dummy_var_1474, 0);
    goto L91;

  L91:
    call {:si_unique_call 2548} ExReleaseResourceLite(0);
    goto L91_dummy;

  L91_dummy:
    assume false;
    return;

  anon27_Then:
    goto L91;

  anon26_Then:
    goto L75;

  anon23_Then:
    goto L69;

  anon25_Then:
    goto anon25_Then_dummy;

  anon25_Then_dummy:
    assume false;
    return;

  anon22_Then:
    call {:si_unique_call 2549} ExReleaseResourceLite(0);
    call {:si_unique_call 2550} FatCompleteRequest_Real(0, Irp_45, 0);
    Tmp_2046 := 0;
    goto L1;

  anon24_Then:
    assume {:partition} Tmp_2049 != 0;
    Tmp_2047 := 1;
    goto L125;

  anon21_Then:
    assume {:partition} 0 > Status_41;
    call {:si_unique_call 2551} FatCompleteRequest_Real(0, Irp_45, Status_41);
    Tmp_2046 := Status_41;
    goto L1;

  anon19_Then:
    assume {:partition} sdv_1221 == 0;
    call {:si_unique_call 2552} FatCompleteRequest_Real(0, Irp_45, -1073741727);
    Tmp_2046 := -1073741727;
    goto L1;
}



procedure {:origName "FatGetStatistics"} FatGetStatistics(actual_IrpContext_112: int, actual_Irp_46: int) returns (Tmp_2054: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2054 == -1073741789 || Tmp_2054 == 5 || Tmp_2054 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetStatistics"} FatGetStatistics(actual_IrpContext_112: int, actual_Irp_46: int) returns (Tmp_2054: int)
{
  var {:scalar} Status_42: int;
  var {:pointer} IrpSp_27: int;
  var {:pointer} Tmp_2055: int;
  var {:scalar} BufferLength_1: int;
  var {:scalar} StatsSize: int;
  var {:scalar} BytesToCopy_4: int;
  var {:pointer} IrpContext_112: int;
  var {:pointer} Irp_46: int;

  anon0:
    IrpContext_112 := actual_IrpContext_112;
    Irp_46 := actual_Irp_46;
    call {:si_unique_call 2553} IrpSp_27 := sdv_IoGetCurrentIrpStackLocation(Irp_46);
    assume {:nonnull} Irp_46 != 0;
    assume Irp_46 > 0;
    assume {:nonnull} IrpSp_27 != 0;
    assume IrpSp_27 > 0;
    havoc BufferLength_1;
    assume {:nonnull} Irp_46 != 0;
    assume Irp_46 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} 56 > BufferLength_1;
    call {:si_unique_call 2554} FatCompleteRequest_Real(IrpContext_112, Irp_46, -1073741789);
    Tmp_2054 := -1073741789;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} BufferLength_1 >= 56;
    havoc StatsSize;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} StatsSize > BufferLength_1;
    BytesToCopy_4 := BufferLength_1;
    Status_42 := 5;
    goto L27;

  L27:
    assume {:nonnull} IrpSp_27 != 0;
    assume IrpSp_27 > 0;
    havoc Tmp_2055;
    assume {:nonnull} Tmp_2055 != 0;
    assume Tmp_2055 > 0;
    call {:si_unique_call 2555} sdv_RtlCopyMemory(0, 0, BytesToCopy_4);
    assume {:nonnull} Irp_46 != 0;
    assume Irp_46 > 0;
    call {:si_unique_call 2556} FatCompleteRequest_Real(IrpContext_112, Irp_46, Status_42);
    Tmp_2054 := Status_42;
    goto L1;

  anon6_Then:
    assume {:partition} BufferLength_1 >= StatsSize;
    BytesToCopy_4 := StatsSize;
    Status_42 := 0;
    goto L27;
}



procedure {:origName "FatScanForDismountedVcb"} FatScanForDismountedVcb(actual_IrpContext_113: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatScanForDismountedVcb"} FatScanForDismountedVcb(actual_IrpContext_113: int)
{
  var {:pointer} Links_6: int;
  var {:pointer} sdv_1228: int;
  var {:scalar} Tmp_2058: int;
  var {:scalar} sdv_1229: int;
  var {:pointer} Vcb_71: int;
  var {:scalar} Tmp_2060: int;
  var {:scalar} VcbDeleted_1: int;
  var {:pointer} IrpContext_113: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;

  anon0:
    call {:si_unique_call 2557} vslice_dummy_var_348 := __HAVOC_malloc(4);
    IrpContext_113 := actual_IrpContext_113;
    call {:si_unique_call 2558} sdv_do_paged_code_check();
    assume {:nonnull} IrpContext_113 != 0;
    assume IrpContext_113 > 0;
    havoc Tmp_2058;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Tmp_2058 == 0;
    Tmp_2060 := 0;
    goto L44;

  L44:
    call {:si_unique_call 2559} vslice_dummy_var_349 := ExAcquireResourceExclusiveLite(0, Tmp_2060);
    havoc Links_6;
    goto L15;

  L15:
    call {:si_unique_call 2560} Links_6, sdv_1228, sdv_1229, Vcb_71, VcbDeleted_1 := FatScanForDismountedVcb_loop_L15(Links_6, sdv_1228, sdv_1229, Vcb_71, VcbDeleted_1, IrpContext_113);
    goto L15_last;

  L15_last:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 2561} sdv_1228 := sdv_containing_record(Links_6, 64);
    Vcb_71 := sdv_1228;
    assume {:nonnull} Links_6 != 0;
    assume Links_6 > 0;
    havoc Links_6;
    call {:si_unique_call 2562} sdv_1229 := ExAcquireResourceExclusiveLite(0, 0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_1229 != 0;
    call {:si_unique_call 2563} VcbDeleted_1 := FatCheckForDismount#1(IrpContext_113, Vcb_71, 0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} VcbDeleted_1 == 0;
    call {:si_unique_call 2564} ExReleaseResourceLite(0);
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} VcbDeleted_1 != 0;
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    assume false;
    return;

  anon10_Then:
    assume {:partition} sdv_1229 == 0;
    goto anon10_Then_dummy;

  anon10_Then_dummy:
    assume false;
    return;

  anon9_Then:
    call {:si_unique_call 2565} ExReleaseResourceLite(0);
    return;

  anon12_Then:
    assume {:partition} Tmp_2058 != 0;
    Tmp_2060 := 1;
    goto L44;
}



procedure {:origName "FatQueryBpb"} FatQueryBpb(actual_IrpContext_114: int, actual_Irp_47: int) returns (Tmp_2061: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2061 == -1073741789 || Tmp_2061 == 0 || Tmp_2061 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueryBpb"} FatQueryBpb(actual_IrpContext_114: int, actual_Irp_47: int) returns (Tmp_2061: int)
{
  var {:pointer} Tmp_2062: int;
  var {:pointer} IrpSp_28: int;
  var {:pointer} Vcb_72: int;
  var {:pointer} IrpContext_114: int;
  var {:pointer} Irp_47: int;

  anon0:
    IrpContext_114 := actual_IrpContext_114;
    Irp_47 := actual_Irp_47;
    call {:si_unique_call 2566} IrpSp_28 := sdv_IoGetCurrentIrpStackLocation(Irp_47);
    assume {:nonnull} IrpSp_28 != 0;
    assume IrpSp_28 > 0;
    havoc Tmp_2062;
    assume {:nonnull} Tmp_2062 != 0;
    assume Tmp_2062 > 0;
    Vcb_72 := Vcb__VOLUME_DEVICE_OBJECT(Tmp_2062);
    assume {:nonnull} Vcb_72 != 0;
    assume Vcb_72 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} Irp_47 != 0;
    assume Irp_47 > 0;
    assume {:nonnull} IrpSp_28 != 0;
    assume IrpSp_28 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    call {:si_unique_call 2567} FatCompleteRequest_Real(IrpContext_114, Irp_47, -1073741789);
    Tmp_2061 := -1073741789;
    goto L1;

  L1:
    return;

  anon6_Then:
    call {:si_unique_call 2568} sdv_RtlCopyMemory(0, 0, 36);
    assume {:nonnull} Irp_47 != 0;
    assume Irp_47 > 0;
    call {:si_unique_call 2569} FatCompleteRequest_Real(IrpContext_114, Irp_47, 0);
    Tmp_2061 := 0;
    goto L1;

  anon5_Then:
    call {:si_unique_call 2570} FatCompleteRequest_Real(IrpContext_114, Irp_47, -1073741808);
    Tmp_2061 := -1073741808;
    goto L1;
}



procedure {:origName "FatLockVolumeInternal"} FatLockVolumeInternal(actual_IrpContext_115: int, actual_Vcb_73: int, actual_FileObject_36: int) returns (Tmp_2064: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_2064 == -1073741670 || Tmp_2064 == 0 || Tmp_2064 == -1073741790;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLockVolumeInternal"} FatLockVolumeInternal(actual_IrpContext_115: int, actual_Vcb_73: int, actual_FileObject_36: int) returns (Tmp_2064: int)
{
  var {:scalar} SavedIrql_4: int;
  var {:scalar} RemainingUserReferences: int;
  var {:pointer} Tmp_2065: int;
  var {:pointer} Tmp_2066: int;
  var {:scalar} sdv_1232: int;
  var {:scalar} Status_43: int;
  var {:pointer} Tmp_2067: int;
  var {:scalar} Tmp_2068: int;
  var {:pointer} Tmp_2069: int;
  var {:pointer} Tmp_2070: int;
  var {:scalar} sdv_1236: int;
  var {:scalar} Tmp_2071: int;
  var {:pointer} IrpContext_115: int;
  var {:pointer} Vcb_73: int;
  var {:pointer} FileObject_36: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_1475: int;

  anon0:
    IrpContext_115 := actual_IrpContext_115;
    Vcb_73 := actual_Vcb_73;
    FileObject_36 := actual_FileObject_36;
    Status_43 := 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} FileObject_36 != 0;
    Tmp_2071 := 1;
    goto L10;

  L10:
    RemainingUserReferences := Tmp_2071;
    assume {:nonnull} IrpContext_115 != 0;
    assume IrpContext_115 > 0;
    call {:si_unique_call 2571} sdv_1232 := FatIsHandleCountZero(IrpContext_115, Vcb_73);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_1232 != 0;
    call {:si_unique_call 2572} vslice_dummy_var_350 := FatFlushFat(IrpContext_115, Vcb_73);
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    havoc vslice_dummy_var_1475;
    call {:si_unique_call 2573} FatPurgeReferencedFileObjects(IrpContext_115, vslice_dummy_var_1475, 1);
    call {:si_unique_call 2574} FatCloseEaFile(IrpContext_115, Vcb_73, 1);
    call {:si_unique_call 2575} ExReleaseResourceLite(0);
    call {:si_unique_call 2576} Status_43 := CcWaitForCurrentLazyWriterActivity();
    call {:si_unique_call 2577} vslice_dummy_var_351 := FatAcquireExclusiveVcb(IrpContext_115, Vcb_73);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Status_43 >= 0;
    call {:si_unique_call 2578} FatFspClose#1(Vcb_73);
    call {:si_unique_call 2579} Tmp_2065 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2065 != 0;
    assume Tmp_2065 > 0;
    call {:si_unique_call 2580} IoAcquireVpbSpinLock(Tmp_2065);
    assume {:nonnull} Tmp_2065 != 0;
    assume Tmp_2065 > 0;
    havoc SavedIrql_4;
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    havoc Tmp_2066;
    assume {:nonnull} Tmp_2066 != 0;
    assume Tmp_2066 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L46;

  L46:
    Status_43 := -1073741790;
    goto L47;

  L47:
    call {:si_unique_call 2581} IoReleaseVpbSpinLock(SavedIrql_4);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Status_43 >= 0;
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 2582} sdv_1236 := corral_nondet();
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_1236 == 0;
    call {:si_unique_call 2583} FatMarkVolume#1(IrpContext_115, Vcb_73, 0);
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    goto L51;

  L51:
    Tmp_2064 := Status_43;
    goto L1;

  L1:
    return;

  anon28_Then:
    assume {:partition} sdv_1236 != 0;
    goto L51;

  anon27_Then:
    goto L51;

  anon26_Then:
    goto L51;

  anon25_Then:
    assume {:partition} 0 > Status_43;
    goto L51;

  anon32_Then:
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    havoc Tmp_2069;
    assume {:nonnull} Tmp_2069 != 0;
    assume Tmp_2069 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} FileObject_36 != 0;
    Tmp_2068 := 1;
    goto L65;

  L65:
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    havoc Tmp_2067;
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    havoc Tmp_2070;
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    assume {:nonnull} Tmp_2070 != 0;
    assume Tmp_2070 > 0;
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    assume {:nonnull} Vcb_73 != 0;
    assume Vcb_73 > 0;
    goto L47;

  anon30_Then:
    goto L46;

  anon29_Then:
    assume {:partition} FileObject_36 == 0;
    Tmp_2068 := 0;
    goto L65;

  anon33_Then:
    goto L46;

  anon24_Then:
    assume {:partition} 0 > Status_43;
    Tmp_2064 := Status_43;
    goto L1;

  anon23_Then:
    assume {:partition} sdv_1232 == 0;
    Tmp_2064 := -1073741790;
    goto L1;

  anon31_Then:
    assume {:partition} FileObject_36 == 0;
    Tmp_2071 := 0;
    goto L10;
}



procedure {:origName "FatRemoveMcbEntry"} FatRemoveMcbEntry(actual_Vcb_74: int, actual_Mcb_7: int, actual_Vbo_12: int, actual_SectorCount_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatRemoveMcbEntry"} FatRemoveMcbEntry(actual_Vcb_74: int, actual_Mcb_7: int, actual_Vbo_12: int, actual_SectorCount_3: int)
{
  var {:scalar} Vbo_12: int;
  var {:scalar} SectorCount_3: int;
  var vslice_dummy_var_352: int;

  anon0:
    call {:si_unique_call 2584} vslice_dummy_var_352 := __HAVOC_malloc(4);
    Vbo_12 := actual_Vbo_12;
    SectorCount_3 := actual_SectorCount_3;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} SectorCount_3 != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SectorCount_3 != -1;
    SectorCount_3 := SectorCount_3 - 1;
    call {:si_unique_call 2585} SectorCount_3 := corral_nondet();
    SectorCount_3 := SectorCount_3 + 1;
    goto L4;

  L4:
    call {:si_unique_call 2586} Vbo_12 := corral_nondet();
    return;

  anon6_Then:
    assume {:partition} SectorCount_3 == -1;
    goto L4;

  anon5_Then:
    assume {:partition} SectorCount_3 == 0;
    goto L4;
}



procedure {:origName "FatVerifyLookupFatEntry"} FatVerifyLookupFatEntry(actual_IrpContext_116: int, actual_Vcb_75: int, actual_FatIndex_4: int, actual_FatEntry_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatVerifyLookupFatEntry"} FatVerifyLookupFatEntry(actual_IrpContext_116: int, actual_Vcb_75: int, actual_FatIndex_4: int, actual_FatEntry_6: int)
{
  var {:scalar} OffsetIntoVolumeFile_3: int;
  var {:scalar} PageEntryOffset_2: int;
  var {:pointer} Tmp_2077: int;
  var {:pointer} Tmp_2078: int;
  var {:scalar} Tmp_2079: int;
  var {:pointer} Buffer_28: int;
  var {:pointer} Tmp_2080: int;
  var {:scalar} Tmp_2081: int;
  var {:scalar} Tmp_2083: int;
  var {:pointer} IrpContext_116: int;
  var {:pointer} Vcb_75: int;
  var {:scalar} FatIndex_4: int;
  var {:pointer} FatEntry_6: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;

  anon0:
    call {:si_unique_call 2587} vslice_dummy_var_353 := __HAVOC_malloc(4);
    IrpContext_116 := actual_IrpContext_116;
    Vcb_75 := actual_Vcb_75;
    FatIndex_4 := actual_FatIndex_4;
    FatEntry_6 := actual_FatEntry_6;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} 2 > FatIndex_4;
    goto L8;

  L8:
    assume {:nonnull} IrpContext_116 != 0;
    assume IrpContext_116 > 0;
    call {:si_unique_call 2588} ExRaiseStatus(-1073741566);
    goto L12;

  L12:
    call {:si_unique_call 2589} Buffer_28 := ExAllocatePoolWithTag(20, 4096, -864788154);
    assume {:nonnull} Vcb_75 != 0;
    assume Vcb_75 > 0;
    Tmp_2078 := Bpb__VCB(Vcb_75);
    assume {:nonnull} Vcb_75 != 0;
    assume Vcb_75 > 0;
    Tmp_2080 := Bpb__VCB(Vcb_75);
    assume {:nonnull} Tmp_2078 != 0;
    assume Tmp_2078 > 0;
    assume {:nonnull} Tmp_2080 != 0;
    assume Tmp_2080 > 0;
    havoc OffsetIntoVolumeFile_3;
    Tmp_2081 := INTMOD(OffsetIntoVolumeFile_3, 4096);
    PageEntryOffset_2 := INTDIV(Tmp_2081, 4);
    Tmp_2083 := BAND(OffsetIntoVolumeFile_3, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 2590} vslice_dummy_var_354 := FatPerformVerifyDiskRead(IrpContext_116, Vcb_75, Buffer_28, Tmp_2083, 4096, 1);
    Tmp_2079 := PageEntryOffset_2;
    Tmp_2077 := Buffer_28;
    assume {:nonnull} FatEntry_6 != 0;
    assume FatEntry_6 > 0;
    assume {:nonnull} Tmp_2077 != 0;
    assume Tmp_2077 > 0;
    call {:si_unique_call 2591} sdv_ExFreePool(0);
    return;

  anon5_Then:
    assume {:partition} FatIndex_4 >= 2;
    assume {:nonnull} Vcb_75 != 0;
    assume Vcb_75 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L12;

  anon6_Then:
    goto L8;
}



procedure {:origName "FatIsVolumeMounted"} FatIsVolumeMounted(actual_IrpContext_117: int, actual_Irp_48: int) returns (Tmp_2084: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2084 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsVolumeMounted"} FatIsVolumeMounted(actual_IrpContext_117: int, actual_Irp_48: int) returns (Tmp_2084: int)
{
  var {:pointer} Ccb_26: int;
  var {:pointer} Fcb_45: int;
  var {:scalar} Status_44: int;
  var {:pointer} IrpSp_29: int;
  var {:pointer} Vcb_76: int;
  var {:pointer} IrpContext_117: int;
  var {:pointer} Irp_48: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_1476: int;
  var vslice_dummy_var_1477: int;

  anon0:
    call {:si_unique_call 2592} Ccb_26 := __HAVOC_malloc(4);
    call {:si_unique_call 2593} Fcb_45 := __HAVOC_malloc(4);
    call {:si_unique_call 2594} Vcb_76 := __HAVOC_malloc(4);
    IrpContext_117 := actual_IrpContext_117;
    Irp_48 := actual_Irp_48;
    assume {:nonnull} Vcb_76 != 0;
    assume Vcb_76 > 0;
    call {:si_unique_call 2595} IrpSp_29 := sdv_IoGetCurrentIrpStackLocation(Irp_48);
    Status_44 := 0;
    assume {:nonnull} IrpSp_29 != 0;
    assume IrpSp_29 > 0;
    havoc vslice_dummy_var_1476;
    call {:si_unique_call 2596} vslice_dummy_var_355 := FatDecodeFileObject(vslice_dummy_var_1476, Vcb_76, Fcb_45, Ccb_26);
    assume {:nonnull} IrpContext_117 != 0;
    assume IrpContext_117 > 0;
    assume {:nonnull} Vcb_76 != 0;
    assume Vcb_76 > 0;
    havoc vslice_dummy_var_1477;
    call {:si_unique_call 2597} FatVerifyVcb(IrpContext_117, vslice_dummy_var_1477);
    call {:si_unique_call 2598} FatCompleteRequest_Real(IrpContext_117, Irp_48, Status_44);
    Tmp_2084 := Status_44;
    return;
}



procedure {:origName "FatGetNextMcbEntry"} FatGetNextMcbEntry(actual_Vcb_77: int, actual_Mcb_8: int, actual_RunIndex: int, actual_Vbo_13: int, actual_Lbo_16: int, actual_SectorCount_4: int) returns (Tmp_2086: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetNextMcbEntry"} FatGetNextMcbEntry(actual_Vcb_77: int, actual_Mcb_8: int, actual_RunIndex: int, actual_Vbo_13: int, actual_Lbo_16: int, actual_SectorCount_4: int) returns (Tmp_2086: int)
{
  var {:scalar} LiSectorCount_1: int;
  var {:scalar} LiLbo_2: int;
  var {:scalar} Results_2: int;
  var {:pointer} Vbo_13: int;
  var {:pointer} Lbo_16: int;
  var {:pointer} SectorCount_4: int;
  var boogieTmp: int;

  anon0:
    Vbo_13 := actual_Vbo_13;
    Lbo_16 := actual_Lbo_16;
    SectorCount_4 := actual_SectorCount_4;
    call {:si_unique_call 2599} sdv_do_paged_code_check();
    LiLbo_2 := 0;
    call {:si_unique_call 2600} Results_2 := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Results_2 != 0;
    assume {:nonnull} Vbo_13 != 0;
    assume Vbo_13 > 0;
    call {:si_unique_call 2601} boogieTmp := corral_nondet();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} LiLbo_2 != -1;
    assume {:nonnull} Lbo_16 != 0;
    assume Lbo_16 > 0;
    call {:si_unique_call 2602} boogieTmp := corral_nondet();
    goto L22;

  L22:
    assume {:nonnull} SectorCount_4 != 0;
    assume SectorCount_4 > 0;
    call {:si_unique_call 2603} boogieTmp := corral_nondet();
    assume {:nonnull} SectorCount_4 != 0;
    assume SectorCount_4 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} LiSectorCount_1 != 0;
    assume {:nonnull} SectorCount_4 != 0;
    assume SectorCount_4 > 0;
    goto L17;

  L17:
    Tmp_2086 := Results_2;
    return;

  anon10_Then:
    assume {:partition} LiSectorCount_1 == 0;
    goto L17;

  anon12_Then:
    goto L17;

  anon11_Then:
    assume {:partition} LiLbo_2 == -1;
    assume {:nonnull} Lbo_16 != 0;
    assume Lbo_16 > 0;
    goto L22;

  anon9_Then:
    assume {:partition} Results_2 == 0;
    goto L17;
}



procedure {:origName "FatFlushAndCleanVolume"} FatFlushAndCleanVolume(actual_IrpContext_118: int, actual_Irp_49: int, actual_Vcb_78: int, actual_FlushType_2: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFlushAndCleanVolume"} FatFlushAndCleanVolume(actual_IrpContext_118: int, actual_Irp_49: int, actual_Vcb_78: int, actual_FlushType_2: int)
{
  var {:pointer} IrpContext_118: int;
  var {:pointer} Irp_49: int;
  var {:pointer} Vcb_78: int;
  var {:scalar} FlushType_2: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_1478: int;
  var vslice_dummy_var_1479: int;

  anon0:
    call {:si_unique_call 2604} vslice_dummy_var_356 := __HAVOC_malloc(4);
    IrpContext_118 := actual_IrpContext_118;
    Irp_49 := actual_Irp_49;
    Vcb_78 := actual_Vcb_78;
    FlushType_2 := actual_FlushType_2;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} FlushType_2 != 0;
    call {:si_unique_call 2605} vslice_dummy_var_357 := FatFlushVolume(IrpContext_118, Vcb_78, FlushType_2);
    goto L4;

  L4:
    call {:si_unique_call 2606} FatCloseEaFile(IrpContext_118, Vcb_78, 0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} FlushType_2 != 0;
    assume {:nonnull} Vcb_78 != 0;
    assume Vcb_78 > 0;
    havoc vslice_dummy_var_1478;
    call {:si_unique_call 2607} vslice_dummy_var_358 := FatHijackIrpAndFlushDevice(IrpContext_118, Irp_49, vslice_dummy_var_1478);
    goto L11;

  L11:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} FlushType_2 != 3;
    assume {:nonnull} Vcb_78 != 0;
    assume Vcb_78 > 0;
    havoc vslice_dummy_var_1479;
    call {:si_unique_call 2608} FatPurgeReferencedFileObjects(IrpContext_118, vslice_dummy_var_1479, 0);
    goto L15;

  L15:
    assume {:nonnull} Vcb_78 != 0;
    assume Vcb_78 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2609} vslice_dummy_var_359 := KeCancelTimer(0);
    call {:si_unique_call 2610} vslice_dummy_var_360 := KeRemoveQueueDpc(0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} FlushType_2 != 0;
    assume {:nonnull} Vcb_78 != 0;
    assume Vcb_78 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L31;

  L31:
    assume {:nonnull} Vcb_78 != 0;
    assume Vcb_78 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Vcb_78 != 0;
    assume Vcb_78 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 2611} vslice_dummy_var_361 := FatToggleMediaEjectDisable(IrpContext_118, Vcb_78, 0);
    goto L19;

  L19:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} FlushType_2 != 3;
    call {:si_unique_call 2612} vslice_dummy_var_362 := corral_nondet();
    call {:si_unique_call 2613} FatTearDownAllocationSupport(IrpContext_118, Vcb_78);
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} FlushType_2 == 3;
    goto L1;

  anon27_Then:
    goto L19;

  anon26_Then:
    goto L19;

  anon25_Then:
    call {:si_unique_call 2614} FatMarkVolume#1(IrpContext_118, Vcb_78, 0);
    assume {:nonnull} Vcb_78 != 0;
    assume Vcb_78 > 0;
    goto L31;

  anon24_Then:
    assume {:partition} FlushType_2 == 0;
    goto L19;

  anon22_Then:
    goto L19;

  anon21_Then:
    assume {:partition} FlushType_2 == 3;
    goto L15;

  anon20_Then:
    assume {:partition} FlushType_2 == 0;
    goto L11;

  anon19_Then:
    assume {:partition} FlushType_2 == 0;
    goto L4;
}



procedure {:origName "FatComputeMoveFileParameter"} FatComputeMoveFileParameter(actual_IrpContext_119: int, actual_FcbOrDcb_10: int, actual_BufferSize_1: int, actual_FileOffset_2: int, actual_ByteCount_18: int, actual_BytesToReallocate_2: int, actual_BytesToWrite_1: int, actual_SourceLbo_1: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatComputeMoveFileParameter"} FatComputeMoveFileParameter(actual_IrpContext_119: int, actual_FcbOrDcb_10: int, actual_BufferSize_1: int, actual_FileOffset_2: int, actual_ByteCount_18: int, actual_BytesToReallocate_2: int, actual_BytesToWrite_1: int, actual_SourceLbo_1: int)
{
  var {:pointer} Tmp_2091: int;
  var {:scalar} Tmp_2092: int;
  var {:dopa} {:scalar} RunEndOnMax: int;
  var {:scalar} ValidDataLength: int;
  var {:dopa} {:scalar} RunLbo: int;
  var {:scalar} ClusterSize_1: int;
  var {:dopa} {:scalar} RunByteCount: int;
  var {:dopa} {:scalar} RunAllocated: int;
  var {:pointer} Tmp_2093: int;
  var {:scalar} Tmp_2094: int;
  var {:pointer} Tmp_2095: int;
  var {:pointer} Tmp_2096: int;
  var {:scalar} ClusterAlignedVDL: int;
  var {:scalar} AllocationSize_6: int;
  var {:dopa} {:scalar} RunIndex_1: int;
  var {:pointer} IrpContext_119: int;
  var {:pointer} FcbOrDcb_10: int;
  var {:scalar} BufferSize_1: int;
  var {:scalar} FileOffset_2: int;
  var {:pointer} ByteCount_18: int;
  var {:pointer} BytesToReallocate_2: int;
  var {:pointer} BytesToWrite_1: int;
  var {:pointer} SourceLbo_1: int;
  var vslice_dummy_var_363: int;

  anon0:
    call {:si_unique_call 2615} vslice_dummy_var_363 := __HAVOC_malloc(4);
    call {:si_unique_call 2616} RunEndOnMax := __HAVOC_malloc(4);
    call {:si_unique_call 2617} RunLbo := __HAVOC_malloc(4);
    call {:si_unique_call 2618} RunByteCount := __HAVOC_malloc(4);
    call {:si_unique_call 2619} RunAllocated := __HAVOC_malloc(4);
    call {:si_unique_call 2620} RunIndex_1 := __HAVOC_malloc(4);
    IrpContext_119 := actual_IrpContext_119;
    FcbOrDcb_10 := actual_FcbOrDcb_10;
    BufferSize_1 := actual_BufferSize_1;
    FileOffset_2 := actual_FileOffset_2;
    ByteCount_18 := actual_ByteCount_18;
    BytesToReallocate_2 := actual_BytesToReallocate_2;
    BytesToWrite_1 := actual_BytesToWrite_1;
    SourceLbo_1 := actual_SourceLbo_1;
    assume {:nonnull} FcbOrDcb_10 != 0;
    assume FcbOrDcb_10 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 2621} FatLookupFileAllocationSize#1(IrpContext_119, FcbOrDcb_10);
    Tmp_2091 := FcbOrDcb_10;
    assume {:nonnull} Tmp_2091 != 0;
    assume Tmp_2091 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L19;

  L19:
    assume {:nonnull} FcbOrDcb_10 != 0;
    assume FcbOrDcb_10 > 0;
    goto L13;

  L13:
    assume {:nonnull} FcbOrDcb_10 != 0;
    assume FcbOrDcb_10 > 0;
    havoc AllocationSize_6;
    assume {:nonnull} FcbOrDcb_10 != 0;
    assume FcbOrDcb_10 > 0;
    havoc ValidDataLength;
    assume {:nonnull} ByteCount_18 != 0;
    assume ByteCount_18 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} FileOffset_2 >= AllocationSize_6;
    assume {:nonnull} ByteCount_18 != 0;
    assume ByteCount_18 > 0;
    assume {:nonnull} BytesToReallocate_2 != 0;
    assume BytesToReallocate_2 > 0;
    assume {:nonnull} BytesToWrite_1 != 0;
    assume BytesToWrite_1 > 0;
    goto L1;

  L1:
    return;

  anon24_Then:
    assume {:partition} AllocationSize_6 > FileOffset_2;
    assume {:nonnull} ByteCount_18 != 0;
    assume ByteCount_18 > 0;
    goto L23;

  L23:
    Tmp_2094 := BAND(FileOffset_2, BufferSize_1 - 1);
    assume {:nonnull} ByteCount_18 != 0;
    assume ByteCount_18 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    Tmp_2092 := BAND(FileOffset_2, BufferSize_1 - 1);
    assume {:nonnull} BytesToReallocate_2 != 0;
    assume BytesToReallocate_2 > 0;
    goto L34;

  L34:
    call {:si_unique_call 2622} FatLookupFileAllocation#1(IrpContext_119, FcbOrDcb_10, FileOffset_2, RunLbo, RunByteCount, RunAllocated, RunEndOnMax, RunIndex_1);
    assume {:nonnull} BytesToReallocate_2 != 0;
    assume BytesToReallocate_2 > 0;
    assume {:nonnull} RunByteCount != 0;
    assume RunByteCount > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} BytesToReallocate_2 != 0;
    assume BytesToReallocate_2 > 0;
    assume {:nonnull} RunByteCount != 0;
    assume RunByteCount > 0;
    goto L38;

  L38:
    assume {:nonnull} RunLbo != 0;
    assume RunLbo > 0;
    assume {:nonnull} SourceLbo_1 != 0;
    assume SourceLbo_1 > 0;
    assume {:nonnull} FcbOrDcb_10 != 0;
    assume FcbOrDcb_10 > 0;
    call {:si_unique_call 2623} ClusterSize_1 := corral_nondet();
    ClusterAlignedVDL := BAND(ValidDataLength + ClusterSize_1 - 1, BNOT(ClusterSize_1 - 1));
    Tmp_2093 := FcbOrDcb_10;
    assume {:nonnull} Tmp_2093 != 0;
    assume Tmp_2093 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} BytesToReallocate_2 != 0;
    assume BytesToReallocate_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} FileOffset_2 > ClusterAlignedVDL;
    assume {:nonnull} BytesToWrite_1 != 0;
    assume BytesToWrite_1 > 0;
    goto L1;

  anon27_Then:
    assume {:partition} ClusterAlignedVDL >= FileOffset_2;
    assume {:nonnull} BytesToWrite_1 != 0;
    assume BytesToWrite_1 > 0;
    goto L1;

  anon26_Then:
    goto L43;

  L43:
    assume {:nonnull} BytesToReallocate_2 != 0;
    assume BytesToReallocate_2 > 0;
    assume {:nonnull} BytesToWrite_1 != 0;
    assume BytesToWrite_1 > 0;
    goto L1;

  anon31_Then:
    goto L43;

  anon25_Then:
    goto L38;

  anon30_Then:
    assume {:nonnull} ByteCount_18 != 0;
    assume ByteCount_18 > 0;
    assume {:nonnull} BytesToReallocate_2 != 0;
    assume BytesToReallocate_2 > 0;
    goto L34;

  anon29_Then:
    goto L23;

  anon28_Then:
    Tmp_2096 := FcbOrDcb_10;
    assume {:nonnull} Tmp_2096 != 0;
    assume Tmp_2096 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} FcbOrDcb_10 != 0;
    assume FcbOrDcb_10 > 0;
    havoc Tmp_2095;
    assume {:nonnull} Tmp_2095 != 0;
    assume Tmp_2095 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L19;

  anon33_Then:
    goto L13;

  anon32_Then:
    goto L13;

  anon23_Then:
    goto L13;
}



procedure {:origName "FatCommonFileSystemControl"} FatCommonFileSystemControl(actual_IrpContext_120: int, actual_Irp_50: int) returns (Tmp_2099: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonFileSystemControl"} FatCommonFileSystemControl(actual_IrpContext_120: int, actual_Irp_50: int) returns (Tmp_2099: int)
{
  var {:scalar} Status_45: int;
  var {:pointer} IrpSp_30: int;
  var {:pointer} IrpContext_120: int;
  var {:pointer} Irp_50: int;
  var vslice_dummy_var_1480: int;
  var vslice_dummy_var_1481: int;
  var vslice_dummy_var_1482: int;

  anon0:
    IrpContext_120 := actual_IrpContext_120;
    Irp_50 := actual_Irp_50;
    call {:si_unique_call 2624} IrpSp_30 := sdv_IoGetCurrentIrpStackLocation(Irp_50);
    assume {:nonnull} IrpSp_30 != 0;
    assume IrpSp_30 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} IrpSp_30 != 0;
    assume IrpSp_30 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} IrpSp_30 != 0;
    assume IrpSp_30 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 2625} Status_45 := FatVerifyVolume(IrpContext_120, Irp_50);
    goto L24;

  L24:
    Tmp_2099 := Status_45;
    return;

  anon8_Then:
    call {:si_unique_call 2626} FatCompleteRequest_Real(IrpContext_120, Irp_50, -1073741808);
    Status_45 := -1073741808;
    goto L24;

  anon9_Then:
    assume {:nonnull} IrpSp_30 != 0;
    assume IrpSp_30 > 0;
    havoc vslice_dummy_var_1480;
    havoc vslice_dummy_var_1481;
    havoc vslice_dummy_var_1482;
    call {:si_unique_call 2627} Status_45 := FatMountVolume(IrpContext_120, vslice_dummy_var_1480, vslice_dummy_var_1481, vslice_dummy_var_1482);
    call {:si_unique_call 2628} FatCompleteRequest_Real(IrpContext_120, Irp_50, Status_45);
    goto L24;

  anon7_Then:
    call {:si_unique_call 2629} Status_45 := FatUserFsCtrl(IrpContext_120, Irp_50);
    goto L24;
}



procedure {:origName "FatDirtyVolume"} FatDirtyVolume(actual_IrpContext_121: int, actual_Irp_51: int) returns (Tmp_2101: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_2101 == -1073741811 || Tmp_2101 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDirtyVolume"} FatDirtyVolume(actual_IrpContext_121: int, actual_Irp_51: int) returns (Tmp_2101: int)
{
  var {:pointer} Ccb_27: int;
  var {:pointer} Fcb_46: int;
  var {:pointer} IrpSp_31: int;
  var {:scalar} sdv_1253: int;
  var {:pointer} Vcb_79: int;
  var {:pointer} IrpContext_121: int;
  var {:pointer} Irp_51: int;
  var vslice_dummy_var_1483: int;
  var vslice_dummy_var_1484: int;
  var vslice_dummy_var_1485: int;

  anon0:
    call {:si_unique_call 2630} Ccb_27 := __HAVOC_malloc(4);
    call {:si_unique_call 2631} Fcb_46 := __HAVOC_malloc(4);
    call {:si_unique_call 2632} Vcb_79 := __HAVOC_malloc(4);
    IrpContext_121 := actual_IrpContext_121;
    Irp_51 := actual_Irp_51;
    call {:si_unique_call 2633} IrpSp_31 := sdv_IoGetCurrentIrpStackLocation(Irp_51);
    assume {:nonnull} IrpSp_31 != 0;
    assume IrpSp_31 > 0;
    havoc vslice_dummy_var_1483;
    call {:si_unique_call 2634} sdv_1253 := FatDecodeFileObject(vslice_dummy_var_1483, Vcb_79, Fcb_46, Ccb_27);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_1253 != 4;
    call {:si_unique_call 2635} FatCompleteRequest_Real(IrpContext_121, Irp_51, -1073741811);
    Tmp_2101 := -1073741811;
    goto L1;

  L1:
    return;

  anon7_Then:
    assume {:partition} sdv_1253 == 4;
    assume {:nonnull} Ccb_27 != 0;
    assume Ccb_27 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} Ccb_27 != 0;
    assume Ccb_27 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} IrpContext_121 != 0;
    assume IrpContext_121 > 0;
    assume {:nonnull} Vcb_79 != 0;
    assume Vcb_79 > 0;
    havoc vslice_dummy_var_1484;
    call {:si_unique_call 2636} FatVerifyVcb(IrpContext_121, vslice_dummy_var_1484);
    assume {:nonnull} Vcb_79 != 0;
    assume Vcb_79 > 0;
    assume {:nonnull} Vcb_79 != 0;
    assume Vcb_79 > 0;
    havoc vslice_dummy_var_1485;
    call {:si_unique_call 2637} FatMarkVolume#1(IrpContext_121, vslice_dummy_var_1485, 1);
    call {:si_unique_call 2638} FatCompleteRequest_Real(IrpContext_121, Irp_51, 0);
    Tmp_2101 := 0;
    goto L1;

  anon9_Then:
    goto L20;

  L20:
    call {:si_unique_call 2639} FatCompleteRequest_Real(IrpContext_121, Irp_51, -1073741811);
    Tmp_2101 := -1073741811;
    goto L1;

  anon8_Then:
    goto L20;
}



procedure {:origName "FatIsPathnameValid"} FatIsPathnameValid(actual_IrpContext_122: int, actual_Irp_52: int) returns (Tmp_2103: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2103 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsPathnameValid"} FatIsPathnameValid(actual_IrpContext_122: int, actual_Irp_52: int) returns (Tmp_2103: int)
{
  var {:pointer} IrpContext_122: int;
  var {:pointer} Irp_52: int;

  anon0:
    IrpContext_122 := actual_IrpContext_122;
    Irp_52 := actual_Irp_52;
    call {:si_unique_call 2640} FatCompleteRequest_Real(IrpContext_122, Irp_52, 0);
    Tmp_2103 := 0;
    return;
}



procedure {:origName "FatLockVolume"} FatLockVolume(actual_IrpContext_123: int, actual_Irp_53: int) returns (Tmp_2105: int);
  modifies alloc, markedPending, locked, queued, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_2105 == -1073741811 || Tmp_2105 == -1073741670 || Tmp_2105 == 0 || Tmp_2105 == -1073741790 || Tmp_2105 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLockVolume"} FatLockVolume(actual_IrpContext_123: int, actual_Irp_53: int) returns (Tmp_2105: int)
{
  var {:scalar} sdv_1254: int;
  var {:pointer} Ccb_28: int;
  var {:pointer} Fcb_47: int;
  var {:scalar} Status_46: int;
  var {:pointer} IrpSp_32: int;
  var {:scalar} sdv_1260: int;
  var {:scalar} sdv_1261: int;
  var {:scalar} sdv_1263: int;
  var {:scalar} sdv_1265: int;
  var {:pointer} Vcb_80: int;
  var {:pointer} IrpContext_123: int;
  var {:pointer} Irp_53: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_1486: int;
  var vslice_dummy_var_1487: int;
  var vslice_dummy_var_1488: int;
  var vslice_dummy_var_1489: int;

  anon0:
    call {:si_unique_call 2641} Ccb_28 := __HAVOC_malloc(4);
    call {:si_unique_call 2642} Fcb_47 := __HAVOC_malloc(4);
    call {:si_unique_call 2643} Vcb_80 := __HAVOC_malloc(4);
    IrpContext_123 := actual_IrpContext_123;
    Irp_53 := actual_Irp_53;
    call {:si_unique_call 2644} IrpSp_32 := sdv_IoGetCurrentIrpStackLocation(Irp_53);
    assume {:nonnull} IrpSp_32 != 0;
    assume IrpSp_32 > 0;
    havoc vslice_dummy_var_1486;
    call {:si_unique_call 2645} sdv_1260 := FatDecodeFileObject(vslice_dummy_var_1486, Vcb_80, Fcb_47, Ccb_28);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_1260 != 4;
    call {:si_unique_call 2646} FatCompleteRequest_Real(IrpContext_123, Irp_53, -1073741811);
    Tmp_2105 := -1073741811;
    goto L1;

  L1:
    return;

  anon17_Then:
    assume {:partition} sdv_1260 == 4;
    assume {:nonnull} Ccb_28 != 0;
    assume Ccb_28 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Ccb_28 != 0;
    assume Ccb_28 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 2647} vslice_dummy_var_364 := corral_nondet();
    assume {:nonnull} Vcb_80 != 0;
    assume Vcb_80 > 0;
    havoc vslice_dummy_var_1487;
    call {:si_unique_call 2648} sdv_1263 := FatAcquireExclusiveVcb(IrpContext_123, vslice_dummy_var_1487);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_1263 != 0;
    assume {:nonnull} IrpSp_32 != 0;
    assume IrpSp_32 > 0;
    assume {:nonnull} Vcb_80 != 0;
    assume Vcb_80 > 0;
    havoc vslice_dummy_var_1488;
    havoc vslice_dummy_var_1489;
    call {:si_unique_call 2649} Status_46 := FatLockVolumeInternal(IrpContext_123, vslice_dummy_var_1488, vslice_dummy_var_1489);
    call {:si_unique_call 2650} sdv_1261 := sdv_AbnormalTermination();
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_1261 != 0;
    call {:si_unique_call 2651} sdv_1254 := ExIsResourceAcquiredExclusiveLite(0);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_1254 == 0;
    goto L69;

  L69:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Status_46 >= 0;
    call {:si_unique_call 2652} sdv_1265 := sdv_AbnormalTermination();
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_1265 == 0;
    goto L77;

  L77:
    call {:si_unique_call 2653} FatCompleteRequest_Real(IrpContext_123, Irp_53, Status_46);
    Tmp_2105 := Status_46;
    goto L1;

  anon24_Then:
    assume {:partition} sdv_1265 != 0;
    goto L70;

  L70:
    call {:si_unique_call 2654} vslice_dummy_var_365 := corral_nondet();
    goto L77;

  anon23_Then:
    assume {:partition} 0 > Status_46;
    goto L70;

  anon22_Then:
    assume {:partition} sdv_1254 != 0;
    goto L62;

  L62:
    call {:si_unique_call 2655} ExReleaseResourceLite(0);
    goto L69;

  anon21_Then:
    assume {:partition} sdv_1261 == 0;
    goto L62;

  anon20_Then:
    assume {:partition} sdv_1263 == 0;
    call {:si_unique_call 2656} Status_46 := FatFsdPostRequest(IrpContext_123, Irp_53);
    Tmp_2105 := Status_46;
    goto L1;

  anon19_Then:
    goto L21;

  L21:
    call {:si_unique_call 2657} FatCompleteRequest_Real(IrpContext_123, Irp_53, -1073741811);
    Tmp_2105 := -1073741811;
    goto L1;

  anon18_Then:
    goto L21;
}



procedure {:origName "FatIsMediaWriteProtected"} FatIsMediaWriteProtected(actual_IrpContext_124: int, actual_TargetDeviceObject_3: int) returns (Tmp_2107: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2107 == 0 || Tmp_2107 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsMediaWriteProtected"} FatIsMediaWriteProtected(actual_IrpContext_124: int, actual_TargetDeviceObject_3: int) returns (Tmp_2107: int)
{
  var {:pointer} Irp_54: int;
  var {:scalar} Status_47: int;
  var {:scalar} Iosb_20: int;
  var {:scalar} Event_8: int;
  var {:pointer} sdv_1269: int;
  var {:pointer} TargetDeviceObject_3: int;
  var vslice_dummy_var_366: int;

  anon0:
    call {:si_unique_call 2658} Iosb_20 := __HAVOC_malloc(12);
    call {:si_unique_call 2659} Event_8 := __HAVOC_malloc(124);
    TargetDeviceObject_3 := actual_TargetDeviceObject_3;
    call {:si_unique_call 2660} KeInitializeEvent(Event_8, 0, 0);
    call {:si_unique_call 2661} Irp_54 := IoBuildDeviceIoControlRequest(458788, 0, 0, 0, 0, 0, 0, 0, Iosb_20);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Irp_54 != 0;
    call {:si_unique_call 2662} sdv_1269 := sdv_IoGetNextIrpStackLocation(Irp_54);
    assume {:nonnull} sdv_1269 != 0;
    assume sdv_1269 > 0;
    call {:si_unique_call 2663} Status_47 := sdv_IoCallDriver(TargetDeviceObject_3, Irp_54);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Status_47 == 259;
    call {:si_unique_call 2664} vslice_dummy_var_366 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Iosb_20 != 0;
    assume Iosb_20 > 0;
    havoc Status_47;
    goto L25;

  L25:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Status_47 != -1073741662;
    Tmp_2107 := 0;
    goto L36;

  L36:
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} Status_47 == -1073741662;
    Tmp_2107 := 1;
    goto L36;

  anon8_Then:
    assume {:partition} Status_47 != 259;
    goto L25;

  anon7_Then:
    assume {:partition} Irp_54 == 0;
    Tmp_2107 := 0;
    goto L1;
}



procedure {:origName "FatAddToWorkque"} FatAddToWorkque(actual_IrpContext_125: int, actual_Irp_55: int);
  modifies alloc, locked, queued, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAddToWorkque"} FatAddToWorkque(actual_IrpContext_125: int, actual_Irp_55: int)
{
  var {:scalar} SavedIrql_5: int;
  var {:pointer} Tmp_2109: int;
  var {:pointer} Vdo: int;
  var {:pointer} IrpSp_33: int;
  var {:pointer} sdv_1273: int;
  var {:pointer} IrpContext_125: int;
  var {:pointer} Irp_55: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_1490: int;

  anon0:
    call {:si_unique_call 2665} vslice_dummy_var_367 := __HAVOC_malloc(4);
    IrpContext_125 := actual_IrpContext_125;
    Irp_55 := actual_Irp_55;
    call {:si_unique_call 2666} IrpSp_33 := sdv_IoGetCurrentIrpStackLocation(Irp_55);
    assume {:nonnull} IrpSp_33 != 0;
    assume IrpSp_33 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} IrpSp_33 != 0;
    assume IrpSp_33 > 0;
    havoc vslice_dummy_var_1490;
    call {:si_unique_call 2667} sdv_1273 := sdv_containing_record(vslice_dummy_var_1490, 0);
    Vdo := sdv_1273;
    call {:si_unique_call 2668} Tmp_2109 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2109 != 0;
    assume Tmp_2109 > 0;
    call {:si_unique_call 2669} sdv_KeAcquireSpinLock(0, Tmp_2109);
    assume {:nonnull} Tmp_2109 != 0;
    assume Tmp_2109 > 0;
    havoc SavedIrql_5;
    assume {:nonnull} Vdo != 0;
    assume Vdo > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} IrpContext_125 != 0;
    assume IrpContext_125 > 0;
    assume {:nonnull} Vdo != 0;
    assume Vdo > 0;
    call {:si_unique_call 2670} vslice_dummy_var_368 := sdv_InsertTailList(OverflowQueue__VOLUME_DEVICE_OBJECT(Vdo), List__WORK_QUEUE_ITEM(WorkQueueItem__IRP_CONTEXT(IrpContext_125)));
    assume {:nonnull} Vdo != 0;
    assume Vdo > 0;
    call {:si_unique_call 2671} sdv_KeReleaseSpinLock(0, SavedIrql_5);
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:nonnull} Vdo != 0;
    assume Vdo > 0;
    call {:si_unique_call 2672} sdv_KeReleaseSpinLock(0, SavedIrql_5);
    goto L10;

  L10:
    assume {:nonnull} IrpContext_125 != 0;
    assume IrpContext_125 > 0;
    assume {:nonnull} IrpContext_125 != 0;
    assume IrpContext_125 > 0;
    assume {:nonnull} IrpContext_125 != 0;
    assume IrpContext_125 > 0;
    call {:si_unique_call 2673} sdv_ExQueueWorkItem(0, 0);
    goto L1;

  anon5_Then:
    goto L10;
}



procedure {:origName "FatPrePostIrp"} FatPrePostIrp(actual_Context_8: int, actual_Irp_56: int);
  modifies alloc, markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPrePostIrp"} FatPrePostIrp(actual_Context_8: int, actual_Irp_56: int)
{
  var {:scalar} Tmp_2112: int;
  var {:pointer} IrpSp_34: int;
  var {:scalar} Tmp_2114: int;
  var {:pointer} IrpContext_126: int;
  var {:pointer} Context_8: int;
  var {:pointer} Irp_56: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_1491: int;
  var vslice_dummy_var_1492: int;
  var vslice_dummy_var_1493: int;
  var vslice_dummy_var_1494: int;

  anon0:
    call {:si_unique_call 2674} vslice_dummy_var_369 := __HAVOC_malloc(4);
    Context_8 := actual_Context_8;
    Irp_56 := actual_Irp_56;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Irp_56 != 0;
    call {:si_unique_call 2675} IrpSp_34 := sdv_IoGetCurrentIrpStackLocation(Irp_56);
    IrpContext_126 := Context_8;
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto L13;

  L13:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L18;

  L18:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto L20;

  L20:
    call {:si_unique_call 2676} sdv_IoMarkIrpPending(0);
    goto L1;

  L1:
    return;

  anon37_Then:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} IrpSp_34 != 0;
    assume IrpSp_34 > 0;
    havoc Tmp_2112;
    goto L26;

  L26:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    Tmp_2114 := 1;
    goto L29;

  L29:
    call {:si_unique_call 2677} FatLockUserBuffer(IrpContext_126, Irp_56, Tmp_2114, Tmp_2112);
    goto L20;

  anon39_Then:
    Tmp_2114 := 0;
    goto L29;

  anon38_Then:
    assume {:nonnull} IrpSp_34 != 0;
    assume IrpSp_34 > 0;
    havoc Tmp_2112;
    goto L26;

  anon34_Then:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} IrpSp_34 != 0;
    assume IrpSp_34 > 0;
    havoc vslice_dummy_var_1491;
    call {:si_unique_call 2678} FatLockUserBuffer(IrpContext_126, Irp_56, 1, vslice_dummy_var_1491);
    goto L20;

  anon42_Then:
    goto L33;

  L33:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} IrpSp_34 != 0;
    assume IrpSp_34 > 0;
    havoc vslice_dummy_var_1492;
    call {:si_unique_call 2679} FatLockUserBuffer(IrpContext_126, Irp_56, 1, vslice_dummy_var_1492);
    goto L20;

  anon41_Then:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} IrpSp_34 != 0;
    assume IrpSp_34 > 0;
    havoc vslice_dummy_var_1493;
    call {:si_unique_call 2680} FatLockUserBuffer(IrpContext_126, Irp_56, 0, vslice_dummy_var_1493);
    goto L20;

  anon43_Then:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} IrpContext_126 != 0;
    assume IrpContext_126 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} IrpSp_34 != 0;
    assume IrpSp_34 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L49;

  L49:
    assume {:nonnull} IrpSp_34 != 0;
    assume IrpSp_34 > 0;
    havoc vslice_dummy_var_1494;
    call {:si_unique_call 2681} FatLockUserBuffer(IrpContext_126, Irp_56, 1, vslice_dummy_var_1494);
    goto L20;

  anon46_Then:
    assume {:nonnull} IrpSp_34 != 0;
    assume IrpSp_34 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L49;

  anon47_Then:
    goto L20;

  anon45_Then:
    goto L20;

  anon44_Then:
    goto L20;

  anon40_Then:
    goto L33;

  anon36_Then:
    goto L18;

  anon35_Then:
    goto L13;

  anon48_Then:
    goto L13;

  anon33_Then:
    assume {:partition} Irp_56 == 0;
    goto L1;
}



procedure {:origName "FatFsdPostRequest"} FatFsdPostRequest(actual_IrpContext_127: int, actual_Irp_57: int) returns (Tmp_2115: int);
  modifies alloc, markedPending, locked, queued, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_2115 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdPostRequest"} FatFsdPostRequest(actual_IrpContext_127: int, actual_Irp_57: int) returns (Tmp_2115: int)
{
  var {:pointer} IrpContext_127: int;
  var {:pointer} Irp_57: int;

  anon0:
    IrpContext_127 := actual_IrpContext_127;
    Irp_57 := actual_Irp_57;
    call {:si_unique_call 2682} FatPrePostIrp(IrpContext_127, Irp_57);
    call {:si_unique_call 2683} FatAddToWorkque(IrpContext_127, Irp_57);
    Tmp_2115 := 259;
    return;
}



procedure {:origName "_sdv_init26"} _sdv_init26();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init26"} _sdv_init26()
{
  var vslice_dummy_var_370: int;

  anon0:
    call {:si_unique_call 2684} vslice_dummy_var_370 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatCommonFlushBuffers"} FatCommonFlushBuffers(actual_IrpContext_128: int, actual_Irp_58: int) returns (Tmp_2119: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonFlushBuffers"} FatCommonFlushBuffers(actual_IrpContext_128: int, actual_Irp_58: int) returns (Tmp_2119: int)
{
  var {:scalar} DriverStatus: int;
  var {:pointer} Ccb_29: int;
  var {:pointer} Fcb_48: int;
  var {:scalar} Status_48: int;
  var {:pointer} FileObject_37: int;
  var {:pointer} NextIrpSp_1: int;
  var {:scalar} FcbAcquired_4: int;
  var {:pointer} DirentBcb_10: int;
  var {:scalar} TypeOfOpen_8: int;
  var {:pointer} IrpSp_35: int;
  var {:scalar} sdv_1281: int;
  var {:scalar} Tmp_2120: int;
  var {:pointer} Vcb_81: int;
  var {:scalar} VcbAcquired_2: int;
  var {:pointer} Tmp_2122: int;
  var {:pointer} Tmp_2123: int;
  var {:pointer} IrpContext_128: int;
  var {:pointer} Irp_58: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_1495: int;
  var vslice_dummy_var_1496: int;
  var vslice_dummy_var_1497: int;
  var vslice_dummy_var_1498: int;
  var vslice_dummy_var_1499: int;
  var vslice_dummy_var_1500: int;
  var vslice_dummy_var_1501: int;
  var vslice_dummy_var_1502: int;
  var vslice_dummy_var_1503: int;
  var vslice_dummy_var_1504: int;
  var vslice_dummy_var_1505: int;

  anon0:
    call {:si_unique_call 2685} Ccb_29 := __HAVOC_malloc(4);
    call {:si_unique_call 2686} Fcb_48 := __HAVOC_malloc(4);
    call {:si_unique_call 2687} Vcb_81 := __HAVOC_malloc(4);
    IrpContext_128 := actual_IrpContext_128;
    Irp_58 := actual_Irp_58;
    VcbAcquired_2 := 0;
    FcbAcquired_4 := 0;
    DirentBcb_10 := 0;
    call {:si_unique_call 2688} sdv_do_paged_code_check();
    call {:si_unique_call 2689} IrpSp_35 := sdv_IoGetCurrentIrpStackLocation(Irp_58);
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    havoc FileObject_37;
    call {:si_unique_call 2690} TypeOfOpen_8 := FatDecodeFileObject(FileObject_37, Vcb_81, Fcb_48, Ccb_29);
    assume {:nonnull} IrpContext_128 != 0;
    assume IrpContext_128 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Status_48 := 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} TypeOfOpen_8 != 2;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} TypeOfOpen_8 != 3;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} TypeOfOpen_8 != 4;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} TypeOfOpen_8 != 5;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} TypeOfOpen_8 != 6;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} TypeOfOpen_8 == 7;
    goto L44;

  L44:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} DirentBcb_10 != 0;
    DirentBcb_10 := 0;
    goto L45;

  L45:
    call {:si_unique_call 2691} FatUnpinRepinnedBcbs(IrpContext_128);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} DirentBcb_10 != 0;
    DirentBcb_10 := 0;
    goto L92;

  L92:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} VcbAcquired_2 != 0;
    call {:si_unique_call 2692} ExReleaseResourceLite(0);
    goto L97;

  L97:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} FcbAcquired_4 != 0;
    call {:si_unique_call 2693} ExReleaseResourceLite(0);
    goto L101;

  L101:
    call {:si_unique_call 2694} sdv_1281 := sdv_AbnormalTermination();
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_1281 == 0;
    call {:si_unique_call 2695} NextIrpSp_1 := sdv_IoGetNextIrpStackLocation(Irp_58);
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    assume {:nonnull} IrpSp_35 != 0;
    assume IrpSp_35 > 0;
    assume {:nonnull} NextIrpSp_1 != 0;
    assume NextIrpSp_1 > 0;
    Tmp_2122 := Status_48;
    call {:si_unique_call 2696} sdv_IoSetCompletionRoutine(Irp_58, li2bplFunctionConstant332, Tmp_2122, 1, 1, 1);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume Irp_58 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2697} SLIC_sdv_IoCallDriver_entry(0);
    goto L206;

  L206:
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    havoc vslice_dummy_var_1495;
    call {:si_unique_call 2698} DriverStatus := sdv_IoCallDriver(vslice_dummy_var_1495, Irp_58);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} DriverStatus == -1073741808;
    Tmp_2120 := Status_48;
    goto L127;

  L127:
    Status_48 := Tmp_2120;
    call {:si_unique_call 2699} FatCompleteRequest_Real(IrpContext_128, 0, 0);
    goto L109;

  L109:
    Tmp_2119 := Status_48;
    goto L1;

  L1:
    return;

  anon50_Then:
    assume {:partition} DriverStatus != -1073741808;
    Tmp_2120 := DriverStatus;
    goto L127;

  anon49_Then:
    assume !(Irp_58 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L206;

  anon48_Then:
    assume {:partition} sdv_1281 != 0;
    goto L109;

  anon47_Then:
    assume {:partition} FcbAcquired_4 == 0;
    goto L101;

  anon46_Then:
    assume {:partition} VcbAcquired_2 == 0;
    goto L97;

  anon45_Then:
    assume {:partition} DirentBcb_10 == 0;
    goto L92;

  anon44_Then:
    assume {:partition} DirentBcb_10 == 0;
    goto L45;

  anon57_Then:
    assume {:partition} TypeOfOpen_8 != 7;
    call {:si_unique_call 2700} KeBugCheckEx(35, 1180020, TypeOfOpen_8, 0, 0);
    goto L44;

  anon58_Then:
    assume {:partition} TypeOfOpen_8 == 6;
    goto L44;

  anon59_Then:
    assume {:partition} TypeOfOpen_8 == 5;
    goto L44;

  anon60_Then:
    assume {:partition} TypeOfOpen_8 == 4;
    goto L131;

  L131:
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    havoc vslice_dummy_var_1496;
    call {:si_unique_call 2701} vslice_dummy_var_372 := FatAcquireExclusiveVcb(IrpContext_128, vslice_dummy_var_1496);
    VcbAcquired_2 := 1;
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    havoc vslice_dummy_var_1497;
    call {:si_unique_call 2702} Status_48 := FatFlushVolume(IrpContext_128, vslice_dummy_var_1497, 1);
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 2703} vslice_dummy_var_373 := KeCancelTimer(0);
    call {:si_unique_call 2704} vslice_dummy_var_374 := KeRemoveQueueDpc(0);
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L152;

  L152:
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    havoc vslice_dummy_var_1498;
    call {:si_unique_call 2705} vslice_dummy_var_375 := FatToggleMediaEjectDisable(IrpContext_128, vslice_dummy_var_1498, 0);
    goto L44;

  anon54_Then:
    goto L44;

  anon53_Then:
    goto L44;

  anon52_Then:
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    havoc vslice_dummy_var_1499;
    call {:si_unique_call 2706} FatMarkVolume#1(IrpContext_128, vslice_dummy_var_1499, 0);
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    goto L152;

  anon51_Then:
    goto L44;

  anon61_Then:
    assume {:partition} TypeOfOpen_8 == 3;
    assume {:nonnull} Fcb_48 != 0;
    assume Fcb_48 > 0;
    havoc Tmp_2123;
    assume {:nonnull} Tmp_2123 != 0;
    assume Tmp_2123 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L131;

  anon63_Then:
    goto L44;

  anon62_Then:
    assume {:partition} TypeOfOpen_8 == 2;
    assume {:nonnull} Fcb_48 != 0;
    assume Fcb_48 > 0;
    havoc vslice_dummy_var_1500;
    call {:si_unique_call 2707} vslice_dummy_var_371 := FatAcquireExclusiveFcb(IrpContext_128, vslice_dummy_var_1500);
    FcbAcquired_4 := 1;
    assume {:nonnull} Fcb_48 != 0;
    assume Fcb_48 > 0;
    havoc vslice_dummy_var_1501;
    call {:si_unique_call 2708} FatVerifyFcb(IrpContext_128, vslice_dummy_var_1501);
    assume {:nonnull} Fcb_48 != 0;
    assume Fcb_48 > 0;
    havoc vslice_dummy_var_1502;
    call {:si_unique_call 2709} Status_48 := FatFlushFile(IrpContext_128, vslice_dummy_var_1502, 1);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Status_48 >= 0;
    assume {:nonnull} FileObject_37 != 0;
    assume FileObject_37 > 0;
    assume {:nonnull} Ccb_29 != 0;
    assume Ccb_29 > 0;
    assume {:nonnull} Fcb_48 != 0;
    assume Fcb_48 > 0;
    havoc vslice_dummy_var_1503;
    havoc vslice_dummy_var_1504;
    call {:si_unique_call 2710} FatUpdateDirentFromFcb(IrpContext_128, FileObject_37, vslice_dummy_var_1503, vslice_dummy_var_1504);
    assume {:nonnull} Fcb_48 != 0;
    assume Fcb_48 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Vcb_81 != 0;
    assume Vcb_81 > 0;
    havoc vslice_dummy_var_1505;
    call {:si_unique_call 2711} Status_48 := FatFlushFat(IrpContext_128, vslice_dummy_var_1505);
    assume {:nonnull} Fcb_48 != 0;
    assume Fcb_48 > 0;
    goto L174;

  L174:
    assume {:nonnull} IrpContext_128 != 0;
    assume IrpContext_128 > 0;
    goto L44;

  anon56_Then:
    goto L174;

  anon55_Then:
    assume {:partition} 0 > Status_48;
    goto L44;

  anon43_Then:
    call {:si_unique_call 2712} Status_48 := FatFsdPostRequest(IrpContext_128, Irp_58);
    Tmp_2119 := Status_48;
    goto L1;
}



procedure {:origName "FatFlushDirectory"} FatFlushDirectory(actual_IrpContext_129: int, actual_Dcb_11: int, actual_FlushType_3: int) returns (Tmp_2124: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFlushDirectory"} FatFlushDirectory(actual_IrpContext_129: int, actual_Dcb_11: int, actual_FlushType_3: int) returns (Tmp_2124: int)
{
  var {:scalar} ReturnStatus: int;
  var {:pointer} NextFcb_3: int;
  var {:pointer} Fcb_49: int;
  var {:scalar} ClearWaitOnExit: int;
  var {:pointer} Dirent_21: int;
  var {:scalar} Status_49: int;
  var {:pointer} DirentBcb_11: int;
  var {:pointer} Tmp_2125: int;
  var {:pointer} Tmp_2126: int;
  var {:pointer} Vcb_82: int;
  var {:scalar} ClearWriteThroughOnExit: int;
  var {:pointer} IrpContext_129: int;
  var {:pointer} Dcb_11: int;
  var {:scalar} FlushType_3: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_1506: int;

  anon0:
    call {:si_unique_call 2713} Dirent_21 := __HAVOC_malloc(4);
    call {:si_unique_call 2714} DirentBcb_11 := __HAVOC_malloc(4);
    IrpContext_129 := actual_IrpContext_129;
    Dcb_11 := actual_Dcb_11;
    FlushType_3 := actual_FlushType_3;
    assume {:nonnull} DirentBcb_11 != 0;
    assume DirentBcb_11 > 0;
    ReturnStatus := 0;
    ClearWriteThroughOnExit := 0;
    ClearWaitOnExit := 0;
    call {:si_unique_call 2715} sdv_do_paged_code_check();
    assume {:nonnull} IrpContext_129 != 0;
    assume IrpContext_129 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L21;

  L21:
    assume {:nonnull} IrpContext_129 != 0;
    assume IrpContext_129 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L23;

  L23:
    assume {:nonnull} Dcb_11 != 0;
    assume Dcb_11 > 0;
    havoc Vcb_82;
    Fcb_49 := Dcb_11;
    goto L25;

  L25:
    call {:si_unique_call 2716} ReturnStatus, NextFcb_3, Fcb_49, Status_49, Tmp_2125, vslice_dummy_var_376 := FatFlushDirectory_loop_L25(ReturnStatus, NextFcb_3, Fcb_49, Dirent_21, Status_49, DirentBcb_11, Tmp_2125, Vcb_82, IrpContext_129, Dcb_11, FlushType_3, vslice_dummy_var_376);
    goto L25_last;

  L25_last:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Fcb_49 != 0;
    call {:si_unique_call 2717} NextFcb_3 := FatGetNextFcbTopDown(IrpContext_129, Fcb_49, Dcb_11);
    Tmp_2125 := Fcb_49;
    assume {:nonnull} Tmp_2125 != 0;
    assume Tmp_2125 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Vcb_82 != 0;
    assume Vcb_82 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Fcb_49 != 0;
    assume Fcb_49 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Fcb_49 != 0;
    assume Fcb_49 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L35;

  L35:
    call {:si_unique_call 2718} vslice_dummy_var_376 := FatAcquireExclusiveFcb(IrpContext_129, Fcb_49);
    assume {:nonnull} Vcb_82 != 0;
    assume Vcb_82 > 0;
    call {:si_unique_call 2719} FatVerifyFcb(IrpContext_129, Fcb_49);
    assume {:nonnull} Fcb_49 != 0;
    assume Fcb_49 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L78;

  L78:
    assume {:nonnull} DirentBcb_11 != 0;
    assume DirentBcb_11 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} DirentBcb_11 != 0;
    assume DirentBcb_11 > 0;
    goto L79;

  L79:
    assume {:nonnull} Vcb_82 != 0;
    assume Vcb_82 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 2720} ExReleaseResourceLite(0);
    goto L32;

  L32:
    Fcb_49 := NextFcb_3;
    goto L32_dummy;

  L32_dummy:
    assume false;
    return;

  anon54_Then:
    goto L32;

  anon53_Then:
    goto L79;

  anon51_Then:
    assume {:nonnull} Fcb_49 != 0;
    assume Fcb_49 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Fcb_49 != 0;
    assume Fcb_49 > 0;
    havoc vslice_dummy_var_1506;
    call {:si_unique_call 2721} FatTruncateFileAllocation(IrpContext_129, Fcb_49, vslice_dummy_var_1506);
    goto L87;

  L87:
    call {:si_unique_call 2722} FatGetDirentFromFcbOrDcb(IrpContext_129, Fcb_49, Dirent_21, DirentBcb_11);
    assume {:nonnull} Dirent_21 != 0;
    assume Dirent_21 > 0;
    assume {:nonnull} Fcb_49 != 0;
    assume Fcb_49 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_21] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_21] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Dirent_21 != 0;
    assume Dirent_21 > 0;
    assume {:nonnull} Fcb_49 != 0;
    assume Fcb_49 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_21] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_21] > 0;
    goto L94;

  L94:
    assume {:nonnull} DirentBcb_11 != 0;
    assume DirentBcb_11 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} DirentBcb_11 != 0;
    assume DirentBcb_11 > 0;
    goto L96;

  L96:
    call {:si_unique_call 2723} Status_49 := FatFlushFile(IrpContext_129, Fcb_49, FlushType_3);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Status_49 < 0;
    ReturnStatus := Status_49;
    goto L78;

  anon57_Then:
    assume {:partition} 0 <= Status_49;
    goto L78;

  anon56_Then:
    goto L96;

  anon55_Then:
    goto L94;

  anon52_Then:
    goto L87;

  anon50_Then:
    goto L32;

  anon49_Then:
    goto L35;

  anon48_Then:
    goto L32;

  anon65_Then:
    goto L32;

  anon47_Then:
    assume {:partition} Fcb_49 == 0;
    Fcb_49 := Dcb_11;
    goto L106;

  L106:
    call {:si_unique_call 2724} ReturnStatus, NextFcb_3, Fcb_49, Status_49, Tmp_2126 := FatFlushDirectory_loop_L106(ReturnStatus, NextFcb_3, Fcb_49, Status_49, Tmp_2126, IrpContext_129, Dcb_11, FlushType_3);
    goto L106_last;

  L106_last:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Fcb_49 != 0;
    call {:si_unique_call 2725} NextFcb_3 := FatGetNextFcbTopDown(IrpContext_129, Fcb_49, Dcb_11);
    Tmp_2126 := Fcb_49;
    assume {:nonnull} Tmp_2126 != 0;
    assume Tmp_2126 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Fcb_49 != 0;
    assume Fcb_49 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Fcb_49 != 0;
    assume Fcb_49 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L117;

  L117:
    call {:si_unique_call 2726} FatVerifyFcb(IrpContext_129, Fcb_49);
    assume {:nonnull} Fcb_49 != 0;
    assume Fcb_49 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 2727} Status_49 := FatFlushFile(IrpContext_129, Fcb_49, FlushType_3);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Status_49 < 0;
    ReturnStatus := Status_49;
    goto L115;

  L115:
    Fcb_49 := NextFcb_3;
    goto L115_dummy;

  L115_dummy:
    assume false;
    return;

  anon62_Then:
    assume {:partition} 0 <= Status_49;
    goto L115;

  anon61_Then:
    goto L115;

  anon60_Then:
    goto L115;

  anon59_Then:
    goto L117;

  anon66_Then:
    goto L115;

  anon58_Then:
    assume {:partition} Fcb_49 == 0;
    call {:si_unique_call 2728} FatUnpinRepinnedBcbs(IrpContext_129);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} ClearWriteThroughOnExit != 0;
    assume {:nonnull} IrpContext_129 != 0;
    assume IrpContext_129 > 0;
    goto L148;

  L148:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} ClearWaitOnExit != 0;
    assume {:nonnull} IrpContext_129 != 0;
    assume IrpContext_129 > 0;
    goto L150;

  L150:
    Tmp_2124 := ReturnStatus;
    return;

  anon64_Then:
    assume {:partition} ClearWaitOnExit == 0;
    goto L150;

  anon63_Then:
    assume {:partition} ClearWriteThroughOnExit == 0;
    goto L148;

  anon46_Then:
    ClearWaitOnExit := 1;
    assume {:nonnull} IrpContext_129 != 0;
    assume IrpContext_129 > 0;
    goto L23;

  anon45_Then:
    ClearWriteThroughOnExit := 1;
    assume {:nonnull} IrpContext_129 != 0;
    assume IrpContext_129 > 0;
    goto L21;
}



procedure {:origName "FatFlushVolume"} FatFlushVolume(actual_IrpContext_130: int, actual_Vcb_83: int, actual_FlushType_4: int) returns (Tmp_2128: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFlushVolume"} FatFlushVolume(actual_IrpContext_130: int, actual_Vcb_83: int, actual_FlushType_4: int) returns (Tmp_2128: int)
{
  var {:scalar} ReturnStatus_1: int;
  var {:scalar} Status_50: int;
  var {:pointer} IrpContext_130: int;
  var {:pointer} Vcb_83: int;
  var {:scalar} FlushType_4: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_1507: int;

  anon0:
    IrpContext_130 := actual_IrpContext_130;
    Vcb_83 := actual_Vcb_83;
    FlushType_4 := actual_FlushType_4;
    ReturnStatus_1 := 0;
    call {:si_unique_call 2729} sdv_do_paged_code_check();
    assume {:nonnull} Vcb_83 != 0;
    assume Vcb_83 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_2128 := 0;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:nonnull} Vcb_83 != 0;
    assume Vcb_83 > 0;
    havoc vslice_dummy_var_1507;
    call {:si_unique_call 2730} Status_50 := FatFlushDirectory(IrpContext_130, vslice_dummy_var_1507, FlushType_4);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_50 >= 0;
    goto L17;

  L17:
    call {:si_unique_call 2731} Status_50 := FatFlushFat(IrpContext_130, Vcb_83);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Status_50 >= 0;
    goto L23;

  L23:
    assume {:nonnull} Vcb_83 != 0;
    assume Vcb_83 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Vcb_83 != 0;
    assume Vcb_83 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 2732} vslice_dummy_var_377 := FatToggleMediaEjectDisable(IrpContext_130, Vcb_83, 0);
    goto L24;

  L24:
    Tmp_2128 := ReturnStatus_1;
    goto L1;

  anon15_Then:
    goto L24;

  anon14_Then:
    goto L24;

  anon13_Then:
    assume {:partition} 0 > Status_50;
    ReturnStatus_1 := Status_50;
    goto L23;

  anon12_Then:
    assume {:partition} 0 > Status_50;
    ReturnStatus_1 := Status_50;
    goto L17;
}



procedure {:origName "FatFlushFile"} FatFlushFile(actual_IrpContext_131: int, actual_Fcb_50: int, actual_FlushType_5: int) returns (Tmp_2130: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFlushFile"} FatFlushFile(actual_IrpContext_131: int, actual_Fcb_50: int, actual_FlushType_5: int) returns (Tmp_2130: int)
{
  var {:scalar} Iosb_21: int;
  var {:pointer} Vcb_84: int;
  var {:pointer} IrpContext_131: int;
  var {:pointer} Fcb_50: int;
  var {:scalar} FlushType_5: int;
  var vslice_dummy_var_378: int;

  anon0:
    call {:si_unique_call 2733} Iosb_21 := __HAVOC_malloc(12);
    IrpContext_131 := actual_IrpContext_131;
    Fcb_50 := actual_Fcb_50;
    FlushType_5 := actual_FlushType_5;
    assume {:nonnull} Fcb_50 != 0;
    assume Fcb_50 > 0;
    havoc Vcb_84;
    call {:si_unique_call 2734} sdv_do_paged_code_check();
    assume {:nonnull} Fcb_50 != 0;
    assume Fcb_50 > 0;
    assume {:nonnull} Vcb_84 != 0;
    assume Vcb_84 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L16;

  L16:
    assume {:nonnull} Iosb_21 != 0;
    assume Iosb_21 > 0;
    havoc Tmp_2130;
    return;

  anon5_Then:
    call {:si_unique_call 2735} vslice_dummy_var_378 := ExAcquireResourceExclusiveLite(0, 1);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} FlushType_5 == 2;
    call {:si_unique_call 2736} FatMarkFcbCondition(IrpContext_131, Fcb_50, 2, 0);
    goto L18;

  L18:
    call {:si_unique_call 2737} ExReleaseResourceLite(0);
    goto L16;

  anon6_Then:
    assume {:partition} FlushType_5 != 2;
    goto L18;
}



procedure {:origName "FatHijackIrpAndFlushDevice"} FatHijackIrpAndFlushDevice(actual_IrpContext_132: int, actual_Irp_59: int, actual_TargetDeviceObject_4: int) returns (Tmp_2133: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatHijackIrpAndFlushDevice"} FatHijackIrpAndFlushDevice(actual_IrpContext_132: int, actual_Irp_59: int, actual_TargetDeviceObject_4: int) returns (Tmp_2133: int)
{
  var {:scalar} Status_51: int;
  var {:pointer} NextIrpSp_2: int;
  var {:scalar} Event_9: int;
  var {:pointer} sdv_1310: int;
  var {:pointer} Irp_59: int;
  var {:pointer} TargetDeviceObject_4: int;
  var vslice_dummy_var_379: int;

  anon0:
    call {:si_unique_call 2738} Event_9 := __HAVOC_malloc(124);
    Irp_59 := actual_Irp_59;
    TargetDeviceObject_4 := actual_TargetDeviceObject_4;
    call {:si_unique_call 2739} sdv_do_paged_code_check();
    call {:si_unique_call 2740} NextIrpSp_2 := sdv_IoGetNextIrpStackLocation(Irp_59);
    call {:si_unique_call 2741} sdv_1310 := sdv_IoGetCurrentIrpStackLocation(Irp_59);
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} sdv_1310 != 0;
    assume sdv_1310 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    assume {:nonnull} NextIrpSp_2 != 0;
    assume NextIrpSp_2 > 0;
    call {:si_unique_call 2742} KeInitializeEvent(Event_9, 0, 0);
    call {:si_unique_call 2743} sdv_IoSetCompletionRoutine(Irp_59, li2bplFunctionConstant338, Event_9, 1, 1, 1);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume Irp_59 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2744} SLIC_sdv_IoCallDriver_entry(0);
    goto L42;

  L42:
    call {:si_unique_call 2745} Status_51 := sdv_IoCallDriver(TargetDeviceObject_4, Irp_59);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Status_51 == 259;
    call {:si_unique_call 2746} vslice_dummy_var_379 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_59 != 0;
    assume Irp_59 > 0;
    havoc Status_51;
    goto L30;

  L30:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Status_51 == -1073741808;
    Status_51 := 0;
    goto L35;

  L35:
    assume {:nonnull} Irp_59 != 0;
    assume Irp_59 > 0;
    assume {:nonnull} Irp_59 != 0;
    assume Irp_59 > 0;
    Tmp_2133 := Status_51;
    return;

  anon9_Then:
    assume {:partition} Status_51 != -1073741808;
    goto L35;

  anon8_Then:
    assume {:partition} Status_51 != 259;
    goto L30;

  anon7_Then:
    assume !(Irp_59 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L42;
}



procedure {:origName "_sdv_init10"} _sdv_init10();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init10"} _sdv_init10()
{
  var vslice_dummy_var_380: int;

  anon0:
    call {:si_unique_call 2747} vslice_dummy_var_380 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatFlushDirentForFile"} FatFlushDirentForFile(actual_IrpContext_133: int, actual_Fcb_51: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFlushDirentForFile"} FatFlushDirentForFile(actual_IrpContext_133: int, actual_Fcb_51: int)
{
  var {:scalar} Iosb_22: int;
  var {:pointer} Tmp_2138: int;
  var {:scalar} sdv_1314: int;
  var {:scalar} FileOffset_3: int;
  var {:pointer} Tmp_2141: int;
  var {:pointer} IrpContext_133: int;
  var {:pointer} Fcb_51: int;
  var boogieTmp: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_1508: int;
  var vslice_dummy_var_1509: int;

  anon0:
    call {:si_unique_call 2748} vslice_dummy_var_381 := __HAVOC_malloc(4);
    call {:si_unique_call 2749} Iosb_22 := __HAVOC_malloc(12);
    call {:si_unique_call 2750} FileOffset_3 := __HAVOC_malloc(20);
    IrpContext_133 := actual_IrpContext_133;
    Fcb_51 := actual_Fcb_51;
    call {:si_unique_call 2751} sdv_do_paged_code_check();
    assume {:nonnull} Fcb_51 != 0;
    assume Fcb_51 > 0;
    assume {:nonnull} FileOffset_3 != 0;
    assume FileOffset_3 > 0;
    assume {:nonnull} Fcb_51 != 0;
    assume Fcb_51 > 0;
    havoc Tmp_2141;
    assume {:nonnull} Tmp_2141 != 0;
    assume Tmp_2141 > 0;
    assume {:nonnull} Iosb_22 != 0;
    assume Iosb_22 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} Fcb_51 != 0;
    assume Fcb_51 > 0;
    havoc Tmp_2138;
    assume {:nonnull} Iosb_22 != 0;
    assume Iosb_22 > 0;
    assume {:nonnull} IrpContext_133 != 0;
    assume IrpContext_133 > 0;
    assume {:nonnull} Tmp_2138 != 0;
    assume Tmp_2138 > 0;
    havoc vslice_dummy_var_1508;
    havoc vslice_dummy_var_1509;
    call {:si_unique_call 2752} boogieTmp := FatHijackIrpAndFlushDevice(IrpContext_133, vslice_dummy_var_1508, vslice_dummy_var_1509);
    goto L13;

  L13:
    assume {:nonnull} Iosb_22 != 0;
    assume Iosb_22 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Iosb_22 != 0;
    assume Iosb_22 > 0;
    assume {:nonnull} IrpContext_133 != 0;
    assume IrpContext_133 > 0;
    call {:si_unique_call 2753} sdv_1314 := corral_nondet();
    call {:si_unique_call 2754} ExRaiseStatus(sdv_1314);
    goto L1;

  L1:
    return;

  anon6_Then:
    goto L1;

  anon5_Then:
    goto L13;
}



procedure {:origName "FatFsdFlushBuffers"} FatFsdFlushBuffers(actual_VolumeDeviceObject_8: int, actual_Irp_60: int) returns (Tmp_2142: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking, markedPending, queued, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdFlushBuffers"} FatFsdFlushBuffers(actual_VolumeDeviceObject_8: int, actual_Irp_60: int) returns (Tmp_2142: int)
{
  var {:scalar} TopLevel_4: int;
  var {:scalar} Status_52: int;
  var {:scalar} sdv_1318: int;
  var {:pointer} IrpContext_134: int;
  var {:pointer} VolumeDeviceObject_8: int;
  var {:pointer} Irp_60: int;

  anon0:
    VolumeDeviceObject_8 := actual_VolumeDeviceObject_8;
    Irp_60 := actual_Irp_60;
    IrpContext_134 := 0;
    call {:si_unique_call 2755} sdv_do_paged_code_check();
    call {:si_unique_call 2756} KeEnterCriticalRegion();
    call {:si_unique_call 2757} TopLevel_4 := FatIsIrpTopLevel(Irp_60);
    call {:si_unique_call 2758} sdv_1318 := corral_nondet();
    call {:si_unique_call 2759} IrpContext_134 := FatCreateIrpContext(Irp_60, sdv_1318);
    call {:si_unique_call 2760} Status_52 := FatCommonFlushBuffers(IrpContext_134, Irp_60);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} TopLevel_4 != 0;
    goto L37;

  L37:
    call {:si_unique_call 2761} KeLeaveCriticalRegion();
    Tmp_2142 := Status_52;
    call {:si_unique_call 2762} SLIC_FatFsdFlushBuffers_exit(strConst__li2bpl2, Tmp_2142);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} TopLevel_4 == 0;
    goto L37;
}



procedure {:origName "FatFlushFatEntries"} FatFlushFatEntries(actual_IrpContext_135: int, actual_Vcb_85: int, actual_Cluster_2: int, actual_Count: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFlushFatEntries"} FatFlushFatEntries(actual_IrpContext_135: int, actual_Vcb_85: int, actual_Cluster_2: int, actual_Count: int)
{
  var {:pointer} Tmp_2146: int;
  var {:scalar} Iosb_23: int;
  var {:pointer} Tmp_2147: int;
  var {:scalar} sdv_1324: int;
  var {:scalar} FileOffset_4: int;
  var {:pointer} IrpContext_135: int;
  var {:pointer} Vcb_85: int;
  var {:scalar} Cluster_2: int;
  var {:scalar} Count: int;
  var boogieTmp: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_1510: int;
  var vslice_dummy_var_1511: int;

  anon0:
    call {:si_unique_call 2763} vslice_dummy_var_382 := __HAVOC_malloc(4);
    call {:si_unique_call 2764} Iosb_23 := __HAVOC_malloc(12);
    call {:si_unique_call 2765} FileOffset_4 := __HAVOC_malloc(20);
    IrpContext_135 := actual_IrpContext_135;
    Vcb_85 := actual_Vcb_85;
    Cluster_2 := actual_Cluster_2;
    Count := actual_Count;
    call {:si_unique_call 2766} sdv_do_paged_code_check();
    assume {:nonnull} FileOffset_4 != 0;
    assume FileOffset_4 > 0;
    assume {:nonnull} Vcb_85 != 0;
    assume Vcb_85 > 0;
    Tmp_2147 := Bpb__VCB(Vcb_85);
    assume {:nonnull} Vcb_85 != 0;
    assume Vcb_85 > 0;
    Tmp_2146 := Bpb__VCB(Vcb_85);
    assume {:nonnull} FileOffset_4 != 0;
    assume FileOffset_4 > 0;
    assume {:nonnull} Tmp_2146 != 0;
    assume Tmp_2146 > 0;
    assume {:nonnull} Tmp_2147 != 0;
    assume Tmp_2147 > 0;
    assume {:nonnull} Vcb_85 != 0;
    assume Vcb_85 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} FileOffset_4 != 0;
    assume FileOffset_4 > 0;
    goto L15;

  L15:
    assume {:nonnull} Iosb_23 != 0;
    assume Iosb_23 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Iosb_23 != 0;
    assume Iosb_23 > 0;
    assume {:nonnull} IrpContext_135 != 0;
    assume IrpContext_135 > 0;
    assume {:nonnull} Vcb_85 != 0;
    assume Vcb_85 > 0;
    havoc vslice_dummy_var_1510;
    havoc vslice_dummy_var_1511;
    call {:si_unique_call 2767} boogieTmp := FatHijackIrpAndFlushDevice(IrpContext_135, vslice_dummy_var_1510, vslice_dummy_var_1511);
    goto L19;

  L19:
    assume {:nonnull} Iosb_23 != 0;
    assume Iosb_23 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Iosb_23 != 0;
    assume Iosb_23 > 0;
    assume {:nonnull} IrpContext_135 != 0;
    assume IrpContext_135 > 0;
    call {:si_unique_call 2768} sdv_1324 := corral_nondet();
    call {:si_unique_call 2769} ExRaiseStatus(sdv_1324);
    goto L1;

  L1:
    return;

  anon11_Then:
    goto L1;

  anon10_Then:
    goto L19;

  anon12_Then:
    assume {:nonnull} Vcb_85 != 0;
    assume Vcb_85 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} FileOffset_4 != 0;
    assume FileOffset_4 > 0;
    goto L15;

  anon9_Then:
    assume {:nonnull} FileOffset_4 != 0;
    assume FileOffset_4 > 0;
    goto L15;
}



procedure {:origName "FatFlushFat"} FatFlushFat(actual_IrpContext_136: int, actual_Vcb_86: int) returns (Tmp_2148: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFlushFat"} FatFlushFat(actual_IrpContext_136: int, actual_Vcb_86: int) returns (Tmp_2148: int)
{
  var {:pointer} Tmp_2149: int;
  var {:scalar} ReturnStatus_2: int;
  var {:scalar} Offset_3: int;
  var {:pointer} Tmp_2151: int;
  var {:pointer} Tmp_2152: int;
  var {:pointer} Tmp_2153: int;
  var {:scalar} Iosb_24: int;
  var {:pointer} Tmp_2154: int;
  var {:pointer} Tmp_2155: int;
  var {:scalar} sdv_1326: int;
  var {:pointer} Tmp_2156: int;
  var {:scalar} Page_3: int;
  var {:scalar} sdv_1329: int;
  var {:pointer} Tmp_2157: int;
  var {:pointer} Tmp_2158: int;
  var {:scalar} Tmp_2160: int;
  var {:scalar} NumberOfPages_2: int;
  var {:pointer} Tmp_2161: int;
  var {:pointer} Tmp_2162: int;
  var {:pointer} Tmp_2163: int;
  var {:pointer} Tmp_2164: int;
  var {:pointer} Tmp_2165: int;
  var {:pointer} IrpContext_136: int;
  var {:pointer} Vcb_86: int;

  anon0:
    call {:si_unique_call 2770} Offset_3 := __HAVOC_malloc(20);
    call {:si_unique_call 2771} Iosb_24 := __HAVOC_malloc(12);
    IrpContext_136 := actual_IrpContext_136;
    Vcb_86 := actual_Vcb_86;
    ReturnStatus_2 := 0;
    call {:si_unique_call 2772} sdv_do_paged_code_check();
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    Tmp_2148 := 0;
    goto L1;

  L1:
    return;

  anon21_Then:
    call {:si_unique_call 2773} FatVerifyVcb(IrpContext_136, Vcb_86);
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    Tmp_2148 := -1073741672;
    goto L1;

  anon22_Then:
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2158 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Tmp_2158 != 0;
    assume Tmp_2158 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2164 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2165 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Tmp_2164 != 0;
    assume Tmp_2164 > 0;
    assume {:nonnull} Tmp_2165 != 0;
    assume Tmp_2165 > 0;
    havoc Tmp_2160;
    goto L37;

  L37:
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2151 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2149 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Tmp_2149 != 0;
    assume Tmp_2149 > 0;
    assume {:nonnull} Tmp_2151 != 0;
    assume Tmp_2151 > 0;
    havoc NumberOfPages_2;
    Page_3 := 0;
    assume {:nonnull} Offset_3 != 0;
    assume Offset_3 > 0;
    goto L40;

  L40:
    call {:si_unique_call 2774} ReturnStatus_2, Page_3, sdv_1329 := FatFlushFat_loop_L40(ReturnStatus_2, Offset_3, Iosb_24, Page_3, sdv_1329, NumberOfPages_2);
    goto L40_last;

  L40_last:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} NumberOfPages_2 > Page_3;
    call {:si_unique_call 2775} sdv_1329 := corral_nondet();
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} sdv_1329 != 0;
    assume {:nonnull} Iosb_24 != 0;
    assume Iosb_24 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Iosb_24 != 0;
    assume Iosb_24 > 0;
    havoc ReturnStatus_2;
    goto L54;

  L54:
    Page_3 := Page_3 + 1;
    assume {:nonnull} Offset_3 != 0;
    assume Offset_3 > 0;
    goto L54_dummy;

  L54_dummy:
    assume false;
    return;

  anon26_Then:
    goto L54;

  anon25_Then:
    assume {:partition} sdv_1329 == 0;
    goto L54;

  anon24_Then:
    assume {:partition} Page_3 >= NumberOfPages_2;
    goto L41;

  L41:
    Tmp_2148 := ReturnStatus_2;
    goto L1;

  anon29_Then:
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2161 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2162 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Tmp_2161 != 0;
    assume Tmp_2161 > 0;
    assume {:nonnull} Tmp_2162 != 0;
    assume Tmp_2162 > 0;
    havoc Tmp_2160;
    goto L37;

  anon23_Then:
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2154 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2155 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Offset_3 != 0;
    assume Offset_3 > 0;
    assume {:nonnull} Tmp_2154 != 0;
    assume Tmp_2154 > 0;
    assume {:nonnull} Tmp_2155 != 0;
    assume Tmp_2155 > 0;
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2152 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Tmp_2152 != 0;
    assume Tmp_2152 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2157 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2153 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Tmp_2153 != 0;
    assume Tmp_2153 > 0;
    assume {:nonnull} Tmp_2157 != 0;
    assume Tmp_2157 > 0;
    goto L74;

  L74:
    call {:si_unique_call 2776} sdv_1326 := corral_nondet();
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_1326 != 0;
    assume {:nonnull} Iosb_24 != 0;
    assume Iosb_24 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Iosb_24 != 0;
    assume Iosb_24 > 0;
    havoc ReturnStatus_2;
    goto L41;

  anon28_Then:
    goto L41;

  anon27_Then:
    assume {:partition} sdv_1326 == 0;
    goto L41;

  anon30_Then:
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2156 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Vcb_86 != 0;
    assume Vcb_86 > 0;
    Tmp_2163 := Bpb__VCB(Vcb_86);
    assume {:nonnull} Tmp_2156 != 0;
    assume Tmp_2156 > 0;
    assume {:nonnull} Tmp_2163 != 0;
    assume Tmp_2163 > 0;
    goto L74;
}



procedure {:origName "_sdv_init27"} _sdv_init27();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init27"} _sdv_init27()
{
  var vslice_dummy_var_383: int;

  anon0:
    call {:si_unique_call 2777} vslice_dummy_var_383 := __HAVOC_malloc(4);
    assume FatNoAsync == 0;
    return;
}



procedure {:origName "FatCommonWrite"} FatCommonWrite(actual_IrpContext_137: int, actual_Irp_61: int) returns (Tmp_2168: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, markedPending, locked, queued, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonWrite"} FatCommonWrite(actual_IrpContext_137: int, actual_Irp_61: int) returns (Tmp_2168: int)
{
  var {:scalar} sdv_1333: int;
  var {:pointer} Fcb_52: int;
  var {:scalar} sdv_1334: int;
  var {:scalar} ActualBytesWrote: int;
  var {:pointer} Tmp_2169: int;
  var {:scalar} VolumeSize: int;
  var {:scalar} sdv_1338: int;
  var {:scalar} FcbAcquiredExclusive: int;
  var {:pointer} StackIoRuns_1: int;
  var {:scalar} Tmp_2171: int;
  var {:scalar} Tmp_2172: int;
  var {:pointer} Tmp_2173: int;
  var {:pointer} Tmp_2174: int;
  var {:pointer} Ccb_30: int;
  var {:scalar} MoreDirtyRuns: int;
  var {:scalar} AllocateMinimumSize: int;
  var {:scalar} NonCachedIo: int;
  var {:scalar} CalledByLazyWriter: int;
  var {:pointer} Tmp_2176: int;
  var {:scalar} Tmp_2177: int;
  var {:scalar} sdv_1341: int;
  var {:pointer} IoRuns_2: int;
  var {:scalar} ValidDataToCheck: int;
  var {:scalar} BytesToWrite_2: int;
  var {:pointer} Tmp_2178: int;
  var {:scalar} OneSecondFromNow: int;
  var {:pointer} Tmp_2179: int;
  var {:pointer} Tmp_2180: int;
  var {:pointer} Tmp_2181: int;
  var {:scalar} sdv_1345: int;
  var {:scalar} WriteToEof: int;
  var {:scalar} ValidDataLength_1: int;
  var {:scalar} Status_53: int;
  var {:pointer} Tmp_2182: int;
  var {:pointer} Tmp_2183: int;
  var {:pointer} Tmp_2184: int;
  var {:scalar} Tmp_2185: int;
  var {:pointer} Tmp_2186: int;
  var {:scalar} FcbCanDemoteToShared: int;
  var {:scalar} Tmp_2188: int;
  var {:scalar} BytesPerFat: int;
  var {:dopa} {:scalar} DirtyLbo: int;
  var {:scalar} sdv_1348: int;
  var {:scalar} StartingLbo: int;
  var {:scalar} Tmp_2189: int;
  var {:scalar} TypeOfOpen_9: int;
  var {:scalar} Tmp_2190: int;
  var {:scalar} Tmp_2191: int;
  var {:pointer} IrpSp_36: int;
  var {:scalar} sdv_1349: int;
  var {:scalar} sdv_1350: int;
  var {:scalar} Tmp_2193: int;
  var {:pointer} Tmp_2194: int;
  var {:pointer} Tmp_2195: int;
  var {:pointer} Tmp_2196: int;
  var {:scalar} Tmp_2197: int;
  var {:scalar} sdv_1352: int;
  var {:pointer} sdv_1353: int;
  var {:scalar} sdv_1354: int;
  var {:scalar} Tmp_2198: int;
  var {:pointer} Vcb_87: int;
  var {:pointer} Tmp_2199: int;
  var {:pointer} Tmp_2200: int;
  var {:scalar} Tmp_2201: int;
  var {:pointer} Tmp_2202: int;
  var {:scalar} sdv_1360: int;
  var {:scalar} sdv_1361: int;
  var {:pointer} sdv_1362: int;
  var {:scalar} Tmp_2203: int;
  var {:pointer} Tmp_2204: int;
  var {:scalar} WriteLength: int;
  var {:scalar} PagingIo: int;
  var {:scalar} sdv_1363: int;
  var {:scalar} TargetAllocation: int;
  var {:scalar} Tmp_2205: int;
  var {:scalar} UnwindOutstandingAsync: int;
  var {:scalar} BytesPerCluster_4: int;
  var {:scalar} sdv_1365: int;
  var {:scalar} sdv_1366: int;
  var {:scalar} Tmp_2206: int;
  var {:scalar} Tmp_2207: int;
  var {:pointer} Tmp_2208: int;
  var {:scalar} DirtyVbo: int;
  var {:scalar} sdv_1368: int;
  var {:pointer} Tmp_2210: int;
  var {:scalar} Tmp_2211: int;
  var {:scalar} Tmp_2212: int;
  var {:pointer} Tmp_2213: int;
  var {:scalar} Temp: int;
  var {:scalar} Tmp_2214: int;
  var {:scalar} sdv_1371: int;
  var {:scalar} sdv_1372: int;
  var {:scalar} Tmp_2215: int;
  var {:scalar} Tmp_2216: int;
  var {:pointer} Fcb_53: int;
  var {:scalar} Multiplier: int;
  var {:scalar} Tmp_2217: int;
  var {:pointer} sdv_1375: int;
  var {:scalar} sdv_1376: int;
  var {:scalar} ExtendingFile: int;
  var {:dopa} {:scalar} CleanByteCount: int;
  var {:pointer} Tmp_2218: int;
  var {:pointer} Tmp_2219: int;
  var {:pointer} Tmp_2220: int;
  var {:pointer} FlushContext: int;
  var {:scalar} PagingIoResourceAcquired: int;
  var {:scalar} FileSize: int;
  var {:scalar} StartingDirtyVbo: int;
  var {:pointer} IrpStack: int;
  var {:pointer} FileObject_38: int;
  var {:pointer} Tmp_2222: int;
  var {:scalar} WriteFileSizeToDirent: int;
  var {:pointer} Tmp_2223: int;
  var {:scalar} sdv_1378: int;
  var {:scalar} SwitchBackToAsync: int;
  var {:scalar} ExtendingValidData: int;
  var {:pointer} Tmp_2224: int;
  var {:pointer} Tmp_2225: int;
  var {:scalar} PreviousWait: int;
  var {:scalar} RecursiveWriteThrough: int;
  var {:scalar} Wait_10: int;
  var {:scalar} Tmp_2227: int;
  var {:scalar} sdv_1380: int;
  var {:pointer} sdv_1381: int;
  var {:scalar} sdv_1382: int;
  var {:pointer} sdv_1383: int;
  var {:scalar} Tmp_2228: int;
  var {:scalar} StartingVbo_7: int;
  var {:scalar} PostIrp_1: int;
  var {:pointer} Tmp_2229: int;
  var {:pointer} sdv_1386: int;
  var {:pointer} Tmp_2230: int;
  var {:scalar} FcbOrDcbAcquired: int;
  var {:scalar} Tmp_2231: int;
  var {:pointer} Tmp_2232: int;
  var {:dopa} {:scalar} CleanLbo: int;
  var {:pointer} sdv_1388: int;
  var {:pointer} Tmp_2233: int;
  var {:pointer} sdv_1390: int;
  var {:dopa} {:scalar} DirtyByteCount: int;
  var {:scalar} Tmp_2234: int;
  var {:pointer} Tmp_2235: int;
  var {:scalar} SectorSize_6: int;
  var {:pointer} Tmp_2236: int;
  var {:pointer} Tmp_2237: int;
  var {:scalar} StackFatIoContext: int;
  var {:scalar} OplockPostIrp_2: int;
  var {:pointer} Tmp_2238: int;
  var {:scalar} ValidDataToDisk: int;
  var {:pointer} Stats_10: int;
  var {:scalar} InitialValidDataLength_1: int;
  var {:pointer} TopIrp: int;
  var {:scalar} StartingByte: int;
  var {:scalar} sdv_1392: int;
  var {:pointer} FcbOrDcb_11: int;
  var {:scalar} Tmp_2239: int;
  var {:scalar} Tmp_2240: int;
  var {:scalar} sdv_1395: int;
  var {:scalar} sdv_1396: int;
  var {:pointer} Tmp_2243: int;
  var {:scalar} SynchronousIo: int;
  var {:scalar} Fat: int;
  var {:scalar} InitialFileSize_1: int;
  var {:scalar} RaiseIosb_1: int;
  var {:scalar} Tmp_2244: int;
  var {:scalar} ClusterAlignedFileSize: int;
  var {:pointer} Tmp_2245: int;
  var {:scalar} sdv_1397: int;
  var {:scalar} ApproximateClusterCount: int;
  var {:scalar} EndingVboWritten: int;
  var {:scalar} ByteCount_20: int;
  var {:pointer} IrpContext_137: int;
  var {:pointer} Irp_61: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_1512: int;
  var vslice_dummy_var_1513: int;
  var vslice_dummy_var_1514: int;
  var vslice_dummy_var_1515: int;
  var vslice_dummy_var_1516: int;
  var vslice_dummy_var_1517: int;
  var vslice_dummy_var_1518: int;
  var vslice_dummy_var_1519: int;
  var vslice_dummy_var_1520: int;
  var vslice_dummy_var_1521: int;
  var vslice_dummy_var_1522: int;
  var vslice_dummy_var_1523: int;
  var vslice_dummy_var_1524: int;
  var vslice_dummy_var_1525: int;
  var vslice_dummy_var_1526: int;
  var vslice_dummy_var_1527: int;
  var vslice_dummy_var_1528: int;
  var vslice_dummy_var_1529: int;
  var vslice_dummy_var_1530: int;
  var vslice_dummy_var_1531: int;
  var vslice_dummy_var_1532: int;
  var vslice_dummy_var_1533: int;
  var vslice_dummy_var_1534: int;
  var vslice_dummy_var_1535: int;
  var vslice_dummy_var_1536: int;
  var vslice_dummy_var_1537: int;
  var vslice_dummy_var_1538: int;
  var vslice_dummy_var_1539: int;
  var vslice_dummy_var_1540: int;
  var vslice_dummy_var_1541: int;
  var vslice_dummy_var_1542: int;
  var vslice_dummy_var_1543: int;
  var vslice_dummy_var_1544: int;
  var vslice_dummy_var_1545: int;
  var vslice_dummy_var_1546: int;
  var vslice_dummy_var_1547: int;
  var vslice_dummy_var_1548: int;
  var vslice_dummy_var_1549: int;

  anon0:
    call {:si_unique_call 2778} Ccb_30 := __HAVOC_malloc(4);
    call {:si_unique_call 2779} OneSecondFromNow := __HAVOC_malloc(20);
    call {:si_unique_call 2780} DirtyLbo := __HAVOC_malloc(4);
    call {:si_unique_call 2781} Vcb_87 := __HAVOC_malloc(4);
    call {:si_unique_call 2782} CleanByteCount := __HAVOC_malloc(4);
    call {:si_unique_call 2783} CleanLbo := __HAVOC_malloc(4);
    call {:si_unique_call 2784} DirtyByteCount := __HAVOC_malloc(4);
    call {:si_unique_call 2785} StackFatIoContext := __HAVOC_malloc(160);
    call {:si_unique_call 2786} StartingByte := __HAVOC_malloc(20);
    call {:si_unique_call 2787} FcbOrDcb_11 := __HAVOC_malloc(4);
    call {:si_unique_call 2788} RaiseIosb_1 := __HAVOC_malloc(12);
    IrpContext_137 := actual_IrpContext_137;
    Irp_61 := actual_Irp_61;
    call {:si_unique_call 2789} StackIoRuns_1 := __HAVOC_malloc(40);
    PostIrp_1 := 0;
    OplockPostIrp_2 := 0;
    ExtendingFile := 0;
    FcbOrDcbAcquired := 0;
    SwitchBackToAsync := 0;
    CalledByLazyWriter := 0;
    ExtendingValidData := 0;
    FcbAcquiredExclusive := 0;
    FcbCanDemoteToShared := 0;
    WriteFileSizeToDirent := 0;
    RecursiveWriteThrough := 0;
    UnwindOutstandingAsync := 0;
    PagingIoResourceAcquired := 0;
    call {:si_unique_call 2790} IrpSp_36 := sdv_IoGetCurrentIrpStackLocation(Irp_61);
    assume {:nonnull} IrpSp_36 != 0;
    assume IrpSp_36 > 0;
    havoc FileObject_38;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2197;
    goto anon583_Then, anon583_Else;

  anon583_Else:
    assume {:partition} Tmp_2197 == 0;
    Wait_10 := 0;
    goto L1182;

  L1182:
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    havoc Tmp_2244;
    goto anon584_Then, anon584_Else;

  anon584_Else:
    assume {:partition} Tmp_2244 == 0;
    PagingIo := 0;
    goto L1186;

  L1186:
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    havoc Tmp_2189;
    goto anon585_Then, anon585_Else;

  anon585_Else:
    assume {:partition} Tmp_2189 == 0;
    NonCachedIo := 0;
    goto L1190;

  L1190:
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    havoc Tmp_2227;
    goto anon586_Then, anon586_Else;

  anon586_Else:
    assume {:partition} Tmp_2227 == 0;
    SynchronousIo := 0;
    goto L1194;

  L1194:
    assume {:nonnull} IrpSp_36 != 0;
    assume IrpSp_36 > 0;
    havoc ByteCount_20;
    goto anon587_Then, anon587_Else;

  anon587_Else:
    assume {:partition} ByteCount_20 != 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:partition} NonCachedIo != 0;
    goto L68;

  L68:
    assume {:nonnull} IrpSp_36 != 0;
    assume IrpSp_36 > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    assume {:nonnull} IrpSp_36 != 0;
    assume IrpSp_36 > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    assume {:nonnull} IrpSp_36 != 0;
    assume IrpSp_36 > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    assume {:nonnull} IrpSp_36 != 0;
    assume IrpSp_36 > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    assume {:nonnull} IrpSp_36 != 0;
    assume IrpSp_36 > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    havoc StartingVbo_7;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    goto anon588_Then, anon588_Else;

  anon588_Else:
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    Tmp_2177 := 1;
    goto L74;

  L74:
    WriteToEof := Tmp_2177;
    call {:si_unique_call 2791} TypeOfOpen_9 := FatDecodeFileObject(FileObject_38, Vcb_87, FcbOrDcb_11, Ccb_30);
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} TypeOfOpen_9 == 4;
    NonCachedIo := 1;
    goto L80;

  L80:
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:partition} PagingIo != 0;
    call {:si_unique_call 2792} sdv_1352 := KeGetCurrentProcessorNumber();
    Tmp_2191 := sdv_1352;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2179;
    assume {:nonnull} Tmp_2179 != 0;
    assume Tmp_2179 > 0;
    Stats_10 := Common__FILE_SYSTEM_STATISTICS(Tmp_2179 + Tmp_2191 * 240);
    goto anon589_Then, anon589_Else;

  anon589_Else:
    assume {:partition} TypeOfOpen_9 == 2;
    assume {:nonnull} Stats_10 != 0;
    assume Stats_10 > 0;
    assume {:nonnull} Stats_10 != 0;
    assume Stats_10 > 0;
    goto L92;

  L92:
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} TypeOfOpen_9 == 2;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto L82;

  L82:
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:partition} PagingIo != 0;
    goto L99;

  L99:
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:partition} NonCachedIo != 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto anon440_Then, anon440_Else;

  anon440_Else:
    goto L103;

  L103:
    call {:si_unique_call 2793} sdv_RtlZeroMemory(0, 36);
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:partition} Wait_10 != 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2210;
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 2794} KeInitializeEvent(SyncEvent_unnamed_tag_63(Wait__FAT_IO_CONTEXT(Tmp_2210)), 0, 0);
    goto L100;

  L100:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    call {:si_unique_call 2795} FatCompleteRequest_Real(IrpContext_137, Irp_61, -1073741431);
    Tmp_2168 := -1073741431;
    goto L1;

  L1:
    return;

  anon439_Then:
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:partition} TypeOfOpen_9 == 5;
    MoreDirtyRuns := 1;
    goto anon590_Then, anon590_Else;

  anon590_Else:
    assume {:partition} Wait_10 != 0;
    goto anon445_Then, anon445_Else;

  anon445_Else:
    sdv_1362 := 0;
    goto L146;

  L146:
    goto anon446_Then, anon446_Else;

  anon446_Else:
    assume {:partition} BAND(sdv_1362, 2) != 0;
    goto L148;

  L148:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1512;
    havoc vslice_dummy_var_1513;
    call {:si_unique_call 2796} sdv_1350 := FatLookupMcbEntry(vslice_dummy_var_1512, vslice_dummy_var_1513, StartingVbo_7, DirtyLbo, DirtyByteCount, 0);
    goto anon447_Then, anon447_Else;

  anon447_Else:
    assume {:partition} sdv_1350 != 0;
    assume {:nonnull} DirtyLbo != 0;
    assume DirtyLbo > 0;
    goto anon448_Then, anon448_Else;

  anon448_Else:
    goto L157;

  L157:
    assume {:nonnull} DirtyLbo != 0;
    assume DirtyLbo > 0;
    havoc DirtyVbo;
    goto anon591_Then, anon591_Else;

  anon591_Else:
    assume {:partition} DirtyVbo != 0;
    goto L160;

  L160:
    StartingDirtyVbo := DirtyVbo;
    goto L161;

  L161:
    call {:si_unique_call 2797} Tmp_2172, MoreDirtyRuns, sdv_1349, DirtyVbo, sdv_1397 := FatCommonWrite_loop_L161(Tmp_2172, MoreDirtyRuns, DirtyLbo, sdv_1349, Vcb_87, DirtyVbo, CleanByteCount, StartingVbo_7, CleanLbo, DirtyByteCount, sdv_1397, ByteCount_20);
    goto L161_last;

  L161_last:
    goto anon450_Then, anon450_Else;

  anon450_Else:
    assume {:partition} MoreDirtyRuns != 0;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1514;
    havoc vslice_dummy_var_1515;
    call {:si_unique_call 2798} sdv_1349 := FatLookupMcbEntry(vslice_dummy_var_1514, vslice_dummy_var_1515, DirtyVbo, DirtyLbo, DirtyByteCount, 0);
    goto anon451_Then, anon451_Else;

  anon451_Else:
    assume {:partition} sdv_1349 != 0;
    assume {:nonnull} DirtyLbo != 0;
    assume DirtyLbo > 0;
    havoc DirtyVbo;
    assume {:nonnull} DirtyByteCount != 0;
    assume DirtyByteCount > 0;
    goto anon592_Then, anon592_Else;

  anon592_Else:
    assume {:nonnull} DirtyByteCount != 0;
    assume DirtyByteCount > 0;
    MoreDirtyRuns := 0;
    goto anon592_Else_dummy;

  anon592_Else_dummy:
    assume false;
    return;

  anon592_Then:
    assume {:nonnull} DirtyByteCount != 0;
    assume DirtyByteCount > 0;
    havoc Tmp_2172;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1516;
    havoc vslice_dummy_var_1517;
    call {:si_unique_call 2799} sdv_1397 := FatLookupMcbEntry(vslice_dummy_var_1516, vslice_dummy_var_1517, Tmp_2172, CleanLbo, CleanByteCount, 0);
    goto anon452_Then, anon452_Else;

  anon452_Else:
    assume {:partition} sdv_1397 != 0;
    assume {:nonnull} CleanByteCount != 0;
    assume CleanByteCount > 0;
    assume {:nonnull} DirtyByteCount != 0;
    assume DirtyByteCount > 0;
    goto anon453_Then, anon453_Else;

  anon453_Else:
    MoreDirtyRuns := 0;
    goto anon453_Else_dummy;

  anon453_Else_dummy:
    assume false;
    return;

  anon453_Then:
    assume {:nonnull} CleanByteCount != 0;
    assume CleanByteCount > 0;
    assume {:nonnull} DirtyByteCount != 0;
    assume DirtyByteCount > 0;
    havoc DirtyVbo;
    goto anon453_Then_dummy;

  anon453_Then_dummy:
    assume false;
    return;

  anon452_Then:
    assume {:partition} sdv_1397 == 0;
    MoreDirtyRuns := 0;
    goto anon452_Then_dummy;

  anon452_Then_dummy:
    assume false;
    return;

  anon451_Then:
    assume {:partition} sdv_1349 == 0;
    assume {:nonnull} DirtyLbo != 0;
    assume DirtyLbo > 0;
    havoc DirtyVbo;
    call {:si_unique_call 2800} KeBugCheckEx(35, 2163323, 0, 0, 0);
    goto anon451_Then_dummy;

  anon451_Then_dummy:
    assume false;
    return;

  anon450_Then:
    assume {:partition} MoreDirtyRuns == 0;
    assume {:nonnull} DirtyByteCount != 0;
    assume DirtyByteCount > 0;
    havoc WriteLength;
    assume {:nonnull} RaiseIosb_1 != 0;
    assume RaiseIosb_1 > 0;
    assume {:nonnull} RaiseIosb_1 != 0;
    assume RaiseIosb_1 > 0;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2174;
    assume {:nonnull} Tmp_2174 != 0;
    assume Tmp_2174 > 0;
    goto anon593_Then, anon593_Else;

  anon593_Else:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2238;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2219;
    assume {:nonnull} Tmp_2219 != 0;
    assume Tmp_2219 > 0;
    assume {:nonnull} Tmp_2238 != 0;
    assume Tmp_2238 > 0;
    havoc Tmp_2231;
    goto L193;

  L193:
    BytesPerFat := Tmp_2231;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    goto anon594_Then, anon594_Else;

  anon594_Else:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2171;
    call {:si_unique_call 2801} sdv_1386 := ExAllocatePoolWithTag(17, Tmp_2171, -378248890);
    IoRuns_2 := sdv_1386;
    goto L201;

  L201:
    Fat := 0;
    goto L202;

  L202:
    call {:si_unique_call 2802} Tmp_2185, Tmp_2190, Tmp_2207, Tmp_2212, Fat := FatCommonWrite_loop_L202(IoRuns_2, Tmp_2185, BytesPerFat, Tmp_2190, Vcb_87, WriteLength, Tmp_2207, Tmp_2212, StartingDirtyVbo, StartingVbo_7, Fat);
    goto L202_last;

  L202_last:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    goto anon454_Then, anon454_Else;

  anon454_Else:
    Tmp_2212 := Fat;
    assume {:nonnull} IoRuns_2 != 0;
    assume IoRuns_2 > 0;
    Tmp_2190 := Fat;
    assume {:nonnull} IoRuns_2 != 0;
    assume IoRuns_2 > 0;
    Tmp_2185 := Fat;
    assume {:nonnull} IoRuns_2 != 0;
    assume IoRuns_2 > 0;
    Tmp_2207 := Fat;
    assume {:nonnull} IoRuns_2 != 0;
    assume IoRuns_2 > 0;
    Fat := Fat + 1;
    goto anon454_Else_dummy;

  anon454_Else_dummy:
    assume false;
    return;

  anon454_Then:
    call {:si_unique_call 2803} sdv_1371 := KeGetCurrentProcessorNumber();
    Tmp_2217 := sdv_1371;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2235;
    Tmp_2188 := sdv_1371;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2180;
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    assume {:nonnull} Tmp_2235 != 0;
    assume Tmp_2235 > 0;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2211;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1518;
    call {:si_unique_call 2804} FatMultipleAsync(IrpContext_137, vslice_dummy_var_1518, Irp_61, Tmp_2211, IoRuns_2);
    goto anon455_Then, anon455_Else;

  anon455_Else:
    assume {:partition} IoRuns_2 != StackIoRuns_1;
    call {:si_unique_call 2805} sdv_ExFreePool(0);
    goto L221;

  L221:
    call {:si_unique_call 2806} FatWaitSync(IrpContext_137);
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    goto anon456_Then, anon456_Else;

  anon456_Else:
    goto L229;

  L229:
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    assume {:nonnull} RaiseIosb_1 != 0;
    assume RaiseIosb_1 > 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    assume {:nonnull} RaiseIosb_1 != 0;
    assume RaiseIosb_1 > 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    assume {:nonnull} RaiseIosb_1 != 0;
    assume RaiseIosb_1 > 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    havoc Status_53;
    goto anon595_Then, anon595_Else;

  anon595_Else:
    assume {:partition} Status_53 >= 0;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1519;
    havoc vslice_dummy_var_1520;
    call {:si_unique_call 2807} FatRemoveMcbEntry(vslice_dummy_var_1519, vslice_dummy_var_1520, StartingDirtyVbo, WriteLength);
    goto L236;

  L236:
    call {:si_unique_call 2808} FatCompleteRequest_Real(IrpContext_137, Irp_61, Status_53);
    Tmp_2168 := Status_53;
    goto L1;

  anon595_Then:
    assume {:partition} 0 > Status_53;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    call {:si_unique_call 2809} sdv_1341 := corral_nondet();
    call {:si_unique_call 2810} ExRaiseStatus(sdv_1341);
    goto L236;

  anon456_Then:
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    assume {:nonnull} RaiseIosb_1 != 0;
    assume RaiseIosb_1 > 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    assume {:nonnull} RaiseIosb_1 != 0;
    assume RaiseIosb_1 > 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    assume {:nonnull} RaiseIosb_1 != 0;
    assume RaiseIosb_1 > 0;
    goto L229;

  anon455_Then:
    assume {:partition} IoRuns_2 == StackIoRuns_1;
    goto L221;

  anon594_Then:
    IoRuns_2 := StackIoRuns_1;
    goto L201;

  anon593_Then:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2194;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2199;
    assume {:nonnull} Tmp_2194 != 0;
    assume Tmp_2194 > 0;
    assume {:nonnull} Tmp_2199 != 0;
    assume Tmp_2199 > 0;
    havoc Tmp_2231;
    goto L193;

  anon591_Then:
    assume {:partition} DirtyVbo == 0;
    assume {:nonnull} DirtyByteCount != 0;
    assume DirtyByteCount > 0;
    havoc DirtyVbo;
    goto L160;

  anon448_Then:
    assume {:nonnull} DirtyByteCount != 0;
    assume DirtyByteCount > 0;
    goto anon449_Then, anon449_Else;

  anon449_Else:
    goto L157;

  anon449_Then:
    goto L152;

  L152:
    call {:si_unique_call 2811} FatCompleteRequest_Real(IrpContext_137, Irp_61, 0);
    Tmp_2168 := 0;
    goto L1;

  anon447_Then:
    assume {:partition} sdv_1350 == 0;
    goto L152;

  anon446_Then:
    assume {:partition} BAND(sdv_1362, 2) == 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto L148;

  anon445_Then:
    call {:si_unique_call 2812} sdv_1362 := __HAVOC_malloc(1);
    goto L146;

  anon590_Then:
    assume {:partition} Wait_10 == 0;
    call {:si_unique_call 2813} Status_53 := FatFsdPostRequest(IrpContext_137, Irp_61);
    Tmp_2168 := Status_53;
    goto L1;

  anon443_Then:
    assume {:partition} TypeOfOpen_9 != 5;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:partition} TypeOfOpen_9 == 4;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    goto anon458_Then, anon458_Else;

  anon458_Else:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2201;
    goto L255;

  L255:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc VolumeSize;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    havoc StartingLbo;
    assume {:nonnull} Ccb_30 != 0;
    assume Ccb_30 > 0;
    goto anon596_Then, anon596_Else;

  anon596_Else:
    goto L261;

  L261:
    assume {:nonnull} Ccb_30 != 0;
    assume Ccb_30 > 0;
    goto anon459_Then, anon459_Else;

  anon459_Else:
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2198;
    goto anon599_Then, anon599_Else;

  anon599_Else:
    assume {:partition} Tmp_2198 == 0;
    PreviousWait := 0;
    goto L1280;

  L1280:
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    Fcb_53 := 0;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1521;
    call {:si_unique_call 2814} vslice_dummy_var_395 := FatAcquireExclusiveVcb(IrpContext_137, vslice_dummy_var_1521);
    goto L316;

  L316:
    call {:si_unique_call 2815} Fcb_53, vslice_dummy_var_384 := FatCommonWrite_loop_L316(Vcb_87, Fcb_53, IrpContext_137, vslice_dummy_var_384);
    goto L316_last;

  L316_last:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1549;
    call {:si_unique_call 2910} Fcb_53 := FatGetNextFcbBottomUp(IrpContext_137, Fcb_53, vslice_dummy_var_1549);
    goto anon468_Then, anon468_Else;

  anon468_Else:
    assume {:partition} Fcb_53 != 0;
    call {:si_unique_call 2816} vslice_dummy_var_384 := FatAcquireExclusiveFcb(IrpContext_137, Fcb_53);
    goto anon468_Else_dummy;

  anon468_Else_dummy:
    assume false;
    return;

  anon468_Then:
    assume {:partition} Fcb_53 == 0;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    goto anon469_Then, anon469_Else;

  anon469_Else:
    goto L329;

  L329:
    Fcb_52 := 0;
    goto L330;

  L330:
    call {:si_unique_call 2817} Fcb_52 := FatCommonWrite_loop_L330(Fcb_52, Vcb_87, IrpContext_137);
    goto L330_last;

  L330_last:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1548;
    call {:si_unique_call 2909} Fcb_52 := FatGetNextFcbBottomUp(IrpContext_137, Fcb_52, vslice_dummy_var_1548);
    goto anon470_Then, anon470_Else;

  anon470_Else:
    assume {:partition} Fcb_52 != 0;
    call {:si_unique_call 2818} ExReleaseResourceLite(0);
    goto anon470_Else_dummy;

  anon470_Else_dummy:
    assume false;
    return;

  anon470_Then:
    assume {:partition} Fcb_52 == 0;
    call {:si_unique_call 2819} ExReleaseResourceLite(0);
    goto anon471_Then, anon471_Else;

  anon471_Else:
    assume {:partition} PreviousWait != 0;
    goto L343;

  L343:
    assume {:nonnull} Ccb_30 != 0;
    assume Ccb_30 > 0;
    goto L263;

  L263:
    assume {:nonnull} Ccb_30 != 0;
    assume Ccb_30 > 0;
    goto anon460_Then, anon460_Else;

  anon460_Else:
    goto anon462_Then, anon462_Else;

  anon462_Else:
    assume {:partition} WriteToEof != 0;
    StartingLbo := VolumeSize;
    goto L266;

  L266:
    call {:si_unique_call 2820} FatLockUserBuffer(IrpContext_137, Irp_61, 0, ByteCount_20);
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1522;
    call {:si_unique_call 2821} FatSingleAsync(IrpContext_137, vslice_dummy_var_1522, StartingLbo, ByteCount_20, Irp_61);
    goto anon463_Then, anon463_Else;

  anon463_Else:
    assume {:partition} Wait_10 != 0;
    call {:si_unique_call 2822} FatWaitSync(IrpContext_137);
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    havoc Status_53;
    goto anon597_Then, anon597_Else;

  anon597_Else:
    assume {:partition} Status_53 >= 0;
    goto L282;

  L282:
    goto anon464_Then, anon464_Else;

  anon464_Else:
    assume {:partition} SynchronousIo != 0;
    goto anon465_Then, anon465_Else;

  anon465_Else:
    assume {:partition} PagingIo == 0;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    goto L283;

  L283:
    call {:si_unique_call 2823} FatCompleteRequest_Real(IrpContext_137, Irp_61, Status_53);
    Tmp_2168 := Status_53;
    goto L1;

  anon465_Then:
    assume {:partition} PagingIo != 0;
    goto L283;

  anon464_Then:
    assume {:partition} SynchronousIo == 0;
    goto L283;

  anon597_Then:
    assume {:partition} 0 > Status_53;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    call {:si_unique_call 2824} sdv_1354 := corral_nondet();
    call {:si_unique_call 2825} ExRaiseStatus(sdv_1354);
    goto L282;

  anon463_Then:
    assume {:partition} Wait_10 == 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    call {:si_unique_call 2826} FatDeleteIrpContext_Real(IrpContext_137);
    Tmp_2168 := 259;
    goto L1;

  anon462_Then:
    assume {:partition} WriteToEof == 0;
    goto L266;

  anon460_Then:
    goto anon461_Then, anon461_Else;

  anon461_Else:
    assume {:partition} WriteToEof != 0;
    goto L300;

  L300:
    call {:si_unique_call 2827} FatCompleteRequest_Real(IrpContext_137, Irp_61, 0);
    Tmp_2168 := 0;
    goto L1;

  anon461_Then:
    assume {:partition} WriteToEof == 0;
    goto anon466_Then, anon466_Else;

  anon466_Else:
    assume {:partition} StartingLbo < VolumeSize;
    goto anon467_Then, anon467_Else;

  anon467_Else:
    assume {:partition} ByteCount_20 > VolumeSize - StartingLbo;
    ByteCount_20 := VolumeSize - StartingLbo;
    goto anon598_Then, anon598_Else;

  anon598_Else:
    assume {:partition} Wait_10 == 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2243;
    assume {:nonnull} Tmp_2243 != 0;
    assume Tmp_2243 > 0;
    goto L266;

  anon598_Then:
    assume {:partition} Wait_10 != 0;
    goto L266;

  anon467_Then:
    assume {:partition} VolumeSize - StartingLbo >= ByteCount_20;
    goto L266;

  anon466_Then:
    assume {:partition} VolumeSize <= StartingLbo;
    goto L300;

  anon471_Then:
    assume {:partition} PreviousWait == 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto L343;

  anon469_Then:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1523;
    call {:si_unique_call 2828} vslice_dummy_var_385 := FatFlushFat(IrpContext_137, vslice_dummy_var_1523);
    call {:si_unique_call 2829} vslice_dummy_var_386 := corral_nondet();
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1524;
    call {:si_unique_call 2830} FatPurgeReferencedFileObjects(IrpContext_137, vslice_dummy_var_1524, 1);
    goto L329;

  anon599_Then:
    assume {:partition} Tmp_2198 != 0;
    PreviousWait := 1;
    goto L1280;

  anon459_Then:
    goto L263;

  anon596_Then:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1525;
    call {:si_unique_call 2831} FatQuickVerifyVcb(IrpContext_137, vslice_dummy_var_1525);
    goto L261;

  anon458_Then:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc Tmp_2201;
    goto L255;

  anon444_Then:
    assume {:partition} TypeOfOpen_9 != 4;
    goto anon457_Then, anon457_Else;

  anon457_Else:
    assume {:partition} TypeOfOpen_9 == 2;
    goto anon473_Then, anon473_Else;

  anon473_Else:
    assume {:partition} NonCachedIo != 0;
    goto anon475_Then, anon475_Else;

  anon475_Else:
    assume {:partition} PagingIo == 0;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    havoc Tmp_2245;
    assume {:nonnull} Tmp_2245 != 0;
    assume Tmp_2245 > 0;
    goto anon634_Then, anon634_Else;

  anon634_Else:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1526;
    call {:si_unique_call 2832} sdv_1396 := FatAcquireExclusiveFcb(IrpContext_137, vslice_dummy_var_1526);
    goto anon476_Then, anon476_Else;

  anon476_Else:
    assume {:partition} sdv_1396 != 0;
    FcbOrDcbAcquired := 1;
    FcbAcquiredExclusive := 1;
    call {:si_unique_call 2833} vslice_dummy_var_399 := ExAcquireResourceExclusiveLite(0, 1);
    goto anon477_Then, anon477_Else;

  anon477_Else:
    assume {:partition} WriteToEof != 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto L424;

  L424:
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    goto anon478_Then, anon478_Else;

  anon478_Else:
    PagingIoResourceAcquired := 1;
    goto anon635_Then, anon635_Else;

  anon635_Else:
    assume {:partition} WriteToEof != 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto L435;

  L435:
    call {:si_unique_call 2834} vslice_dummy_var_387 := corral_nondet();
    FcbCanDemoteToShared := 1;
    goto L370;

  L370:
    goto anon474_Then, anon474_Else;

  anon474_Else:
    assume {:partition} PagingIo != 0;
    call {:si_unique_call 2835} vslice_dummy_var_390 := ExAcquireResourceSharedLite(0, 1);
    PagingIoResourceAcquired := 1;
    goto anon600_Then, anon600_Else;

  anon600_Else:
    assume {:partition} Wait_10 != 0;
    goto L547;

  L547:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon505_Then, anon505_Else;

  anon505_Else:
    call {:si_unique_call 2836} vslice_dummy_var_391 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L548;

  L548:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc ValidDataToDisk;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc ValidDataLength_1;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc FileSize;
    goto anon601_Then, anon601_Else;

  anon601_Else:
    assume {:partition} PagingIo != 0;
    goto anon506_Then, anon506_Else;

  anon506_Else:
    assume {:partition} StartingVbo_7 >= FileSize;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    Status_53 := 0;
    goto L441;

  L441:
    goto anon479_Then, anon479_Else;

  anon479_Else:
    assume {:partition} Irp_61 != 0;
    goto anon480_Then, anon480_Else;

  anon480_Else:
    assume {:partition} PostIrp_1 == 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    havoc ActualBytesWrote;
    goto anon604_Then, anon604_Else;

  anon604_Else:
    assume {:partition} SynchronousIo != 0;
    goto anon484_Then, anon484_Else;

  anon484_Else:
    assume {:partition} PagingIo == 0;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    goto L467;

  L467:
    goto anon483_Then, anon483_Else;

  anon483_Else:
    assume {:partition} Status_53 >= 0;
    goto anon485_Then, anon485_Else;

  anon485_Else:
    assume {:partition} PagingIo != 0;
    goto L475;

  L475:
    goto anon486_Then, anon486_Else;

  anon486_Else:
    assume {:partition} ExtendingFile != 0;
    goto anon488_Then, anon488_Else;

  anon488_Else:
    assume {:partition} WriteFileSizeToDirent != 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1527;
    call {:si_unique_call 2837} FatSetFileSizeInDirent(IrpContext_137, vslice_dummy_var_1527, 0);
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon489_Then, anon489_Else;

  anon489_Else:
    goto L485;

  L485:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Tmp_2240;
    call {:si_unique_call 2838} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_2240, 0, 0, 8, 3, 0);
    goto L476;

  L476:
    goto anon487_Then, anon487_Else;

  anon487_Else:
    assume {:partition} ExtendingFile != 0;
    goto anon491_Then, anon491_Else;

  anon491_Else:
    assume {:partition} WriteFileSizeToDirent == 0;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    goto L489;

  L489:
    goto anon490_Then, anon490_Else;

  anon490_Else:
    assume {:partition} ExtendingValidData != 0;
    EndingVboWritten := StartingVbo_7 + ActualBytesWrote;
    goto anon605_Then, anon605_Else;

  anon605_Else:
    assume {:partition} EndingVboWritten > FileSize;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto L497;

  L497:
    goto anon492_Then, anon492_Else;

  anon492_Else:
    assume {:partition} NonCachedIo != 0;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    goto anon493_Then, anon493_Else;

  anon493_Else:
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    havoc Tmp_2182;
    assume {:nonnull} Tmp_2182 != 0;
    assume Tmp_2182 > 0;
    goto anon606_Then, anon606_Else;

  anon606_Else:
    goto L470;

  L470:
    call {:si_unique_call 2839} FatUnpinRepinnedBcbs(IrpContext_137);
    goto L442;

  L442:
    call {:si_unique_call 2840} sdv_1378 := sdv_AbnormalTermination();
    goto anon494_Then, anon494_Else;

  anon494_Else:
    assume {:partition} sdv_1378 != 0;
    goto anon496_Then, anon496_Else;

  anon496_Else:
    assume {:partition} ExtendingFile != 0;
    goto L507;

  L507:
    call {:si_unique_call 2841} vslice_dummy_var_389 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    havoc Tmp_2186;
    assume {:nonnull} Tmp_2186 != 0;
    assume Tmp_2186 > 0;
    goto anon602_Then, anon602_Else;

  anon602_Else:
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    havoc Tmp_2225;
    assume {:nonnull} Tmp_2225 != 0;
    assume Tmp_2225 > 0;
    havoc Tmp_2178;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2178 != 0;
    assume Tmp_2178 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2178 != 0;
    assume Tmp_2178 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2178 != 0;
    assume Tmp_2178 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2178 != 0;
    assume Tmp_2178 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2178 != 0;
    assume Tmp_2178 > 0;
    goto L513;

  L513:
    call {:si_unique_call 2842} ExReleaseResourceLite(0);
    goto L504;

  L504:
    goto anon495_Then, anon495_Else;

  anon495_Else:
    assume {:partition} UnwindOutstandingAsync != 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    call {:si_unique_call 2843} vslice_dummy_var_396 := corral_nondet();
    goto L517;

  L517:
    goto anon498_Then, anon498_Else;

  anon498_Else:
    assume {:partition} FcbOrDcbAcquired != 0;
    goto anon500_Then, anon500_Else;

  anon500_Else:
    assume {:partition} Irp_61 != 0;
    call {:si_unique_call 2844} ExReleaseResourceLite(0);
    goto L521;

  L521:
    goto anon499_Then, anon499_Else;

  anon499_Else:
    assume {:partition} PagingIoResourceAcquired != 0;
    goto anon502_Then, anon502_Else;

  anon502_Else:
    assume {:partition} Irp_61 != 0;
    call {:si_unique_call 2845} ExReleaseResourceLite(0);
    goto L526;

  L526:
    goto anon501_Then, anon501_Else;

  anon501_Else:
    assume {:partition} PostIrp_1 != 0;
    goto L534;

  L534:
    Tmp_2168 := Status_53;
    goto L1;

  anon501_Then:
    assume {:partition} PostIrp_1 == 0;
    call {:si_unique_call 2846} sdv_1333 := sdv_AbnormalTermination();
    goto anon503_Then, anon503_Else;

  anon503_Else:
    assume {:partition} sdv_1333 == 0;
    call {:si_unique_call 2847} FatCompleteRequest_Real(IrpContext_137, Irp_61, Status_53);
    goto L534;

  anon503_Then:
    assume {:partition} sdv_1333 != 0;
    goto L534;

  anon502_Then:
    assume {:partition} Irp_61 == 0;
    goto L526;

  anon499_Then:
    assume {:partition} PagingIoResourceAcquired == 0;
    goto L526;

  anon500_Then:
    assume {:partition} Irp_61 == 0;
    goto L521;

  anon498_Then:
    assume {:partition} FcbOrDcbAcquired == 0;
    goto L521;

  anon495_Then:
    assume {:partition} UnwindOutstandingAsync == 0;
    goto L517;

  anon602_Then:
    goto L513;

  anon496_Then:
    assume {:partition} ExtendingFile == 0;
    goto anon497_Then, anon497_Else;

  anon497_Else:
    assume {:partition} ExtendingValidData != 0;
    goto L507;

  anon497_Then:
    assume {:partition} ExtendingValidData == 0;
    goto L504;

  anon494_Then:
    assume {:partition} sdv_1378 == 0;
    goto L504;

  anon606_Then:
    goto L470;

  anon493_Then:
    goto L470;

  anon492_Then:
    assume {:partition} NonCachedIo == 0;
    goto L470;

  anon605_Then:
    assume {:partition} FileSize >= EndingVboWritten;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto L497;

  anon490_Then:
    assume {:partition} ExtendingValidData == 0;
    goto L470;

  anon491_Then:
    assume {:partition} WriteFileSizeToDirent != 0;
    goto L489;

  anon487_Then:
    assume {:partition} ExtendingFile == 0;
    goto L489;

  anon489_Then:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1528;
    call {:si_unique_call 2848} FatSetFullFileNameInFcb#1(IrpContext_137, vslice_dummy_var_1528);
    goto L485;

  anon488_Then:
    assume {:partition} WriteFileSizeToDirent == 0;
    goto L476;

  anon486_Then:
    assume {:partition} ExtendingFile == 0;
    goto L476;

  anon485_Then:
    assume {:partition} PagingIo == 0;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    goto L475;

  anon483_Then:
    assume {:partition} 0 > Status_53;
    goto L470;

  anon484_Then:
    assume {:partition} PagingIo != 0;
    goto L467;

  anon604_Then:
    assume {:partition} SynchronousIo == 0;
    goto L467;

  anon480_Then:
    assume {:partition} PostIrp_1 != 0;
    goto anon481_Then, anon481_Else;

  anon481_Else:
    assume {:partition} OplockPostIrp_2 == 0;
    call {:si_unique_call 2849} FatUnpinRepinnedBcbs(IrpContext_137);
    goto anon482_Then, anon482_Else;

  anon482_Else:
    assume {:partition} ExtendingFile != 0;
    call {:si_unique_call 2850} vslice_dummy_var_388 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    havoc Tmp_2195;
    assume {:nonnull} Tmp_2195 != 0;
    assume Tmp_2195 > 0;
    goto anon603_Then, anon603_Else;

  anon603_Else:
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    havoc Tmp_2204;
    assume {:nonnull} Tmp_2204 != 0;
    assume Tmp_2204 > 0;
    havoc Tmp_2176;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2176 != 0;
    assume Tmp_2176 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2176 != 0;
    assume Tmp_2176 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2176 != 0;
    assume Tmp_2176 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2176 != 0;
    assume Tmp_2176 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2176 != 0;
    assume Tmp_2176 > 0;
    goto L460;

  L460:
    call {:si_unique_call 2851} ExReleaseResourceLite(0);
    goto L452;

  L452:
    call {:si_unique_call 2852} Status_53 := FatFsdPostRequest(IrpContext_137, Irp_61);
    goto L442;

  anon603_Then:
    goto L460;

  anon482_Then:
    assume {:partition} ExtendingFile == 0;
    goto L452;

  anon481_Then:
    assume {:partition} OplockPostIrp_2 != 0;
    goto L442;

  anon479_Then:
    assume {:partition} Irp_61 == 0;
    goto L442;

  anon506_Then:
    assume {:partition} FileSize > StartingVbo_7;
    goto anon507_Then, anon507_Else;

  anon507_Else:
    assume {:partition} ByteCount_20 > FileSize - StartingVbo_7;
    ByteCount_20 := FileSize - StartingVbo_7;
    goto L555;

  L555:
    call {:si_unique_call 2853} sdv_1375 := PsGetCurrentThread();
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon508_Then, anon508_Else;

  anon508_Else:
    CalledByLazyWriter := 1;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon607_Then, anon607_Else;

  anon607_Else:
    goto anon510_Then, anon510_Else;

  anon510_Else:
    assume {:partition} StartingVbo_7 + ByteCount_20 > ValidDataLength_1;
    goto anon511_Then, anon511_Else;

  anon511_Else:
    assume {:partition} FileSize > StartingVbo_7;
    Tmp_2216 := BAND(ValidDataLength_1 + 4096 - 1, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    goto anon608_Then, anon608_Else;

  anon608_Else:
    assume {:partition} StartingVbo_7 + ByteCount_20 > Tmp_2216;
    Status_53 := -1073741740;
    goto L441;

  anon608_Then:
    assume {:partition} Tmp_2216 >= StartingVbo_7 + ByteCount_20;
    goto L565;

  L565:
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    goto anon509_Then, anon509_Else;

  anon509_Else:
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto anon513_Then, anon513_Else;

  anon513_Else:
    goto anon514_Then, anon514_Else;

  anon514_Else:
    TopIrp := 0;
    goto L581;

  L581:
    goto anon515_Then, anon515_Else;

  anon515_Else:
    assume {:partition} TopIrp > 65535;
    Tmp_2169 := TopIrp;
    assume {:nonnull} Tmp_2169 != 0;
    assume Tmp_2169 > 0;
    goto anon609_Then, anon609_Else;

  anon609_Else:
    call {:si_unique_call 2854} IrpStack := sdv_IoGetCurrentIrpStackLocation(TopIrp);
    assume {:nonnull} IrpStack != 0;
    assume IrpStack > 0;
    goto anon516_Then, anon516_Else;

  anon516_Else:
    assume {:nonnull} IrpStack != 0;
    assume IrpStack > 0;
    havoc Tmp_2183;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    assume {:nonnull} Tmp_2183 != 0;
    assume Tmp_2183 > 0;
    goto anon610_Then, anon610_Else;

  anon610_Else:
    RecursiveWriteThrough := 1;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto L574;

  L574:
    goto anon512_Then, anon512_Else;

  anon512_Else:
    assume {:partition} CalledByLazyWriter != 0;
    goto L593;

  L593:
    goto anon518_Then, anon518_Else;

  anon518_Else:
    assume {:partition} NonCachedIo != 0;
    goto anon519_Then, anon519_Else;

  anon519_Else:
    assume {:partition} Wait_10 == 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2181;
    assume {:nonnull} Tmp_2181 != 0;
    assume Tmp_2181 > 0;
    goto L594;

  L594:
    InitialFileSize_1 := FileSize;
    InitialValidDataLength_1 := ValidDataLength_1;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1529;
    call {:si_unique_call 2855} FatVerifyFcb(IrpContext_137, vslice_dummy_var_1529);
    goto anon520_Then, anon520_Else;

  anon520_Else:
    assume {:partition} WriteToEof != 0;
    StartingVbo_7 := FileSize;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1530;
    call {:si_unique_call 2856} sdv_1334 := FatIsIoRangeValid(vslice_dummy_var_1530, StartingByte, ByteCount_20);
    goto anon522_Then, anon522_Else;

  anon522_Else:
    assume {:partition} sdv_1334 == 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    Status_53 := -1073741697;
    goto L441;

  anon522_Then:
    assume {:partition} sdv_1334 != 0;
    goto L602;

  L602:
    goto anon521_Then, anon521_Else;

  anon521_Else:
    assume {:partition} PagingIo != 0;
    goto L613;

  L613:
    goto anon524_Then, anon524_Else;

  anon524_Else:
    assume {:partition} PagingIo != 0;
    goto L615;

  L615:
    goto anon526_Then, anon526_Else;

  anon526_Else:
    assume {:partition} ExtendingFile != 0;
    FileSize := StartingVbo_7 + ByteCount_20;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon611_Then, anon611_Else;

  anon611_Else:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1531;
    call {:si_unique_call 2857} FatLookupFileAllocationSize#1(IrpContext_137, vslice_dummy_var_1531);
    goto L619;

  L619:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon528_Then, anon528_Else;

  anon528_Else:
    AllocateMinimumSize := 1;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon612_Then, anon612_Else;

  anon612_Else:
    call {:si_unique_call 2858} BytesPerCluster_4 := corral_nondet();
    ClusterAlignedFileSize := BAND(FileSize + BytesPerCluster_4 - 1, BNOT(BytesPerCluster_4 - 1));
    goto anon613_Then, anon613_Else;

  anon613_Else:
    assume {:partition} ClusterAlignedFileSize != 0;
    call {:si_unique_call 2859} Multiplier := corral_nondet();
    goto anon614_Then, anon614_Else;

  anon614_Else:
    assume {:partition} Multiplier > 32;
    Multiplier := 32;
    goto L638;

  L638:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Multiplier;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc TargetAllocation;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon615_Then, anon615_Else;

  anon615_Else:
    TargetAllocation := BNOT(BytesPerCluster_4) + 1;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Multiplier;
    goto L642;

  L642:
    ApproximateClusterCount := INTDIV(Multiplier, BytesPerCluster_4);
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    goto anon616_Then, anon616_Else;

  anon616_Else:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1532;
    call {:si_unique_call 2860} FatAddFileAllocation(IrpContext_137, vslice_dummy_var_1532, FileObject_38, TargetAllocation);
    AllocateMinimumSize := 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto L627;

  L627:
    goto anon529_Then, anon529_Else;

  anon529_Else:
    assume {:partition} AllocateMinimumSize != 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1533;
    call {:si_unique_call 2861} FatAddFileAllocation(IrpContext_137, vslice_dummy_var_1533, FileObject_38, FileSize);
    goto L623;

  L623:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    goto anon617_Then, anon617_Else;

  anon617_Else:
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    havoc Tmp_2213;
    assume {:nonnull} Tmp_2213 != 0;
    assume Tmp_2213 > 0;
    goto anon618_Then, anon618_Else;

  anon618_Else:
    goto L616;

  L616:
    goto anon527_Then, anon527_Else;

  anon527_Else:
    assume {:partition} CalledByLazyWriter != 0;
    goto L668;

  L668:
    goto anon531_Then, anon531_Else;

  anon531_Else:
    assume {:partition} FcbCanDemoteToShared != 0;
    call {:si_unique_call 2862} ExConvertExclusiveToSharedLite(0);
    FcbAcquiredExclusive := 0;
    goto L669;

  L669:
    goto anon532_Then, anon532_Else;

  anon532_Else:
    assume {:partition} ValidDataToDisk > ValidDataLength_1;
    ValidDataToCheck := ValidDataToDisk;
    goto L676;

  L676:
    goto anon533_Then, anon533_Else;

  anon533_Else:
    assume {:partition} NonCachedIo != 0;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc SectorSize_6;
    BytesToWrite_2 := BAND(ByteCount_20 + SectorSize_6 - 1, BNOT(SectorSize_6 - 1));
    goto anon619_Then, anon619_Else;

  anon619_Else:
    assume {:partition} BAND(StartingVbo_7, SectorSize_6 - 1) != 0;
    goto L684;

  L684:
    Status_53 := -1073741822;
    goto L441;

  anon619_Then:
    assume {:partition} BAND(StartingVbo_7, SectorSize_6 - 1) == 0;
    goto anon535_Then, anon535_Else;

  anon535_Else:
    assume {:partition} BytesToWrite_2 != ByteCount_20;
    goto anon537_Then, anon537_Else;

  anon537_Else:
    assume {:partition} ValidDataLength_1 <= StartingVbo_7 + ByteCount_20;
    goto L686;

  L686:
    goto anon536_Then, anon536_Else;

  anon536_Else:
    assume {:partition} CalledByLazyWriter != 0;
    goto L689;

  L689:
    WriteFileSizeToDirent := 1;
    goto anon620_Then, anon620_Else;

  anon620_Else:
    assume {:partition} SwitchBackToAsync != 0;
    Wait_10 := 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto L691;

  L691:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1534;
    call {:si_unique_call 2863} sdv_1365 := FatNonCachedIo(IrpContext_137, Irp_61, vslice_dummy_var_1534, StartingVbo_7, BytesToWrite_2, BytesToWrite_2);
    goto anon539_Then, anon539_Else;

  anon539_Else:
    assume {:partition} sdv_1365 == 259;
    UnwindOutstandingAsync := 0;
    Wait_10 := 1;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    Irp_61 := 0;
    Status_53 := 259;
    goto L441;

  anon539_Then:
    assume {:partition} sdv_1365 != 259;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    havoc Status_53;
    goto anon621_Then, anon621_Else;

  anon621_Else:
    assume {:partition} Status_53 >= 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    Temp := StartingVbo_7 + BytesToWrite_2;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon622_Then, anon622_Else;

  anon622_Else:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto L441;

  anon622_Then:
    goto L441;

  anon621_Then:
    assume {:partition} 0 > Status_53;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    call {:si_unique_call 2864} sdv_1372 := corral_nondet();
    call {:si_unique_call 2865} ExRaiseStatus(sdv_1372);
    goto L441;

  anon620_Then:
    assume {:partition} SwitchBackToAsync == 0;
    goto L691;

  anon536_Then:
    assume {:partition} CalledByLazyWriter == 0;
    goto anon538_Then, anon538_Else;

  anon538_Else:
    assume {:partition} RecursiveWriteThrough == 0;
    goto anon540_Then, anon540_Else;

  anon540_Else:
    assume {:partition} StartingVbo_7 > ValidDataToCheck;
    Tmp_2239 := StartingVbo_7 - ValidDataToCheck;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1535;
    call {:si_unique_call 2866} vslice_dummy_var_397 := FatZeroData(IrpContext_137, vslice_dummy_var_1535, FileObject_38, ValidDataToCheck, Tmp_2239);
    goto L689;

  anon540_Then:
    assume {:partition} ValidDataToCheck >= StartingVbo_7;
    goto L689;

  anon538_Then:
    assume {:partition} RecursiveWriteThrough != 0;
    goto L689;

  anon537_Then:
    assume {:partition} StartingVbo_7 + ByteCount_20 < ValidDataLength_1;
    goto L684;

  anon535_Then:
    assume {:partition} BytesToWrite_2 == ByteCount_20;
    goto L686;

  anon533_Then:
    assume {:partition} NonCachedIo == 0;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    goto anon534_Then, anon534_Else;

  anon534_Else:
    goto L725;

  L725:
    goto anon542_Then, anon542_Else;

  anon542_Else:
    assume {:partition} StartingVbo_7 > ValidDataToCheck;
    Tmp_2193 := StartingVbo_7 - ValidDataToCheck;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1536;
    call {:si_unique_call 2867} sdv_1382 := FatZeroData(IrpContext_137, vslice_dummy_var_1536, FileObject_38, ValidDataToCheck, Tmp_2193);
    goto anon543_Then, anon543_Else;

  anon543_Else:
    assume {:partition} sdv_1382 == 0;
    PostIrp_1 := 1;
    goto L441;

  anon543_Then:
    assume {:partition} sdv_1382 != 0;
    goto L726;

  L726:
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2203;
    goto anon623_Then, anon623_Else;

  anon623_Else:
    assume {:partition} Tmp_2203 == 0;
    WriteFileSizeToDirent := 0;
    goto L1368;

  L1368:
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto anon624_Then, anon624_Else;

  anon624_Else:
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    havoc Status_53;
    goto L441;

  anon624_Then:
    call {:si_unique_call 2868} vslice_dummy_var_392 := FatMapUserBuffer(IrpContext_137, Irp_61);
    call {:si_unique_call 2869} sdv_1366 := corral_nondet();
    goto anon544_Then, anon544_Else;

  anon544_Else:
    assume {:partition} sdv_1366 != 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    Status_53 := 0;
    goto L441;

  anon544_Then:
    assume {:partition} sdv_1366 == 0;
    PostIrp_1 := 1;
    goto L441;

  anon623_Then:
    assume {:partition} Tmp_2203 != 0;
    WriteFileSizeToDirent := 1;
    goto L1368;

  anon542_Then:
    assume {:partition} ValidDataToCheck >= StartingVbo_7;
    goto L726;

  anon534_Then:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon541_Then, anon541_Else;

  anon541_Else:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1537;
    call {:si_unique_call 2870} FatLookupFileAllocationSize#1(IrpContext_137, vslice_dummy_var_1537);
    goto L755;

  L755:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon545_Then, anon545_Else;

  anon545_Else:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1538;
    call {:si_unique_call 2871} FatPopUpFileCorrupt#1(IrpContext_137, vslice_dummy_var_1538);
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    call {:si_unique_call 2872} ExRaiseStatus(-1073741566);
    goto L759;

  L759:
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    goto anon546_Then, anon546_Else;

  anon546_Else:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    goto anon547_Then, anon547_Else;

  anon547_Else:
    assume {:nonnull} StartingByte != 0;
    assume StartingByte > 0;
    goto anon548_Then, anon548_Else;

  anon548_Else:
    goto L778;

  L778:
    call {:si_unique_call 2873} sdv_1383 := ExAllocatePoolWithTag(16, 96, -428580538);
    FlushContext := sdv_1383;
    call {:si_unique_call 2874} KeInitializeTimer(0);
    assume {:nonnull} FlushContext != 0;
    assume FlushContext > 0;
    call {:si_unique_call 2875} KeInitializeDpc(Dpc__DEFERRED_FLUSH_CONTEXT(FlushContext), li2bplFunctionConstant662, 0);
    call {:si_unique_call 2876} vslice_dummy_var_393 := sdv_ObReferenceObject(0);
    assume {:nonnull} FlushContext != 0;
    assume FlushContext > 0;
    assume {:nonnull} OneSecondFromNow != 0;
    assume OneSecondFromNow > 0;
    call {:si_unique_call 2877} vslice_dummy_var_398 := KeSetTimer(0, OneSecondFromNow, 0);
    goto L725;

  anon548_Then:
    goto anon549_Then, anon549_Else;

  anon549_Else:
    assume {:partition} ByteCount_20 >= 4096;
    assume {:nonnull} FileObject_38 != 0;
    assume FileObject_38 > 0;
    goto L725;

  anon549_Then:
    assume {:partition} 4096 > ByteCount_20;
    goto L778;

  anon547_Then:
    goto L725;

  anon546_Then:
    goto L725;

  anon545_Then:
    goto L759;

  anon541_Then:
    goto L755;

  anon532_Then:
    assume {:partition} ValidDataLength_1 >= ValidDataToDisk;
    ValidDataToCheck := ValidDataLength_1;
    goto L676;

  anon531_Then:
    assume {:partition} FcbCanDemoteToShared == 0;
    goto L669;

  anon527_Then:
    assume {:partition} CalledByLazyWriter == 0;
    goto anon530_Then, anon530_Else;

  anon530_Else:
    assume {:partition} RecursiveWriteThrough == 0;
    goto anon550_Then, anon550_Else;

  anon550_Else:
    assume {:partition} StartingVbo_7 + ByteCount_20 > ValidDataLength_1;
    ExtendingValidData := 1;
    goto L669;

  anon550_Then:
    assume {:partition} ValidDataLength_1 >= StartingVbo_7 + ByteCount_20;
    goto L668;

  anon530_Then:
    assume {:partition} RecursiveWriteThrough != 0;
    goto L668;

  anon618_Then:
    goto L616;

  anon617_Then:
    goto L616;

  anon529_Then:
    assume {:partition} AllocateMinimumSize == 0;
    goto L623;

  anon616_Then:
    goto L627;

  anon615_Then:
    goto L642;

  anon614_Then:
    assume {:partition} 32 >= Multiplier;
    goto L638;

  anon613_Then:
    assume {:partition} ClusterAlignedFileSize == 0;
    goto L627;

  anon612_Then:
    goto L627;

  anon528_Then:
    goto L623;

  anon611_Then:
    goto L619;

  anon526_Then:
    assume {:partition} ExtendingFile == 0;
    goto L616;

  anon524_Then:
    assume {:partition} PagingIo == 0;
    goto anon525_Then, anon525_Else;

  anon525_Else:
    assume {:partition} StartingVbo_7 + ByteCount_20 > FileSize;
    ExtendingFile := 1;
    goto L615;

  anon525_Then:
    assume {:partition} FileSize >= StartingVbo_7 + ByteCount_20;
    goto L615;

  anon521_Then:
    assume {:partition} PagingIo == 0;
    goto anon523_Then, anon523_Else;

  anon523_Else:
    assume {:partition} TypeOfOpen_9 == 2;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    call {:si_unique_call 2878} Status_53 := corral_nondet();
    goto anon551_Then, anon551_Else;

  anon551_Else:
    assume {:partition} Status_53 != 0;
    OplockPostIrp_2 := 1;
    PostIrp_1 := 1;
    goto L441;

  anon551_Then:
    assume {:partition} Status_53 == 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon552_Then, anon552_Else;

  anon552_Else:
    goto L810;

  L810:
    call {:si_unique_call 2879} sdv_1345 := FsRtlCheckLockForWriteAccess(0, 0);
    goto anon554_Then, anon554_Else;

  anon554_Else:
    assume {:partition} sdv_1345 == 0;
    Status_53 := -1073741740;
    goto L441;

  anon554_Then:
    assume {:partition} sdv_1345 != 0;
    goto L613;

  anon552_Then:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon553_Then, anon553_Else;

  anon553_Else:
    goto L819;

  L819:
    Tmp_2206 := 0;
    goto L820;

  L820:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto L810;

  anon553_Then:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    call {:si_unique_call 2880} sdv_1395 := corral_nondet();
    goto anon555_Then, anon555_Else;

  anon555_Else:
    assume {:partition} sdv_1395 != 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Tmp_2173;
    assume {:nonnull} Tmp_2173 != 0;
    assume Tmp_2173 > 0;
    goto anon625_Then, anon625_Else;

  anon625_Else:
    goto L824;

  L824:
    Tmp_2228 := 2;
    goto L825;

  L825:
    Tmp_2206 := Tmp_2228;
    goto L820;

  anon625_Then:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Tmp_2220;
    assume {:nonnull} Tmp_2220 != 0;
    assume Tmp_2220 > 0;
    goto anon626_Then, anon626_Else;

  anon626_Else:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Tmp_2184;
    assume {:nonnull} Tmp_2184 != 0;
    assume Tmp_2184 > 0;
    goto anon627_Then, anon627_Else;

  anon627_Else:
    Tmp_2228 := 1;
    goto L825;

  anon627_Then:
    goto L824;

  anon626_Then:
    goto L824;

  anon555_Then:
    assume {:partition} sdv_1395 == 0;
    goto L819;

  anon523_Then:
    assume {:partition} TypeOfOpen_9 != 2;
    goto L613;

  anon520_Then:
    assume {:partition} WriteToEof == 0;
    goto L602;

  anon519_Then:
    assume {:partition} Wait_10 != 0;
    goto L594;

  anon518_Then:
    assume {:partition} NonCachedIo == 0;
    goto L594;

  anon512_Then:
    assume {:partition} CalledByLazyWriter == 0;
    goto anon517_Then, anon517_Else;

  anon517_Else:
    assume {:partition} RecursiveWriteThrough == 0;
    goto anon556_Then, anon556_Else;

  anon556_Else:
    assume {:partition} WriteToEof != 0;
    goto L830;

  L830:
    goto anon558_Then, anon558_Else;

  anon558_Else:
    assume {:partition} Wait_10 != 0;
    goto L832;

  L832:
    goto anon559_Then, anon559_Else;

  anon559_Else:
    assume {:partition} PagingIo != 0;
    call {:si_unique_call 2881} ExReleaseResourceLite(0);
    PagingIoResourceAcquired := 0;
    goto L838;

  L838:
    goto anon561_Then, anon561_Else;

  anon561_Else:
    assume {:partition} SwitchBackToAsync != 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Tmp_2236;
    assume {:nonnull} Tmp_2236 != 0;
    assume Tmp_2236 > 0;
    goto anon628_Then, anon628_Else;

  anon628_Else:
    goto L842;

  L842:
    call {:si_unique_call 2882} sdv_RtlZeroMemory(0, 36);
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2223;
    assume {:nonnull} Tmp_2223 != 0;
    assume Tmp_2223 > 0;
    call {:si_unique_call 2883} KeInitializeEvent(SyncEvent_unnamed_tag_63(Wait__FAT_IO_CONTEXT(Tmp_2223)), 0, 0);
    SwitchBackToAsync := 0;
    goto L839;

  L839:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc ValidDataToDisk;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc ValidDataLength_1;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc FileSize;
    goto anon629_Then, anon629_Else;

  anon629_Else:
    assume {:partition} PagingIo != 0;
    goto anon565_Then, anon565_Else;

  anon565_Else:
    assume {:partition} StartingVbo_7 >= FileSize;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    Status_53 := 0;
    goto L441;

  anon565_Then:
    assume {:partition} FileSize > StartingVbo_7;
    assume {:nonnull} IrpSp_36 != 0;
    assume IrpSp_36 > 0;
    havoc ByteCount_20;
    goto anon630_Then, anon630_Else;

  anon630_Else:
    assume {:partition} ByteCount_20 > FileSize - StartingVbo_7;
    ByteCount_20 := FileSize - StartingVbo_7;
    goto L593;

  anon630_Then:
    assume {:partition} FileSize - StartingVbo_7 >= ByteCount_20;
    goto L593;

  anon629_Then:
    assume {:partition} PagingIo == 0;
    goto L593;

  anon628_Then:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon562_Then, anon562_Else;

  anon562_Else:
    goto anon563_Then, anon563_Else;

  anon563_Else:
    assume {:partition} FatNoAsync == 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Tmp_2200;
    assume {:nonnull} Tmp_2200 != 0;
    assume Tmp_2200 > 0;
    goto anon631_Then, anon631_Else;

  anon631_Else:
    goto L854;

  L854:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    call {:si_unique_call 2884} sdv_1360 := corral_nondet();
    goto anon564_Then, anon564_Else;

  anon564_Else:
    assume {:partition} sdv_1360 != 0;
    goto L861;

  L861:
    UnwindOutstandingAsync := 1;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2232;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2232 != 0;
    assume Tmp_2232 > 0;
    goto L839;

  anon564_Then:
    assume {:partition} sdv_1360 == 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Tmp_2196;
    assume {:nonnull} Tmp_2196 != 0;
    assume Tmp_2196 > 0;
    havoc vslice_dummy_var_1539;
    call {:si_unique_call 2885} KeClearEvent(vslice_dummy_var_1539);
    goto L861;

  anon631_Then:
    call {:si_unique_call 2886} sdv_1390 := ExAllocatePoolWithTag(16, 16, -160145082);
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Tmp_2230;
    assume {:nonnull} Tmp_2230 != 0;
    assume Tmp_2230 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc Tmp_2218;
    assume {:nonnull} Tmp_2218 != 0;
    assume Tmp_2218 > 0;
    havoc vslice_dummy_var_1540;
    call {:si_unique_call 2887} KeInitializeEvent(vslice_dummy_var_1540, 0, 0);
    goto L854;

  anon563_Then:
    assume {:partition} FatNoAsync != 0;
    goto L842;

  anon562_Then:
    goto L842;

  anon561_Then:
    assume {:partition} SwitchBackToAsync == 0;
    goto L839;

  anon559_Then:
    assume {:partition} PagingIo == 0;
    goto anon560_Then, anon560_Else;

  anon560_Else:
    assume {:partition} FcbAcquiredExclusive == 0;
    call {:si_unique_call 2888} ExReleaseResourceLite(0);
    FcbOrDcbAcquired := 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1541;
    call {:si_unique_call 2889} sdv_1361 := FatAcquireExclusiveFcb(IrpContext_137, vslice_dummy_var_1541);
    goto anon566_Then, anon566_Else;

  anon566_Else:
    assume {:partition} sdv_1361 != 0;
    FcbOrDcbAcquired := 1;
    FcbAcquiredExclusive := 1;
    goto L838;

  anon566_Then:
    assume {:partition} sdv_1361 == 0;
    PostIrp_1 := 1;
    goto L441;

  anon560_Then:
    assume {:partition} FcbAcquiredExclusive != 0;
    goto L838;

  anon558_Then:
    assume {:partition} Wait_10 == 0;
    Wait_10 := 1;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto anon632_Then, anon632_Else;

  anon632_Else:
    assume {:partition} NonCachedIo != 0;
    SwitchBackToAsync := 1;
    goto L832;

  anon632_Then:
    assume {:partition} NonCachedIo == 0;
    goto L832;

  anon556_Then:
    assume {:partition} WriteToEof == 0;
    goto anon557_Then, anon557_Else;

  anon557_Else:
    assume {:partition} StartingVbo_7 + ByteCount_20 > ValidDataLength_1;
    goto L830;

  anon557_Then:
    assume {:partition} ValidDataLength_1 >= StartingVbo_7 + ByteCount_20;
    goto L593;

  anon517_Then:
    assume {:partition} RecursiveWriteThrough != 0;
    goto L593;

  anon610_Then:
    goto L574;

  anon516_Then:
    goto L574;

  anon609_Then:
    goto L574;

  anon515_Then:
    assume {:partition} 65535 >= TopIrp;
    goto L574;

  anon514_Then:
    call {:si_unique_call 2890} TopIrp := __HAVOC_malloc(1);
    goto L581;

  anon513_Then:
    goto L574;

  anon509_Then:
    goto L574;

  anon511_Then:
    assume {:partition} StartingVbo_7 >= FileSize;
    goto L565;

  anon510_Then:
    assume {:partition} ValidDataLength_1 >= StartingVbo_7 + ByteCount_20;
    goto L565;

  anon607_Then:
    goto L565;

  anon508_Then:
    goto L565;

  anon507_Then:
    assume {:partition} FileSize - StartingVbo_7 >= ByteCount_20;
    goto L555;

  anon601_Then:
    assume {:partition} PagingIo == 0;
    goto L555;

  anon505_Then:
    goto L548;

  anon600_Then:
    assume {:partition} Wait_10 == 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2224;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2224 != 0;
    assume Tmp_2224 > 0;
    goto L547;

  anon474_Then:
    assume {:partition} PagingIo == 0;
    goto anon504_Then, anon504_Else;

  anon504_Else:
    assume {:partition} Wait_10 != 0;
    goto L893;

  L893:
    goto anon568_Then, anon568_Else;

  anon568_Else:
    assume {:partition} FcbOrDcbAcquired != 0;
    goto L897;

  L897:
    FcbOrDcbAcquired := 1;
    goto L548;

  anon568_Then:
    assume {:partition} FcbOrDcbAcquired == 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1542;
    call {:si_unique_call 2891} sdv_1338 := FatAcquireSharedFcb(IrpContext_137, vslice_dummy_var_1542);
    goto anon569_Then, anon569_Else;

  anon569_Else:
    assume {:partition} sdv_1338 == 0;
    PostIrp_1 := 1;
    goto L441;

  anon569_Then:
    assume {:partition} sdv_1338 != 0;
    goto L897;

  anon504_Then:
    assume {:partition} Wait_10 == 0;
    goto anon567_Then, anon567_Else;

  anon567_Else:
    assume {:partition} NonCachedIo != 0;
    goto anon570_Then, anon570_Else;

  anon570_Else:
    assume {:partition} FcbOrDcbAcquired != 0;
    goto L905;

  L905:
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2222;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2222 != 0;
    assume Tmp_2222 > 0;
    goto anon633_Then, anon633_Else;

  anon633_Else:
    assume {:partition} FcbCanDemoteToShared != 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2233;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2233 != 0;
    assume Tmp_2233 > 0;
    goto L897;

  anon633_Then:
    assume {:partition} FcbCanDemoteToShared == 0;
    goto L897;

  anon570_Then:
    assume {:partition} FcbOrDcbAcquired == 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1543;
    call {:si_unique_call 2892} sdv_1392 := FatAcquireSharedFcbWaitForEx(IrpContext_137, vslice_dummy_var_1543);
    goto anon571_Then, anon571_Else;

  anon571_Else:
    assume {:partition} sdv_1392 == 0;
    PostIrp_1 := 1;
    goto L441;

  anon571_Then:
    assume {:partition} sdv_1392 != 0;
    goto L905;

  anon567_Then:
    assume {:partition} NonCachedIo == 0;
    goto L893;

  anon635_Then:
    assume {:partition} WriteToEof == 0;
    goto L435;

  anon478_Then:
    call {:si_unique_call 2893} ExReleaseResourceLite(0);
    goto L441;

  anon477_Then:
    assume {:partition} WriteToEof == 0;
    goto L424;

  anon476_Then:
    assume {:partition} sdv_1396 == 0;
    PostIrp_1 := 1;
    goto L441;

  anon634_Then:
    goto L370;

  anon475_Then:
    assume {:partition} PagingIo != 0;
    goto L370;

  anon473_Then:
    assume {:partition} NonCachedIo == 0;
    goto L370;

  anon457_Then:
    assume {:partition} TypeOfOpen_9 != 2;
    goto anon472_Then, anon472_Else;

  anon472_Else:
    assume {:partition} TypeOfOpen_9 == 6;
    goto L913;

  L913:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1544;
    call {:si_unique_call 2894} FatVerifyFcb(IrpContext_137, vslice_dummy_var_1544);
    call {:si_unique_call 2895} sdv_1380 := ExAcquireSharedStarveExclusive(0, Wait_10);
    goto anon573_Then, anon573_Else;

  anon573_Else:
    assume {:partition} sdv_1380 != 0;
    PagingIoResourceAcquired := 1;
    goto anon636_Then, anon636_Else;

  anon636_Else:
    assume {:partition} Wait_10 != 0;
    goto L924;

  L924:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon574_Then, anon574_Else;

  anon574_Else:
    call {:si_unique_call 2896} vslice_dummy_var_394 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L925;

  L925:
    goto anon575_Then, anon575_Else;

  anon575_Else:
    sdv_1381 := 0;
    goto L931;

  L931:
    goto anon576_Then, anon576_Else;

  anon576_Else:
    assume {:partition} BAND(sdv_1381, 2) != 0;
    goto L933;

  L933:
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon637_Then, anon637_Else;

  anon637_Else:
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    Status_53 := 0;
    goto L441;

  anon637_Then:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    goto anon577_Then, anon577_Else;

  anon577_Else:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc ByteCount_20;
    goto L939;

  L939:
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1545;
    call {:si_unique_call 2897} sdv_1376 := FatNonCachedIo(IrpContext_137, Irp_61, vslice_dummy_var_1545, StartingVbo_7, ByteCount_20, ByteCount_20);
    goto anon578_Then, anon578_Else;

  anon578_Else:
    assume {:partition} sdv_1376 == 259;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    Irp_61 := 0;
    Status_53 := 259;
    goto L441;

  anon578_Then:
    assume {:partition} sdv_1376 != 259;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    havoc Status_53;
    goto anon638_Then, anon638_Else;

  anon638_Else:
    assume {:partition} Status_53 < 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    call {:si_unique_call 2898} sdv_1363 := corral_nondet();
    call {:si_unique_call 2899} ExRaiseStatus(sdv_1363);
    goto L441;

  anon638_Then:
    assume {:partition} 0 <= Status_53;
    goto L441;

  anon577_Then:
    goto L939;

  anon576_Then:
    assume {:partition} BAND(sdv_1381, 2) == 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto L933;

  anon575_Then:
    call {:si_unique_call 2900} sdv_1381 := __HAVOC_malloc(1);
    goto L931;

  anon574_Then:
    goto L925;

  anon636_Then:
    assume {:partition} Wait_10 == 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2229;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    assume {:nonnull} Tmp_2229 != 0;
    assume Tmp_2229 > 0;
    goto L924;

  anon573_Then:
    assume {:partition} sdv_1380 == 0;
    PostIrp_1 := 1;
    goto L441;

  anon472_Then:
    assume {:partition} TypeOfOpen_9 != 6;
    goto anon572_Then, anon572_Else;

  anon572_Else:
    assume {:partition} TypeOfOpen_9 != 7;
    goto anon579_Then, anon579_Else;

  anon579_Else:
    assume {:partition} TypeOfOpen_9 == 3;
    Status_53 := -1073741811;
    goto L441;

  anon579_Then:
    assume {:partition} TypeOfOpen_9 != 3;
    assume {:nonnull} FcbOrDcb_11 != 0;
    assume FcbOrDcb_11 > 0;
    havoc vslice_dummy_var_1546;
    call {:si_unique_call 2901} KeBugCheckEx(35, 2165164, TypeOfOpen_9, vslice_dummy_var_1546, 0);
    goto L441;

  anon572_Then:
    assume {:partition} TypeOfOpen_9 == 7;
    goto L913;

  anon442_Then:
    assume {:partition} Wait_10 == 0;
    call {:si_unique_call 2902} sdv_1353 := PsGetCurrentThread();
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2237;
    assume {:nonnull} Tmp_2237 != 0;
    assume Tmp_2237 > 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2208;
    assume {:nonnull} Tmp_2208 != 0;
    assume Tmp_2208 > 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2202;
    assume {:nonnull} Tmp_2202 != 0;
    assume Tmp_2202 > 0;
    goto L100;

  anon440_Then:
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:partition} Wait_10 != 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto L103;

  anon441_Then:
    assume {:partition} Wait_10 == 0;
    call {:si_unique_call 2903} sdv_1388 := ExAllocatePoolWithTag(16, 36, -663461562);
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto L103;

  anon438_Then:
    assume {:partition} NonCachedIo == 0;
    goto L100;

  anon433_Then:
    assume {:partition} PagingIo == 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    assume {:partition} WriteToEof == 0;
    goto anon580_Then, anon580_Else;

  anon580_Else:
    assume {:partition} TypeOfOpen_9 != 4;
    assume {:nonnull} Vcb_87 != 0;
    assume Vcb_87 > 0;
    havoc vslice_dummy_var_1547;
    call {:si_unique_call 2904} sdv_1348 := FatIsIoRangeValid(vslice_dummy_var_1547, StartingByte, ByteCount_20);
    goto anon581_Then, anon581_Else;

  anon581_Else:
    assume {:partition} sdv_1348 == 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    call {:si_unique_call 2905} FatCompleteRequest_Real(IrpContext_137, Irp_61, -1073741697);
    Tmp_2168 := -1073741697;
    goto L1;

  anon581_Then:
    assume {:partition} sdv_1348 != 0;
    goto L99;

  anon580_Then:
    assume {:partition} TypeOfOpen_9 == 4;
    goto L99;

  anon437_Then:
    assume {:partition} WriteToEof != 0;
    goto L99;

  anon435_Then:
    assume {:partition} TypeOfOpen_9 != 2;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    goto L82;

  anon589_Then:
    assume {:partition} TypeOfOpen_9 != 2;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} TypeOfOpen_9 == 5;
    goto L96;

  L96:
    assume {:nonnull} Stats_10 != 0;
    assume Stats_10 > 0;
    assume {:nonnull} Stats_10 != 0;
    assume Stats_10 > 0;
    goto L92;

  anon434_Then:
    assume {:partition} TypeOfOpen_9 != 5;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:partition} TypeOfOpen_9 == 6;
    goto L96;

  anon436_Then:
    assume {:partition} TypeOfOpen_9 != 6;
    goto L92;

  anon432_Then:
    assume {:partition} PagingIo == 0;
    goto L82;

  anon431_Then:
    assume {:partition} TypeOfOpen_9 != 4;
    goto L80;

  anon430_Then:
    goto L71;

  L71:
    Tmp_2177 := 0;
    goto L74;

  anon588_Then:
    goto L71;

  anon429_Then:
    assume {:partition} NonCachedIo == 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2215;
    goto anon639_Then, anon639_Else;

  anon639_Else:
    assume {:partition} Tmp_2215 == 0;
    goto L1481;

  L1481:
    goto anon640_Then, anon640_Else;

  anon640_Else:
    assume {:partition} Wait_10 != 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2234;
    goto anon641_Then, anon641_Else;

  anon641_Else:
    assume {:partition} Tmp_2234 == 0;
    Tmp_2205 := 1;
    goto L981;

  L981:
    call {:si_unique_call 2906} sdv_1368 := corral_nondet();
    goto anon582_Then, anon582_Else;

  anon582_Else:
    assume {:partition} sdv_1368 == 0;
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    havoc Tmp_2214;
    goto anon642_Then, anon642_Else;

  anon642_Else:
    assume {:partition} Tmp_2214 == 0;
    goto L1488;

  L1488:
    call {:si_unique_call 2907} FatPrePostIrp(IrpContext_137, Irp_61);
    assume {:nonnull} IrpContext_137 != 0;
    assume IrpContext_137 > 0;
    Tmp_2168 := 259;
    goto L1;

  anon642_Then:
    assume {:partition} Tmp_2214 != 0;
    goto L1488;

  anon582_Then:
    assume {:partition} sdv_1368 != 0;
    goto L68;

  anon641_Then:
    assume {:partition} Tmp_2234 != 0;
    goto L977;

  L977:
    Tmp_2205 := 0;
    goto L981;

  anon640_Then:
    assume {:partition} Wait_10 == 0;
    goto L977;

  anon639_Then:
    assume {:partition} Tmp_2215 != 0;
    goto L1481;

  anon587_Then:
    assume {:partition} ByteCount_20 == 0;
    assume {:nonnull} Irp_61 != 0;
    assume Irp_61 > 0;
    call {:si_unique_call 2908} FatCompleteRequest_Real(IrpContext_137, Irp_61, 0);
    Tmp_2168 := 0;
    goto L1;

  anon586_Then:
    assume {:partition} Tmp_2227 != 0;
    SynchronousIo := 1;
    goto L1194;

  anon585_Then:
    assume {:partition} Tmp_2189 != 0;
    NonCachedIo := 1;
    goto L1190;

  anon584_Then:
    assume {:partition} Tmp_2244 != 0;
    PagingIo := 1;
    goto L1186;

  anon583_Then:
    assume {:partition} Tmp_2197 != 0;
    Wait_10 := 1;
    goto L1182;
}



procedure {:origName "FatFsdWrite"} FatFsdWrite(actual_VolumeDeviceObject_10: int, actual_Irp_62: int) returns (Tmp_2246: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, markedPending, locked, queued, queuedWithoutMarking, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdWrite"} FatFsdWrite(actual_VolumeDeviceObject_10: int, actual_Irp_62: int) returns (Tmp_2246: int)
{
  var {:scalar} ModWriter: int;
  var {:pointer} sdv_1399: int;
  var {:pointer} Fcb_54: int;
  var {:scalar} TopLevel_5: int;
  var {:pointer} sdv_1400: int;
  var {:scalar} Status_54: int;
  var {:scalar} sdv_1403: int;
  var {:pointer} sdv_1404: int;
  var {:pointer} Tmp_2248: int;
  var {:pointer} Tmp_2249: int;
  var {:pointer} IrpContext_138: int;
  var {:pointer} sdv_1410: int;
  var {:pointer} VolumeDeviceObject_10: int;
  var {:pointer} Irp_62: int;

  anon0:
    VolumeDeviceObject_10 := actual_VolumeDeviceObject_10;
    Irp_62 := actual_Irp_62;
    IrpContext_138 := 0;
    ModWriter := 0;
    call {:si_unique_call 2911} KeEnterCriticalRegion();
    call {:si_unique_call 2912} sdv_1400 := sdv_IoGetCurrentIrpStackLocation(Irp_62);
    assume {:nonnull} sdv_1400 != 0;
    assume sdv_1400 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L22;

  L22:
    call {:si_unique_call 2913} TopLevel_5 := FatIsIrpTopLevel(Irp_62);
    call {:si_unique_call 2914} sdv_1403 := corral_nondet();
    call {:si_unique_call 2915} IrpContext_138 := FatCreateIrpContext(Irp_62, sdv_1403);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    sdv_1410 := 0;
    goto L62;

  L62:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} sdv_1410 == 3;
    ModWriter := 1;
    goto L63;

  L63:
    assume {:nonnull} IrpContext_138 != 0;
    assume IrpContext_138 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 2916} Status_54 := FatCompleteMdl(IrpContext_138, Irp_62);
    goto L39;

  L39:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} ModWriter != 0;
    goto L40;

  L40:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} TopLevel_5 != 0;
    goto L44;

  L44:
    call {:si_unique_call 2917} KeLeaveCriticalRegion();
    Tmp_2246 := Status_54;
    goto L1;

  L1:
    call {:si_unique_call 2918} SLIC_FatFsdWrite_exit(strConst__li2bpl2, Tmp_2246);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon29_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} TopLevel_5 == 0;
    goto L44;

  anon22_Then:
    assume {:partition} ModWriter == 0;
    goto L40;

  anon26_Then:
    call {:si_unique_call 2919} Status_54 := FatCommonWrite(IrpContext_138, Irp_62);
    goto L39;

  anon25_Then:
    assume {:partition} sdv_1410 != 3;
    goto L63;

  anon24_Then:
    call {:si_unique_call 2920} sdv_1410 := __HAVOC_malloc(1);
    goto L62;

  anon21_Then:
    call {:si_unique_call 2921} sdv_1404 := sdv_IoGetCurrentIrpStackLocation(Irp_62);
    assume {:nonnull} sdv_1404 != 0;
    assume sdv_1404 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 2922} sdv_1399 := sdv_IoGetCurrentIrpStackLocation(Irp_62);
    assume {:nonnull} sdv_1399 != 0;
    assume sdv_1399 > 0;
    havoc Tmp_2249;
    assume {:nonnull} Tmp_2249 != 0;
    assume Tmp_2249 > 0;
    havoc Fcb_54;
    Tmp_2248 := Fcb_54;
    assume {:nonnull} Tmp_2248 != 0;
    assume Tmp_2248 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Fcb_54 != 0;
    assume Fcb_54 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2923} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 2924} FatPagingFileIo(Irp_62, Fcb_54);
    call {:si_unique_call 2925} KeLeaveCriticalRegion();
    Tmp_2246 := 259;
    goto L1;

  anon28_Then:
    goto L22;

  anon30_Then:
    goto L22;

  anon27_Then:
    goto L22;
}



procedure {:origName "FatStringTo8dot3"} FatStringTo8dot3(actual_IrpContext_141: int, actual_structPtr888InputString: int, actual_Output8dot3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatStringTo8dot3"} FatStringTo8dot3(actual_IrpContext_141: int, actual_structPtr888InputString: int, actual_Output8dot3: int)
{
  var {:scalar} InputString: int;
  var {:scalar} i_15: int;
  var {:pointer} Tmp_2258: int;
  var {:pointer} Tmp_2259: int;
  var {:pointer} Tmp_2260: int;
  var {:scalar} j_1: int;
  var {:scalar} Tmp_2262: int;
  var {:pointer} Tmp_2263: int;
  var {:scalar} Tmp_2264: int;
  var {:scalar} Tmp_2266: int;
  var {:scalar} Tmp_2267: int;
  var {:scalar} Tmp_2268: int;
  var {:pointer} structPtr888InputString: int;
  var {:pointer} Output8dot3: int;
  var vslice_dummy_var_400: int;

  anon0:
    call {:si_unique_call 2926} InputString := __HAVOC_malloc(12);
    call {:si_unique_call 2927} vslice_dummy_var_400 := __HAVOC_malloc(4);
    structPtr888InputString := actual_structPtr888InputString;
    Output8dot3 := actual_Output8dot3;
    assume {:nonnull} InputString != 0;
    assume InputString > 0;
    assume {:nonnull} structPtr888InputString != 0;
    assume structPtr888InputString > 0;
    assume {:nonnull} InputString != 0;
    assume InputString > 0;
    assume {:nonnull} structPtr888InputString != 0;
    assume structPtr888InputString > 0;
    assume {:nonnull} InputString != 0;
    assume InputString > 0;
    assume {:nonnull} structPtr888InputString != 0;
    assume structPtr888InputString > 0;
    call {:si_unique_call 2928} Tmp_2258 := __HAVOC_malloc(44);
    call {:si_unique_call 2929} Tmp_2259 := __HAVOC_malloc(44);
    call {:si_unique_call 2930} Tmp_2260 := __HAVOC_malloc(44);
    call {:si_unique_call 2931} Tmp_2263 := __HAVOC_malloc(44);
    i_15 := 0;
    goto L9;

  L9:
    call {:si_unique_call 2932} i_15, Tmp_2258, Tmp_2264, Tmp_2266, Tmp_2267 := FatStringTo8dot3_loop_L9(InputString, i_15, Tmp_2258, Tmp_2264, Tmp_2266, Tmp_2267, Output8dot3);
    goto L9_last;

  L9_last:
    assume {:nonnull} InputString != 0;
    assume InputString > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_2264 := i_15;
    assume {:nonnull} InputString != 0;
    assume InputString > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    Tmp_2267 := i_15;
    assume {:nonnull} Output8dot3 != 0;
    assume Output8dot3 > 0;
    havoc Tmp_2258;
    Tmp_2266 := i_15;
    assume {:nonnull} InputString != 0;
    assume InputString > 0;
    assume {:nonnull} Tmp_2258 != 0;
    assume Tmp_2258 > 0;
    i_15 := i_15 + 1;
    goto anon14_Else_dummy;

  anon14_Else_dummy:
    assume false;
    return;

  anon14_Then:
    goto L10;

  L10:
    assume {:nonnull} InputString != 0;
    assume InputString > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    i_15 := i_15 + 1;
    j_1 := 8;
    goto L17;

  L17:
    call {:si_unique_call 2933} i_15, Tmp_2260, j_1, Tmp_2262, Tmp_2268 := FatStringTo8dot3_loop_L17(InputString, i_15, Tmp_2260, j_1, Tmp_2262, Tmp_2268, Output8dot3);
    goto L17_last;

  L17_last:
    assume {:nonnull} InputString != 0;
    assume InputString > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    Tmp_2268 := j_1;
    assume {:nonnull} Output8dot3 != 0;
    assume Output8dot3 > 0;
    havoc Tmp_2260;
    Tmp_2262 := i_15;
    assume {:nonnull} InputString != 0;
    assume InputString > 0;
    assume {:nonnull} Tmp_2260 != 0;
    assume Tmp_2260 > 0;
    j_1 := j_1 + 1;
    i_15 := i_15 + 1;
    goto anon13_Else_dummy;

  anon13_Else_dummy:
    assume false;
    return;

  anon13_Then:
    goto L14;

  L14:
    assume {:nonnull} Output8dot3 != 0;
    assume Output8dot3 > 0;
    havoc Tmp_2263;
    assume {:nonnull} Tmp_2263 != 0;
    assume Tmp_2263 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Output8dot3 != 0;
    assume Output8dot3 > 0;
    havoc Tmp_2259;
    assume {:nonnull} Tmp_2259 != 0;
    assume Tmp_2259 > 0;
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L1;

  anon12_Then:
    goto L14;

  anon11_Then:
    goto L10;
}



procedure {:origName "FatEvaluateNameCase"} FatEvaluateNameCase(actual_IrpContext_142: int, actual_UnicodeName_2: int, actual_AllLowerComponent_3: int, actual_AllLowerExtension_3: int, actual_CreateLfn_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatEvaluateNameCase"} FatEvaluateNameCase(actual_IrpContext_142: int, actual_UnicodeName_2: int, actual_AllLowerComponent_3: int, actual_AllLowerExtension_3: int, actual_CreateLfn_3: int)
{
  var {:scalar} i_16: int;
  var {:scalar} Tmp_2270: int;
  var {:scalar} Lowers: int;
  var {:scalar} Tmp_2271: int;
  var {:scalar} Tmp_2272: int;
  var {:scalar} ExtensionPresent: int;
  var {:scalar} Tmp_2273: int;
  var {:scalar} Tmp_2274: int;
  var {:scalar} Tmp_2275: int;
  var {:scalar} c_1: int;
  var {:scalar} Tmp_2276: int;
  var {:pointer} Tmp_2277: int;
  var {:scalar} Uppers: int;
  var {:pointer} UnicodeName_2: int;
  var {:pointer} AllLowerComponent_3: int;
  var {:pointer} AllLowerExtension_3: int;
  var {:pointer} CreateLfn_3: int;
  var vslice_dummy_var_401: int;

  anon0:
    call {:si_unique_call 2934} vslice_dummy_var_401 := __HAVOC_malloc(4);
    UnicodeName_2 := actual_UnicodeName_2;
    AllLowerComponent_3 := actual_AllLowerComponent_3;
    AllLowerExtension_3 := actual_AllLowerExtension_3;
    CreateLfn_3 := actual_CreateLfn_3;
    Uppers := 0;
    Lowers := 0;
    ExtensionPresent := 0;
    assume {:nonnull} CreateLfn_3 != 0;
    assume CreateLfn_3 > 0;
    i_16 := 0;
    goto L12;

  L12:
    call {:si_unique_call 2935} i_16, Tmp_2270, Lowers, Tmp_2271, ExtensionPresent, Tmp_2275, c_1, Tmp_2277, Uppers := FatEvaluateNameCase_loop_L12(i_16, Tmp_2270, Lowers, Tmp_2271, ExtensionPresent, Tmp_2275, c_1, Tmp_2277, Uppers, UnicodeName_2, AllLowerComponent_3, CreateLfn_3);
    goto L12_last;

  L12_last:
    assume {:nonnull} UnicodeName_2 != 0;
    assume UnicodeName_2 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    Tmp_2270 := i_16;
    assume {:nonnull} UnicodeName_2 != 0;
    assume UnicodeName_2 > 0;
    havoc Tmp_2277;
    assume {:nonnull} Tmp_2277 != 0;
    assume Tmp_2277 > 0;
    havoc c_1;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} c_1 >= 65;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} 90 >= c_1;
    Uppers := Uppers + 1;
    goto L20;

  L20:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} c_1 == 46;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Lowers != 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Uppers != 0;
    Tmp_2271 := 1;
    goto L26;

  L26:
    assume {:nonnull} CreateLfn_3 != 0;
    assume CreateLfn_3 > 0;
    assume {:nonnull} CreateLfn_3 != 0;
    assume CreateLfn_3 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L29;

  L29:
    Tmp_2275 := 0;
    goto L30;

  L30:
    assume {:nonnull} AllLowerComponent_3 != 0;
    assume AllLowerComponent_3 > 0;
    ExtensionPresent := 1;
    Lowers := 0;
    Uppers := Lowers;
    goto L21;

  L21:
    i_16 := i_16 + 1;
    goto L21_dummy;

  L21_dummy:
    assume false;
    return;

  anon67_Then:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Lowers != 0;
    Tmp_2275 := 1;
    goto L30;

  anon54_Then:
    assume {:partition} Lowers == 0;
    goto L29;

  anon53_Then:
    assume {:partition} Uppers == 0;
    goto L23;

  L23:
    Tmp_2271 := 0;
    goto L26;

  anon52_Then:
    assume {:partition} Lowers == 0;
    goto L23;

  anon51_Then:
    assume {:partition} c_1 != 46;
    goto L21;

  anon50_Then:
    assume {:partition} c_1 > 90;
    goto L17;

  L17:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} c_1 >= 97;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} 122 >= c_1;
    Lowers := Lowers + 1;
    goto L20;

  anon56_Then:
    assume {:partition} c_1 > 122;
    goto L35;

  L35:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} c_1 >= 128;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L20;

  anon57_Then:
    goto L13;

  L13:
    assume {:nonnull} CreateLfn_3 != 0;
    assume CreateLfn_3 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto L41;

  L41:
    Tmp_2276 := 1;
    goto L42;

  L42:
    assume {:nonnull} CreateLfn_3 != 0;
    assume CreateLfn_3 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} ExtensionPresent != 0;
    assume {:nonnull} CreateLfn_3 != 0;
    assume CreateLfn_3 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L47;

  L47:
    Tmp_2274 := 0;
    goto L48;

  L48:
    assume {:nonnull} AllLowerComponent_3 != 0;
    assume AllLowerComponent_3 > 0;
    assume {:nonnull} CreateLfn_3 != 0;
    assume CreateLfn_3 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L51;

  L51:
    Tmp_2273 := 0;
    goto L52;

  L52:
    assume {:nonnull} AllLowerExtension_3 != 0;
    assume AllLowerExtension_3 > 0;
    goto L1;

  L1:
    return;

  anon69_Then:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Lowers != 0;
    Tmp_2273 := 1;
    goto L52;

  anon62_Then:
    assume {:partition} Lowers == 0;
    goto L51;

  anon60_Then:
    assume {:nonnull} AllLowerComponent_3 != 0;
    assume AllLowerComponent_3 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_2274 := 1;
    goto L48;

  anon61_Then:
    goto L47;

  anon68_Then:
    assume {:partition} ExtensionPresent == 0;
    assume {:nonnull} CreateLfn_3 != 0;
    assume CreateLfn_3 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto L57;

  L57:
    Tmp_2272 := 0;
    goto L58;

  L58:
    assume {:nonnull} AllLowerComponent_3 != 0;
    assume AllLowerComponent_3 > 0;
    assume {:nonnull} AllLowerExtension_3 != 0;
    assume AllLowerExtension_3 > 0;
    goto L1;

  anon59_Then:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Lowers != 0;
    Tmp_2272 := 1;
    goto L58;

  anon63_Then:
    assume {:partition} Lowers == 0;
    goto L57;

  anon48_Then:
    assume {:nonnull} UnicodeName_2 != 0;
    assume UnicodeName_2 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Lowers != 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} Uppers == 0;
    goto L62;

  L62:
    Tmp_2276 := 0;
    goto L42;

  anon65_Then:
    assume {:partition} Uppers != 0;
    goto L41;

  anon64_Then:
    assume {:partition} Lowers == 0;
    goto L62;

  anon58_Then:
    goto L41;

  anon55_Then:
    assume {:partition} 128 > c_1;
    goto L20;

  anon49_Then:
    assume {:partition} 97 > c_1;
    goto L35;

  anon66_Then:
    assume {:partition} 65 > c_1;
    goto L17;

  anon47_Then:
    goto L13;
}



procedure {:origName "FatUnicodeToUpcaseOem"} FatUnicodeToUpcaseOem(actual_IrpContext_143: int, actual_OemString_2: int, actual_UnicodeString_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatUnicodeToUpcaseOem"} FatUnicodeToUpcaseOem(actual_IrpContext_143: int, actual_OemString_2: int, actual_UnicodeString_4: int)
{
  var {:scalar} Status_56: int;
  var {:scalar} sdv_1420: int;
  var {:pointer} IrpContext_143: int;
  var {:pointer} OemString_2: int;
  var vslice_dummy_var_402: int;

  anon0:
    call {:si_unique_call 2936} vslice_dummy_var_402 := __HAVOC_malloc(4);
    IrpContext_143 := actual_IrpContext_143;
    OemString_2 := actual_OemString_2;
    call {:si_unique_call 2937} Status_56 := RtlUpcaseUnicodeStringToCountedOemString(0, 0, 0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Status_56 == 5;
    assume {:nonnull} OemString_2 != 0;
    assume OemString_2 > 0;
    assume {:nonnull} OemString_2 != 0;
    assume OemString_2 > 0;
    assume {:nonnull} OemString_2 != 0;
    assume OemString_2 > 0;
    call {:si_unique_call 2938} Status_56 := RtlUpcaseUnicodeStringToCountedOemString(0, 0, 1);
    goto L9;

  L9:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Status_56 < 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Status_56 == -1073741470;
    assume {:nonnull} OemString_2 != 0;
    assume OemString_2 > 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} Status_56 != -1073741470;
    assume {:nonnull} IrpContext_143 != 0;
    assume IrpContext_143 > 0;
    call {:si_unique_call 2939} sdv_1420 := corral_nondet();
    call {:si_unique_call 2940} ExRaiseStatus(sdv_1420);
    goto L1;

  anon8_Then:
    assume {:partition} 0 <= Status_56;
    goto L1;

  anon7_Then:
    assume {:partition} Status_56 != 5;
    goto L9;
}



procedure {:origName "_sdv_init15"} _sdv_init15();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init15"} _sdv_init15()
{
  var vslice_dummy_var_403: int;

  anon0:
    call {:si_unique_call 2941} vslice_dummy_var_403 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatIsNameInExpression"} FatIsNameInExpression(actual_IrpContext_144: int, actual_structPtr888Expression: int, actual_SD1_1: int) returns (Tmp_2283: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsNameInExpression"} FatIsNameInExpression(actual_IrpContext_144: int, actual_structPtr888Expression: int, actual_SD1_1: int) returns (Tmp_2283: int)
{
  var {:scalar} Expression: int;
  var {:scalar} Name_1: int;
  var {:pointer} structPtr888Expression: int;
  var {:pointer} SD1_1: int;

  anon0:
    call {:si_unique_call 2942} Expression := __HAVOC_malloc(12);
    call {:si_unique_call 2943} Name_1 := __HAVOC_malloc(12);
    structPtr888Expression := actual_structPtr888Expression;
    SD1_1 := actual_SD1_1;
    assume {:nonnull} Expression != 0;
    assume Expression > 0;
    assume {:nonnull} structPtr888Expression != 0;
    assume structPtr888Expression > 0;
    assume {:nonnull} Expression != 0;
    assume Expression > 0;
    assume {:nonnull} structPtr888Expression != 0;
    assume structPtr888Expression > 0;
    assume {:nonnull} Expression != 0;
    assume Expression > 0;
    assume {:nonnull} structPtr888Expression != 0;
    assume structPtr888Expression > 0;
    assume {:nonnull} Name_1 != 0;
    assume Name_1 > 0;
    assume {:nonnull} SD1_1 != 0;
    assume SD1_1 > 0;
    assume {:nonnull} Name_1 != 0;
    assume Name_1 > 0;
    assume {:nonnull} SD1_1 != 0;
    assume SD1_1 > 0;
    assume {:nonnull} Name_1 != 0;
    assume Name_1 > 0;
    assume {:nonnull} SD1_1 != 0;
    assume SD1_1 > 0;
    call {:si_unique_call 2944} Tmp_2283 := corral_nondet();
    return;
}



procedure {:origName "FatSpaceInName"} FatSpaceInName(actual_IrpContext_145: int, actual_UnicodeName_3: int) returns (Tmp_2285: int);
  free ensures {:va_keep} Tmp_2285 == 1 || Tmp_2285 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSpaceInName"} FatSpaceInName(actual_IrpContext_145: int, actual_UnicodeName_3: int) returns (Tmp_2285: int)
{
  var {:scalar} i_17: int;
  var {:pointer} Tmp_2286: int;
  var {:scalar} Tmp_2288: int;
  var {:pointer} UnicodeName_3: int;

  anon0:
    UnicodeName_3 := actual_UnicodeName_3;
    i_17 := 0;
    goto L5;

  L5:
    call {:si_unique_call 2945} i_17, Tmp_2286, Tmp_2288 := FatSpaceInName_loop_L5(i_17, Tmp_2286, Tmp_2288, UnicodeName_3);
    goto L5_last;

  L5_last:
    assume {:nonnull} UnicodeName_3 != 0;
    assume UnicodeName_3 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_2288 := i_17;
    assume {:nonnull} UnicodeName_3 != 0;
    assume UnicodeName_3 > 0;
    havoc Tmp_2286;
    assume {:nonnull} Tmp_2286 != 0;
    assume Tmp_2286 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_2285 := 1;
    goto L1;

  L1:
    return;

  anon6_Then:
    i_17 := i_17 + 1;
    goto anon6_Then_dummy;

  anon6_Then_dummy:
    assume false;
    return;

  anon5_Then:
    Tmp_2285 := 0;
    goto L1;
}



procedure {:origName "Fat8dot3ToString"} Fat8dot3ToString(actual_IrpContext_146: int, actual_Dirent_23: int, actual_RestoreCase: int, actual_OutputString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "Fat8dot3ToString"} Fat8dot3ToString(actual_IrpContext_146: int, actual_Dirent_23: int, actual_RestoreCase: int, actual_OutputString: int)
{
  var {:scalar} Tmp_2289: int;
  var {:pointer} o: int;
  var {:pointer} Tmp_2290: int;
  var {:scalar} Tmp_2291: int;
  var {:scalar} Tmp_2292: int;
  var {:pointer} Tmp_2293: int;
  var {:scalar} Tmp_2294: int;
  var {:scalar} Tmp_2295: int;
  var {:scalar} Tmp_2296: int;
  var {:pointer} Tmp_2297: int;
  var {:pointer} Tmp_2298: int;
  var {:scalar} Tmp_2299: int;
  var {:scalar} Tmp_2300: int;
  var {:scalar} Tmp_2301: int;
  var {:pointer} Tmp_2302: int;
  var {:scalar} Tmp_2303: int;
  var {:scalar} Tmp_2305: int;
  var {:pointer} Tmp_2306: int;
  var {:scalar} Tmp_2307: int;
  var {:scalar} Tmp_2308: int;
  var {:pointer} Tmp_2309: int;
  var {:pointer} Tmp_2310: int;
  var {:scalar} Tmp_2311: int;
  var {:pointer} Tmp_2312: int;
  var {:scalar} Tmp_2313: int;
  var {:scalar} StringIndex: int;
  var {:pointer} Tmp_2314: int;
  var {:scalar} Tmp_2315: int;
  var {:pointer} Tmp_2316: int;
  var {:scalar} Tmp_2317: int;
  var {:pointer} Tmp_2318: int;
  var {:pointer} Tmp_2319: int;
  var {:pointer} Tmp_2320: int;
  var {:scalar} Tmp_2321: int;
  var {:scalar} Tmp_2322: int;
  var {:scalar} BaseLength: int;
  var {:pointer} Tmp_2323: int;
  var {:pointer} d: int;
  var {:scalar} Tmp_2324: int;
  var {:pointer} Tmp_2325: int;
  var {:scalar} ExtensionLength: int;
  var {:pointer} Tmp_2326: int;
  var {:scalar} Tmp_2328: int;
  var {:pointer} Tmp_2329: int;
  var {:pointer} Tmp_2330: int;
  var {:pointer} Tmp_2331: int;
  var {:scalar} Tmp_2332: int;
  var {:scalar} Tmp_2333: int;
  var {:pointer} Tmp_2334: int;
  var {:pointer} Dirent_23: int;
  var {:scalar} RestoreCase: int;
  var {:pointer} OutputString: int;
  var vslice_dummy_var_404: int;

  anon0:
    call {:si_unique_call 2946} vslice_dummy_var_404 := __HAVOC_malloc(4);
    Dirent_23 := actual_Dirent_23;
    RestoreCase := actual_RestoreCase;
    OutputString := actual_OutputString;
    call {:si_unique_call 2947} Tmp_2316 := __HAVOC_malloc(44);
    call {:si_unique_call 2948} Tmp_2320 := __HAVOC_malloc(44);
    call {:si_unique_call 2949} Tmp_2325 := __HAVOC_malloc(44);
    BaseLength := 8;
    goto L8;

  L8:
    call {:si_unique_call 2950} Tmp_2322, BaseLength, Tmp_2325 := Fat8dot3ToString_loop_L8(Tmp_2322, BaseLength, Tmp_2325, Dirent_23);
    goto L8_last;

  L8_last:
    assume {:CounterLoop 8} {:Counter "BaseLength"} true;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} BaseLength > 0;
    Tmp_2322 := BaseLength - 1;
    assume {:nonnull} Dirent_23 != 0;
    assume Dirent_23 > 0;
    havoc Tmp_2325;
    assume {:nonnull} Tmp_2325 != 0;
    assume Tmp_2325 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    BaseLength := BaseLength - 1;
    goto anon78_Else_dummy;

  anon78_Else_dummy:
    assume false;
    return;

  anon78_Then:
    goto L9;

  L9:
    ExtensionLength := 3;
    goto L13;

  L13:
    call {:si_unique_call 2951} Tmp_2296, Tmp_2320, ExtensionLength := Fat8dot3ToString_loop_L13(Tmp_2296, Tmp_2320, ExtensionLength, Dirent_23);
    goto L13_last;

  L13_last:
    assume {:CounterLoop 3} {:Counter "ExtensionLength"} true;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} ExtensionLength > 0;
    Tmp_2296 := 8 + ExtensionLength - 1;
    assume {:nonnull} Dirent_23 != 0;
    assume Dirent_23 > 0;
    havoc Tmp_2320;
    assume {:nonnull} Tmp_2320 != 0;
    assume Tmp_2320 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    ExtensionLength := ExtensionLength - 1;
    goto anon79_Else_dummy;

  anon79_Else_dummy:
    assume false;
    return;

  anon79_Then:
    goto L14;

  L14:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BaseLength != 0;
    call {:si_unique_call 2952} sdv_RtlCopyMemory(0, 0, BaseLength);
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2329;
    assume {:nonnull} Tmp_2329 != 0;
    assume Tmp_2329 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2290;
    assume {:nonnull} Tmp_2290 != 0;
    assume Tmp_2290 > 0;
    goto L23;

  L23:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} RestoreCase != 0;
    assume {:nonnull} Dirent_23 != 0;
    assume Dirent_23 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    StringIndex := 0;
    goto L28;

  L28:
    call {:si_unique_call 2953} Tmp_2289, Tmp_2292, Tmp_2297, Tmp_2299, Tmp_2300, Tmp_2303, Tmp_2305, Tmp_2306, Tmp_2307, Tmp_2310, Tmp_2311, Tmp_2312, StringIndex, Tmp_2326, Tmp_2328, Tmp_2331, Tmp_2334 := Fat8dot3ToString_loop_L28(Tmp_2289, Tmp_2292, Tmp_2297, Tmp_2299, Tmp_2300, Tmp_2303, Tmp_2305, Tmp_2306, Tmp_2307, Tmp_2310, Tmp_2311, Tmp_2312, StringIndex, BaseLength, Tmp_2326, Tmp_2328, Tmp_2331, Tmp_2334, OutputString);
    goto L28_last;

  L28_last:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BaseLength > StringIndex;
    Tmp_2328 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2310;
    assume {:nonnull} Tmp_2310 != 0;
    assume Tmp_2310 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    Tmp_2307 := 0;
    goto L32;

  L32:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Tmp_2307 != 0;
    StringIndex := StringIndex + 1;
    goto L36;

  L36:
    StringIndex := StringIndex + 1;
    goto L36_dummy;

  L36_dummy:
    assume false;
    return;

  anon70_Then:
    assume {:partition} Tmp_2307 == 0;
    Tmp_2305 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2306;
    assume {:nonnull} Tmp_2306 != 0;
    assume Tmp_2306 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    Tmp_2300 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2312;
    assume {:nonnull} Tmp_2312 != 0;
    assume Tmp_2312 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    Tmp_2292 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2326;
    Tmp_2311 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2334;
    assume {:nonnull} Tmp_2326 != 0;
    assume Tmp_2326 > 0;
    assume {:nonnull} Tmp_2334 != 0;
    assume Tmp_2334 > 0;
    goto L36;

  anon83_Then:
    goto L36;

  anon82_Then:
    goto L36;

  anon81_Then:
    assume {:nonnull} NlsMbOemCodePageTag != 0;
    assume NlsMbOemCodePageTag > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    Tmp_2303 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2297;
    assume {:nonnull} Tmp_2297 != 0;
    assume Tmp_2297 > 0;
    havoc Tmp_2299;
    assume {:nonnull} NlsOemLeadByteInfo != 0;
    assume NlsOemLeadByteInfo > 0;
    havoc Tmp_2331;
    assume {:nonnull} Tmp_2331 != 0;
    assume Tmp_2331 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    Tmp_2289 := 1;
    goto L42;

  L42:
    Tmp_2307 := Tmp_2289;
    goto L32;

  anon84_Then:
    goto L39;

  L39:
    Tmp_2289 := 0;
    goto L42;

  anon69_Then:
    goto L39;

  anon68_Then:
    assume {:partition} StringIndex >= BaseLength;
    goto L18;

  L18:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} ExtensionLength != 0;
    Tmp_2295 := BaseLength;
    BaseLength := BaseLength + 1;
    Tmp_2321 := Tmp_2295;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2314;
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    Tmp_2333 := BaseLength;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2298;
    o := Tmp_2298 + Tmp_2333 * 4;
    assume {:nonnull} Dirent_23 != 0;
    assume Dirent_23 > 0;
    havoc Tmp_2316;
    d := Tmp_2316 + 8 * 4;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} ExtensionLength != 1;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} ExtensionLength != 2;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} ExtensionLength == 3;
    assume {:nonnull} d != 0;
    assume d > 0;
    assume {:nonnull} o != 0;
    assume o > 0;
    goto L52;

  L52:
    assume {:nonnull} d != 0;
    assume d > 0;
    assume {:nonnull} o != 0;
    assume o > 0;
    goto L51;

  L51:
    assume {:nonnull} d != 0;
    assume d > 0;
    assume {:nonnull} o != 0;
    assume o > 0;
    goto L50;

  L50:
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} RestoreCase != 0;
    assume {:nonnull} Dirent_23 != 0;
    assume Dirent_23 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    StringIndex := BaseLength;
    goto L59;

  L59:
    call {:si_unique_call 2954} Tmp_2291, Tmp_2293, Tmp_2294, Tmp_2301, Tmp_2302, Tmp_2308, Tmp_2309, Tmp_2313, StringIndex, Tmp_2315, Tmp_2317, Tmp_2318, Tmp_2319, Tmp_2323, Tmp_2324, Tmp_2330, Tmp_2332 := Fat8dot3ToString_loop_L59(Tmp_2291, Tmp_2293, Tmp_2294, Tmp_2301, Tmp_2302, Tmp_2308, Tmp_2309, Tmp_2313, StringIndex, Tmp_2315, Tmp_2317, Tmp_2318, Tmp_2319, Tmp_2323, Tmp_2324, Tmp_2330, Tmp_2332, OutputString);
    goto L59_last;

  L59_last:
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    Tmp_2301 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2318;
    assume {:nonnull} Tmp_2318 != 0;
    assume Tmp_2318 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    Tmp_2291 := 0;
    goto L63;

  L63:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} Tmp_2291 != 0;
    StringIndex := StringIndex + 1;
    goto L67;

  L67:
    StringIndex := StringIndex + 1;
    goto L67_dummy;

  L67_dummy:
    assume false;
    return;

  anon75_Then:
    assume {:partition} Tmp_2291 == 0;
    Tmp_2317 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2330;
    assume {:nonnull} Tmp_2330 != 0;
    assume Tmp_2330 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    Tmp_2315 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2319;
    assume {:nonnull} Tmp_2319 != 0;
    assume Tmp_2319 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    Tmp_2313 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2293;
    Tmp_2294 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2323;
    assume {:nonnull} Tmp_2293 != 0;
    assume Tmp_2293 > 0;
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    goto L67;

  anon89_Then:
    goto L67;

  anon88_Then:
    goto L67;

  anon87_Then:
    assume {:nonnull} NlsMbOemCodePageTag != 0;
    assume NlsMbOemCodePageTag > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    Tmp_2332 := StringIndex;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    havoc Tmp_2302;
    assume {:nonnull} Tmp_2302 != 0;
    assume Tmp_2302 > 0;
    havoc Tmp_2308;
    assume {:nonnull} NlsOemLeadByteInfo != 0;
    assume NlsOemLeadByteInfo > 0;
    havoc Tmp_2309;
    assume {:nonnull} Tmp_2309 != 0;
    assume Tmp_2309 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    Tmp_2324 := 1;
    goto L73;

  L73:
    Tmp_2291 := Tmp_2324;
    goto L63;

  anon90_Then:
    goto L70;

  L70:
    Tmp_2324 := 0;
    goto L73;

  anon74_Then:
    goto L70;

  anon73_Then:
    goto L1;

  L1:
    return;

  anon72_Then:
    goto L1;

  anon71_Then:
    assume {:partition} RestoreCase == 0;
    goto L1;

  anon86_Then:
    goto L1;

  anon76_Then:
    assume {:partition} ExtensionLength != 3;
    goto L50;

  anon77_Then:
    assume {:partition} ExtensionLength == 2;
    goto L52;

  anon85_Then:
    assume {:partition} ExtensionLength == 1;
    goto L51;

  anon64_Then:
    assume {:partition} ExtensionLength == 0;
    assume {:nonnull} OutputString != 0;
    assume OutputString > 0;
    goto L1;

  anon67_Then:
    goto L18;

  anon66_Then:
    assume {:partition} RestoreCase == 0;
    goto L18;

  anon65_Then:
    goto L18;

  anon80_Then:
    goto L23;

  anon63_Then:
    assume {:partition} BaseLength == 0;
    goto L18;

  anon62_Then:
    assume {:partition} 0 >= ExtensionLength;
    goto L14;

  anon61_Then:
    assume {:partition} 0 >= BaseLength;
    goto L9;
}



procedure {:origName "FatSelectNames"} FatSelectNames(actual_IrpContext_147: int, actual_Parent: int, actual_OemName_2: int, actual_UnicodeName_4: int, actual_ShortName_6: int, actual_SuggestedShortName: int, actual_AllLowerComponent_4: int, actual_AllLowerExtension_4: int, actual_CreateLfn_4: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSelectNames"} FatSelectNames(actual_IrpContext_147: int, actual_Parent: int, actual_OemName_2: int, actual_UnicodeName_4: int, actual_ShortName_6: int, actual_SuggestedShortName: int, actual_AllLowerComponent_4: int, actual_AllLowerExtension_4: int, actual_CreateLfn_4: int)
{
  var {:scalar} sdv_1422: int;
  var {:scalar} ShortUnicodeName: int;
  var {:pointer} Dirent_24: int;
  var {:pointer} Bcb_14: int;
  var {:scalar} GenerateShortName: int;
  var {:scalar} sdv_1423: int;
  var {:dopa} {:scalar} ByteOffset_2: int;
  var {:scalar} TrySuggestedShortName: int;
  var {:scalar} Tmp_2337: int;
  var {:pointer} ShortNameBuffer_5: int;
  var {:scalar} Tmp_2338: int;
  var {:pointer} IrpContext_147: int;
  var {:pointer} Parent: int;
  var {:pointer} OemName_2: int;
  var {:pointer} UnicodeName_4: int;
  var {:pointer} ShortName_6: int;
  var {:pointer} SuggestedShortName: int;
  var {:pointer} AllLowerComponent_4: int;
  var {:pointer} AllLowerExtension_4: int;
  var {:pointer} CreateLfn_4: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_408: int;

  anon0:
    call {:si_unique_call 2955} ShortUnicodeName := __HAVOC_malloc(12);
    call {:si_unique_call 2956} Dirent_24 := __HAVOC_malloc(4);
    call {:si_unique_call 2957} Bcb_14 := __HAVOC_malloc(4);
    call {:si_unique_call 2958} vslice_dummy_var_405 := __HAVOC_malloc(4);
    call {:si_unique_call 2959} vslice_dummy_var_406 := __HAVOC_malloc(28);
    call {:si_unique_call 2960} ByteOffset_2 := __HAVOC_malloc(4);
    call {:si_unique_call 2961} Tmp_2337 := __HAVOC_malloc(12);
    IrpContext_147 := actual_IrpContext_147;
    Parent := actual_Parent;
    OemName_2 := actual_OemName_2;
    UnicodeName_4 := actual_UnicodeName_4;
    ShortName_6 := actual_ShortName_6;
    SuggestedShortName := actual_SuggestedShortName;
    AllLowerComponent_4 := actual_AllLowerComponent_4;
    AllLowerExtension_4 := actual_AllLowerExtension_4;
    CreateLfn_4 := actual_CreateLfn_4;
    call {:si_unique_call 2962} ShortNameBuffer_5 := __HAVOC_malloc(48);
    call {:si_unique_call 2963} sdv_do_paged_code_check();
    assume {:nonnull} OemName_2 != 0;
    assume OemName_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L38;

  L38:
    assume {:nonnull} Bcb_14 != 0;
    assume Bcb_14 > 0;
    GenerateShortName := 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} SuggestedShortName == 0;
    TrySuggestedShortName := 0;
    goto L95;

  L95:
    assume {:nonnull} ShortUnicodeName != 0;
    assume ShortUnicodeName > 0;
    assume {:nonnull} ShortUnicodeName != 0;
    assume ShortUnicodeName > 0;
    assume {:nonnull} ShortUnicodeName != 0;
    assume ShortUnicodeName > 0;
    call {:si_unique_call 2964} sdv_RtlZeroMemory(0, 36);
    goto L51;

  L51:
    call {:si_unique_call 2965} TrySuggestedShortName, vslice_dummy_var_407, vslice_dummy_var_408 := FatSelectNames_loop_L51(ShortUnicodeName, Dirent_24, Bcb_14, ByteOffset_2, TrySuggestedShortName, IrpContext_147, Parent, ShortName_6, SuggestedShortName, vslice_dummy_var_407, vslice_dummy_var_408);
    goto L51_last;

  L51_last:
    assume {:nonnull} Bcb_14 != 0;
    assume Bcb_14 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Bcb_14 != 0;
    assume Bcb_14 > 0;
    goto L52;

  L52:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} TrySuggestedShortName != 0;
    assume {:nonnull} ShortUnicodeName != 0;
    assume ShortUnicodeName > 0;
    assume {:nonnull} SuggestedShortName != 0;
    assume SuggestedShortName > 0;
    assume {:nonnull} ShortUnicodeName != 0;
    assume ShortUnicodeName > 0;
    assume {:nonnull} SuggestedShortName != 0;
    assume SuggestedShortName > 0;
    assume {:nonnull} ShortUnicodeName != 0;
    assume ShortUnicodeName > 0;
    assume {:nonnull} SuggestedShortName != 0;
    assume SuggestedShortName > 0;
    TrySuggestedShortName := 0;
    goto L69;

  L69:
    call {:si_unique_call 2966} vslice_dummy_var_408 := RtlUnicodeStringToCountedOemString(0, 0, 0);
    call {:si_unique_call 2967} FatLocateSimpleOemDirent(IrpContext_147, Parent, ShortName_6, Dirent_24, Bcb_14, ByteOffset_2);
    assume {:nonnull} Bcb_14 != 0;
    assume Bcb_14 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon29_Else_dummy;

  anon29_Else_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:nonnull} Bcb_14 != 0;
    assume Bcb_14 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Bcb_14 != 0;
    assume Bcb_14 > 0;
    goto L25;

  L25:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} GenerateShortName != 0;
    assume {:nonnull} CreateLfn_4 != 0;
    assume CreateLfn_4 > 0;
    assume {:nonnull} AllLowerComponent_4 != 0;
    assume AllLowerComponent_4 > 0;
    assume {:nonnull} AllLowerExtension_4 != 0;
    assume AllLowerExtension_4 > 0;
    goto L1;

  L1:
    return;

  anon25_Then:
    assume {:partition} GenerateShortName == 0;
    call {:si_unique_call 2968} FatEvaluateNameCase(IrpContext_147, UnicodeName_4, AllLowerComponent_4, AllLowerExtension_4, CreateLfn_4);
    goto L1;

  anon26_Then:
    goto L25;

  anon28_Then:
    assume {:partition} TrySuggestedShortName == 0;
    call {:si_unique_call 2969} vslice_dummy_var_407 := corral_nondet();
    goto L69;

  anon27_Then:
    goto L52;

  anon30_Then:
    assume {:partition} SuggestedShortName != 0;
    TrySuggestedShortName := 1;
    goto L95;

  anon21_Then:
    assume {:nonnull} OemName_2 != 0;
    assume OemName_2 > 0;
    assume {:nonnull} Tmp_2337 != 0;
    assume Tmp_2337 > 0;
    assume {:nonnull} OemName_2 != 0;
    assume OemName_2 > 0;
    assume {:nonnull} Tmp_2337 != 0;
    assume Tmp_2337 > 0;
    assume {:nonnull} OemName_2 != 0;
    assume OemName_2 > 0;
    assume {:nonnull} Tmp_2337 != 0;
    assume Tmp_2337 > 0;
    call {:si_unique_call 2970} sdv_1422 := corral_nondet();
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_1422 == 0;
    goto L38;

  anon22_Then:
    assume {:partition} sdv_1422 != 0;
    call {:si_unique_call 2971} sdv_1423 := FatSpaceInName(IrpContext_147, UnicodeName_4);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_1423 != 0;
    goto L38;

  anon23_Then:
    assume {:partition} sdv_1423 == 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} ShortName_6 != OemName_2;
    assume {:nonnull} OemName_2 != 0;
    assume OemName_2 > 0;
    assume {:nonnull} ShortName_6 != 0;
    assume ShortName_6 > 0;
    assume {:nonnull} OemName_2 != 0;
    assume OemName_2 > 0;
    havoc Tmp_2338;
    call {:si_unique_call 2972} sdv_RtlCopyMemory(0, 0, Tmp_2338);
    goto L19;

  L19:
    GenerateShortName := 0;
    goto L25;

  anon24_Then:
    assume {:partition} ShortName_6 == OemName_2;
    goto L19;
}



procedure {:origName "FatIsIrpTopLevel"} FatIsIrpTopLevel(actual_Irp_63: int) returns (Tmp_2344: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2344 == 0 || Tmp_2344 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsIrpTopLevel"} FatIsIrpTopLevel(actual_Irp_63: int) returns (Tmp_2344: int)
{
  var {:pointer} sdv_1428: int;

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    sdv_1428 := 0;
    goto L6;

  L6:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} sdv_1428 != 0;
    Tmp_2344 := 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} sdv_1428 == 0;
    Tmp_2344 := 1;
    goto L1;

  anon5_Then:
    call {:si_unique_call 2973} sdv_1428 := __HAVOC_malloc(1);
    goto L6;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_409: int;

  anon0:
    call {:si_unique_call 2974} vslice_dummy_var_409 := __HAVOC_malloc(4);
    assume FatReserveMdl == 0;
    return;
}



procedure {:origName "FatCompleteRequest_Real"} FatCompleteRequest_Real(actual_IrpContext_149: int, actual_Irp_64: int, actual_Status_58: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCompleteRequest_Real"} FatCompleteRequest_Real(actual_IrpContext_149: int, actual_Irp_64: int, actual_Status_58: int)
{
  var {:scalar} sdv_1429: int;
  var {:pointer} IrpContext_149: int;
  var {:pointer} Irp_64: int;
  var {:scalar} Status_58: int;
  var vslice_dummy_var_410: int;

  anon0:
    call {:si_unique_call 2975} vslice_dummy_var_410 := __HAVOC_malloc(4);
    IrpContext_149 := actual_IrpContext_149;
    Irp_64 := actual_Irp_64;
    Status_58 := actual_Status_58;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IrpContext_149 != 0;
    call {:si_unique_call 2976} FatUnpinRepinnedBcbs(IrpContext_149);
    goto L4;

  L4:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} IrpContext_149 != 0;
    call {:si_unique_call 2977} FatDeleteIrpContext_Real(IrpContext_149);
    goto L8;

  L8:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Irp_64 != 0;
    call {:si_unique_call 2978} sdv_1429 := sdv_NT_ERROR(Status_58);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_1429 != 0;
    assume {:nonnull} Irp_64 != 0;
    assume Irp_64 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Irp_64 != 0;
    assume Irp_64 > 0;
    goto L17;

  L17:
    assume {:nonnull} Irp_64 != 0;
    assume Irp_64 > 0;
    call {:si_unique_call 2979} sdv_IoCompleteRequest(0, 1);
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L17;

  anon14_Then:
    assume {:partition} sdv_1429 == 0;
    goto L17;

  anon13_Then:
    assume {:partition} Irp_64 == 0;
    goto L1;

  anon12_Then:
    assume {:partition} IrpContext_149 == 0;
    goto L8;

  anon11_Then:
    assume {:partition} IrpContext_149 == 0;
    goto L4;
}



procedure {:origName "SLIC_FatFsdCleanup_exit"} {:osmodel} SLIC_FatFsdCleanup_exit(actual_caller: int, actual_FatFsdCleanup_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdCleanup_exit"} {:osmodel} SLIC_FatFsdCleanup_exit(actual_caller: int, actual_FatFsdCleanup_1: int)
{
  var {:pointer} caller: int;
  var {:scalar} FatFsdCleanup_1: int;

  anon0:
    caller := actual_caller;
    FatFsdCleanup_1 := actual_FatFsdCleanup_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdCleanup_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2980} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2981} SLIC_ABORT_20_0(caller, FatFsdCleanup_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdCleanup_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_44_0"} SLIC_ABORT_44_0(actual_caller_1: int, actual_FatFsdQueryInformation_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_44_0"} SLIC_ABORT_44_0(actual_caller_1: int, actual_FatFsdQueryInformation_1: int)
{
  var {:pointer} caller_1: int;
  var {:scalar} FatFsdQueryInformation_1: int;

  anon0:
    caller_1 := actual_caller_1;
    FatFsdQueryInformation_1 := actual_FatFsdQueryInformation_1;
    call {:si_unique_call 2982} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_FatFsdQueryInformation_exit"} {:osmodel} SLIC_FatFsdQueryInformation_exit(actual_caller_2: int, actual_FatFsdQueryInformation_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdQueryInformation_exit"} {:osmodel} SLIC_FatFsdQueryInformation_exit(actual_caller_2: int, actual_FatFsdQueryInformation_2: int)
{
  var {:pointer} caller_2: int;
  var {:scalar} FatFsdQueryInformation_2: int;

  anon0:
    caller_2 := actual_caller_2;
    FatFsdQueryInformation_2 := actual_FatFsdQueryInformation_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdQueryInformation_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2983} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2984} SLIC_ABORT_44_0(caller_2, FatFsdQueryInformation_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdQueryInformation_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_42_0"} SLIC_ABORT_42_0(actual_caller_3: int, actual_FatFsdSetInformation_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_42_0"} SLIC_ABORT_42_0(actual_caller_3: int, actual_FatFsdSetInformation_1: int)
{
  var {:pointer} caller_3: int;
  var {:scalar} FatFsdSetInformation_1: int;

  anon0:
    caller_3 := actual_caller_3;
    FatFsdSetInformation_1 := actual_FatFsdSetInformation_1;
    call {:si_unique_call 2985} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_FatFsdFlushBuffers_exit"} {:osmodel} SLIC_FatFsdFlushBuffers_exit(actual_caller_6: int, actual_FatFsdFlushBuffers_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdFlushBuffers_exit"} {:osmodel} SLIC_FatFsdFlushBuffers_exit(actual_caller_6: int, actual_FatFsdFlushBuffers_1: int)
{
  var {:pointer} caller_6: int;
  var {:scalar} FatFsdFlushBuffers_1: int;

  anon0:
    caller_6 := actual_caller_6;
    FatFsdFlushBuffers_1 := actual_FatFsdFlushBuffers_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdFlushBuffers_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2986} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2987} SLIC_ABORT_36_0(caller_6, FatFsdFlushBuffers_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdFlushBuffers_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller_7: int);
  modifies queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller_7: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} locked != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} queued != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} markedPending == 0;
    queuedWithoutMarking := 1;
    goto L2;

  L2:
    locked := 0;
    return;

  anon8_Then:
    assume {:partition} markedPending != 0;
    goto L2;

  anon9_Then:
    assume {:partition} queued == 0;
    goto L2;

  anon7_Then:
    assume {:partition} locked == 0;
    goto L2;
}



procedure {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller_8: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller_8: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} stack_location == 1;
    call {:si_unique_call 2988} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} stack_location != 1;
    goto L2;
}



procedure {:origName "SLIC_ABORT_52_0"} SLIC_ABORT_52_0(actual_caller_9: int, actual_FatFsdCreate_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_52_0"} SLIC_ABORT_52_0(actual_caller_9: int, actual_FatFsdCreate_1: int)
{
  var {:pointer} caller_9: int;
  var {:scalar} FatFsdCreate_1: int;

  anon0:
    caller_9 := actual_caller_9;
    FatFsdCreate_1 := actual_FatFsdCreate_1;
    call {:si_unique_call 2989} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_ABORT_46_0"} SLIC_ABORT_46_0(actual_caller_10: int, actual_FatFsdWrite_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_46_0"} SLIC_ABORT_46_0(actual_caller_10: int, actual_FatFsdWrite_1: int)
{
  var {:pointer} caller_10: int;
  var {:scalar} FatFsdWrite_1: int;

  anon0:
    caller_10 := actual_caller_10;
    FatFsdWrite_1 := actual_FatFsdWrite_1;
    call {:si_unique_call 2990} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_FatFsdCreate_exit"} {:osmodel} SLIC_FatFsdCreate_exit(actual_caller_12: int, actual_FatFsdCreate_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdCreate_exit"} {:osmodel} SLIC_FatFsdCreate_exit(actual_caller_12: int, actual_FatFsdCreate_2: int)
{
  var {:pointer} caller_12: int;
  var {:scalar} FatFsdCreate_2: int;

  anon0:
    caller_12 := actual_caller_12;
    FatFsdCreate_2 := actual_FatFsdCreate_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdCreate_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2991} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2992} SLIC_ABORT_52_0(caller_12, FatFsdCreate_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdCreate_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_FatFsdSetInformation_exit"} {:osmodel} SLIC_FatFsdSetInformation_exit(actual_caller_14: int, actual_FatFsdSetInformation_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdSetInformation_exit"} {:osmodel} SLIC_FatFsdSetInformation_exit(actual_caller_14: int, actual_FatFsdSetInformation_2: int)
{
  var {:pointer} caller_14: int;
  var {:scalar} FatFsdSetInformation_2: int;

  anon0:
    caller_14 := actual_caller_14;
    FatFsdSetInformation_2 := actual_FatFsdSetInformation_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdSetInformation_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2993} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2994} SLIC_ABORT_42_0(caller_14, FatFsdSetInformation_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdSetInformation_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_15: int, actual_FatFsdDeviceControl_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_15: int, actual_FatFsdDeviceControl_1: int)
{
  var {:pointer} caller_15: int;
  var {:scalar} FatFsdDeviceControl_1: int;

  anon0:
    caller_15 := actual_caller_15;
    FatFsdDeviceControl_1 := actual_FatFsdDeviceControl_1;
    call {:si_unique_call 2995} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_16: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_16: int)
{

  anon0:
    call {:si_unique_call 2996} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    return;
}



procedure {:origName "SLIC_sdv_InsertTailList_entry"} {:osmodel} SLIC_sdv_InsertTailList_entry(actual_caller_17: int);
  modifies queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_InsertTailList_entry"} {:osmodel} SLIC_sdv_InsertTailList_entry(actual_caller_17: int)
{

  anon0:
    queued := 1;
    return;
}



procedure {:origName "SLIC_ABORT_50_0"} SLIC_ABORT_50_0(actual_caller_21: int, actual_FatFsdClose_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_50_0"} SLIC_ABORT_50_0(actual_caller_21: int, actual_FatFsdClose_1: int)
{
  var {:pointer} caller_21: int;
  var {:scalar} FatFsdClose_1: int;

  anon0:
    caller_21 := actual_caller_21;
    FatFsdClose_1 := actual_FatFsdClose_1;
    call {:si_unique_call 2997} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_FatFsdClose_exit"} {:osmodel} SLIC_FatFsdClose_exit(actual_caller_24: int, actual_FatFsdClose_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdClose_exit"} {:osmodel} SLIC_FatFsdClose_exit(actual_caller_24: int, actual_FatFsdClose_2: int)
{
  var {:pointer} caller_24: int;
  var {:scalar} FatFsdClose_2: int;

  anon0:
    caller_24 := actual_caller_24;
    FatFsdClose_2 := actual_FatFsdClose_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdClose_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 2998} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 2999} SLIC_ABORT_50_0(caller_24, FatFsdClose_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdClose_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_FatFsdRead_exit"} {:osmodel} SLIC_FatFsdRead_exit(actual_caller_25: int, actual_FatFsdRead_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdRead_exit"} {:osmodel} SLIC_FatFsdRead_exit(actual_caller_25: int, actual_FatFsdRead_1: int)
{
  var {:pointer} caller_25: int;
  var {:scalar} FatFsdRead_1: int;

  anon0:
    caller_25 := actual_caller_25;
    FatFsdRead_1 := actual_FatFsdRead_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdRead_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 3000} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 3001} SLIC_ABORT_48_0(caller_25, FatFsdRead_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdRead_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_26: int, actual_FatFsdCleanup_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_26: int, actual_FatFsdCleanup_2: int)
{
  var {:pointer} caller_26: int;
  var {:scalar} FatFsdCleanup_2: int;

  anon0:
    caller_26 := actual_caller_26;
    FatFsdCleanup_2 := actual_FatFsdCleanup_2;
    call {:si_unique_call 3002} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_sdv_IoMarkIrpPending_entry"} {:osmodel} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_27: int);
  modifies markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_IoMarkIrpPending_entry"} {:osmodel} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_27: int)
{

  anon0:
    markedPending := 1;
    return;
}



procedure {:origName "SLIC_InsertHeadList_entry"} {:osmodel} SLIC_InsertHeadList_entry(actual_caller_29: int);
  modifies queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_InsertHeadList_entry"} {:osmodel} SLIC_InsertHeadList_entry(actual_caller_29: int)
{

  anon0:
    queued := 1;
    return;
}



procedure {:origName "SLIC_sdv_KeAcquireSpinLock_entry"} {:osmodel} SLIC_sdv_KeAcquireSpinLock_entry(actual_caller_30: int);
  modifies locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} locked == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_KeAcquireSpinLock_entry"} {:osmodel} SLIC_sdv_KeAcquireSpinLock_entry(actual_caller_30: int)
{

  anon0:
    locked := 1;
    return;
}



procedure {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_31: int, actual_FatFsdShutdown_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_31: int, actual_FatFsdShutdown_1: int)
{
  var {:pointer} caller_31: int;
  var {:scalar} FatFsdShutdown_1: int;

  anon0:
    caller_31 := actual_caller_31;
    FatFsdShutdown_1 := actual_FatFsdShutdown_1;
    call {:si_unique_call 3003} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_FatFsdFileSystemControl_exit"} {:osmodel} SLIC_FatFsdFileSystemControl_exit(actual_caller_33: int, actual_FatFsdFileSystemControl_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdFileSystemControl_exit"} {:osmodel} SLIC_FatFsdFileSystemControl_exit(actual_caller_33: int, actual_FatFsdFileSystemControl_1: int)
{
  var {:pointer} caller_33: int;
  var {:scalar} FatFsdFileSystemControl_1: int;

  anon0:
    caller_33 := actual_caller_33;
    FatFsdFileSystemControl_1 := actual_FatFsdFileSystemControl_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdFileSystemControl_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 3004} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 3005} SLIC_ABORT_28_0(caller_33, FatFsdFileSystemControl_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdFileSystemControl_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_34: int, actual_FatFsdPnp_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_34: int, actual_FatFsdPnp_1: int)
{
  var {:pointer} caller_34: int;
  var {:scalar} FatFsdPnp_1: int;

  anon0:
    caller_34 := actual_caller_34;
    FatFsdPnp_1 := actual_FatFsdPnp_1;
    call {:si_unique_call 3006} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} {:osmodel} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_35: int);
  modifies stack_location;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 0;
  free ensures {:va_keep} stack_location == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} {:osmodel} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_35: int)
{

  anon0:
    stack_location := 1;
    return;
}



procedure {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_36: int, actual_FatFsdLockControl_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_36: int, actual_FatFsdLockControl_1: int)
{
  var {:pointer} caller_36: int;
  var {:scalar} FatFsdLockControl_1: int;

  anon0:
    caller_36 := actual_caller_36;
    FatFsdLockControl_1 := actual_FatFsdLockControl_1;
    call {:si_unique_call 3007} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_FatFsdWrite_exit"} {:osmodel} SLIC_FatFsdWrite_exit(actual_caller_37: int, actual_FatFsdWrite_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdWrite_exit"} {:osmodel} SLIC_FatFsdWrite_exit(actual_caller_37: int, actual_FatFsdWrite_2: int)
{
  var {:pointer} caller_37: int;
  var {:scalar} FatFsdWrite_2: int;

  anon0:
    caller_37 := actual_caller_37;
    FatFsdWrite_2 := actual_FatFsdWrite_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdWrite_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 3008} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 3009} SLIC_ABORT_46_0(caller_37, FatFsdWrite_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdWrite_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_FatFsdShutdown_exit"} {:osmodel} SLIC_FatFsdShutdown_exit(actual_caller_38: int, actual_FatFsdShutdown_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdShutdown_exit"} {:osmodel} SLIC_FatFsdShutdown_exit(actual_caller_38: int, actual_FatFsdShutdown_2: int)
{
  var {:pointer} caller_38: int;
  var {:scalar} FatFsdShutdown_2: int;

  anon0:
    caller_38 := actual_caller_38;
    FatFsdShutdown_2 := actual_FatFsdShutdown_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdShutdown_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 3010} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 3011} SLIC_ABORT_24_0(caller_38, FatFsdShutdown_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdShutdown_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_FatFsdPnp_exit"} {:osmodel} SLIC_FatFsdPnp_exit(actual_caller_40: int, actual_FatFsdPnp_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdPnp_exit"} {:osmodel} SLIC_FatFsdPnp_exit(actual_caller_40: int, actual_FatFsdPnp_2: int)
{
  var {:pointer} caller_40: int;
  var {:scalar} FatFsdPnp_2: int;

  anon0:
    caller_40 := actual_caller_40;
    FatFsdPnp_2 := actual_FatFsdPnp_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdPnp_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 3012} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 3013} SLIC_ABORT_18_0(caller_40, FatFsdPnp_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdPnp_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_41: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_41: int)
{

  anon0:
    call {:si_unique_call 3014} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    return;
}



procedure {:origName "SLIC_FatFsdLockControl_exit"} {:osmodel} SLIC_FatFsdLockControl_exit(actual_caller_42: int, actual_FatFsdLockControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdLockControl_exit"} {:osmodel} SLIC_FatFsdLockControl_exit(actual_caller_42: int, actual_FatFsdLockControl_2: int)
{
  var {:pointer} caller_42: int;
  var {:scalar} FatFsdLockControl_2: int;

  anon0:
    caller_42 := actual_caller_42;
    FatFsdLockControl_2 := actual_FatFsdLockControl_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdLockControl_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 3015} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 3016} SLIC_ABORT_22_0(caller_42, FatFsdLockControl_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdLockControl_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_48_0"} SLIC_ABORT_48_0(actual_caller_43: int, actual_FatFsdRead_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_48_0"} SLIC_ABORT_48_0(actual_caller_43: int, actual_FatFsdRead_2: int)
{
  var {:pointer} caller_43: int;
  var {:scalar} FatFsdRead_2: int;

  anon0:
    caller_43 := actual_caller_43;
    FatFsdRead_2 := actual_FatFsdRead_2;
    call {:si_unique_call 3017} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_ABORT_28_0"} SLIC_ABORT_28_0(actual_caller_45: int, actual_FatFsdFileSystemControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_28_0"} SLIC_ABORT_28_0(actual_caller_45: int, actual_FatFsdFileSystemControl_2: int)
{
  var {:pointer} caller_45: int;
  var {:scalar} FatFsdFileSystemControl_2: int;

  anon0:
    caller_45 := actual_caller_45;
    FatFsdFileSystemControl_2 := actual_FatFsdFileSystemControl_2;
    call {:si_unique_call 3018} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_FatFsdDeviceControl_exit"} {:osmodel} SLIC_FatFsdDeviceControl_exit(actual_caller_49: int, actual_FatFsdDeviceControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_FatFsdDeviceControl_exit"} {:osmodel} SLIC_FatFsdDeviceControl_exit(actual_caller_49: int, actual_FatFsdDeviceControl_2: int)
{
  var {:pointer} caller_49: int;
  var {:scalar} FatFsdDeviceControl_2: int;

  anon0:
    caller_49 := actual_caller_49;
    FatFsdDeviceControl_2 := actual_FatFsdDeviceControl_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} FatFsdDeviceControl_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 3019} SLIC_EXIT_ROUTINE(strConst__li2bpl12);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 3020} SLIC_ABORT_26_0(caller_49, FatFsdDeviceControl_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} FatFsdDeviceControl_2 != 259;
    goto L6;
}



procedure {:origName "_sdv_init36"} {:osmodel} _sdv_init36();
  modifies SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} queued == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} stack_location == 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 0;
  free ensures {:va_keep} queuedWithoutMarking == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init36"} {:osmodel} _sdv_init36()
{

  anon0:
    SLAM_guard_S_0 := SLAM_guard_S_0_init;
    stack_location := 0;
    markedPending := 0;
    queuedWithoutMarking := 0;
    queued := 0;
    locked := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_ABORT_36_0"} SLIC_ABORT_36_0(actual_caller_50: int, actual_FatFsdFlushBuffers_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_ABORT_36_0"} SLIC_ABORT_36_0(actual_caller_50: int, actual_FatFsdFlushBuffers_2: int)
{
  var {:pointer} caller_50: int;
  var {:scalar} FatFsdFlushBuffers_2: int;

  anon0:
    caller_50 := actual_caller_50;
    FatFsdFlushBuffers_2 := actual_FatFsdFlushBuffers_2;
    call {:si_unique_call 3021} SLIC_ERROR_ROUTINE(strConst__li2bpl13);
    return;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:origName "FatRescanDirectory"} FatRescanDirectory(actual_IrpContext_150: int, actual_Dcb_12: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatRescanDirectory"} FatRescanDirectory(actual_IrpContext_150: int, actual_Dcb_12: int)
{
  var {:pointer} Tmp_2350: int;
  var {:scalar} DirentDeleted: int;
  var {:scalar} StartIndexOfThisRun_1: int;
  var {:scalar} DeletedHint: int;
  var {:pointer} Dirent_25: int;
  var {:dopa} {:scalar} Status_59: int;
  var {:scalar} Tmp_2352: int;
  var {:pointer} Tmp_2353: int;
  var {:pointer} Bcb_15: int;
  var {:scalar} Tmp_2355: int;
  var {:scalar} CurrentRun_1: int;
  var {:scalar} DirentIndex: int;
  var {:scalar} UnusedVbo: int;
  var {:pointer} IrpContext_150: int;
  var {:pointer} Dcb_12: int;
  var vslice_dummy_var_411: int;

  anon0:
    call {:si_unique_call 3022} vslice_dummy_var_411 := __HAVOC_malloc(4);
    call {:si_unique_call 3023} Dirent_25 := __HAVOC_malloc(4);
    call {:si_unique_call 3024} Status_59 := __HAVOC_malloc(4);
    call {:si_unique_call 3025} Bcb_15 := __HAVOC_malloc(4);
    IrpContext_150 := actual_IrpContext_150;
    Dcb_12 := actual_Dcb_12;
    call {:si_unique_call 3026} Tmp_2350 := __HAVOC_malloc(44);
    call {:si_unique_call 3027} Tmp_2353 := __HAVOC_malloc(44);
    assume {:nonnull} Bcb_15 != 0;
    assume Bcb_15 > 0;
    call {:si_unique_call 3028} sdv_do_paged_code_check();
    UnusedVbo := 0;
    DeletedHint := -1;
    CurrentRun_1 := 0;
    StartIndexOfThisRun_1 := 0;
    DirentIndex := StartIndexOfThisRun_1;
    goto L24;

  L24:
    call {:si_unique_call 3029} Tmp_2350, DirentDeleted, StartIndexOfThisRun_1, DeletedHint, Tmp_2352, Tmp_2353, Tmp_2355, CurrentRun_1, DirentIndex, UnusedVbo := FatRescanDirectory_loop_L24(Tmp_2350, DirentDeleted, StartIndexOfThisRun_1, DeletedHint, Dirent_25, Status_59, Tmp_2352, Tmp_2353, Bcb_15, Tmp_2355, CurrentRun_1, DirentIndex, UnusedVbo, IrpContext_150, Dcb_12);
    goto L24_last;

  L24_last:
    assume {:nonnull} Dcb_12 != 0;
    assume Dcb_12 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Status_59 != 0;
    assume Status_59 > 0;
    assume {:nonnull} Bcb_15 != 0;
    assume Bcb_15 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Bcb_15 != 0;
    assume Bcb_15 > 0;
    goto L28;

  L28:
    assume {:nonnull} Status_59 != 0;
    assume Status_59 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Dirent_25 != 0;
    assume Dirent_25 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_25] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_25] > 0;
    havoc Tmp_2350;
    assume {:nonnull} Tmp_2350 != 0;
    assume Tmp_2350 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Dirent_25 != 0;
    assume Dirent_25 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_25] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_25] > 0;
    havoc Tmp_2353;
    assume {:nonnull} Tmp_2353 != 0;
    assume Tmp_2353 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    DirentDeleted := 1;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} DeletedHint == -1;
    DeletedHint := UnusedVbo;
    goto L44;

  L44:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} CurrentRun_1 != 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} CurrentRun_1 == 1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} DirentDeleted == 0;
    CurrentRun_1 := 2;
    StartIndexOfThisRun_1 := DirentIndex;
    goto L48;

  L48:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} CurrentRun_1 == 2;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} DirentDeleted != 0;
    CurrentRun_1 := 1;
    StartIndexOfThisRun_1 := DirentIndex;
    goto L56;

  L56:
    UnusedVbo := UnusedVbo + 32;
    assume {:nonnull} Dirent_25 != 0;
    assume Dirent_25 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_25] := Mem_T.P_PACKED_DIRENT[Dirent_25];
    DirentIndex := DirentIndex + 1;
    goto L56_dummy;

  L56_dummy:
    assume false;
    return;

  anon49_Then:
    assume {:partition} DirentDeleted == 0;
    goto L56;

  anon47_Then:
    assume {:partition} CurrentRun_1 != 2;
    goto L56;

  anon48_Then:
    assume {:partition} DirentDeleted != 0;
    goto L48;

  anon46_Then:
    assume {:partition} CurrentRun_1 != 1;
    goto L48;

  anon44_Then:
    assume {:partition} CurrentRun_1 == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} DirentDeleted != 0;
    Tmp_2352 := 1;
    goto L68;

  L68:
    CurrentRun_1 := Tmp_2352;
    goto L56;

  anon45_Then:
    assume {:partition} DirentDeleted == 0;
    Tmp_2352 := 2;
    goto L68;

  anon60_Then:
    assume {:partition} DeletedHint != -1;
    goto L44;

  anon59_Then:
    DirentDeleted := 0;
    goto L44;

  anon58_Then:
    goto L22;

  L22:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} CurrentRun_1 == 1;
    goto L83;

  L83:
    goto L86;

  L86:
    assume {:nonnull} Dcb_12 != 0;
    assume Dcb_12 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    StartIndexOfThisRun_1 := INTDIV(UnusedVbo, 32);
    assume {:nonnull} Dcb_12 != 0;
    assume Dcb_12 > 0;
    goto L87;

  L87:
    assume {:nonnull} Bcb_15 != 0;
    assume Bcb_15 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Bcb_15 != 0;
    assume Bcb_15 > 0;
    goto L93;

  L93:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} DeletedHint == -1;
    DeletedHint := UnusedVbo;
    goto L98;

  L98:
    assume {:nonnull} Dcb_12 != 0;
    assume Dcb_12 > 0;
    assume {:nonnull} Dcb_12 != 0;
    assume Dcb_12 > 0;
    return;

  anon55_Then:
    assume {:partition} DeletedHint != -1;
    goto L98;

  anon54_Then:
    goto L93;

  anon53_Then:
    goto L87;

  anon57_Then:
    assume {:partition} CurrentRun_1 != 1;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} CurrentRun_1 != 0;
    goto L86;

  anon52_Then:
    assume {:partition} CurrentRun_1 == 0;
    goto L83;

  anon43_Then:
    goto L22;

  anon56_Then:
    goto L28;

  anon41_Then:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} INTMOD(UnusedVbo, 4096) != 0;
    assume {:nonnull} Bcb_15 != 0;
    assume Bcb_15 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L69;

  L69:
    assume {:nonnull} Bcb_15 != 0;
    assume Bcb_15 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Bcb_15 != 0;
    assume Bcb_15 > 0;
    goto L71;

  L71:
    Tmp_2355 := BAND(UnusedVbo, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 3030} FatReadDirectoryFile#1(IrpContext_150, Dcb_12, Tmp_2355, 4096, 0, Bcb_15, Dirent_25, Status_59);
    assume {:nonnull} Dirent_25 != 0;
    assume Dirent_25 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_25] := Mem_T.P_PACKED_DIRENT[Dirent_25];
    goto L28;

  anon50_Then:
    goto L71;

  anon51_Then:
    goto L28;

  anon42_Then:
    assume {:partition} INTMOD(UnusedVbo, 4096) == 0;
    goto L69;
}



procedure {:origName "FatConstructDirent"} FatConstructDirent(actual_IrpContext_151: int, actual_Dirent_26: int, actual_FileName_1: int, actual_ComponentReallyLowercase: int, actual_ExtensionReallyLowercase: int, actual_Lfn_9: int, actual_Attributes_1: int, actual_ZeroAndSetTimeFields: int, actual_SetCreationTime: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatConstructDirent"} FatConstructDirent(actual_IrpContext_151: int, actual_Dirent_26: int, actual_FileName_1: int, actual_ComponentReallyLowercase: int, actual_ExtensionReallyLowercase: int, actual_Lfn_9: int, actual_Attributes_1: int, actual_ZeroAndSetTimeFields: int, actual_SetCreationTime: int)
{
  var {:scalar} i_18: int;
  var {:scalar} LfnOrdinal: int;
  var {:pointer} Tmp_2357: int;
  var {:scalar} Tmp_2358: int;
  var {:scalar} DirentsInLfn: int;
  var {:scalar} Time: int;
  var {:pointer} Tmp_2359: int;
  var {:scalar} Tmp_2360: int;
  var {:scalar} DirentChecksum: int;
  var {:scalar} sdv_1430: int;
  var {:scalar} Tmp_2364: int;
  var {:pointer} Tmp_2366: int;
  var {:pointer} Buffer_29: int;
  var {:scalar} RemainderChars: int;
  var {:pointer} LfnDirent: int;
  var {:scalar} sdv_1431: int;
  var {:pointer} Tmp_2368: int;
  var {:pointer} Tmp_2369: int;
  var {:scalar} sdv_1432: int;
  var {:scalar} Tmp_2370: int;
  var {:scalar} SaveTime: int;
  var {:scalar} Tmp_2371: int;
  var {:pointer} FinalLfnBuffer: int;
  var {:pointer} Tmp_2374: int;
  var {:pointer} LfnBuffer_2: int;
  var {:pointer} IrpContext_151: int;
  var {:pointer} Dirent_26: int;
  var {:pointer} FileName_1: int;
  var {:scalar} ComponentReallyLowercase: int;
  var {:scalar} ExtensionReallyLowercase: int;
  var {:pointer} Lfn_9: int;
  var {:scalar} Attributes_1: int;
  var {:scalar} ZeroAndSetTimeFields: int;
  var {:pointer} SetCreationTime: int;
  var vslice_dummy_var_412: int;

  anon0:
    call {:si_unique_call 3031} Time := __HAVOC_malloc(20);
    call {:si_unique_call 3032} vslice_dummy_var_412 := __HAVOC_malloc(4);
    call {:si_unique_call 3033} Tmp_2370 := __HAVOC_malloc(12);
    call {:si_unique_call 3034} SaveTime := __HAVOC_malloc(20);
    IrpContext_151 := actual_IrpContext_151;
    Dirent_26 := actual_Dirent_26;
    FileName_1 := actual_FileName_1;
    ComponentReallyLowercase := actual_ComponentReallyLowercase;
    ExtensionReallyLowercase := actual_ExtensionReallyLowercase;
    Lfn_9 := actual_Lfn_9;
    Attributes_1 := actual_Attributes_1;
    ZeroAndSetTimeFields := actual_ZeroAndSetTimeFields;
    SetCreationTime := actual_SetCreationTime;
    call {:si_unique_call 3035} Tmp_2357 := __HAVOC_malloc(44);
    call {:si_unique_call 3036} Tmp_2366 := __HAVOC_malloc(40);
    call {:si_unique_call 3037} Tmp_2368 := __HAVOC_malloc(24);
    call {:si_unique_call 3038} Tmp_2369 := __HAVOC_malloc(8);
    call {:si_unique_call 3039} FinalLfnBuffer := __HAVOC_malloc(52);
    call {:si_unique_call 3040} sdv_do_paged_code_check();
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} ZeroAndSetTimeFields != 0;
    call {:si_unique_call 3041} sdv_RtlZeroMemory(0, 32);
    goto L7;

  L7:
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    havoc Tmp_2357;
    Tmp_2359 := Tmp_2357;
    assume {:nonnull} FileName_1 != 0;
    assume FileName_1 > 0;
    assume {:nonnull} Tmp_2370 != 0;
    assume Tmp_2370 > 0;
    assume {:nonnull} FileName_1 != 0;
    assume FileName_1 > 0;
    assume {:nonnull} Tmp_2370 != 0;
    assume Tmp_2370 > 0;
    assume {:nonnull} FileName_1 != 0;
    assume FileName_1 > 0;
    assume {:nonnull} Tmp_2370 != 0;
    assume Tmp_2370 > 0;
    call {:si_unique_call 3042} FatStringTo8dot3(IrpContext_151, Tmp_2370, Tmp_2359);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} ZeroAndSetTimeFields != 0;
    goto L19;

  L19:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} SetCreationTime != 0;
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    call {:si_unique_call 3043} sdv_1430 := FatNtTimeToFatTime(IrpContext_151, SetCreationTime, 0, CreationTime__PACKED_DIRENT(Dirent_26), CreationMSec__PACKED_DIRENT(Dirent_26));
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_1430 == 0;
    goto L25;

  L25:
    assume {:nonnull} SaveTime != 0;
    assume SaveTime > 0;
    assume {:nonnull} Time != 0;
    assume Time > 0;
    assume {:nonnull} SaveTime != 0;
    assume SaveTime > 0;
    assume {:nonnull} Time != 0;
    assume Time > 0;
    assume {:nonnull} SaveTime != 0;
    assume SaveTime > 0;
    assume {:nonnull} Time != 0;
    assume Time > 0;
    assume {:nonnull} SaveTime != 0;
    assume SaveTime > 0;
    assume {:nonnull} Time != 0;
    assume Time > 0;
    assume {:nonnull} SaveTime != 0;
    assume SaveTime > 0;
    assume {:nonnull} Time != 0;
    assume Time > 0;
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    call {:si_unique_call 3044} sdv_1431 := FatNtTimeToFatTime(IrpContext_151, SaveTime, 0, CreationTime__PACKED_DIRENT(Dirent_26), CreationMSec__PACKED_DIRENT(Dirent_26));
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_1431 == 0;
    call {:si_unique_call 3045} sdv_RtlZeroMemory(0, 4);
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    goto L23;

  L23:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} ZeroAndSetTimeFields != 0;
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    call {:si_unique_call 3046} sdv_1432 := FatNtTimeToFatTime(IrpContext_151, Time, 1, LastWriteTime__PACKED_DIRENT(Dirent_26), 0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_1432 != 0;
    goto L46;

  L46:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    goto L38;

  L38:
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} ComponentReallyLowercase != 0;
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    goto L50;

  L50:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} ExtensionReallyLowercase != 0;
    assume {:nonnull} Dirent_26 != 0;
    assume Dirent_26 > 0;
    goto L52;

  L52:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Lfn_9 != 0;
    call {:si_unique_call 3047} DirentChecksum := FatComputeLfnChecksum(Dirent_26);
    assume {:nonnull} Lfn_9 != 0;
    assume Lfn_9 > 0;
    havoc DirentsInLfn;
    LfnOrdinal := DirentsInLfn;
    Tmp_2371 := (DirentsInLfn - 1) * 13;
    assume {:nonnull} Lfn_9 != 0;
    assume Lfn_9 > 0;
    havoc Tmp_2374;
    LfnBuffer_2 := Tmp_2374 + Tmp_2371 * 4;
    LfnDirent := Dirent_26;
    goto L68;

  L68:
    call {:si_unique_call 3048} i_18, LfnOrdinal, Tmp_2358, Tmp_2360, Tmp_2364, Tmp_2366, Buffer_29, RemainderChars, Tmp_2368, Tmp_2369 := FatConstructDirent_loop_L68(i_18, LfnOrdinal, Tmp_2358, DirentsInLfn, Tmp_2360, DirentChecksum, Tmp_2364, Tmp_2366, Buffer_29, RemainderChars, LfnDirent, Tmp_2368, Tmp_2369, FinalLfnBuffer, LfnBuffer_2, Dirent_26, Lfn_9);
    goto L68_last;

  L68_last:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Dirent_26 > LfnDirent;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} LfnOrdinal == DirentsInLfn;
    assume {:nonnull} Lfn_9 != 0;
    assume Lfn_9 > 0;
    havoc RemainderChars;
    assume {:nonnull} LfnDirent != 0;
    assume LfnDirent > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} RemainderChars != 0;
    Tmp_2360 := RemainderChars * 2;
    call {:si_unique_call 3049} sdv_RtlCopyMemory(0, 0, Tmp_2360);
    i_18 := RemainderChars;
    goto L84;

  L84:
    call {:si_unique_call 3050} i_18, Tmp_2358, Tmp_2364 := FatConstructDirent_loop_L84(i_18, Tmp_2358, Tmp_2364, RemainderChars, FinalLfnBuffer);
    goto L84_last;

  L84_last:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} 13 > i_18;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} i_18 == RemainderChars;
    Tmp_2358 := i_18;
    assume {:nonnull} FinalLfnBuffer != 0;
    assume FinalLfnBuffer > 0;
    goto L89;

  L89:
    i_18 := i_18 + 1;
    goto L89_dummy;

  L89_dummy:
    assume false;
    return;

  anon52_Then:
    assume {:partition} i_18 != RemainderChars;
    Tmp_2364 := i_18;
    assume {:nonnull} FinalLfnBuffer != 0;
    assume FinalLfnBuffer > 0;
    goto L89;

  anon51_Then:
    assume {:partition} i_18 >= 13;
    Buffer_29 := FinalLfnBuffer;
    goto L90;

  L90:
    assume {:nonnull} LfnDirent != 0;
    assume LfnDirent > 0;
    havoc Tmp_2366;
    call {:si_unique_call 3051} sdv_RtlCopyMemory(0, 0, 10);
    assume {:nonnull} LfnDirent != 0;
    assume LfnDirent > 0;
    havoc Tmp_2368;
    call {:si_unique_call 3052} sdv_RtlCopyMemory(0, 0, 12);
    assume {:nonnull} LfnDirent != 0;
    assume LfnDirent > 0;
    havoc Tmp_2369;
    call {:si_unique_call 3053} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} LfnDirent != 0;
    assume LfnDirent > 0;
    assume {:nonnull} LfnDirent != 0;
    assume LfnDirent > 0;
    assume {:nonnull} LfnDirent != 0;
    assume LfnDirent > 0;
    assume {:nonnull} LfnDirent != 0;
    assume LfnDirent > 0;
    LfnOrdinal := LfnOrdinal - 1;
    goto L90_dummy;

  L90_dummy:
    assume false;
    return;

  anon54_Then:
    assume {:partition} RemainderChars == 0;
    Buffer_29 := LfnBuffer_2;
    goto L90;

  anon50_Then:
    assume {:partition} LfnOrdinal != DirentsInLfn;
    assume {:nonnull} LfnDirent != 0;
    assume LfnDirent > 0;
    Buffer_29 := LfnBuffer_2;
    goto L90;

  anon49_Then:
    assume {:partition} LfnDirent >= Dirent_26;
    goto L1;

  L1:
    return;

  anon48_Then:
    assume {:partition} Lfn_9 == 0;
    goto L1;

  anon47_Then:
    assume {:partition} ExtensionReallyLowercase == 0;
    goto L52;

  anon53_Then:
    assume {:partition} ComponentReallyLowercase == 0;
    goto L50;

  anon46_Then:
    goto L38;

  anon45_Then:
    assume {:partition} sdv_1432 == 0;
    call {:si_unique_call 3054} sdv_RtlZeroMemory(0, 4);
    goto L46;

  anon41_Then:
    assume {:partition} ZeroAndSetTimeFields == 0;
    goto L38;

  anon44_Then:
    assume {:partition} sdv_1431 != 0;
    goto L23;

  anon43_Then:
    assume {:partition} sdv_1430 != 0;
    goto L23;

  anon42_Then:
    assume {:partition} SetCreationTime == 0;
    goto L25;

  anon40_Then:
    goto L23;

  anon38_Then:
    assume {:partition} ZeroAndSetTimeFields == 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} SetCreationTime == 0;
    goto L38;

  anon39_Then:
    assume {:partition} SetCreationTime != 0;
    goto L19;

  anon37_Then:
    assume {:partition} ZeroAndSetTimeFields == 0;
    goto L7;
}



procedure {:origName "FatDefragDirectory"} FatDefragDirectory(actual_IrpContext_152: int, actual_Dcb_13: int, actual_DirentsNeeded_2: int) returns (Tmp_2375: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDefragDirectory"} FatDefragDirectory(actual_IrpContext_152: int, actual_Dcb_13: int, actual_DirentsNeeded_2: int) returns (Tmp_2375: int)
{
  var {:pointer} Links_7: int;
  var {:pointer} Char: int;
  var {:pointer} Bcbs: int;
  var {:scalar} Tmp_2376: int;
  var {:scalar} LfnByteOffset_3: int;
  var {:scalar} DcbSize: int;
  var {:pointer} TmpDirent: int;
  var {:scalar} Ccb_31: int;
  var {:scalar} Lbo_17: int;
  var {:scalar} PagesPinned: int;
  var {:pointer} UnusedDirentBuffer: int;
  var {:scalar} Tmp_2378: int;
  var {:scalar} Tmp_2379: int;
  var {:pointer} Fcb_58: int;
  var {:scalar} Tmp_2380: int;
  var {:scalar} Tmp_2381: int;
  var {:scalar} Tmp_2382: int;
  var {:scalar} TotalBytesAllocated: int;
  var {:pointer} TmpBcb: int;
  var {:scalar} Lfn_10: int;
  var {:pointer} sdv_1436: int;
  var {:dopa} {:scalar} TmpOffset: int;
  var {:scalar} SavedIrpContextFlag: int;
  var {:scalar} Tmp_2386: int;
  var {:pointer} Dirent_27: int;
  var {:scalar} TotalRuns: int;
  var {:pointer} sdv_1437: int;
  var {:scalar} PreviousLfnSpread: int;
  var {:pointer} UsedDirents: int;
  var {:pointer} Bcb_16: int;
  var {:pointer} UsedDirentBuffer: int;
  var {:pointer} sdv_1438: int;
  var {:dopa} {:scalar} FoundOffset: int;
  var {:pointer} sdv_1439: int;
  var {:scalar} Tmp_2391: int;
  var {:scalar} Tmp_2392: int;
  var {:dopa} {:scalar} DontCare_4: int;
  var {:pointer} Tmp_2393: int;
  var {:scalar} Tmp_2395: int;
  var {:scalar} ReturnValue: int;
  var {:scalar} Page_4: int;
  var {:pointer} sdv_1444: int;
  var {:scalar} McbInitialized: int;
  var {:pointer} sdv_1445: int;
  var {:scalar} InvalidateFcbs: int;
  var {:scalar} PinSize: int;
  var {:scalar} BytesUsed: int;
  var {:scalar} Run_1: int;
  var {:scalar} Tmp_2397: int;
  var {:pointer} sdv_1447: int;
  var {:scalar} Tmp_2399: int;
  var {:scalar} QueryOffset: int;
  var {:scalar} Tmp_2400: int;
  var {:pointer} UnusedDirents: int;
  var {:pointer} Directory: int;
  var {:scalar} Tmp_2401: int;
  var {:pointer} IrpContext_152: int;
  var {:pointer} Dcb_13: int;
  var {:scalar} DirentsNeeded_2: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_416: int;

  anon0:
    call {:si_unique_call 3055} TmpDirent := __HAVOC_malloc(4);
    call {:si_unique_call 3056} Ccb_31 := __HAVOC_malloc(88);
    call {:si_unique_call 3057} TmpBcb := __HAVOC_malloc(4);
    call {:si_unique_call 3058} Lfn_10 := __HAVOC_malloc(12);
    call {:si_unique_call 3059} TmpOffset := __HAVOC_malloc(4);
    call {:si_unique_call 3060} Dirent_27 := __HAVOC_malloc(4);
    call {:si_unique_call 3061} vslice_dummy_var_413 := __HAVOC_malloc(24);
    call {:si_unique_call 3062} Bcb_16 := __HAVOC_malloc(4);
    call {:si_unique_call 3063} FoundOffset := __HAVOC_malloc(4);
    call {:si_unique_call 3064} DontCare_4 := __HAVOC_malloc(4);
    IrpContext_152 := actual_IrpContext_152;
    Dcb_13 := actual_Dcb_13;
    DirentsNeeded_2 := actual_DirentsNeeded_2;
    assume {:nonnull} Bcb_16 != 0;
    assume Bcb_16 > 0;
    assume {:nonnull} Dirent_27 != 0;
    assume Dirent_27 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_27] := 0;
    assume {:nonnull} Lfn_10 != 0;
    assume Lfn_10 > 0;
    assume {:nonnull} Lfn_10 != 0;
    assume Lfn_10 > 0;
    assume {:nonnull} Lfn_10 != 0;
    assume Lfn_10 > 0;
    McbInitialized := 0;
    InvalidateFcbs := 0;
    UnusedDirentBuffer := 0;
    UsedDirentBuffer := 0;
    Bcbs := 0;
    TotalBytesAllocated := 0;
    call {:si_unique_call 3065} sdv_do_paged_code_check();
    assume {:nonnull} Dcb_13 != 0;
    assume Dcb_13 > 0;
    havoc DcbSize;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} DcbSize > 262144;
    Tmp_2375 := -1;
    goto L1;

  L1:
    return;

  anon99_Then:
    assume {:partition} 262144 >= DcbSize;
    assume {:nonnull} IrpContext_152 != 0;
    assume IrpContext_152 > 0;
    havoc SavedIrpContextFlag;
    assume {:nonnull} IrpContext_152 != 0;
    assume IrpContext_152 > 0;
    assume {:nonnull} Dcb_13 != 0;
    assume Dcb_13 > 0;
    havoc Links_7;
    goto L43;

  L43:
    call {:si_unique_call 3066} Links_7, Fcb_58, sdv_1436, vslice_dummy_var_415 := FatDefragDirectory_loop_L43(Links_7, Fcb_58, sdv_1436, vslice_dummy_var_415);
    goto L43_last;

  L43_last:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    QueryOffset := 0;
    assume {:nonnull} FoundOffset != 0;
    assume FoundOffset > 0;
    BytesUsed := 0;
    call {:si_unique_call 3067} sdv_RtlZeroMemory(0, 44);
    assume {:nonnull} Ccb_31 != 0;
    assume Ccb_31 > 0;
    assume {:nonnull} Lfn_10 != 0;
    assume Lfn_10 > 0;
    call {:si_unique_call 3068} sdv_1444 := ExAllocatePoolWithTag(17, 520, -294362810);
    assume {:nonnull} Lfn_10 != 0;
    assume Lfn_10 > 0;
    McbInitialized := 1;
    goto L122;

  L122:
    call {:si_unique_call 3069} LfnByteOffset_3, TotalBytesAllocated, BytesUsed, QueryOffset, vslice_dummy_var_416 := FatDefragDirectory_loop_L122(LfnByteOffset_3, DcbSize, Ccb_31, TotalBytesAllocated, Lfn_10, Dirent_27, Bcb_16, FoundOffset, BytesUsed, QueryOffset, IrpContext_152, Dcb_13, vslice_dummy_var_416);
    goto L122_last;

  L122_last:
    call {:si_unique_call 3102} FatLocateDirent#1(IrpContext_152, Dcb_13, Ccb_31, QueryOffset, Dirent_27, Bcb_16, FoundOffset, 0, Lfn_10);
    assume {:nonnull} Dirent_27 != 0;
    assume Dirent_27 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_27] != 0;
    assume {:nonnull} FoundOffset != 0;
    assume FoundOffset > 0;
    assume {:nonnull} Lfn_10 != 0;
    assume Lfn_10 > 0;
    havoc LfnByteOffset_3;
    assume {:nonnull} FoundOffset != 0;
    assume FoundOffset > 0;
    havoc BytesUsed;
    call {:si_unique_call 3070} vslice_dummy_var_416 := corral_nondet();
    TotalBytesAllocated := TotalBytesAllocated + BytesUsed;
    assume {:nonnull} FoundOffset != 0;
    assume FoundOffset > 0;
    havoc QueryOffset;
    goto L126;

  L126:
    assume {:nonnull} Dirent_27 != 0;
    assume Dirent_27 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_27] != 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} DcbSize <= QueryOffset;
    goto L138;

  L138:
    assume {:nonnull} Bcb_16 != 0;
    assume Bcb_16 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Bcb_16 != 0;
    assume Bcb_16 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Bcb_16 != 0;
    assume Bcb_16 > 0;
    goto L140;

  L140:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} DirentsNeeded_2 > INTDIV(DcbSize - TotalBytesAllocated, 32);
    ReturnValue := -1;
    goto L149;

  L149:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} McbInitialized != 0;
    goto L150;

  L150:
    assume {:nonnull} Lfn_10 != 0;
    assume Lfn_10 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    call {:si_unique_call 3071} sdv_ExFreePool(0);
    goto L154;

  L154:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} UnusedDirentBuffer != 0;
    call {:si_unique_call 3072} sdv_ExFreePool(0);
    goto L158;

  L158:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} UsedDirentBuffer != 0;
    call {:si_unique_call 3073} sdv_ExFreePool(0);
    goto L162;

  L162:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} Bcbs != 0;
    Page_4 := 0;
    goto L168;

  L168:
    call {:si_unique_call 3074} Tmp_2379, Page_4, Tmp_2397, Tmp_2401 := FatDefragDirectory_loop_L168(Bcbs, PagesPinned, Tmp_2379, Page_4, Tmp_2397, Tmp_2401);
    goto L168_last;

  L168_last:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} PagesPinned > Page_4;
    Tmp_2401 := Page_4;
    assume {:nonnull} Bcbs != 0;
    assume Bcbs > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    Tmp_2379 := Page_4;
    assume {:nonnull} Bcbs != 0;
    assume Bcbs > 0;
    Tmp_2397 := Page_4;
    assume {:nonnull} Bcbs != 0;
    assume Bcbs > 0;
    goto L173;

  L173:
    Page_4 := Page_4 + 1;
    goto L173_dummy;

  L173_dummy:
    assume false;
    return;

  anon100_Then:
    goto L173;

  anon82_Then:
    assume {:partition} Page_4 >= PagesPinned;
    call {:si_unique_call 3075} sdv_ExFreePool(0);
    goto L166;

  L166:
    assume {:nonnull} Bcb_16 != 0;
    assume Bcb_16 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Bcb_16 != 0;
    assume Bcb_16 > 0;
    goto L179;

  L179:
    assume {:nonnull} Dcb_13 != 0;
    assume Dcb_13 > 0;
    havoc Links_7;
    goto L184;

  L184:
    call {:si_unique_call 3076} Links_7, Fcb_58, sdv_1437 := FatDefragDirectory_loop_L184(Links_7, Fcb_58, sdv_1437);
    goto L184_last;

  L184_last:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    call {:si_unique_call 3077} sdv_1437 := sdv_containing_record(Links_7, 72);
    Fcb_58 := sdv_1437;
    call {:si_unique_call 3078} ExReleaseResourceLite(0);
    assume {:nonnull} Links_7 != 0;
    assume Links_7 > 0;
    havoc Links_7;
    goto anon83_Else_dummy;

  anon83_Else_dummy:
    assume false;
    return;

  anon83_Then:
    assume {:nonnull} IrpContext_152 != 0;
    assume IrpContext_152 > 0;
    Tmp_2375 := ReturnValue;
    goto L1;

  anon81_Then:
    goto L179;

  anon80_Then:
    assume {:partition} Bcbs == 0;
    goto L166;

  anon79_Then:
    assume {:partition} UsedDirentBuffer == 0;
    goto L162;

  anon78_Then:
    assume {:partition} UnusedDirentBuffer == 0;
    goto L158;

  anon77_Then:
    goto L154;

  anon76_Then:
    assume {:partition} McbInitialized == 0;
    goto L150;

  anon74_Then:
    assume {:partition} INTDIV(DcbSize - TotalBytesAllocated, 32) >= DirentsNeeded_2;
    Tmp_2391 := DcbSize - TotalBytesAllocated;
    call {:si_unique_call 3079} sdv_1447 := ExAllocatePoolWithTag(17, Tmp_2391, -999005882);
    UnusedDirentBuffer := sdv_1447;
    UnusedDirents := UnusedDirentBuffer;
    call {:si_unique_call 3080} sdv_1439 := ExAllocatePoolWithTag(17, TotalBytesAllocated, -999005882);
    UsedDirentBuffer := sdv_1439;
    UsedDirents := UsedDirentBuffer;
    PagesPinned := INTDIV(DcbSize + 4095, 4096);
    Tmp_2380 := PagesPinned * 4;
    call {:si_unique_call 3081} sdv_1438 := ExAllocatePoolWithTag(17, Tmp_2380, -495689402);
    Bcbs := sdv_1438;
    Tmp_2376 := PagesPinned * 4;
    call {:si_unique_call 3082} sdv_RtlZeroMemory(0, Tmp_2376);
    Page_4 := 0;
    goto L216;

  L216:
    call {:si_unique_call 3083} Tmp_2392, Tmp_2393, Page_4, PinSize, Tmp_2399, Directory := FatDefragDirectory_loop_L216(Bcbs, DcbSize, PagesPinned, Dirent_27, Tmp_2392, DontCare_4, Tmp_2393, Page_4, PinSize, Tmp_2399, Directory, IrpContext_152, Dcb_13);
    goto L216_last;

  L216_last:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} PagesPinned > Page_4;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} (Page_4 + 1) * 4096 > DcbSize;
    PinSize := DcbSize - Page_4 * 4096;
    goto L224;

  L224:
    Tmp_2392 := Page_4;
    Tmp_2393 := Bcbs + Tmp_2392 * 4;
    Tmp_2399 := Page_4 * 4096;
    call {:si_unique_call 3084} FatPrepareWriteDirectoryFile(IrpContext_152, Dcb_13, Tmp_2399, PinSize, Tmp_2393, Dirent_27, 0, 1, DontCare_4);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} Page_4 != 0;
    goto L231;

  L231:
    Page_4 := Page_4 + 1;
    goto L231_dummy;

  L231_dummy:
    assume false;
    return;

  anon86_Then:
    assume {:partition} Page_4 == 0;
    assume {:nonnull} Dirent_27 != 0;
    assume Dirent_27 > 0;
    Directory := Mem_T.P_PACKED_DIRENT[Dirent_27];
    goto L231;

  anon85_Then:
    assume {:partition} DcbSize >= (Page_4 + 1) * 4096;
    PinSize := 4096;
    goto L224;

  anon84_Then:
    assume {:partition} Page_4 >= PagesPinned;
    call {:si_unique_call 3085} TotalRuns := corral_nondet();
    Run_1 := 0;
    goto L234;

  L234:
    call {:si_unique_call 3086} Tmp_2382, Tmp_2395, Run_1, vslice_dummy_var_414 := FatDefragDirectory_loop_L234(Lbo_17, Tmp_2382, TotalRuns, UsedDirents, Tmp_2395, BytesUsed, Run_1, UnusedDirents, Directory, vslice_dummy_var_414);
    goto L234_last;

  L234_last:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} TotalRuns > Run_1;
    call {:si_unique_call 3087} vslice_dummy_var_414 := corral_nondet();
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Lbo_17 != -1;
    Tmp_2395 := BytesUsed;
    call {:si_unique_call 3088} sdv_RtlCopyMemory(0, 0, Tmp_2395);
    goto L250;

  L250:
    Run_1 := Run_1 + 1;
    goto L250_dummy;

  L250_dummy:
    assume false;
    return;

  anon88_Then:
    assume {:partition} Lbo_17 == -1;
    Tmp_2382 := BytesUsed;
    call {:si_unique_call 3089} sdv_RtlCopyMemory(0, 0, Tmp_2382);
    goto L250;

  anon87_Then:
    assume {:partition} Run_1 >= TotalRuns;
    Char := UnusedDirentBuffer;
    goto L256;

  L256:
    call {:si_unique_call 3090} FatDefragDirectory_loop_L256(Char, UnusedDirents);
    goto L256_last;

  L256_last:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} UnusedDirents > Char;
    assume {:nonnull} Char != 0;
    assume Char > 0;
    goto anon89_Else_dummy;

  anon89_Else_dummy:
    assume false;
    return;

  anon89_Then:
    assume {:partition} Char >= UnusedDirents;
    call {:si_unique_call 3091} sdv_RtlCopyMemory(0, 0, TotalBytesAllocated);
    Tmp_2386 := UnusedDirents;
    call {:si_unique_call 3092} sdv_RtlCopyMemory(0, 0, Tmp_2386);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Bcbs != 0;
    Page_4 := 0;
    goto L270;

  L270:
    call {:si_unique_call 3093} Tmp_2378, Tmp_2381, Page_4, Tmp_2400 := FatDefragDirectory_loop_L270(Bcbs, PagesPinned, Tmp_2378, Tmp_2381, Page_4, Tmp_2400);
    goto L270_last;

  L270_last:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} PagesPinned > Page_4;
    Tmp_2378 := Page_4;
    assume {:nonnull} Bcbs != 0;
    assume Bcbs > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    Tmp_2381 := Page_4;
    assume {:nonnull} Bcbs != 0;
    assume Bcbs > 0;
    Tmp_2400 := Page_4;
    assume {:nonnull} Bcbs != 0;
    assume Bcbs > 0;
    goto L275;

  L275:
    Page_4 := Page_4 + 1;
    goto L275_dummy;

  L275_dummy:
    assume false;
    return;

  anon101_Then:
    goto L275;

  anon91_Then:
    assume {:partition} Page_4 >= PagesPinned;
    call {:si_unique_call 3094} sdv_ExFreePool(0);
    Bcbs := 0;
    goto L268;

  L268:
    ReturnValue := INTDIV(TotalBytesAllocated, 32);
    call {:si_unique_call 3095} FatUnpinRepinnedBcbs(IrpContext_152);
    assume {:nonnull} Dcb_13 != 0;
    assume Dcb_13 > 0;
    havoc Links_7;
    goto L306;

  L306:
    call {:si_unique_call 3096} Links_7, Fcb_58, PreviousLfnSpread, sdv_1445 := FatDefragDirectory_loop_L306(Links_7, TmpDirent, Fcb_58, TmpBcb, TmpOffset, PreviousLfnSpread, sdv_1445, InvalidateFcbs, IrpContext_152, Dcb_13);
    goto L306_last;

  L306_last:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} TmpBcb != 0;
    assume TmpBcb > 0;
    assume {:nonnull} TmpDirent != 0;
    assume TmpDirent > 0;
    Mem_T.P_PACKED_DIRENT[TmpDirent] := 0;
    call {:si_unique_call 3097} sdv_1445 := sdv_containing_record(Links_7, 72);
    Fcb_58 := sdv_1445;
    assume {:nonnull} Fcb_58 != 0;
    assume Fcb_58 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} Fcb_58 != 0;
    assume Fcb_58 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    goto L321;

  L321:
    assume {:nonnull} Links_7 != 0;
    assume Links_7 > 0;
    havoc Links_7;
    goto L321_dummy;

  L321_dummy:
    assume false;
    return;

  anon94_Then:
    goto L318;

  L318:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} InvalidateFcbs != 0;
    goto L325;

  L325:
    assume {:nonnull} TmpBcb != 0;
    assume TmpBcb > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} InvalidateFcbs == 0;
    assume {:nonnull} TmpBcb != 0;
    assume TmpBcb > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} TmpBcb != 0;
    assume TmpBcb > 0;
    goto L329;

  L329:
    assume {:nonnull} Fcb_58 != 0;
    assume Fcb_58 > 0;
    havoc PreviousLfnSpread;
    assume {:nonnull} Fcb_58 != 0;
    assume Fcb_58 > 0;
    assume {:nonnull} TmpOffset != 0;
    assume TmpOffset > 0;
    assume {:nonnull} Fcb_58 != 0;
    assume Fcb_58 > 0;
    assume {:nonnull} TmpOffset != 0;
    assume TmpOffset > 0;
    goto L321;

  anon98_Then:
    goto L329;

  anon97_Then:
    assume {:partition} InvalidateFcbs != 0;
    goto L326;

  L326:
    assume {:nonnull} TmpBcb != 0;
    assume TmpBcb > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} TmpBcb != 0;
    assume TmpBcb > 0;
    goto L336;

  L336:
    call {:si_unique_call 3098} FatMarkFcbCondition(IrpContext_152, Fcb_58, 2, 1);
    goto L321;

  anon96_Then:
    goto L336;

  anon95_Then:
    goto L326;

  anon93_Then:
    assume {:partition} InvalidateFcbs == 0;
    assume {:nonnull} Fcb_58 != 0;
    assume Fcb_58 > 0;
    call {:si_unique_call 3099} FatLocateSimpleOemDirent(IrpContext_152, Dcb_13, Oem_unnamed_tag_70(Name__FILE_NAME_NODE(ShortName__FCB(Fcb_58))), TmpDirent, TmpBcb, TmpOffset);
    goto L325;

  anon102_Then:
    goto L318;

  anon92_Then:
    goto L149;

  anon90_Then:
    assume {:partition} Bcbs == 0;
    goto L268;

  anon75_Then:
    goto L140;

  anon72_Then:
    goto L140;

  anon73_Then:
    assume {:partition} QueryOffset < DcbSize;
    goto anon73_Then_dummy;

  anon73_Then_dummy:
    assume false;
    return;

  anon71_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_27] == 0;
    goto L138;

  anon70_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[Dirent_27] == 0;
    goto L126;

  anon69_Then:
    call {:si_unique_call 3100} sdv_1436 := sdv_containing_record(Links_7, 72);
    Fcb_58 := sdv_1436;
    call {:si_unique_call 3101} vslice_dummy_var_415 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} Links_7 != 0;
    assume Links_7 > 0;
    havoc Links_7;
    goto anon69_Then_dummy;

  anon69_Then_dummy:
    assume false;
    return;
}



procedure {:origName "FatComputeLfnChecksum"} FatComputeLfnChecksum(actual_Dirent_28: int) returns (Tmp_2402: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatComputeLfnChecksum"} FatComputeLfnChecksum(actual_Dirent_28: int) returns (Tmp_2402: int)
{
  var {:scalar} i_19: int;
  var {:scalar} Checksum: int;
  var {:pointer} Tmp_2405: int;
  var {:pointer} Dirent_28: int;
  var vslice_dummy_var_417: int;

  anon0:
    Dirent_28 := actual_Dirent_28;
    call {:si_unique_call 3103} vslice_dummy_var_417 := __HAVOC_malloc(44);
    call {:si_unique_call 3104} Tmp_2405 := __HAVOC_malloc(44);
    call {:si_unique_call 3105} sdv_do_paged_code_check();
    assume {:nonnull} Dirent_28 != 0;
    assume Dirent_28 > 0;
    havoc Tmp_2405;
    assume {:nonnull} Tmp_2405 != 0;
    assume Tmp_2405 > 0;
    havoc Checksum;
    i_19 := 1;
    goto L10;

  L10:
    call {:si_unique_call 3106} i_19, Checksum := FatComputeLfnChecksum_loop_L10(i_19, Checksum, Dirent_28);
    goto L10_last;

  L10_last:
    assume {:CounterLoop 10} {:Counter "i_19"} true;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} 11 > i_19;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} BAND(Checksum, 1) != 0;
    goto L15;

  L15:
    assume {:nonnull} Dirent_28 != 0;
    assume Dirent_28 > 0;
    call {:si_unique_call 3107} Checksum := corral_nondet();
    i_19 := i_19 + 1;
    goto L15_dummy;

  L15_dummy:
    assume false;
    return;

  anon6_Then:
    assume {:partition} BAND(Checksum, 1) == 0;
    goto L15;

  anon5_Then:
    assume {:partition} i_19 >= 11;
    Tmp_2402 := Checksum;
    return;
}



procedure {:origName "FatSetFileSizeInDirent"} FatSetFileSizeInDirent(actual_IrpContext_154: int, actual_Fcb_59: int, actual_AlternativeFileSize: int);
  modifies alloc, locked, queuedWithoutMarking, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetFileSizeInDirent"} FatSetFileSizeInDirent(actual_IrpContext_154: int, actual_Fcb_59: int, actual_AlternativeFileSize: int)
{
  var {:pointer} Dirent_30: int;
  var {:scalar} Tmp_2474: int;
  var {:pointer} DirentBcb_13: int;
  var {:pointer} IrpContext_154: int;
  var {:pointer} Fcb_59: int;
  var {:pointer} AlternativeFileSize: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_1550: int;
  var vslice_dummy_var_1551: int;

  anon0:
    call {:si_unique_call 3108} Dirent_30 := __HAVOC_malloc(4);
    call {:si_unique_call 3109} DirentBcb_13 := __HAVOC_malloc(4);
    call {:si_unique_call 3110} vslice_dummy_var_418 := __HAVOC_malloc(4);
    IrpContext_154 := actual_IrpContext_154;
    Fcb_59 := actual_Fcb_59;
    AlternativeFileSize := actual_AlternativeFileSize;
    call {:si_unique_call 3111} sdv_do_paged_code_check();
    call {:si_unique_call 3112} FatGetDirentFromFcbOrDcb(IrpContext_154, Fcb_59, Dirent_30, DirentBcb_13);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} AlternativeFileSize != 0;
    assume {:nonnull} AlternativeFileSize != 0;
    assume AlternativeFileSize > 0;
    havoc Tmp_2474;
    goto L14;

  L14:
    assume {:nonnull} Dirent_30 != 0;
    assume Dirent_30 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_30] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_30] > 0;
    assume {:nonnull} DirentBcb_13 != 0;
    assume DirentBcb_13 > 0;
    assume {:nonnull} Fcb_59 != 0;
    assume Fcb_59 > 0;
    havoc vslice_dummy_var_1550;
    havoc vslice_dummy_var_1551;
    call {:si_unique_call 3113} FatSetDirtyBcb#1(IrpContext_154, vslice_dummy_var_1550, vslice_dummy_var_1551, 1);
    assume {:nonnull} DirentBcb_13 != 0;
    assume DirentBcb_13 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} DirentBcb_13 != 0;
    assume DirentBcb_13 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto L1;

  anon5_Then:
    assume {:partition} AlternativeFileSize == 0;
    assume {:nonnull} Fcb_59 != 0;
    assume Fcb_59 > 0;
    havoc Tmp_2474;
    goto L14;
}



procedure {:origName "FatGetDirentFromFcbOrDcb"} FatGetDirentFromFcbOrDcb(actual_IrpContext_155: int, actual_FcbOrDcb_12: int, actual_Dirent_31: int, actual_Bcb_18: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetDirentFromFcbOrDcb"} FatGetDirentFromFcbOrDcb(actual_IrpContext_155: int, actual_FcbOrDcb_12: int, actual_Dirent_31: int, actual_Bcb_18: int)
{
  var {:dopa} {:scalar} DontCare_5: int;
  var {:pointer} IrpContext_155: int;
  var {:pointer} FcbOrDcb_12: int;
  var {:pointer} Dirent_31: int;
  var {:pointer} Bcb_18: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_1552: int;
  var vslice_dummy_var_1553: int;

  anon0:
    call {:si_unique_call 3114} DontCare_5 := __HAVOC_malloc(4);
    call {:si_unique_call 3115} vslice_dummy_var_419 := __HAVOC_malloc(4);
    IrpContext_155 := actual_IrpContext_155;
    FcbOrDcb_12 := actual_FcbOrDcb_12;
    Dirent_31 := actual_Dirent_31;
    Bcb_18 := actual_Bcb_18;
    call {:si_unique_call 3116} sdv_do_paged_code_check();
    assume {:nonnull} FcbOrDcb_12 != 0;
    assume FcbOrDcb_12 > 0;
    havoc vslice_dummy_var_1552;
    havoc vslice_dummy_var_1553;
    call {:si_unique_call 3117} FatReadDirectoryFile#1(IrpContext_155, vslice_dummy_var_1552, vslice_dummy_var_1553, 32, 1, Bcb_18, Dirent_31, DontCare_5);
    return;
}



procedure {:origName "FatLocateVolumeLabel"} FatLocateVolumeLabel(actual_IrpContext_156: int, actual_Vcb_88: int, actual_Dirent_32: int, actual_Bcb_19: int, actual_ByteOffset_4: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLocateVolumeLabel"} FatLocateVolumeLabel(actual_IrpContext_156: int, actual_Vcb_88: int, actual_Dirent_32: int, actual_Bcb_19: int, actual_ByteOffset_4: int)
{
  var {:pointer} Tmp_2479: int;
  var {:pointer} Tmp_2480: int;
  var {:dopa} {:scalar} Status_61: int;
  var {:pointer} Tmp_2482: int;
  var {:pointer} Tmp_2483: int;
  var {:scalar} Tmp_2484: int;
  var {:scalar} Tmp_2485: int;
  var {:pointer} Tmp_2486: int;
  var {:pointer} Tmp_2487: int;
  var {:pointer} IrpContext_156: int;
  var {:pointer} Vcb_88: int;
  var {:pointer} Dirent_32: int;
  var {:pointer} Bcb_19: int;
  var {:pointer} ByteOffset_4: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_1554: int;
  var vslice_dummy_var_1555: int;
  var vslice_dummy_var_1556: int;

  anon0:
    call {:si_unique_call 3118} Status_61 := __HAVOC_malloc(4);
    call {:si_unique_call 3119} vslice_dummy_var_420 := __HAVOC_malloc(4);
    IrpContext_156 := actual_IrpContext_156;
    Vcb_88 := actual_Vcb_88;
    Dirent_32 := actual_Dirent_32;
    Bcb_19 := actual_Bcb_19;
    ByteOffset_4 := actual_ByteOffset_4;
    call {:si_unique_call 3120} Tmp_2482 := __HAVOC_malloc(44);
    call {:si_unique_call 3121} Tmp_2483 := __HAVOC_malloc(44);
    call {:si_unique_call 3122} sdv_do_paged_code_check();
    assume {:nonnull} Bcb_19 != 0;
    assume Bcb_19 > 0;
    assume {:nonnull} ByteOffset_4 != 0;
    assume ByteOffset_4 > 0;
    goto L11;

  L11:
    call {:si_unique_call 3123} Tmp_2479, Tmp_2480, Tmp_2482, Tmp_2483, Tmp_2484, Tmp_2485, Tmp_2486, Tmp_2487 := FatLocateVolumeLabel_loop_L11(Tmp_2479, Tmp_2480, Status_61, Tmp_2482, Tmp_2483, Tmp_2484, Tmp_2485, Tmp_2486, Tmp_2487, IrpContext_156, Vcb_88, Dirent_32, Bcb_19, ByteOffset_4);
    goto L11_last;

  L11_last:
    assume {:nonnull} Vcb_88 != 0;
    assume Vcb_88 > 0;
    havoc Tmp_2479;
    assume {:nonnull} ByteOffset_4 != 0;
    assume ByteOffset_4 > 0;
    assume {:nonnull} Tmp_2479 != 0;
    assume Tmp_2479 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Status_61 != 0;
    assume Status_61 > 0;
    assume {:nonnull} Bcb_19 != 0;
    assume Bcb_19 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Bcb_19 != 0;
    assume Bcb_19 > 0;
    goto L15;

  L15:
    assume {:nonnull} Status_61 != 0;
    assume Status_61 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L21;

  L21:
    assume {:nonnull} Bcb_19 != 0;
    assume Bcb_19 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Bcb_19 != 0;
    assume Bcb_19 > 0;
    goto L22;

  L22:
    assume {:nonnull} Dirent_32 != 0;
    assume Dirent_32 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_32] := 0;
    assume {:nonnull} ByteOffset_4 != 0;
    assume ByteOffset_4 > 0;
    goto L1;

  L1:
    return;

  anon23_Then:
    goto L22;

  anon22_Then:
    assume {:nonnull} Dirent_32 != 0;
    assume Dirent_32 > 0;
    Tmp_2480 := Mem_T.P_PACKED_DIRENT[Dirent_32];
    assume {:nonnull} Tmp_2480 != 0;
    assume Tmp_2480 > 0;
    havoc Tmp_2482;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Dirent_32 != 0;
    assume Dirent_32 > 0;
    Tmp_2486 := Mem_T.P_PACKED_DIRENT[Dirent_32];
    assume {:nonnull} Tmp_2486 != 0;
    assume Tmp_2486 > 0;
    havoc Tmp_2484;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Tmp_2484 == 8;
    assume {:nonnull} Dirent_32 != 0;
    assume Dirent_32 > 0;
    Tmp_2487 := Mem_T.P_PACKED_DIRENT[Dirent_32];
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    havoc Tmp_2483;
    assume {:nonnull} Tmp_2483 != 0;
    assume Tmp_2483 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} ByteOffset_4 != 0;
    assume ByteOffset_4 > 0;
    assume {:nonnull} Vcb_88 != 0;
    assume Vcb_88 > 0;
    havoc vslice_dummy_var_1554;
    havoc vslice_dummy_var_1555;
    call {:si_unique_call 3124} FatPinMappedData(IrpContext_156, vslice_dummy_var_1554, vslice_dummy_var_1555, 32, Bcb_19);
    goto L1;

  anon30_Then:
    goto L31;

  L31:
    assume {:nonnull} ByteOffset_4 != 0;
    assume ByteOffset_4 > 0;
    assume {:nonnull} Dirent_32 != 0;
    assume Dirent_32 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_32] := Mem_T.P_PACKED_DIRENT[Dirent_32];
    goto L31_dummy;

  L31_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} Tmp_2484 != 8;
    goto L31;

  anon28_Then:
    goto L21;

  anon27_Then:
    goto L15;

  anon26_Then:
    assume {:nonnull} ByteOffset_4 != 0;
    assume ByteOffset_4 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Bcb_19 != 0;
    assume Bcb_19 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L38;

  L38:
    assume {:nonnull} Bcb_19 != 0;
    assume Bcb_19 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Bcb_19 != 0;
    assume Bcb_19 > 0;
    goto L40;

  L40:
    assume {:nonnull} ByteOffset_4 != 0;
    assume ByteOffset_4 > 0;
    havoc Tmp_2485;
    assume {:nonnull} Vcb_88 != 0;
    assume Vcb_88 > 0;
    havoc vslice_dummy_var_1556;
    call {:si_unique_call 3125} FatReadDirectoryFile#1(IrpContext_156, vslice_dummy_var_1556, Tmp_2485, 4096, 0, Bcb_19, Dirent_32, Status_61);
    assume {:nonnull} Dirent_32 != 0;
    assume Dirent_32 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_32] := Mem_T.P_PACKED_DIRENT[Dirent_32];
    goto L15;

  anon24_Then:
    goto L40;

  anon25_Then:
    goto L15;

  anon21_Then:
    goto L38;
}



procedure {:origName "FatLfnDirentExists"} FatLfnDirentExists(actual_IrpContext_157: int, actual_Dcb_14: int, actual_Lfn_12: int, actual_LfnTmp: int) returns (Tmp_2489: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} Tmp_2489 == 1 || Tmp_2489 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLfnDirentExists"} FatLfnDirentExists(actual_IrpContext_157: int, actual_Dcb_14: int, actual_Lfn_12: int, actual_LfnTmp: int) returns (Tmp_2489: int)
{
  var {:scalar} Ccb_33: int;
  var {:pointer} Dirent_33: int;
  var {:pointer} DirentBcb_14: int;
  var {:dopa} {:scalar} DirentByteOffset_6: int;
  var {:scalar} Result_6: int;
  var {:pointer} IrpContext_157: int;
  var {:pointer} Dcb_14: int;
  var {:pointer} Lfn_12: int;
  var {:pointer} LfnTmp: int;

  anon0:
    call {:si_unique_call 3126} Ccb_33 := __HAVOC_malloc(88);
    call {:si_unique_call 3127} Dirent_33 := __HAVOC_malloc(4);
    call {:si_unique_call 3128} DirentBcb_14 := __HAVOC_malloc(4);
    call {:si_unique_call 3129} DirentByteOffset_6 := __HAVOC_malloc(4);
    IrpContext_157 := actual_IrpContext_157;
    Dcb_14 := actual_Dcb_14;
    Lfn_12 := actual_Lfn_12;
    LfnTmp := actual_LfnTmp;
    assume {:nonnull} DirentBcb_14 != 0;
    assume DirentBcb_14 > 0;
    Result_6 := 0;
    call {:si_unique_call 3130} sdv_do_paged_code_check();
    assume {:nonnull} Ccb_33 != 0;
    assume Ccb_33 > 0;
    assume {:nonnull} Lfn_12 != 0;
    assume Lfn_12 > 0;
    assume {:nonnull} Ccb_33 != 0;
    assume Ccb_33 > 0;
    assume {:nonnull} Lfn_12 != 0;
    assume Lfn_12 > 0;
    assume {:nonnull} Ccb_33 != 0;
    assume Ccb_33 > 0;
    assume {:nonnull} Lfn_12 != 0;
    assume Lfn_12 > 0;
    assume {:nonnull} Ccb_33 != 0;
    assume Ccb_33 > 0;
    assume {:nonnull} Ccb_33 != 0;
    assume Ccb_33 > 0;
    call {:si_unique_call 3131} FatLocateDirent#1(IrpContext_157, Dcb_14, Ccb_33, 0, Dirent_33, DirentBcb_14, DirentByteOffset_6, 0, LfnTmp);
    assume {:nonnull} DirentBcb_14 != 0;
    assume DirentBcb_14 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Result_6 := 1;
    goto L27;

  L27:
    assume {:nonnull} DirentBcb_14 != 0;
    assume DirentBcb_14 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} DirentBcb_14 != 0;
    assume DirentBcb_14 > 0;
    goto L29;

  L29:
    Tmp_2489 := Result_6;
    return;

  anon6_Then:
    goto L29;

  anon5_Then:
    goto L27;
}



procedure {:origName "FatTunnelFcbOrDcb"} FatTunnelFcbOrDcb(actual_FcbOrDcb_13: int, actual_Ccb_34: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatTunnelFcbOrDcb"} FatTunnelFcbOrDcb(actual_FcbOrDcb_13: int, actual_Ccb_34: int)
{
  var {:scalar} i_20: int;
  var {:scalar} DownCaseSeg: int;
  var {:scalar} ShortNameWithCase: int;
  var {:pointer} Tmp_2495: int;
  var {:scalar} Tmp_2496: int;
  var {:pointer} ShortNameBuffer_6: int;
  var {:scalar} Tmp_2500: int;
  var {:scalar} Tmp_2503: int;
  var {:pointer} FcbOrDcb_13: int;
  var {:pointer} Ccb_34: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_422: int;
  var vslice_dummy_var_423: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;

  anon0:
    call {:si_unique_call 3132} DownCaseSeg := __HAVOC_malloc(12);
    call {:si_unique_call 3133} ShortNameWithCase := __HAVOC_malloc(12);
    call {:si_unique_call 3134} vslice_dummy_var_421 := __HAVOC_malloc(4);
    FcbOrDcb_13 := actual_FcbOrDcb_13;
    Ccb_34 := actual_Ccb_34;
    call {:si_unique_call 3135} ShortNameBuffer_6 := __HAVOC_malloc(48);
    call {:si_unique_call 3136} sdv_do_paged_code_check();
    Tmp_2495 := FcbOrDcb_13;
    assume {:nonnull} Tmp_2495 != 0;
    assume Tmp_2495 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 3137} vslice_dummy_var_422 := corral_nondet();
    assume {:nonnull} FcbOrDcb_13 != 0;
    assume FcbOrDcb_13 > 0;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:nonnull} ShortNameWithCase != 0;
    assume ShortNameWithCase > 0;
    assume {:nonnull} ShortNameWithCase != 0;
    assume ShortNameWithCase > 0;
    assume {:nonnull} ShortNameWithCase != 0;
    assume ShortNameWithCase > 0;
    call {:si_unique_call 3138} vslice_dummy_var_423 := RtlOemStringToCountedUnicodeString(0, 0, 0);
    assume {:nonnull} FcbOrDcb_13 != 0;
    assume FcbOrDcb_13 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    i_20 := 0;
    goto L27;

  L27:
    call {:si_unique_call 3139} i_20, Tmp_2503 := FatTunnelFcbOrDcb_loop_L27(i_20, ShortNameWithCase, Tmp_2503);
    goto L27_last;

  L27_last:
    assume {:nonnull} ShortNameWithCase != 0;
    assume ShortNameWithCase > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    Tmp_2503 := i_20;
    assume {:nonnull} ShortNameWithCase != 0;
    assume ShortNameWithCase > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    i_20 := i_20 + 1;
    goto anon22_Else_dummy;

  anon22_Else_dummy:
    assume false;
    return;

  anon22_Then:
    goto L28;

  L28:
    assume {:nonnull} FcbOrDcb_13 != 0;
    assume FcbOrDcb_13 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} DownCaseSeg != 0;
    assume DownCaseSeg > 0;
    assume {:nonnull} ShortNameWithCase != 0;
    assume ShortNameWithCase > 0;
    assume {:nonnull} DownCaseSeg != 0;
    assume DownCaseSeg > 0;
    assume {:nonnull} DownCaseSeg != 0;
    assume DownCaseSeg > 0;
    call {:si_unique_call 3140} vslice_dummy_var_424 := RtlDowncaseUnicodeString(0, 0, 0);
    goto L31;

  L31:
    i_20 := i_20 + 1;
    assume {:nonnull} FcbOrDcb_13 != 0;
    assume FcbOrDcb_13 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} ShortNameWithCase != 0;
    assume ShortNameWithCase > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    Tmp_2496 := i_20;
    assume {:nonnull} DownCaseSeg != 0;
    assume DownCaseSeg > 0;
    assume {:nonnull} ShortNameWithCase != 0;
    assume ShortNameWithCase > 0;
    assume {:nonnull} DownCaseSeg != 0;
    assume DownCaseSeg > 0;
    assume {:nonnull} ShortNameWithCase != 0;
    assume ShortNameWithCase > 0;
    assume {:nonnull} DownCaseSeg != 0;
    assume DownCaseSeg > 0;
    call {:si_unique_call 3141} vslice_dummy_var_425 := RtlDowncaseUnicodeString(0, 0, 0);
    goto L25;

  L25:
    assume {:nonnull} Ccb_34 != 0;
    assume Ccb_34 > 0;
    havoc Tmp_2500;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Tmp_2500 == 0;
    goto L78;

  L78:
    assume {:nonnull} FcbOrDcb_13 != 0;
    assume FcbOrDcb_13 > 0;
    assume {:nonnull} FcbOrDcb_13 != 0;
    assume FcbOrDcb_13 > 0;
    call {:si_unique_call 3142} vslice_dummy_var_426 := corral_nondet();
    assume {:nonnull} FcbOrDcb_13 != 0;
    assume FcbOrDcb_13 > 0;
    goto L1;

  anon24_Then:
    assume {:partition} Tmp_2500 != 0;
    goto L78;

  anon20_Then:
    goto L25;

  anon23_Then:
    goto L25;

  anon19_Then:
    goto L31;

  anon18_Then:
    goto L28;

  anon17_Then:
    goto L25;
}



procedure {:origName "FatLocateSimpleOemDirent"} FatLocateSimpleOemDirent(actual_IrpContext_158: int, actual_ParentDirectory_1: int, actual_FileName_2: int, actual_Dirent_34: int, actual_Bcb_20: int, actual_ByteOffset_5: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLocateSimpleOemDirent"} FatLocateSimpleOemDirent(actual_IrpContext_158: int, actual_ParentDirectory_1: int, actual_FileName_2: int, actual_Dirent_34: int, actual_Bcb_20: int, actual_ByteOffset_5: int)
{
  var {:scalar} Tmp_2505: int;
  var {:scalar} LocalCcb_3: int;
  var {:pointer} IrpContext_158: int;
  var {:pointer} ParentDirectory_1: int;
  var {:pointer} FileName_2: int;
  var {:pointer} Dirent_34: int;
  var {:pointer} Bcb_20: int;
  var {:pointer} ByteOffset_5: int;
  var vslice_dummy_var_427: int;

  anon0:
    call {:si_unique_call 3143} Tmp_2505 := __HAVOC_malloc(12);
    call {:si_unique_call 3144} LocalCcb_3 := __HAVOC_malloc(88);
    call {:si_unique_call 3145} vslice_dummy_var_427 := __HAVOC_malloc(4);
    IrpContext_158 := actual_IrpContext_158;
    ParentDirectory_1 := actual_ParentDirectory_1;
    FileName_2 := actual_FileName_2;
    Dirent_34 := actual_Dirent_34;
    Bcb_20 := actual_Bcb_20;
    ByteOffset_5 := actual_ByteOffset_5;
    call {:si_unique_call 3146} sdv_do_paged_code_check();
    assume {:nonnull} FileName_2 != 0;
    assume FileName_2 > 0;
    assume {:nonnull} Tmp_2505 != 0;
    assume Tmp_2505 > 0;
    assume {:nonnull} FileName_2 != 0;
    assume FileName_2 > 0;
    assume {:nonnull} Tmp_2505 != 0;
    assume Tmp_2505 > 0;
    assume {:nonnull} FileName_2 != 0;
    assume FileName_2 > 0;
    assume {:nonnull} Tmp_2505 != 0;
    assume Tmp_2505 > 0;
    assume {:nonnull} LocalCcb_3 != 0;
    assume LocalCcb_3 > 0;
    call {:si_unique_call 3147} FatStringTo8dot3(IrpContext_158, Tmp_2505, Constant_unnamed_tag_72(OemQueryTemplate__CCB(LocalCcb_3)));
    assume {:nonnull} LocalCcb_3 != 0;
    assume LocalCcb_3 > 0;
    assume {:nonnull} LocalCcb_3 != 0;
    assume LocalCcb_3 > 0;
    call {:si_unique_call 3148} FatLocateDirent#1(IrpContext_158, ParentDirectory_1, LocalCcb_3, 0, Dirent_34, Bcb_20, ByteOffset_5, 0, 0);
    return;
}



procedure {:origName "FatCreateNewDirent"} FatCreateNewDirent(actual_IrpContext_159: int, actual_ParentDirectory_2: int, actual_DirentsNeeded_3: int) returns (Tmp_2507: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCreateNewDirent"} FatCreateNewDirent(actual_IrpContext_159: int, actual_ParentDirectory_2: int, actual_DirentsNeeded_3: int) returns (Tmp_2507: int)
{
  var {:scalar} i_21: int;
  var {:pointer} Tmp_2508: int;
  var {:scalar} Tmp_2509: int;
  var {:pointer} Tmp_2510: int;
  var {:scalar} Tmp_2512: int;
  var {:pointer} Tmp_2515: int;
  var {:scalar} DeletedHint_1: int;
  var {:dopa} {:scalar} Status_63: int;
  var {:pointer} Dirent_35: int;
  var {:pointer} Tmp_2516: int;
  var {:pointer} Buffer_30: int;
  var {:pointer} Bcb_21: int;
  var {:scalar} Tmp_2517: int;
  var {:scalar} ByteOffset_6: int;
  var {:pointer} Tmp_2519: int;
  var {:scalar} Tmp_2520: int;
  var {:pointer} Tmp_2521: int;
  var {:pointer} Tmp_2523: int;
  var {:pointer} Tmp_2524: int;
  var {:pointer} Tmp_2525: int;
  var {:pointer} Tmp_2526: int;
  var {:scalar} UnusedVbo_1: int;
  var {:pointer} IrpContext_159: int;
  var {:pointer} ParentDirectory_2: int;
  var {:scalar} DirentsNeeded_3: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_1557: int;
  var vslice_dummy_var_1558: int;

  anon0:
    call {:si_unique_call 3149} Status_63 := __HAVOC_malloc(4);
    call {:si_unique_call 3150} Dirent_35 := __HAVOC_malloc(4);
    call {:si_unique_call 3151} Buffer_30 := __HAVOC_malloc(4);
    call {:si_unique_call 3152} Bcb_21 := __HAVOC_malloc(4);
    IrpContext_159 := actual_IrpContext_159;
    ParentDirectory_2 := actual_ParentDirectory_2;
    DirentsNeeded_3 := actual_DirentsNeeded_3;
    call {:si_unique_call 3153} Tmp_2510 := __HAVOC_malloc(44);
    call {:si_unique_call 3154} Tmp_2516 := __HAVOC_malloc(44);
    call {:si_unique_call 3155} Tmp_2519 := __HAVOC_malloc(44);
    call {:si_unique_call 3156} Tmp_2521 := __HAVOC_malloc(44);
    call {:si_unique_call 3157} Tmp_2523 := __HAVOC_malloc(44);
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    assume {:nonnull} Status_63 != 0;
    assume Status_63 > 0;
    call {:si_unique_call 3158} sdv_do_paged_code_check();
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    havoc UnusedVbo_1;
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    havoc DeletedHint_1;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} UnusedVbo_1 == -1;
    call {:si_unique_call 3159} FatRescanDirectory(IrpContext_159, ParentDirectory_2);
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    havoc UnusedVbo_1;
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    havoc DeletedHint_1;
    goto L17;

  L17:
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    ByteOffset_6 := UnusedVbo_1;
    UnusedVbo_1 := UnusedVbo_1 + DirentsNeeded_3 * 32;
    goto L26;

  L26:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L87;

  L87:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    i_21 := 0;
    goto L89;

  L89:
    call {:si_unique_call 3160} i_21, Tmp_2509, Tmp_2510, Tmp_2519 := FatCreateNewDirent_loop_L89(i_21, Tmp_2509, Tmp_2510, Status_63, Dirent_35, Bcb_21, ByteOffset_6, Tmp_2519, IrpContext_159, ParentDirectory_2, DirentsNeeded_3);
    goto L89_last;

  L89_last:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} DirentsNeeded_3 > i_21;
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} Status_63 != 0;
    assume Status_63 > 0;
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto L95;

  L95:
    assume {:nonnull} Status_63 != 0;
    assume Status_63 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L106;

  L106:
    call {:si_unique_call 3161} FatPopUpFileCorrupt#1(IrpContext_159, ParentDirectory_2);
    assume {:nonnull} IrpContext_159 != 0;
    assume IrpContext_159 > 0;
    call {:si_unique_call 3162} ExRaiseStatus(-1073741566);
    goto L113;

  L113:
    i_21 := i_21 + 1;
    goto L113_dummy;

  L113_dummy:
    assume false;
    return;

  anon89_Then:
    assume {:nonnull} Dirent_35 != 0;
    assume Dirent_35 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_35] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_35] > 0;
    havoc Tmp_2510;
    assume {:nonnull} Tmp_2510 != 0;
    assume Tmp_2510 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} Dirent_35 != 0;
    assume Dirent_35 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_35] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_35] > 0;
    havoc Tmp_2519;
    assume {:nonnull} Tmp_2519 != 0;
    assume Tmp_2519 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto L113;

  anon105_Then:
    goto L106;

  anon104_Then:
    goto L113;

  anon103_Then:
    goto L95;

  anon87_Then:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} INTMOD(ByteOffset_6 + i_21 * 32, 4096) != 0;
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto L115;

  L115:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto L117;

  L117:
    Tmp_2509 := BAND(ByteOffset_6 + i_21 * 32, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 3163} FatReadDirectoryFile#1(IrpContext_159, ParentDirectory_2, Tmp_2509, 4096, 0, Bcb_21, Dirent_35, Status_63);
    assume {:nonnull} Dirent_35 != 0;
    assume Dirent_35 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_35] := Mem_T.P_PACKED_DIRENT[Dirent_35];
    goto L95;

  anon90_Then:
    goto L117;

  anon91_Then:
    goto L95;

  anon88_Then:
    assume {:partition} INTMOD(ByteOffset_6 + i_21 * 32, 4096) == 0;
    goto L115;

  anon85_Then:
    assume {:partition} i_21 >= DirentsNeeded_3;
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto L127;

  L127:
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    Tmp_2507 := ByteOffset_6;
    return;

  anon86_Then:
    goto L127;

  anon99_Then:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} DirentsNeeded_3 != 1;
    goto L87;

  anon76_Then:
    assume {:partition} DirentsNeeded_3 == 1;
    Tmp_2508 := ParentDirectory_2;
    assume {:nonnull} Tmp_2508 != 0;
    assume Tmp_2508 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    Tmp_2512 := 0;
    goto L33;

  L33:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} ByteOffset_6 <= Tmp_2512;
    goto L87;

  anon77_Then:
    assume {:partition} Tmp_2512 < ByteOffset_6;
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} Status_63 != 0;
    assume Status_63 > 0;
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto L38;

  L38:
    assume {:nonnull} Status_63 != 0;
    assume Status_63 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto L49;

  L49:
    call {:si_unique_call 3164} FatPopUpFileCorrupt#1(IrpContext_159, ParentDirectory_2);
    assume {:nonnull} IrpContext_159 != 0;
    assume IrpContext_159 > 0;
    call {:si_unique_call 3165} ExRaiseStatus(-1073741566);
    goto L56;

  L56:
    assume {:nonnull} Dirent_35 != 0;
    assume Dirent_35 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_35] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_35] > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Dirent_35 != 0;
    assume Dirent_35 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_35] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_35] > 0;
    havoc Tmp_2521;
    assume {:nonnull} Tmp_2521 != 0;
    assume Tmp_2521 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    Tmp_2520 := ByteOffset_6 - 32;
    call {:si_unique_call 3166} FatPinMappedData(IrpContext_159, ParentDirectory_2, Tmp_2520, 32, Bcb_21);
    assume {:nonnull} Dirent_35 != 0;
    assume Dirent_35 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_35] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_35] > 0;
    havoc Tmp_2523;
    assume {:nonnull} Tmp_2523 != 0;
    assume Tmp_2523 > 0;
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    havoc vslice_dummy_var_1557;
    havoc vslice_dummy_var_1558;
    call {:si_unique_call 3167} FatSetDirtyBcb#1(IrpContext_159, vslice_dummy_var_1557, vslice_dummy_var_1558, 1);
    goto L57;

  L57:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L87;

  anon82_Then:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto L87;

  anon102_Then:
    goto L57;

  anon81_Then:
    goto L57;

  anon80_Then:
    assume {:nonnull} Dirent_35 != 0;
    assume Dirent_35 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_35] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_35] > 0;
    havoc Tmp_2516;
    assume {:nonnull} Tmp_2516 != 0;
    assume Tmp_2516 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    goto L56;

  anon106_Then:
    goto L49;

  anon101_Then:
    goto L38;

  anon78_Then:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} INTMOD(ByteOffset_6 - 32, 4096) != 0;
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L75;

  L75:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto L77;

  L77:
    Tmp_2517 := BAND(ByteOffset_6 - 32, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 3168} FatReadDirectoryFile#1(IrpContext_159, ParentDirectory_2, Tmp_2517, 4096, 0, Bcb_21, Dirent_35, Status_63);
    assume {:nonnull} Dirent_35 != 0;
    assume Dirent_35 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_35] := Mem_T.P_PACKED_DIRENT[Dirent_35];
    goto L38;

  anon83_Then:
    goto L77;

  anon84_Then:
    goto L38;

  anon79_Then:
    assume {:partition} INTMOD(ByteOffset_6 - 32, 4096) == 0;
    goto L75;

  anon100_Then:
    Tmp_2512 := 64;
    goto L33;

  anon75_Then:
    call {:si_unique_call 3169} ByteOffset_6 := corral_nondet();
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    havoc Tmp_2525;
    assume {:nonnull} Tmp_2525 != 0;
    assume Tmp_2525 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    goto L144;

  L144:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} ByteOffset_6 != -1;
    ByteOffset_6 := ByteOffset_6 * 32;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} ByteOffset_6 == DeletedHint_1;
    DeletedHint_1 := DeletedHint_1 + DirentsNeeded_3 * 32;
    goto L148;

  L148:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} ByteOffset_6 + DirentsNeeded_3 * 32 > UnusedVbo_1;
    UnusedVbo_1 := ByteOffset_6 + DirentsNeeded_3 * 32;
    goto L26;

  anon95_Then:
    assume {:partition} UnusedVbo_1 >= ByteOffset_6 + DirentsNeeded_3 * 32;
    goto L26;

  anon108_Then:
    assume {:partition} ByteOffset_6 != DeletedHint_1;
    goto L148;

  anon93_Then:
    assume {:partition} ByteOffset_6 == -1;
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    goto L152;

  L152:
    assume {:nonnull} IrpContext_159 != 0;
    assume IrpContext_159 > 0;
    call {:si_unique_call 3170} ExRaiseStatus(-1073741078);
    goto L156;

  L156:
    ByteOffset_6 := UnusedVbo_1;
    UnusedVbo_1 := UnusedVbo_1 + DirentsNeeded_3 * 32;
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    call {:si_unique_call 3171} vslice_dummy_var_428 := corral_nondet();
    call {:si_unique_call 3172} FatPrepareWriteDirectoryFile(IrpContext_159, ParentDirectory_2, UnusedVbo_1, 1, Bcb_21, Buffer_30, 0, 1, Status_63);
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Bcb_21 != 0;
    assume Bcb_21 > 0;
    goto L26;

  anon96_Then:
    goto L26;

  anon94_Then:
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    havoc Tmp_2524;
    assume {:nonnull} Tmp_2524 != 0;
    assume Tmp_2524 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    Tmp_2526 := ParentDirectory_2;
    assume {:nonnull} Tmp_2526 != 0;
    assume Tmp_2526 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    goto L156;

  anon110_Then:
    goto L152;

  anon109_Then:
    goto L156;

  anon107_Then:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} ByteOffset_6 == -1;
    Tmp_2515 := ParentDirectory_2;
    assume {:nonnull} Tmp_2515 != 0;
    assume Tmp_2515 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} ParentDirectory_2 != 0;
    assume ParentDirectory_2 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    call {:si_unique_call 3173} ByteOffset_6 := FatDefragDirectory(IrpContext_159, ParentDirectory_2, DirentsNeeded_3);
    goto L144;

  anon97_Then:
    goto L144;

  anon111_Then:
    goto L144;

  anon92_Then:
    assume {:partition} ByteOffset_6 != -1;
    goto L144;

  anon98_Then:
    assume {:partition} UnusedVbo_1 != -1;
    goto L17;
}



procedure {:origName "_sdv_init33"} _sdv_init33();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init33"} _sdv_init33()
{
  var vslice_dummy_var_429: int;

  anon0:
    call {:si_unique_call 3174} vslice_dummy_var_429 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatInitializeDirectoryDirent"} FatInitializeDirectoryDirent(actual_IrpContext_160: int, actual_Dcb_15: int, actual_ParentDirent: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatInitializeDirectoryDirent"} FatInitializeDirectoryDirent(actual_IrpContext_160: int, actual_Dcb_15: int, actual_ParentDirent: int)
{
  var {:pointer} Tmp_2529: int;
  var {:pointer} Tmp_2530: int;
  var {:pointer} Tmp_2532: int;
  var {:pointer} Tmp_2534: int;
  var {:pointer} Tmp_2536: int;
  var {:pointer} Tmp_2537: int;
  var {:pointer} Tmp_2538: int;
  var {:pointer} Tmp_2539: int;
  var {:pointer} Tmp_2540: int;
  var {:pointer} Tmp_2541: int;
  var {:pointer} Tmp_2543: int;
  var {:pointer} Buffer_31: int;
  var {:pointer} Bcb_22: int;
  var {:pointer} Tmp_2545: int;
  var {:pointer} Tmp_2546: int;
  var {:dopa} {:scalar} DontCare_6: int;
  var {:pointer} Tmp_2547: int;
  var {:pointer} Tmp_2548: int;
  var {:pointer} Tmp_2549: int;
  var {:pointer} Tmp_2551: int;
  var {:pointer} Tmp_2552: int;
  var {:pointer} Tmp_2553: int;
  var {:pointer} IrpContext_160: int;
  var {:pointer} Dcb_15: int;
  var {:pointer} ParentDirent: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_432: int;

  anon0:
    call {:si_unique_call 3175} Buffer_31 := __HAVOC_malloc(4);
    call {:si_unique_call 3176} Bcb_22 := __HAVOC_malloc(4);
    call {:si_unique_call 3177} DontCare_6 := __HAVOC_malloc(4);
    call {:si_unique_call 3178} vslice_dummy_var_430 := __HAVOC_malloc(4);
    IrpContext_160 := actual_IrpContext_160;
    Dcb_15 := actual_Dcb_15;
    ParentDirent := actual_ParentDirent;
    call {:si_unique_call 3179} vslice_dummy_var_431 := __HAVOC_malloc(48);
    call {:si_unique_call 3180} vslice_dummy_var_432 := __HAVOC_malloc(48);
    call {:si_unique_call 3181} sdv_do_paged_code_check();
    call {:si_unique_call 3182} FatPrepareWriteDirectoryFile(IrpContext_160, Dcb_15, 0, 64, Bcb_22, Buffer_31, 0, 1, DontCare_6);
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    call {:si_unique_call 3183} sdv_RtlCopyMemory(0, 0, 11);
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2538;
    assume {:nonnull} Tmp_2538 != 0;
    assume Tmp_2538 > 0;
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2543;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2543 != 0;
    assume Tmp_2543 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2543 != 0;
    assume Tmp_2543 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2543 != 0;
    assume Tmp_2543 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2543 != 0;
    assume Tmp_2543 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2543 != 0;
    assume Tmp_2543 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2543 != 0;
    assume Tmp_2543 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2546;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2546 != 0;
    assume Tmp_2546 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2546 != 0;
    assume Tmp_2546 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2546 != 0;
    assume Tmp_2546 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2546 != 0;
    assume Tmp_2546 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2546 != 0;
    assume Tmp_2546 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2546 != 0;
    assume Tmp_2546 > 0;
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2537;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2537 != 0;
    assume Tmp_2537 > 0;
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2547;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2547 != 0;
    assume Tmp_2547 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2547 != 0;
    assume Tmp_2547 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2547 != 0;
    assume Tmp_2547 > 0;
    goto L24;

  L24:
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2536;
    assume {:nonnull} Dcb_15 != 0;
    assume Dcb_15 > 0;
    assume {:nonnull} Tmp_2536 != 0;
    assume Tmp_2536 > 0;
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2552;
    assume {:nonnull} Dcb_15 != 0;
    assume Dcb_15 > 0;
    assume {:nonnull} Tmp_2552 != 0;
    assume Tmp_2552 > 0;
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    call {:si_unique_call 3184} sdv_RtlCopyMemory(0, 0, 11);
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2548;
    assume {:nonnull} Tmp_2548 != 0;
    assume Tmp_2548 > 0;
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2530;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2530 != 0;
    assume Tmp_2530 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2530 != 0;
    assume Tmp_2530 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2530 != 0;
    assume Tmp_2530 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2530 != 0;
    assume Tmp_2530 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2530 != 0;
    assume Tmp_2530 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2530 != 0;
    assume Tmp_2530 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2532;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2532 != 0;
    assume Tmp_2532 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2532 != 0;
    assume Tmp_2532 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2532 != 0;
    assume Tmp_2532 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2532 != 0;
    assume Tmp_2532 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2532 != 0;
    assume Tmp_2532 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2532 != 0;
    assume Tmp_2532 > 0;
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2529;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2529 != 0;
    assume Tmp_2529 > 0;
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2534;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2534 != 0;
    assume Tmp_2534 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2534 != 0;
    assume Tmp_2534 > 0;
    assume {:nonnull} ParentDirent != 0;
    assume ParentDirent > 0;
    assume {:nonnull} Tmp_2534 != 0;
    assume Tmp_2534 > 0;
    goto L36;

  L36:
    assume {:nonnull} Dcb_15 != 0;
    assume Dcb_15 > 0;
    havoc Tmp_2549;
    assume {:nonnull} Tmp_2549 != 0;
    assume Tmp_2549 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2540;
    assume {:nonnull} Tmp_2540 != 0;
    assume Tmp_2540 > 0;
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2553;
    assume {:nonnull} Tmp_2553 != 0;
    assume Tmp_2553 > 0;
    goto L43;

  L43:
    assume {:nonnull} Bcb_22 != 0;
    assume Bcb_22 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Bcb_22 != 0;
    assume Bcb_22 > 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    goto L1;

  anon12_Then:
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2539;
    assume {:nonnull} Dcb_15 != 0;
    assume Dcb_15 > 0;
    havoc Tmp_2545;
    assume {:nonnull} Tmp_2539 != 0;
    assume Tmp_2539 > 0;
    assume {:nonnull} Tmp_2545 != 0;
    assume Tmp_2545 > 0;
    assume {:nonnull} Buffer_31 != 0;
    assume Buffer_31 > 0;
    havoc Tmp_2541;
    assume {:nonnull} Dcb_15 != 0;
    assume Dcb_15 > 0;
    havoc Tmp_2551;
    assume {:nonnull} Tmp_2541 != 0;
    assume Tmp_2541 > 0;
    assume {:nonnull} Tmp_2551 != 0;
    assume Tmp_2551 > 0;
    goto L43;

  anon11_Then:
    goto L36;

  anon10_Then:
    goto L24;
}



procedure {:origName "FatIsDirectoryEmpty"} FatIsDirectoryEmpty(actual_IrpContext_161: int, actual_Dcb_16: int) returns (Tmp_2554: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} Tmp_2554 == 0 || Tmp_2554 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsDirectoryEmpty"} FatIsDirectoryEmpty(actual_IrpContext_161: int, actual_Dcb_16: int) returns (Tmp_2554: int)
{
  var {:scalar} Tmp_2555: int;
  var {:pointer} Tmp_2556: int;
  var {:scalar} IsDirectoryEmpty: int;
  var {:pointer} Dirent_36: int;
  var {:dopa} {:scalar} Status_64: int;
  var {:pointer} Tmp_2557: int;
  var {:pointer} Bcb_23: int;
  var {:pointer} Tmp_2558: int;
  var {:scalar} ByteOffset_7: int;
  var {:scalar} Tmp_2559: int;
  var {:pointer} IrpContext_161: int;
  var {:pointer} Dcb_16: int;

  anon0:
    call {:si_unique_call 3185} Dirent_36 := __HAVOC_malloc(4);
    call {:si_unique_call 3186} Status_64 := __HAVOC_malloc(4);
    call {:si_unique_call 3187} Bcb_23 := __HAVOC_malloc(4);
    IrpContext_161 := actual_IrpContext_161;
    Dcb_16 := actual_Dcb_16;
    call {:si_unique_call 3188} Tmp_2556 := __HAVOC_malloc(44);
    call {:si_unique_call 3189} Tmp_2557 := __HAVOC_malloc(44);
    IsDirectoryEmpty := 0;
    assume {:nonnull} Status_64 != 0;
    assume Status_64 > 0;
    call {:si_unique_call 3190} sdv_do_paged_code_check();
    Tmp_2558 := Dcb_16;
    assume {:nonnull} Tmp_2558 != 0;
    assume Tmp_2558 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    Tmp_2555 := 0;
    goto L16;

  L16:
    ByteOffset_7 := Tmp_2555;
    assume {:nonnull} Bcb_23 != 0;
    assume Bcb_23 > 0;
    goto L20;

  L20:
    call {:si_unique_call 3191} Tmp_2556, Tmp_2557, ByteOffset_7, Tmp_2559 := FatIsDirectoryEmpty_loop_L20(Tmp_2556, Dirent_36, Status_64, Tmp_2557, Bcb_23, ByteOffset_7, Tmp_2559, IrpContext_161, Dcb_16);
    goto L20_last;

  L20_last:
    assume {:nonnull} Dcb_16 != 0;
    assume Dcb_16 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Status_64 != 0;
    assume Status_64 > 0;
    assume {:nonnull} Bcb_23 != 0;
    assume Bcb_23 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} Bcb_23 != 0;
    assume Bcb_23 > 0;
    goto L24;

  L24:
    assume {:nonnull} Status_64 != 0;
    assume Status_64 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L35;

  L35:
    IsDirectoryEmpty := 1;
    goto L19;

  L19:
    assume {:nonnull} Bcb_23 != 0;
    assume Bcb_23 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Bcb_23 != 0;
    assume Bcb_23 > 0;
    goto L55;

  L55:
    Tmp_2554 := IsDirectoryEmpty;
    return;

  anon23_Then:
    goto L55;

  anon26_Then:
    assume {:nonnull} Dirent_36 != 0;
    assume Dirent_36 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_36] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_36] > 0;
    havoc Tmp_2556;
    assume {:nonnull} Tmp_2556 != 0;
    assume Tmp_2556 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Dirent_36 != 0;
    assume Dirent_36 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_36] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_36] > 0;
    havoc Tmp_2557;
    assume {:nonnull} Tmp_2557 != 0;
    assume Tmp_2557 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Dirent_36 != 0;
    assume Dirent_36 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_36] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_36] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    IsDirectoryEmpty := 0;
    goto L19;

  anon27_Then:
    goto L38;

  L38:
    ByteOffset_7 := ByteOffset_7 + 32;
    assume {:nonnull} Dirent_36 != 0;
    assume Dirent_36 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_36] := Mem_T.P_PACKED_DIRENT[Dirent_36];
    goto L38_dummy;

  L38_dummy:
    assume false;
    return;

  anon33_Then:
    goto L38;

  anon32_Then:
    goto L35;

  anon31_Then:
    goto L24;

  anon24_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} INTMOD(ByteOffset_7, 4096) != 0;
    assume {:nonnull} Bcb_23 != 0;
    assume Bcb_23 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L43;

  L43:
    assume {:nonnull} Bcb_23 != 0;
    assume Bcb_23 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Bcb_23 != 0;
    assume Bcb_23 > 0;
    goto L45;

  L45:
    Tmp_2559 := BAND(ByteOffset_7, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 3192} FatReadDirectoryFile#1(IrpContext_161, Dcb_16, Tmp_2559, 4096, 0, Bcb_23, Dirent_36, Status_64);
    assume {:nonnull} Dirent_36 != 0;
    assume Dirent_36 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_36] := Mem_T.P_PACKED_DIRENT[Dirent_36];
    goto L24;

  anon28_Then:
    goto L45;

  anon29_Then:
    goto L24;

  anon25_Then:
    assume {:partition} INTMOD(ByteOffset_7, 4096) == 0;
    goto L43;

  anon30_Then:
    Tmp_2555 := 64;
    goto L16;
}



procedure {:origName "FatUpdateDirentFromFcb"} FatUpdateDirentFromFcb(actual_IrpContext_162: int, actual_FileObject_39: int, actual_FcbOrDcb_14: int, actual_Ccb_35: int);
  modifies alloc, locked, queuedWithoutMarking, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatUpdateDirentFromFcb"} FatUpdateDirentFromFcb(actual_IrpContext_162: int, actual_FileObject_39: int, actual_FcbOrDcb_14: int, actual_Ccb_35: int)
{
  var {:scalar} LastAccessDay: int;
  var {:scalar} Tmp_2561: int;
  var {:pointer} Tmp_2564: int;
  var {:scalar} CurrentTime_1: int;
  var {:scalar} Tmp_2565: int;
  var {:scalar} UpdateLastWriteTime: int;
  var {:pointer} Dirent_37: int;
  var {:scalar} UpdateFileSize: int;
  var {:pointer} DirentBcb_15: int;
  var {:pointer} Tmp_2566: int;
  var {:scalar} Tmp_2568: int;
  var {:pointer} Tmp_2569: int;
  var {:scalar} CurrentDay: int;
  var {:pointer} Tmp_2570: int;
  var {:scalar} Tmp_2571: int;
  var {:scalar} UpdateLastAccessTime: int;
  var {:scalar} SetArchiveBit: int;
  var {:scalar} CurrentFatTime: int;
  var {:scalar} NotifyFilter_2: int;
  var {:scalar} Tmp_2572: int;
  var {:pointer} IrpContext_162: int;
  var {:pointer} FileObject_39: int;
  var {:pointer} FcbOrDcb_14: int;
  var {:pointer} Ccb_35: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_1559: int;

  anon0:
    call {:si_unique_call 3193} LastAccessDay := __HAVOC_malloc(20);
    call {:si_unique_call 3194} CurrentTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 3195} Dirent_37 := __HAVOC_malloc(4);
    call {:si_unique_call 3196} DirentBcb_15 := __HAVOC_malloc(4);
    call {:si_unique_call 3197} vslice_dummy_var_433 := __HAVOC_malloc(4);
    call {:si_unique_call 3198} CurrentDay := __HAVOC_malloc(20);
    call {:si_unique_call 3199} CurrentFatTime := __HAVOC_malloc(24);
    IrpContext_162 := actual_IrpContext_162;
    FileObject_39 := actual_FileObject_39;
    FcbOrDcb_14 := actual_FcbOrDcb_14;
    Ccb_35 := actual_Ccb_35;
    assume {:nonnull} DirentBcb_15 != 0;
    assume DirentBcb_15 > 0;
    NotifyFilter_2 := 0;
    call {:si_unique_call 3200} sdv_do_paged_code_check();
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_2570 := FcbOrDcb_14;
    assume {:nonnull} Tmp_2570 != 0;
    assume Tmp_2570 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    havoc Tmp_2569;
    assume {:nonnull} Tmp_2569 != 0;
    assume Tmp_2569 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} FileObject_39 != 0;
    assume FileObject_39 > 0;
    havoc Tmp_2565;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Tmp_2565 == 0;
    SetArchiveBit := 0;
    goto L156;

  L156:
    assume {:nonnull} FileObject_39 != 0;
    assume FileObject_39 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Ccb_35 != 0;
    assume Ccb_35 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    Tmp_2572 := 1;
    goto L32;

  L32:
    UpdateLastWriteTime := Tmp_2572;
    Tmp_2566 := FcbOrDcb_14;
    assume {:nonnull} Tmp_2566 != 0;
    assume Tmp_2566 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} FileObject_39 != 0;
    assume FileObject_39 > 0;
    havoc Tmp_2571;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Tmp_2571 != 0;
    Tmp_2568 := 1;
    goto L38;

  L38:
    UpdateFileSize := Tmp_2568;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} UpdateLastWriteTime != 0;
    goto L43;

  L43:
    assume {:nonnull} Ccb_35 != 0;
    assume Ccb_35 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} LastAccessDay != 0;
    assume LastAccessDay > 0;
    assume {:nonnull} CurrentDay != 0;
    assume CurrentDay > 0;
    assume {:nonnull} CurrentDay != 0;
    assume CurrentDay > 0;
    assume {:nonnull} LastAccessDay != 0;
    assume LastAccessDay > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    UpdateLastAccessTime := 1;
    goto L55;

  L55:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} SetArchiveBit != 0;
    goto L57;

  L57:
    call {:si_unique_call 3201} FatGetDirentFromFcbOrDcb(IrpContext_162, FcbOrDcb_14, Dirent_37, DirentBcb_15);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} UpdateLastWriteTime != 0;
    goto L83;

  L83:
    call {:si_unique_call 3202} vslice_dummy_var_434 := FatNtTimeToFatTime(IrpContext_162, CurrentTime_1, 1, CurrentFatTime, 0);
    goto L86;

  L86:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} SetArchiveBit != 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    NotifyFilter_2 := BOR(NotifyFilter_2, 4);
    goto L87;

  L87:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} UpdateLastWriteTime != 0;
    assume {:nonnull} CurrentTime_1 != 0;
    assume CurrentTime_1 > 0;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    assume {:nonnull} CurrentTime_1 != 0;
    assume CurrentTime_1 > 0;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    assume {:nonnull} CurrentTime_1 != 0;
    assume CurrentTime_1 > 0;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    assume {:nonnull} CurrentTime_1 != 0;
    assume CurrentTime_1 > 0;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    assume {:nonnull} CurrentTime_1 != 0;
    assume CurrentTime_1 > 0;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    assume {:nonnull} CurrentFatTime != 0;
    assume CurrentFatTime > 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    assume {:nonnull} CurrentFatTime != 0;
    assume CurrentFatTime > 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    assume {:nonnull} CurrentFatTime != 0;
    assume CurrentFatTime > 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    assume {:nonnull} CurrentFatTime != 0;
    assume CurrentFatTime > 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    assume {:nonnull} CurrentFatTime != 0;
    assume CurrentFatTime > 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    assume {:nonnull} CurrentFatTime != 0;
    assume CurrentFatTime > 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    NotifyFilter_2 := BOR(NotifyFilter_2, 16);
    goto L91;

  L91:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} UpdateLastAccessTime != 0;
    assume {:nonnull} CurrentDay != 0;
    assume CurrentDay > 0;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    assume {:nonnull} CurrentFatTime != 0;
    assume CurrentFatTime > 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    assume {:nonnull} CurrentFatTime != 0;
    assume CurrentFatTime > 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    assume {:nonnull} CurrentFatTime != 0;
    assume CurrentFatTime > 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    NotifyFilter_2 := BOR(NotifyFilter_2, 32);
    goto L95;

  L95:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} UpdateFileSize != 0;
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Dirent_37 != 0;
    assume Dirent_37 > 0;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_37] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_37] > 0;
    NotifyFilter_2 := BOR(NotifyFilter_2, 8);
    goto L102;

  L102:
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L109;

  L109:
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    havoc Tmp_2561;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    call {:si_unique_call 3203} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_2561, 0, 0, NotifyFilter_2, 3, 0);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} NotifyFilter_2 == 32;
    Tmp_2564 := 0;
    goto L116;

  L116:
    assume {:nonnull} DirentBcb_15 != 0;
    assume DirentBcb_15 > 0;
    havoc vslice_dummy_var_1559;
    call {:si_unique_call 3204} FatSetDirtyBcb#1(IrpContext_162, vslice_dummy_var_1559, Tmp_2564, 1);
    assume {:nonnull} DirentBcb_15 != 0;
    assume DirentBcb_15 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} DirentBcb_15 != 0;
    assume DirentBcb_15 > 0;
    goto L1;

  L1:
    return;

  anon62_Then:
    goto L1;

  anon71_Then:
    assume {:partition} NotifyFilter_2 != 32;
    assume {:nonnull} FcbOrDcb_14 != 0;
    assume FcbOrDcb_14 > 0;
    havoc Tmp_2564;
    goto L116;

  anon69_Then:
    call {:si_unique_call 3205} FatSetFullFileNameInFcb#1(IrpContext_162, FcbOrDcb_14);
    goto L109;

  anon70_Then:
    goto L102;

  anon68_Then:
    assume {:partition} UpdateFileSize == 0;
    goto L102;

  anon67_Then:
    assume {:partition} UpdateLastAccessTime == 0;
    goto L95;

  anon66_Then:
    assume {:partition} UpdateLastWriteTime == 0;
    goto L91;

  anon65_Then:
    assume {:partition} SetArchiveBit == 0;
    goto L87;

  anon63_Then:
    assume {:partition} UpdateLastWriteTime == 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} UpdateLastAccessTime == 0;
    goto L86;

  anon64_Then:
    assume {:partition} UpdateLastAccessTime != 0;
    goto L83;

  anon60_Then:
    assume {:partition} SetArchiveBit == 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} UpdateFileSize == 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} UpdateLastWriteTime == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} UpdateLastAccessTime != 0;
    goto L57;

  anon73_Then:
    assume {:partition} UpdateLastAccessTime == 0;
    goto L1;

  anon72_Then:
    assume {:partition} UpdateLastWriteTime != 0;
    goto L57;

  anon61_Then:
    assume {:partition} UpdateFileSize != 0;
    goto L57;

  anon81_Then:
    UpdateLastAccessTime := 0;
    goto L55;

  anon59_Then:
    goto L40;

  L40:
    UpdateLastAccessTime := 0;
    goto L55;

  anon57_Then:
    assume {:partition} UpdateLastWriteTime == 0;
    assume {:nonnull} FileObject_39 != 0;
    assume FileObject_39 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L43;

  anon58_Then:
    goto L40;

  anon80_Then:
    goto L40;

  anon79_Then:
    assume {:partition} Tmp_2571 == 0;
    goto L34;

  L34:
    Tmp_2568 := 0;
    goto L38;

  anon78_Then:
    goto L34;

  anon56_Then:
    goto L29;

  L29:
    Tmp_2572 := 0;
    goto L32;

  anon77_Then:
    goto L29;

  anon76_Then:
    assume {:partition} Tmp_2565 != 0;
    SetArchiveBit := 1;
    goto L156;

  anon75_Then:
    goto L1;

  anon74_Then:
    goto L1;

  anon55_Then:
    goto L1;
}



procedure {:origName "FatInsertName"} FatInsertName(actual_IrpContext_164: int, actual_RootNode: int, actual_Name_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatInsertName"} FatInsertName(actual_IrpContext_164: int, actual_RootNode: int, actual_Name_4: int)
{
  var {:pointer} Tmp_2585: int;
  var {:pointer} Tmp_2587: int;
  var {:scalar} Tmp_2588: int;
  var {:pointer} Tmp_2589: int;
  var {:pointer} s_p_e_c_i_a_l_3: int;
  var {:pointer} Tmp_2590: int;
  var {:pointer} sdv_1467: int;
  var {:pointer} Node: int;
  var {:pointer} s_p_e_c_i_a_l_4: int;
  var {:pointer} Tmp_2591: int;
  var {:pointer} Tmp_2592: int;
  var {:pointer} s_p_e_c_i_a_l_5: int;
  var {:pointer} s_p_e_c_i_a_l_6: int;
  var {:pointer} Tmp_2593: int;
  var {:pointer} sdv_1469: int;
  var {:pointer} s_p_e_c_i_a_l_7: int;
  var {:pointer} sdv_1470: int;
  var {:scalar} Comparison: int;
  var {:pointer} Tmp_2595: int;
  var {:pointer} Tmp_2596: int;
  var {:pointer} Tmp_2597: int;
  var {:pointer} Tmp_2598: int;
  var {:pointer} Tmp_2599: int;
  var {:pointer} Tmp_2600: int;
  var {:scalar} Tmp_2601: int;
  var {:pointer} IrpContext_164: int;
  var {:pointer} RootNode: int;
  var {:pointer} Name_4: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_1560: int;
  var vslice_dummy_var_1561: int;
  var vslice_dummy_var_1562: int;
  var vslice_dummy_var_1563: int;
  var vslice_dummy_var_1564: int;
  var vslice_dummy_var_1565: int;

  anon0:
    call {:si_unique_call 3206} vslice_dummy_var_435 := __HAVOC_malloc(4);
    IrpContext_164 := actual_IrpContext_164;
    RootNode := actual_RootNode;
    Name_4 := actual_Name_4;
    assume {:nonnull} Name_4 != 0;
    assume Name_4 > 0;
    s_p_e_c_i_a_l_5 := Links__FILE_NAME_NODE(Name_4);
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} RootNode != 0;
    assume RootNode > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L12;

  L12:
    call {:si_unique_call 3207} Tmp_2585, Tmp_2587, Tmp_2588, Tmp_2589, Tmp_2590, sdv_1467, Node, Tmp_2591, Tmp_2592, Tmp_2593, sdv_1469, sdv_1470, Comparison, Tmp_2595, Tmp_2596, Tmp_2597, Tmp_2598, Tmp_2599, Tmp_2600, Tmp_2601 := FatInsertName_loop_L12(Tmp_2585, Tmp_2587, Tmp_2588, Tmp_2589, Tmp_2590, sdv_1467, Node, Tmp_2591, Tmp_2592, Tmp_2593, sdv_1469, sdv_1470, Comparison, Tmp_2595, Tmp_2596, Tmp_2597, Tmp_2598, Tmp_2599, Tmp_2600, Tmp_2601, IrpContext_164, RootNode, Name_4);
    goto L12_last;

  L12_last:
    assume {:nonnull} RootNode != 0;
    assume RootNode > 0;
    havoc vslice_dummy_var_1565;
    call {:si_unique_call 3215} sdv_1467 := sdv_containing_record(vslice_dummy_var_1565, 16);
    Node := sdv_1467;
    goto L18;

  L18:
    call {:si_unique_call 3208} Tmp_2585, Tmp_2587, Tmp_2588, Tmp_2589, Tmp_2590, Node, Tmp_2591, Tmp_2592, Tmp_2593, sdv_1469, sdv_1470, Comparison, Tmp_2595, Tmp_2596, Tmp_2597, Tmp_2598, Tmp_2600, Tmp_2601 := FatInsertName_loop_L18(Tmp_2585, Tmp_2587, Tmp_2588, Tmp_2589, Tmp_2590, Node, Tmp_2591, Tmp_2592, Tmp_2593, sdv_1469, sdv_1470, Comparison, Tmp_2595, Tmp_2596, Tmp_2597, Tmp_2598, Tmp_2600, Tmp_2601, Name_4);
    goto L18_last;

  L18_last:
    assume {:nonnull} Node != 0;
    assume Node > 0;
    Tmp_2587 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(Node));
    assume {:nonnull} Tmp_2587 != 0;
    assume Tmp_2587 > 0;
    havoc Tmp_2595;
    assume {:nonnull} Name_4 != 0;
    assume Name_4 > 0;
    Tmp_2598 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(Name_4));
    assume {:nonnull} Tmp_2598 != 0;
    assume Tmp_2598 > 0;
    havoc Tmp_2596;
    assume {:nonnull} Tmp_2595 != 0;
    assume Tmp_2595 > 0;
    assume {:nonnull} Tmp_2596 != 0;
    assume Tmp_2596 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Node != 0;
    assume Node > 0;
    Tmp_2600 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(Node));
    assume {:nonnull} Tmp_2600 != 0;
    assume Tmp_2600 > 0;
    havoc Tmp_2597;
    assume {:nonnull} Name_4 != 0;
    assume Name_4 > 0;
    Tmp_2592 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(Name_4));
    assume {:nonnull} Tmp_2592 != 0;
    assume Tmp_2592 > 0;
    havoc Tmp_2589;
    assume {:nonnull} Tmp_2589 != 0;
    assume Tmp_2589 > 0;
    assume {:nonnull} Tmp_2597 != 0;
    assume Tmp_2597 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    Tmp_2601 := 0;
    goto L25;

  L25:
    Tmp_2588 := Tmp_2601;
    goto L26;

  L26:
    Comparison := Tmp_2588;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Comparison == 2;
    assume {:nonnull} Node != 0;
    assume Node > 0;
    havoc Tmp_2599;
    assume {:nonnull} Tmp_2599 != 0;
    assume Tmp_2599 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} RootNode != 0;
    assume RootNode > 0;
    havoc vslice_dummy_var_1560;
    call {:si_unique_call 3209} KeBugCheckEx(35, 1769629, vslice_dummy_var_1560, Name_4, Node);
    goto L30;

  L30:
    assume {:nonnull} Node != 0;
    assume Node > 0;
    havoc vslice_dummy_var_1561;
    call {:si_unique_call 3210} FatMarkFcbCondition(IrpContext_164, vslice_dummy_var_1561, 2, 1);
    assume {:nonnull} Node != 0;
    assume Node > 0;
    havoc vslice_dummy_var_1562;
    call {:si_unique_call 3211} FatRemoveNames(IrpContext_164, vslice_dummy_var_1562);
    goto L30_dummy;

  L30_dummy:
    assume false;
    return;

  anon22_Then:
    goto L30;

  anon21_Then:
    assume {:partition} Comparison != 2;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Comparison == 1;
    assume {:nonnull} Node != 0;
    assume Node > 0;
    Tmp_2585 := Links__FILE_NAME_NODE(Node);
    assume {:nonnull} Tmp_2585 != 0;
    assume Tmp_2585 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Node != 0;
    assume Node > 0;
    s_p_e_c_i_a_l_7 := Links__FILE_NAME_NODE(Node);
    assume {:nonnull} Name_4 != 0;
    assume Name_4 > 0;
    s_p_e_c_i_a_l_6 := Links__FILE_NAME_NODE(Name_4);
    assume {:nonnull} s_p_e_c_i_a_l_7 != 0;
    assume s_p_e_c_i_a_l_7 > 0;
    assume {:nonnull} s_p_e_c_i_a_l_6 != 0;
    assume s_p_e_c_i_a_l_6 > 0;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:nonnull} Node != 0;
    assume Node > 0;
    Tmp_2591 := Links__FILE_NAME_NODE(Node);
    assume {:nonnull} Tmp_2591 != 0;
    assume Tmp_2591 > 0;
    havoc vslice_dummy_var_1563;
    call {:si_unique_call 3212} sdv_1469 := sdv_containing_record(vslice_dummy_var_1563, 16);
    Node := sdv_1469;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} Comparison != 1;
    assume {:nonnull} Node != 0;
    assume Node > 0;
    Tmp_2593 := Links__FILE_NAME_NODE(Node);
    assume {:nonnull} Tmp_2593 != 0;
    assume Tmp_2593 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Node != 0;
    assume Node > 0;
    s_p_e_c_i_a_l_3 := Links__FILE_NAME_NODE(Node);
    assume {:nonnull} Name_4 != 0;
    assume Name_4 > 0;
    s_p_e_c_i_a_l_4 := Links__FILE_NAME_NODE(Name_4);
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} s_p_e_c_i_a_l_4 != 0;
    assume s_p_e_c_i_a_l_4 > 0;
    goto L1;

  anon24_Then:
    assume {:nonnull} Node != 0;
    assume Node > 0;
    Tmp_2590 := Links__FILE_NAME_NODE(Node);
    assume {:nonnull} Tmp_2590 != 0;
    assume Tmp_2590 > 0;
    havoc vslice_dummy_var_1564;
    call {:si_unique_call 3213} sdv_1470 := sdv_containing_record(vslice_dummy_var_1564, 16);
    Node := sdv_1470;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    assume false;
    return;

  anon20_Then:
    Tmp_2601 := 1;
    goto L25;

  anon19_Then:
    assume {:nonnull} Name_4 != 0;
    assume Name_4 > 0;
    assume {:nonnull} Node != 0;
    assume Node > 0;
    call {:si_unique_call 3214} Tmp_2588 := FatCompareNames(Oem_unnamed_tag_70(Name__FILE_NAME_NODE(Node)), Oem_unnamed_tag_70(Name__FILE_NAME_NODE(Name_4)));
    goto L26;

  anon18_Then:
    assume {:nonnull} Name_4 != 0;
    assume Name_4 > 0;
    assume {:nonnull} RootNode != 0;
    assume RootNode > 0;
    goto L1;
}



procedure {:origName "_sdv_init21"} _sdv_init21();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init21"} _sdv_init21()
{
  var vslice_dummy_var_436: int;

  anon0:
    call {:si_unique_call 3216} vslice_dummy_var_436 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatRemoveNames"} FatRemoveNames(actual_IrpContext_165: int, actual_Fcb_60: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatRemoveNames"} FatRemoveNames(actual_IrpContext_165: int, actual_Fcb_60: int)
{
  var {:pointer} NewRoot: int;
  var {:pointer} Parent_1: int;
  var {:pointer} Fcb_60: int;
  var vslice_dummy_var_437: int;

  anon0:
    call {:si_unique_call 3217} vslice_dummy_var_437 := __HAVOC_malloc(4);
    Fcb_60 := actual_Fcb_60;
    assume {:nonnull} Fcb_60 != 0;
    assume Fcb_60 > 0;
    havoc Parent_1;
    assume {:nonnull} Fcb_60 != 0;
    assume Fcb_60 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    NewRoot := 0;
    goto L12;

  L12:
    assume {:nonnull} Parent_1 != 0;
    assume Parent_1 > 0;
    assume {:nonnull} Fcb_60 != 0;
    assume Fcb_60 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    NewRoot := 0;
    goto L19;

  L19:
    assume {:nonnull} Parent_1 != 0;
    assume Parent_1 > 0;
    assume {:nonnull} Fcb_60 != 0;
    assume Fcb_60 > 0;
    goto L14;

  L14:
    assume {:nonnull} Fcb_60 != 0;
    assume Fcb_60 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    NewRoot := 0;
    goto L29;

  L29:
    assume {:nonnull} Parent_1 != 0;
    assume Parent_1 > 0;
    call {:si_unique_call 3218} RtlFreeUnicodeString(0);
    assume {:nonnull} Fcb_60 != 0;
    assume Fcb_60 > 0;
    goto L24;

  L24:
    assume {:nonnull} Fcb_60 != 0;
    assume Fcb_60 > 0;
    goto L1;

  L1:
    return;

  anon16_Then:
    call {:si_unique_call 3219} NewRoot := __HAVOC_malloc(1);
    goto L29;

  anon14_Then:
    goto L24;

  anon15_Then:
    call {:si_unique_call 3220} NewRoot := __HAVOC_malloc(1);
    goto L19;

  anon18_Then:
    goto L14;

  anon13_Then:
    call {:si_unique_call 3221} NewRoot := __HAVOC_malloc(1);
    goto L12;

  anon17_Then:
    goto L1;
}



procedure {:origName "FatCompareNames"} FatCompareNames(actual_NameA: int, actual_NameB: int) returns (Tmp_2606: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2606 == 0 || Tmp_2606 == 1 || Tmp_2606 == 2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCompareNames"} FatCompareNames(actual_NameA: int, actual_NameB: int) returns (Tmp_2606: int)
{
  var {:scalar} i_22: int;
  var {:scalar} Tmp_2607: int;
  var {:scalar} Tmp_2608: int;
  var {:scalar} Tmp_2609: int;
  var {:scalar} Tmp_2610: int;
  var {:pointer} Tmp_2612: int;
  var {:scalar} MinLength: int;
  var {:pointer} Tmp_2613: int;
  var {:pointer} NameA: int;
  var {:pointer} NameB: int;

  anon0:
    NameA := actual_NameA;
    NameB := actual_NameB;
    call {:si_unique_call 3222} sdv_do_paged_code_check();
    assume {:nonnull} NameA != 0;
    assume NameA > 0;
    assume {:nonnull} NameB != 0;
    assume NameB > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} NameA != 0;
    assume NameA > 0;
    havoc Tmp_2610;
    goto L11;

  L11:
    MinLength := Tmp_2610;
    call {:si_unique_call 3223} i_22 := RtlCompareMemory(0, 0, MinLength);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinLength > i_22;
    Tmp_2607 := i_22;
    assume {:nonnull} NameA != 0;
    assume NameA > 0;
    havoc Tmp_2613;
    Tmp_2609 := i_22;
    assume {:nonnull} NameB != 0;
    assume NameB > 0;
    havoc Tmp_2612;
    assume {:nonnull} Tmp_2612 != 0;
    assume Tmp_2612 > 0;
    assume {:nonnull} Tmp_2613 != 0;
    assume Tmp_2613 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Tmp_2608 := 0;
    goto L21;

  L21:
    Tmp_2606 := Tmp_2608;
    goto L1;

  L1:
    return;

  anon15_Then:
    Tmp_2608 := 1;
    goto L21;

  anon12_Then:
    assume {:partition} i_22 >= MinLength;
    assume {:nonnull} NameA != 0;
    assume NameA > 0;
    assume {:nonnull} NameB != 0;
    assume NameB > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    Tmp_2606 := 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} NameA != 0;
    assume NameA > 0;
    assume {:nonnull} NameB != 0;
    assume NameB > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    Tmp_2606 := 1;
    goto L1;

  anon14_Then:
    Tmp_2606 := 2;
    goto L1;

  anon11_Then:
    assume {:nonnull} NameB != 0;
    assume NameB > 0;
    havoc Tmp_2610;
    goto L11;
}



procedure {:origName "FatFindFcb"} FatFindFcb(actual_IrpContext_166: int, actual_RootNode_1: int, actual_Name_5: int, actual_FileNameDos_1: int) returns (Tmp_2614: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} Tmp_2614 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFindFcb"} FatFindFcb(actual_IrpContext_166: int, actual_RootNode_1: int, actual_Name_5: int, actual_FileNameDos_1: int) returns (Tmp_2614: int)
{
  var {:scalar} Tmp_2615: int;
  var {:pointer} Links_8: int;
  var {:pointer} sdv_1475: int;
  var {:pointer} Tmp_2617: int;
  var {:pointer} Node_1: int;
  var {:pointer} Tmp_2618: int;
  var {:pointer} Tmp_2619: int;
  var {:pointer} Tmp_2620: int;
  var {:pointer} Tmp_2621: int;
  var {:scalar} Comparison_1: int;
  var {:pointer} Tmp_2622: int;
  var {:scalar} Tmp_2623: int;
  var {:pointer} RootNode_1: int;
  var {:pointer} Name_5: int;
  var {:pointer} FileNameDos_1: int;
  var boogieTmp: int;

  anon0:
    RootNode_1 := actual_RootNode_1;
    Name_5 := actual_Name_5;
    FileNameDos_1 := actual_FileNameDos_1;
    assume {:nonnull} RootNode_1 != 0;
    assume RootNode_1 > 0;
    havoc Links_8;
    goto L7;

  L7:
    call {:si_unique_call 3224} Tmp_2615, Links_8, sdv_1475, Tmp_2617, Node_1, Tmp_2618, Tmp_2619, Tmp_2620, Tmp_2621, Comparison_1, Tmp_2622, Tmp_2623 := FatFindFcb_loop_L7(Tmp_2615, Links_8, sdv_1475, Tmp_2617, Node_1, Tmp_2618, Tmp_2619, Tmp_2620, Tmp_2621, Comparison_1, Tmp_2622, Tmp_2623, Name_5);
    goto L7_last;

  L7_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Links_8 != 0;
    call {:si_unique_call 3225} sdv_1475 := sdv_containing_record(Links_8, 16);
    Node_1 := sdv_1475;
    assume {:nonnull} Node_1 != 0;
    assume Node_1 > 0;
    Tmp_2622 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(Node_1));
    assume {:nonnull} Tmp_2622 != 0;
    assume Tmp_2622 > 0;
    havoc Tmp_2619;
    assume {:nonnull} Name_5 != 0;
    assume Name_5 > 0;
    havoc Tmp_2618;
    assume {:nonnull} Tmp_2618 != 0;
    assume Tmp_2618 > 0;
    assume {:nonnull} Tmp_2619 != 0;
    assume Tmp_2619 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Node_1 != 0;
    assume Node_1 > 0;
    Tmp_2621 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(Node_1));
    assume {:nonnull} Tmp_2621 != 0;
    assume Tmp_2621 > 0;
    havoc Tmp_2620;
    assume {:nonnull} Name_5 != 0;
    assume Name_5 > 0;
    havoc Tmp_2617;
    assume {:nonnull} Tmp_2617 != 0;
    assume Tmp_2617 > 0;
    assume {:nonnull} Tmp_2620 != 0;
    assume Tmp_2620 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    Tmp_2623 := 0;
    goto L20;

  L20:
    Tmp_2615 := Tmp_2623;
    goto L21;

  L21:
    Comparison_1 := Tmp_2615;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Comparison_1 == 1;
    assume {:nonnull} Links_8 != 0;
    assume Links_8 > 0;
    havoc Links_8;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} Comparison_1 != 1;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Comparison_1 != 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} RootNode_1 != 0;
    assume RootNode_1 > 0;
    goto L30;

  L30:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} FileNameDos_1 != 0;
    assume {:nonnull} FileNameDos_1 != 0;
    assume FileNameDos_1 > 0;
    assume {:nonnull} Node_1 != 0;
    assume Node_1 > 0;
    goto L31;

  L31:
    assume {:nonnull} Node_1 != 0;
    assume Node_1 > 0;
    havoc Tmp_2614;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} FileNameDos_1 == 0;
    goto L31;

  anon17_Then:
    assume {:nonnull} RootNode_1 != 0;
    assume RootNode_1 > 0;
    call {:si_unique_call 3226} boogieTmp := __HAVOC_malloc(1);
    goto L30;

  anon16_Then:
    assume {:partition} Comparison_1 == 0;
    assume {:nonnull} Links_8 != 0;
    assume Links_8 > 0;
    havoc Links_8;
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    assume false;
    return;

  anon20_Then:
    Tmp_2623 := 1;
    goto L20;

  anon19_Then:
    assume {:nonnull} Node_1 != 0;
    assume Node_1 > 0;
    call {:si_unique_call 3227} Tmp_2615 := FatCompareNames(Oem_unnamed_tag_70(Name__FILE_NAME_NODE(Node_1)), Name_5);
    goto L21;

  anon15_Then:
    assume {:partition} Links_8 == 0;
    Tmp_2614 := 0;
    goto L1;
}



procedure {:origName "FatFsdLockControl"} FatFsdLockControl(actual_VolumeDeviceObject_12: int, actual_Irp_65: int) returns (Tmp_2624: int);
  modifies alloc, yogi_error, markedPending, locked, queued, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdLockControl"} FatFsdLockControl(actual_VolumeDeviceObject_12: int, actual_Irp_65: int) returns (Tmp_2624: int)
{
  var {:scalar} TopLevel_6: int;
  var {:scalar} Status_65: int;
  var {:scalar} sdv_1481: int;
  var {:pointer} IrpContext_167: int;
  var {:pointer} VolumeDeviceObject_12: int;
  var {:pointer} Irp_65: int;

  anon0:
    VolumeDeviceObject_12 := actual_VolumeDeviceObject_12;
    Irp_65 := actual_Irp_65;
    IrpContext_167 := 0;
    call {:si_unique_call 3228} KeEnterCriticalRegion();
    call {:si_unique_call 3229} TopLevel_6 := FatIsIrpTopLevel(Irp_65);
    call {:si_unique_call 3230} sdv_1481 := corral_nondet();
    call {:si_unique_call 3231} IrpContext_167 := FatCreateIrpContext(Irp_65, sdv_1481);
    call {:si_unique_call 3232} Status_65 := FatCommonLockControl(IrpContext_167, Irp_65);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} TopLevel_6 != 0;
    goto L34;

  L34:
    call {:si_unique_call 3233} KeLeaveCriticalRegion();
    Tmp_2624 := Status_65;
    call {:si_unique_call 3234} SLIC_FatFsdLockControl_exit(strConst__li2bpl2, Tmp_2624);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} TopLevel_6 == 0;
    goto L34;
}



procedure {:origName "FatCommonLockControl"} FatCommonLockControl(actual_IrpContext_168: int, actual_Irp_66: int) returns (Tmp_2626: int);
  modifies alloc, markedPending, locked, queued, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonLockControl"} FatCommonLockControl(actual_IrpContext_168: int, actual_Irp_66: int) returns (Tmp_2626: int)
{
  var {:pointer} Ccb_36: int;
  var {:pointer} Fcb_61: int;
  var {:scalar} Status_66: int;
  var {:scalar} Tmp_2629: int;
  var {:scalar} TypeOfOpen_10: int;
  var {:pointer} Tmp_2630: int;
  var {:pointer} IrpSp_37: int;
  var {:scalar} sdv_1488: int;
  var {:scalar} sdv_1489: int;
  var {:scalar} Tmp_2631: int;
  var {:scalar} sdv_1491: int;
  var {:pointer} Vcb_89: int;
  var {:pointer} Tmp_2633: int;
  var {:pointer} Tmp_2634: int;
  var {:scalar} OplockPostIrp_3: int;
  var {:pointer} IrpContext_168: int;
  var {:pointer} Irp_66: int;
  var vslice_dummy_var_1566: int;
  var vslice_dummy_var_1567: int;

  anon0:
    call {:si_unique_call 3235} Ccb_36 := __HAVOC_malloc(4);
    call {:si_unique_call 3236} Fcb_61 := __HAVOC_malloc(4);
    call {:si_unique_call 3237} Vcb_89 := __HAVOC_malloc(4);
    IrpContext_168 := actual_IrpContext_168;
    Irp_66 := actual_Irp_66;
    OplockPostIrp_3 := 0;
    call {:si_unique_call 3238} IrpSp_37 := sdv_IoGetCurrentIrpStackLocation(Irp_66);
    assume {:nonnull} IrpSp_37 != 0;
    assume IrpSp_37 > 0;
    havoc vslice_dummy_var_1566;
    call {:si_unique_call 3239} TypeOfOpen_10 := FatDecodeFileObject(vslice_dummy_var_1566, Vcb_89, Fcb_61, Ccb_36);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} TypeOfOpen_10 != 2;
    call {:si_unique_call 3240} FatCompleteRequest_Real(IrpContext_168, Irp_66, -1073741811);
    Tmp_2626 := -1073741811;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} TypeOfOpen_10 == 2;
    assume {:nonnull} Fcb_61 != 0;
    assume Fcb_61 > 0;
    havoc vslice_dummy_var_1567;
    call {:si_unique_call 3241} sdv_1491 := FatAcquireSharedFcb(IrpContext_168, vslice_dummy_var_1567);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_1491 != 0;
    assume {:nonnull} Fcb_61 != 0;
    assume Fcb_61 > 0;
    call {:si_unique_call 3242} Status_66 := corral_nondet();
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Status_66 != 0;
    OplockPostIrp_3 := 1;
    goto L52;

  L52:
    call {:si_unique_call 3243} sdv_1489 := sdv_AbnormalTermination();
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_1489 != 0;
    goto L57;

  L57:
    call {:si_unique_call 3244} ExReleaseResourceLite(0);
    Tmp_2626 := Status_66;
    goto L1;

  anon24_Then:
    assume {:partition} sdv_1489 == 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} OplockPostIrp_3 == 0;
    call {:si_unique_call 3245} FatCompleteRequest_Real(IrpContext_168, 0, 0);
    goto L57;

  anon25_Then:
    assume {:partition} OplockPostIrp_3 != 0;
    goto L57;

  anon23_Then:
    assume {:partition} Status_66 == 0;
    call {:si_unique_call 3246} Status_66 := FsRtlProcessFileLock(0, 0, 0);
    assume {:nonnull} Fcb_61 != 0;
    assume Fcb_61 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L69;

  L69:
    Tmp_2631 := 0;
    goto L70;

  L70:
    assume {:nonnull} Fcb_61 != 0;
    assume Fcb_61 > 0;
    goto L52;

  anon26_Then:
    assume {:nonnull} Fcb_61 != 0;
    assume Fcb_61 > 0;
    call {:si_unique_call 3247} sdv_1488 := corral_nondet();
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_1488 != 0;
    assume {:nonnull} Fcb_61 != 0;
    assume Fcb_61 > 0;
    havoc Tmp_2634;
    assume {:nonnull} Tmp_2634 != 0;
    assume Tmp_2634 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L74;

  L74:
    Tmp_2629 := 2;
    goto L75;

  L75:
    Tmp_2631 := Tmp_2629;
    goto L70;

  anon28_Then:
    assume {:nonnull} Fcb_61 != 0;
    assume Fcb_61 > 0;
    havoc Tmp_2630;
    assume {:nonnull} Tmp_2630 != 0;
    assume Tmp_2630 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Fcb_61 != 0;
    assume Fcb_61 > 0;
    havoc Tmp_2633;
    assume {:nonnull} Tmp_2633 != 0;
    assume Tmp_2633 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    Tmp_2629 := 1;
    goto L75;

  anon30_Then:
    goto L74;

  anon29_Then:
    goto L74;

  anon27_Then:
    assume {:partition} sdv_1488 == 0;
    goto L69;

  anon22_Then:
    assume {:partition} sdv_1491 == 0;
    call {:si_unique_call 3248} Status_66 := FatFsdPostRequest(IrpContext_168, Irp_66);
    Tmp_2626 := Status_66;
    goto L1;
}



procedure {:origName "_sdv_init14"} _sdv_init14();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init14"} _sdv_init14()
{
  var vslice_dummy_var_438: int;

  anon0:
    call {:si_unique_call 3249} vslice_dummy_var_438 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init24"} _sdv_init24();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init24"} _sdv_init24()
{
  var vslice_dummy_var_439: int;

  anon0:
    call {:si_unique_call 3250} vslice_dummy_var_439 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatAutoUnlock"} FatAutoUnlock(actual_IrpContext_169: int, actual_Vcb_90: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAutoUnlock"} FatAutoUnlock(actual_IrpContext_169: int, actual_Vcb_90: int)
{
  var {:scalar} SavedIrql_6: int;
  var {:pointer} Tmp_2640: int;
  var {:pointer} Tmp_2641: int;
  var {:pointer} Tmp_2642: int;
  var {:pointer} Vcb_90: int;
  var vslice_dummy_var_440: int;

  anon0:
    call {:si_unique_call 3251} vslice_dummy_var_440 := __HAVOC_malloc(4);
    Vcb_90 := actual_Vcb_90;
    call {:si_unique_call 3252} Tmp_2642 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2642 != 0;
    assume Tmp_2642 > 0;
    call {:si_unique_call 3253} IoAcquireVpbSpinLock(Tmp_2642);
    assume {:nonnull} Tmp_2642 != 0;
    assume Tmp_2642 > 0;
    havoc SavedIrql_6;
    assume {:nonnull} Vcb_90 != 0;
    assume Vcb_90 > 0;
    havoc Tmp_2640;
    assume {:nonnull} Vcb_90 != 0;
    assume Vcb_90 > 0;
    havoc Tmp_2641;
    assume {:nonnull} Tmp_2640 != 0;
    assume Tmp_2640 > 0;
    assume {:nonnull} Tmp_2641 != 0;
    assume Tmp_2641 > 0;
    assume {:nonnull} Vcb_90 != 0;
    assume Vcb_90 > 0;
    assume {:nonnull} Vcb_90 != 0;
    assume Vcb_90 > 0;
    call {:si_unique_call 3254} IoReleaseVpbSpinLock(SavedIrql_6);
    return;
}



procedure {:origName "FatCommonCleanup"} FatCommonCleanup(actual_IrpContext_170: int, actual_Irp_67: int) returns (Tmp_2643: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonCleanup"} FatCommonCleanup(actual_IrpContext_170: int, actual_Irp_67: int) returns (Tmp_2643: int)
{
  var {:scalar} Tmp_2644: int;
  var {:scalar} Tmp_2647: int;
  var {:scalar} sdv_1501: int;
  var {:pointer} Ccb_37: int;
  var {:scalar} DeleteContext_1: int;
  var {:pointer} Fcb_62: int;
  var {:scalar} Tmp_2649: int;
  var {:scalar} AcquiredFcb_1: int;
  var {:scalar} ValidDataLength_2: int;
  var {:pointer} Tmp_2650: int;
  var {:scalar} Status_67: int;
  var {:pointer} FileObject_40: int;
  var {:pointer} Tmp_2651: int;
  var {:scalar} TypeOfOpen_11: int;
  var {:scalar} sdv_1513: int;
  var {:pointer} IrpSp_38: int;
  var {:pointer} Tmp_2652: int;
  var {:pointer} Tmp_2653: int;
  var {:scalar} sdv_1519: int;
  var {:scalar} DeleteContext_2: int;
  var {:scalar} SendUnlockNotification: int;
  var {:scalar} sdv_1522: int;
  var {:pointer} Tmp_2654: int;
  var {:pointer} Tmp_2655: int;
  var {:pointer} Vcb_91: int;
  var {:pointer} Tmp_2656: int;
  var {:pointer} Tmp_2657: int;
  var {:scalar} Tmp_2659: int;
  var {:pointer} Tmp_2660: int;
  var {:pointer} ShareAccess_14: int;
  var {:scalar} sdv_1531: int;
  var {:scalar} Tmp_2661: int;
  var {:pointer} Tmp_2662: int;
  var {:scalar} AcquiredVcb_1: int;
  var {:scalar} LocalTruncateSize: int;
  var {:scalar} sdv_1534: int;
  var {:pointer} Tmp_2664: int;
  var {:pointer} Tmp_2665: int;
  var {:pointer} IrpContext_170: int;
  var {:pointer} Irp_67: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_1568: int;
  var vslice_dummy_var_1569: int;
  var vslice_dummy_var_1570: int;
  var vslice_dummy_var_1571: int;
  var vslice_dummy_var_1572: int;
  var vslice_dummy_var_1573: int;
  var vslice_dummy_var_1574: int;
  var vslice_dummy_var_1575: int;
  var vslice_dummy_var_1576: int;
  var vslice_dummy_var_1577: int;
  var vslice_dummy_var_1578: int;
  var vslice_dummy_var_1579: int;
  var vslice_dummy_var_1580: int;
  var vslice_dummy_var_1581: int;
  var vslice_dummy_var_1582: int;
  var vslice_dummy_var_1583: int;
  var vslice_dummy_var_1584: int;
  var vslice_dummy_var_1585: int;
  var vslice_dummy_var_1586: int;
  var vslice_dummy_var_1587: int;
  var vslice_dummy_var_1588: int;
  var vslice_dummy_var_1589: int;
  var vslice_dummy_var_1590: int;
  var vslice_dummy_var_1591: int;
  var vslice_dummy_var_1592: int;
  var vslice_dummy_var_1593: int;
  var vslice_dummy_var_1594: int;
  var vslice_dummy_var_1595: int;
  var vslice_dummy_var_1596: int;
  var vslice_dummy_var_1597: int;

  anon0:
    call {:si_unique_call 3255} Ccb_37 := __HAVOC_malloc(4);
    call {:si_unique_call 3256} DeleteContext_1 := __HAVOC_malloc(8);
    call {:si_unique_call 3257} Fcb_62 := __HAVOC_malloc(4);
    call {:si_unique_call 3258} DeleteContext_2 := __HAVOC_malloc(8);
    call {:si_unique_call 3259} Vcb_91 := __HAVOC_malloc(4);
    call {:si_unique_call 3260} LocalTruncateSize := __HAVOC_malloc(20);
    IrpContext_170 := actual_IrpContext_170;
    Irp_67 := actual_Irp_67;
    SendUnlockNotification := 0;
    AcquiredVcb_1 := 0;
    AcquiredFcb_1 := 0;
    call {:si_unique_call 3261} IrpSp_38 := sdv_IoGetCurrentIrpStackLocation(Irp_67);
    assume {:nonnull} IrpSp_38 != 0;
    assume IrpSp_38 > 0;
    havoc FileObject_40;
    call {:si_unique_call 3262} TypeOfOpen_11 := FatDecodeFileObject(FileObject_40, Vcb_91, Fcb_62, Ccb_37);
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} TypeOfOpen_11 == 1;
    call {:si_unique_call 3263} FatCompleteRequest_Real(IrpContext_170, Irp_67, 0);
    Tmp_2643 := 0;
    goto L1;

  L1:
    return;

  anon197_Then:
    assume {:partition} TypeOfOpen_11 != 1;
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} TypeOfOpen_11 == 2;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1568;
    call {:si_unique_call 3264} Status_67 := FatFlushFile(IrpContext_170, vslice_dummy_var_1568, 1);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} Status_67 < 0;
    assume {:nonnull} IrpContext_170 != 0;
    assume IrpContext_170 > 0;
    call {:si_unique_call 3265} sdv_1522 := corral_nondet();
    call {:si_unique_call 3266} ExRaiseStatus(sdv_1522);
    goto L37;

  L37:
    call {:si_unique_call 3267} FatCompleteRequest_Real(IrpContext_170, Irp_67, 0);
    Tmp_2643 := 0;
    goto L1;

  anon204_Then:
    assume {:partition} 0 <= Status_67;
    goto L37;

  anon203_Then:
    assume {:partition} TypeOfOpen_11 != 2;
    goto L37;

  anon202_Then:
    goto L37;

  anon201_Then:
    goto L37;

  anon200_Then:
    goto L37;

  anon198_Then:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} TypeOfOpen_11 == 2;
    goto L57;

  L57:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1569;
    call {:si_unique_call 3268} vslice_dummy_var_441 := FatAcquireExclusiveFcb(IrpContext_170, vslice_dummy_var_1569);
    AcquiredFcb_1 := 1;
    assume {:nonnull} Ccb_37 != 0;
    assume Ccb_37 > 0;
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon282_Then, anon282_Else;

  anon282_Else:
    assume {:partition} TypeOfOpen_11 == 3;
    call {:si_unique_call 3269} FsRtlNotifyFullChangeDirectory(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    goto L62;

  L62:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    call {:si_unique_call 3270} ExReleaseResourceLite(0);
    AcquiredFcb_1 := 0;
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    havoc vslice_dummy_var_1570;
    call {:si_unique_call 3271} vslice_dummy_var_455 := FatAcquireExclusiveVcb(IrpContext_170, vslice_dummy_var_1570);
    AcquiredVcb_1 := 1;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1571;
    call {:si_unique_call 3272} vslice_dummy_var_456 := FatAcquireExclusiveFcb(IrpContext_170, vslice_dummy_var_1571);
    AcquiredFcb_1 := 1;
    goto L68;

  L68:
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} TypeOfOpen_11 == 4;
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    havoc vslice_dummy_var_1572;
    call {:si_unique_call 3273} vslice_dummy_var_442 := FatAcquireExclusiveVcb(IrpContext_170, vslice_dummy_var_1572);
    AcquiredVcb_1 := 1;
    goto L84;

  L84:
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} TypeOfOpen_11 == 3;
    goto L89;

  L89:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1573;
    call {:si_unique_call 3274} FatVerifyFcb(IrpContext_170, vslice_dummy_var_1573);
    call {:si_unique_call 3275} sdv_1501 := sdv_AbnormalTermination();
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} sdv_1501 != 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} AcquiredFcb_1 != 0;
    call {:si_unique_call 3276} ExReleaseResourceLite(0);
    goto L125;

  L125:
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} AcquiredVcb_1 != 0;
    call {:si_unique_call 3277} ExReleaseResourceLite(0);
    goto L93;

  L93:
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} TypeOfOpen_11 != 2;
    goto anon280_Then, anon280_Else;

  anon280_Else:
    assume {:partition} TypeOfOpen_11 != 3;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume {:partition} TypeOfOpen_11 != 4;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume {:partition} TypeOfOpen_11 != 5;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume {:partition} TypeOfOpen_11 != 6;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} TypeOfOpen_11 == 7;
    ShareAccess_14 := 0;
    goto L141;

  L141:
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} ShareAccess_14 != 0;
    call {:si_unique_call 3278} IoRemoveShareAccess(0, 0);
    goto L142;

  L142:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} TypeOfOpen_11 == 2;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    call {:si_unique_call 3279} vslice_dummy_var_451 := corral_nondet();
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    goto L173;

  L173:
    Tmp_2649 := 0;
    goto L174;

  L174:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto L165;

  L165:
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    Status_67 := 0;
    call {:si_unique_call 3280} FatUnpinRepinnedBcbs(IrpContext_170);
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} TypeOfOpen_11 == 2;
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1574;
    call {:si_unique_call 3281} Status_67 := FatFlushFile(IrpContext_170, vslice_dummy_var_1574, 1);
    goto L190;

  L190:
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} Status_67 >= 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    havoc vslice_dummy_var_1575;
    call {:si_unique_call 3282} Status_67 := FatFlushFat(IrpContext_170, vslice_dummy_var_1575);
    goto L196;

  L196:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} Status_67 < 0;
    assume {:nonnull} IrpContext_170 != 0;
    assume IrpContext_170 > 0;
    call {:si_unique_call 3283} sdv_1519 := corral_nondet();
    call {:si_unique_call 3284} ExRaiseStatus(sdv_1519);
    goto L187;

  L187:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} AcquiredFcb_1 != 0;
    call {:si_unique_call 3285} ExReleaseResourceLite(0);
    goto L211;

  L211:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} AcquiredVcb_1 != 0;
    call {:si_unique_call 3286} ExReleaseResourceLite(0);
    goto L215;

  L215:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} SendUnlockNotification != 0;
    call {:si_unique_call 3287} vslice_dummy_var_443 := corral_nondet();
    goto L219;

  L219:
    call {:si_unique_call 3288} sdv_1513 := sdv_AbnormalTermination();
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} sdv_1513 != 0;
    goto L229;

  L229:
    Tmp_2643 := Status_67;
    goto L1;

  anon234_Then:
    assume {:partition} sdv_1513 == 0;
    call {:si_unique_call 3289} FatCompleteRequest_Real(IrpContext_170, Irp_67, Status_67);
    goto L229;

  anon233_Then:
    assume {:partition} SendUnlockNotification == 0;
    goto L219;

  anon232_Then:
    assume {:partition} AcquiredVcb_1 == 0;
    goto L215;

  anon223_Then:
    assume {:partition} AcquiredFcb_1 == 0;
    goto L211;

  anon228_Then:
    assume {:partition} 0 <= Status_67;
    goto L187;

  anon231_Then:
    goto L196;

  anon230_Then:
    goto L196;

  anon229_Then:
    goto L196;

  anon226_Then:
    assume {:partition} 0 > Status_67;
    goto L196;

  anon227_Then:
    goto L190;

  anon225_Then:
    assume {:partition} TypeOfOpen_11 != 2;
    goto L190;

  anon224_Then:
    goto L187;

  anon222_Then:
    goto L187;

  anon220_Then:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    call {:si_unique_call 3290} sdv_1531 := corral_nondet();
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} sdv_1531 != 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc Tmp_2652;
    assume {:nonnull} Tmp_2652 != 0;
    assume Tmp_2652 > 0;
    goto anon286_Then, anon286_Else;

  anon286_Else:
    goto L178;

  L178:
    Tmp_2661 := 2;
    goto L179;

  L179:
    Tmp_2649 := Tmp_2661;
    goto L174;

  anon286_Then:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc Tmp_2660;
    assume {:nonnull} Tmp_2660 != 0;
    assume Tmp_2660 > 0;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc Tmp_2662;
    assume {:nonnull} Tmp_2662 != 0;
    assume Tmp_2662 > 0;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    Tmp_2661 := 1;
    goto L179;

  anon288_Then:
    goto L178;

  anon287_Then:
    goto L178;

  anon221_Then:
    assume {:partition} sdv_1531 == 0;
    goto L173;

  anon219_Then:
    assume {:partition} TypeOfOpen_11 != 2;
    goto L165;

  anon218_Then:
    assume {:partition} ShareAccess_14 == 0;
    goto L142;

  anon276_Then:
    assume {:partition} TypeOfOpen_11 != 7;
    call {:si_unique_call 3291} KeBugCheckEx(35, 263061, TypeOfOpen_11, 0, 0);
    goto L141;

  anon277_Then:
    assume {:partition} TypeOfOpen_11 == 6;
    goto L138;

  L138:
    ShareAccess_14 := 0;
    goto L141;

  anon278_Then:
    assume {:partition} TypeOfOpen_11 == 5;
    goto L138;

  anon279_Then:
    assume {:partition} TypeOfOpen_11 == 4;
    assume {:nonnull} Ccb_37 != 0;
    assume Ccb_37 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    havoc vslice_dummy_var_1576;
    call {:si_unique_call 3292} vslice_dummy_var_444 := FatCheckForDismount#1(IrpContext_170, vslice_dummy_var_1576, 1);
    goto L235;

  L235:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    havoc vslice_dummy_var_1577;
    call {:si_unique_call 3293} FatAutoUnlock(IrpContext_170, vslice_dummy_var_1577);
    SendUnlockNotification := 1;
    goto L236;

  L236:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    havoc ShareAccess_14;
    goto L141;

  anon237_Then:
    goto L236;

  anon236_Then:
    goto L236;

  anon217_Then:
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    havoc vslice_dummy_var_1578;
    call {:si_unique_call 3294} vslice_dummy_var_445 := FatHijackIrpAndFlushDevice(IrpContext_170, Irp_67, vslice_dummy_var_1578);
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    havoc Tmp_2655;
    assume {:nonnull} Tmp_2655 != 0;
    assume Tmp_2655 > 0;
    havoc Tmp_2654;
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    havoc Tmp_2653;
    assume {:nonnull} Tmp_2653 != 0;
    assume Tmp_2653 > 0;
    havoc Tmp_2657;
    assume {:nonnull} Tmp_2654 != 0;
    assume Tmp_2654 > 0;
    assume {:nonnull} Tmp_2657 != 0;
    assume Tmp_2657 > 0;
    goto L235;

  anon238_Then:
    goto L235;

  anon235_Then:
    goto L235;

  anon280_Then:
    assume {:partition} TypeOfOpen_11 == 3;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc ShareAccess_14;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto L249;

  L249:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:nonnull} Ccb_37 != 0;
    assume Ccb_37 > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1579;
    havoc vslice_dummy_var_1580;
    call {:si_unique_call 3295} FatUpdateDirentFromFcb(IrpContext_170, FileObject_40, vslice_dummy_var_1579, vslice_dummy_var_1580);
    goto L255;

  L255:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc Tmp_2664;
    assume {:nonnull} Tmp_2664 != 0;
    assume Tmp_2664 > 0;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1581;
    call {:si_unique_call 3296} sdv_1534 := FatIsDirectoryEmpty(IrpContext_170, vslice_dummy_var_1581);
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:partition} sdv_1534 != 0;
    assume {:nonnull} DeleteContext_2 != 0;
    assume DeleteContext_2 > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} DeleteContext_2 != 0;
    assume DeleteContext_2 > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    call {:si_unique_call 3297} vslice_dummy_var_454 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    call {:si_unique_call 3298} ExReleaseResourceLite(0);
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1582;
    call {:si_unique_call 3299} FatTruncateFileAllocation(IrpContext_170, vslice_dummy_var_1582, 0);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1583;
    call {:si_unique_call 3300} FatTunnelFcbOrDcb(vslice_dummy_var_1583, 0);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1584;
    call {:si_unique_call 3301} FatDeleteDirent#1(IrpContext_170, vslice_dummy_var_1584, DeleteContext_2, 1);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    goto L308;

  L308:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc Tmp_2647;
    call {:si_unique_call 3302} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_2647, 0, 0, 2, 2, 0);
    goto L286;

  L286:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1585;
    call {:si_unique_call 3303} FatRemoveNames(IrpContext_170, vslice_dummy_var_1585);
    goto L259;

  L259:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto L141;

  anon251_Then:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1586;
    call {:si_unique_call 3304} FatSetFullFileNameInFcb#1(IrpContext_170, vslice_dummy_var_1586);
    goto L308;

  anon250_Then:
    goto L286;

  anon249_Then:
    goto L286;

  anon248_Then:
    assume {:partition} sdv_1534 == 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto L259;

  anon247_Then:
    goto L259;

  anon246_Then:
    goto L259;

  anon245_Then:
    goto L259;

  anon294_Then:
    goto L259;

  anon244_Then:
    goto L259;

  anon239_Then:
    goto L255;

  anon243_Then:
    goto L249;

  anon242_Then:
    goto L249;

  anon241_Then:
    goto L249;

  anon240_Then:
    goto L249;

  anon293_Then:
    goto L249;

  anon213_Then:
    assume {:partition} TypeOfOpen_11 == 2;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc ShareAccess_14;
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    havoc Tmp_2665;
    assume {:nonnull} Tmp_2665 != 0;
    assume Tmp_2665 > 0;
    goto anon283_Then, anon283_Else;

  anon283_Else:
    goto L315;

  L315:
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto L318;

  L318:
    call {:si_unique_call 3305} vslice_dummy_var_446 := FsRtlFastUnlockAll(0, 0, 0, 0);
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:nonnull} Ccb_37 != 0;
    assume Ccb_37 > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1587;
    havoc vslice_dummy_var_1588;
    call {:si_unique_call 3306} FatUpdateDirentFromFcb(IrpContext_170, FileObject_40, vslice_dummy_var_1587, vslice_dummy_var_1588);
    goto L324;

  L324:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:nonnull} DeleteContext_1 != 0;
    assume DeleteContext_1 > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} DeleteContext_1 != 0;
    assume DeleteContext_1 > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    call {:si_unique_call 3307} vslice_dummy_var_453 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    call {:si_unique_call 3308} ExReleaseResourceLite(0);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1589;
    call {:si_unique_call 3309} FatSetFileSizeInDirent(IrpContext_170, vslice_dummy_var_1589, 0);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto L359;

  L359:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1590;
    havoc vslice_dummy_var_1591;
    call {:si_unique_call 3310} FatTruncateFileAllocation(IrpContext_170, vslice_dummy_var_1590, vslice_dummy_var_1591);
    goto L362;

  L362:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} LocalTruncateSize != 0;
    assume LocalTruncateSize > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} LocalTruncateSize != 0;
    assume LocalTruncateSize > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} LocalTruncateSize != 0;
    assume LocalTruncateSize > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} LocalTruncateSize != 0;
    assume LocalTruncateSize > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} LocalTruncateSize != 0;
    assume LocalTruncateSize > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto L360;

  L360:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:nonnull} Ccb_37 != 0;
    assume Ccb_37 > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1592;
    havoc vslice_dummy_var_1593;
    call {:si_unique_call 3311} FatTunnelFcbOrDcb(vslice_dummy_var_1592, vslice_dummy_var_1593);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1594;
    call {:si_unique_call 3312} FatDeleteDirent#1(IrpContext_170, vslice_dummy_var_1594, DeleteContext_1, 1);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon265_Then, anon265_Else;

  anon265_Else:
    goto L394;

  L394:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc Tmp_2659;
    call {:si_unique_call 3313} FsRtlNotifyFullReportChange(0, 0, 0, Tmp_2659, 0, 0, 1, 2, 0);
    goto L377;

  L377:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1595;
    call {:si_unique_call 3314} FatRemoveNames(IrpContext_170, vslice_dummy_var_1595);
    goto L322;

  L322:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    goto anon284_Then, anon284_Else;

  anon284_Else:
    goto L428;

  L428:
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc Tmp_2656;
    assume {:nonnull} Tmp_2656 != 0;
    assume Tmp_2656 > 0;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    call {:si_unique_call 3315} vslice_dummy_var_447 := ExAcquireResourceExclusiveLite(0, 1);
    call {:si_unique_call 3316} ExReleaseResourceLite(0);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    call {:si_unique_call 3317} vslice_dummy_var_450 := corral_nondet();
    goto L429;

  L429:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    goto L445;

  L445:
    call {:si_unique_call 3318} vslice_dummy_var_448 := corral_nondet();
    goto L141;

  anon269_Then:
    goto L445;

  anon285_Then:
    goto L429;

  anon271_Then:
    goto L429;

  anon270_Then:
    goto L429;

  anon268_Then:
    goto L429;

  anon284_Then:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto L428;

  anon263_Then:
    goto L322;

  anon265_Then:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc vslice_dummy_var_1596;
    call {:si_unique_call 3319} FatSetFullFileNameInFcb#1(IrpContext_170, vslice_dummy_var_1596);
    goto L394;

  anon264_Then:
    goto L377;

  anon261_Then:
    goto L377;

  anon262_Then:
    goto L362;

  anon260_Then:
    goto L360;

  anon259_Then:
    goto L331;

  L331:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc ValidDataLength_2;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon289_Then, anon289_Else;

  anon289_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc ValidDataLength_2;
    goto L402;

  L402:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    havoc Tmp_2644;
    assume {:nonnull} Vcb_91 != 0;
    assume Vcb_91 > 0;
    havoc vslice_dummy_var_1597;
    call {:si_unique_call 3320} vslice_dummy_var_452 := FatZeroData(IrpContext_170, vslice_dummy_var_1597, FileObject_40, ValidDataLength_2, Tmp_2644);
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    havoc Tmp_2651;
    assume {:nonnull} Tmp_2651 != 0;
    assume Tmp_2651 > 0;
    goto anon291_Then, anon291_Else;

  anon291_Else:
    goto L359;

  anon291_Then:
    goto L359;

  anon290_Then:
    goto L359;

  anon267_Then:
    goto L359;

  anon289_Then:
    goto L402;

  anon266_Then:
    goto L359;

  anon258_Then:
    goto L359;

  anon257_Then:
    goto L331;

  anon256_Then:
    goto L322;

  anon255_Then:
    goto L322;

  anon254_Then:
    goto L324;

  anon253_Then:
    goto L322;

  anon252_Then:
    call {:si_unique_call 3321} vslice_dummy_var_449 := __HAVOC_malloc(1);
    goto L318;

  anon283_Then:
    assume {:nonnull} FileObject_40 != 0;
    assume FileObject_40 > 0;
    havoc Tmp_2650;
    assume {:nonnull} Tmp_2650 != 0;
    assume Tmp_2650 > 0;
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:nonnull} Fcb_62 != 0;
    assume Fcb_62 > 0;
    goto L315;

  anon275_Then:
    goto L315;

  anon274_Then:
    goto L315;

  anon273_Then:
    goto L315;

  anon272_Then:
    goto L315;

  anon292_Then:
    goto L315;

  anon216_Then:
    assume {:partition} AcquiredVcb_1 == 0;
    goto L93;

  anon215_Then:
    assume {:partition} AcquiredFcb_1 == 0;
    goto L125;

  anon214_Then:
    assume {:partition} sdv_1501 == 0;
    goto L93;

  anon212_Then:
    goto L93;

  anon211_Then:
    assume {:partition} TypeOfOpen_11 != 3;
    goto L89;

  anon207_Then:
    assume {:partition} TypeOfOpen_11 != 4;
    goto L84;

  anon210_Then:
    goto L68;

  anon209_Then:
    goto L68;

  anon208_Then:
    goto L68;

  anon206_Then:
    goto L68;

  anon282_Then:
    assume {:partition} TypeOfOpen_11 != 3;
    goto L62;

  anon281_Then:
    goto L62;

  anon199_Then:
    assume {:partition} TypeOfOpen_11 != 2;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} TypeOfOpen_11 != 3;
    goto L68;

  anon205_Then:
    assume {:partition} TypeOfOpen_11 == 3;
    goto L57;
}



procedure {:origName "FatFsdCleanup"} FatFsdCleanup(actual_VolumeDeviceObject_14: int, actual_Irp_68: int) returns (Tmp_2666: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, yogi_error, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdCleanup"} FatFsdCleanup(actual_VolumeDeviceObject_14: int, actual_Irp_68: int) returns (Tmp_2666: int)
{
  var {:scalar} TopLevel_7: int;
  var {:scalar} Status_68: int;
  var {:pointer} IrpContext_171: int;
  var {:pointer} VolumeDeviceObject_15: int;
  var {:pointer} VolumeDeviceObject_14: int;
  var {:pointer} Irp_68: int;

  anon0:
    VolumeDeviceObject_14 := actual_VolumeDeviceObject_14;
    Irp_68 := actual_Irp_68;
    IrpContext_171 := 0;
    VolumeDeviceObject_15 := VolumeDeviceObject_14;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L11;

  L11:
    assume {:nonnull} Irp_68 != 0;
    assume Irp_68 > 0;
    assume {:nonnull} Irp_68 != 0;
    assume Irp_68 > 0;
    call {:si_unique_call 3322} sdv_IoCompleteRequest(0, 1);
    Tmp_2666 := 0;
    goto L1;

  L1:
    call {:si_unique_call 3323} SLIC_FatFsdCleanup_exit(strConst__li2bpl2, Tmp_2666);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 3324} KeEnterCriticalRegion();
    call {:si_unique_call 3325} TopLevel_7 := FatIsIrpTopLevel(Irp_68);
    call {:si_unique_call 3326} IrpContext_171 := FatCreateIrpContext(Irp_68, 1);
    call {:si_unique_call 3327} Status_68 := FatCommonCleanup(IrpContext_171, Irp_68);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} TopLevel_7 != 0;
    goto L42;

  L42:
    call {:si_unique_call 3328} KeLeaveCriticalRegion();
    Tmp_2666 := Status_68;
    goto L1;

  anon10_Then:
    assume {:partition} TopLevel_7 == 0;
    goto L42;

  anon9_Then:
    goto L11;
}



procedure {:origName "FatPnpCancelRemove"} FatPnpCancelRemove(actual_IrpContext_172: int, actual_Irp_69: int, actual_Vcb_92: int) returns (Tmp_2668: int);
  modifies alloc, stack_location;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} Tmp_2668 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPnpCancelRemove"} FatPnpCancelRemove(actual_IrpContext_172: int, actual_Irp_69: int, actual_Vcb_92: int) returns (Tmp_2668: int)
{
  var {:scalar} Status_69: int;
  var {:pointer} IrpContext_172: int;
  var {:pointer} Irp_69: int;
  var {:pointer} Vcb_92: int;
  var vslice_dummy_var_457: int;
  var vslice_dummy_var_1598: int;

  anon0:
    IrpContext_172 := actual_IrpContext_172;
    Irp_69 := actual_Irp_69;
    Vcb_92 := actual_Vcb_92;
    call {:si_unique_call 3329} vslice_dummy_var_457 := FatAcquireExclusiveVcb(IrpContext_172, Vcb_92);
    call {:si_unique_call 3330} ExReleaseResourceLite(0);
    call {:si_unique_call 3331} Status_69 := FatUnlockVolumeInternal(IrpContext_172, Vcb_92, 0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Status_69 >= 0;
    call {:si_unique_call 3332} FatSetupAllocationSupport(IrpContext_172, Vcb_92);
    goto L15;

  L15:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume Irp_69 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3333} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L37;

  L37:
    call {:si_unique_call 3334} sdv_IoSkipCurrentIrpStackLocation(Irp_69);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume Irp_69 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3335} SLIC_sdv_IoCallDriver_entry(0);
    goto L40;

  L40:
    assume {:nonnull} Vcb_92 != 0;
    assume Vcb_92 > 0;
    havoc vslice_dummy_var_1598;
    call {:si_unique_call 3336} Status_69 := sdv_IoCallDriver(vslice_dummy_var_1598, Irp_69);
    call {:si_unique_call 3337} ExReleaseResourceLite(0);
    call {:si_unique_call 3338} FatCompleteRequest_Real(IrpContext_172, 0, 0);
    Tmp_2668 := Status_69;
    return;

  anon9_Then:
    assume !(Irp_69 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L40;

  anon8_Then:
    assume !(Irp_69 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L37;

  anon7_Then:
    assume {:partition} 0 > Status_69;
    goto L15;
}



procedure {:origName "FatPnpAdjustVpbRefCount"} FatPnpAdjustVpbRefCount(actual_Vcb_93: int, actual_Delta: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPnpAdjustVpbRefCount"} FatPnpAdjustVpbRefCount(actual_Vcb_93: int, actual_Delta: int)
{
  var {:pointer} Tmp_2670: int;
  var {:pointer} Tmp_2671: int;
  var {:scalar} OldIrql_1: int;
  var {:pointer} Tmp_2673: int;
  var {:pointer} Vcb_93: int;
  var {:scalar} Delta: int;
  var vslice_dummy_var_458: int;

  anon0:
    call {:si_unique_call 3339} vslice_dummy_var_458 := __HAVOC_malloc(4);
    Vcb_93 := actual_Vcb_93;
    Delta := actual_Delta;
    call {:si_unique_call 3340} Tmp_2673 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2673 != 0;
    assume Tmp_2673 > 0;
    call {:si_unique_call 3341} IoAcquireVpbSpinLock(Tmp_2673);
    assume {:nonnull} Tmp_2673 != 0;
    assume Tmp_2673 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Vcb_93 != 0;
    assume Vcb_93 > 0;
    havoc Tmp_2671;
    assume {:nonnull} Vcb_93 != 0;
    assume Vcb_93 > 0;
    havoc Tmp_2670;
    assume {:nonnull} Tmp_2670 != 0;
    assume Tmp_2670 > 0;
    assume {:nonnull} Tmp_2671 != 0;
    assume Tmp_2671 > 0;
    call {:si_unique_call 3342} IoReleaseVpbSpinLock(OldIrql_1);
    return;
}



procedure {:origName "_sdv_init16"} _sdv_init16();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init16"} _sdv_init16()
{
  var vslice_dummy_var_459: int;

  anon0:
    call {:si_unique_call 3343} vslice_dummy_var_459 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatCommonPnp"} FatCommonPnp(actual_IrpContext_173: int, actual_Irp_70: int) returns (Tmp_2676: int);
  modifies alloc, stack_location, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonPnp"} FatCommonPnp(actual_IrpContext_173: int, actual_Irp_70: int) returns (Tmp_2676: int)
{
  var {:scalar} Tmp_2678: int;
  var {:scalar} Status_70: int;
  var {:pointer} IrpSp_39: int;
  var {:pointer} Tmp_2679: int;
  var {:pointer} Vcb_94: int;
  var {:scalar} Tmp_2680: int;
  var {:pointer} OurDeviceObject: int;
  var {:pointer} IrpContext_173: int;
  var {:pointer} Irp_70: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_1599: int;

  anon0:
    IrpContext_173 := actual_IrpContext_173;
    Irp_70 := actual_Irp_70;
    assume {:nonnull} IrpContext_173 != 0;
    assume IrpContext_173 > 0;
    call {:si_unique_call 3344} IrpSp_39 := sdv_IoGetCurrentIrpStackLocation(Irp_70);
    assume {:nonnull} IrpSp_39 != 0;
    assume IrpSp_39 > 0;
    havoc OurDeviceObject;
    assume {:nonnull} IrpContext_173 != 0;
    assume IrpContext_173 > 0;
    havoc Tmp_2678;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Tmp_2678 == 0;
    Tmp_2680 := 0;
    goto L83;

  L83:
    call {:si_unique_call 3345} vslice_dummy_var_460 := ExAcquireResourceExclusiveLite(0, Tmp_2680);
    assume {:nonnull} OurDeviceObject != 0;
    assume OurDeviceObject > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L20;

  L20:
    call {:si_unique_call 3346} ExReleaseResourceLite(0);
    Status_70 := -1073741811;
    call {:si_unique_call 3347} FatCompleteRequest_Real(IrpContext_173, Irp_70, Status_70);
    Tmp_2676 := Status_70;
    goto L1;

  L1:
    return;

  anon19_Then:
    assume {:nonnull} OurDeviceObject != 0;
    assume OurDeviceObject > 0;
    Tmp_2679 := Vcb__VOLUME_DEVICE_OBJECT(OurDeviceObject);
    assume {:nonnull} Tmp_2679 != 0;
    assume Tmp_2679 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} OurDeviceObject != 0;
    assume OurDeviceObject > 0;
    Vcb_94 := Vcb__VOLUME_DEVICE_OBJECT(OurDeviceObject);
    assume {:nonnull} IrpSp_39 != 0;
    assume IrpSp_39 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} IrpSp_39 != 0;
    assume IrpSp_39 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} IrpSp_39 != 0;
    assume IrpSp_39 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} IrpSp_39 != 0;
    assume IrpSp_39 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 3348} Status_70 := FatPnpSurpriseRemove(IrpContext_173, Irp_70, Vcb_94);
    goto L47;

  L47:
    Tmp_2676 := Status_70;
    goto L1;

  anon22_Then:
    call {:si_unique_call 3349} ExReleaseResourceLite(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume Irp_70 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3350} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L72;

  L72:
    call {:si_unique_call 3351} sdv_IoSkipCurrentIrpStackLocation(Irp_70);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume Irp_70 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3352} SLIC_sdv_IoCallDriver_entry(0);
    goto L75;

  L75:
    assume {:nonnull} Vcb_94 != 0;
    assume Vcb_94 > 0;
    havoc vslice_dummy_var_1599;
    call {:si_unique_call 3353} Status_70 := sdv_IoCallDriver(vslice_dummy_var_1599, Irp_70);
    call {:si_unique_call 3354} FatCompleteRequest_Real(IrpContext_173, 0, 0);
    goto L47;

  anon21_Then:
    assume !(Irp_70 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L75;

  anon20_Then:
    assume !(Irp_70 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;

  anon23_Then:
    call {:si_unique_call 3355} Status_70 := FatPnpCancelRemove(IrpContext_173, Irp_70, Vcb_94);
    goto L47;

  anon24_Then:
    call {:si_unique_call 3356} Status_70 := FatPnpRemove(IrpContext_173, Irp_70, Vcb_94);
    goto L47;

  anon27_Then:
    call {:si_unique_call 3357} Status_70 := FatPnpQueryRemove(IrpContext_173, Irp_70, Vcb_94);
    goto L47;

  anon26_Then:
    goto L20;

  anon25_Then:
    assume {:partition} Tmp_2678 != 0;
    Tmp_2680 := 1;
    goto L83;
}



procedure {:origName "FatFsdPnp"} FatFsdPnp(actual_VolumeDeviceObject_16: int, actual_Irp_71: int) returns (Tmp_2681: int);
  modifies alloc, stack_location, yogi_error, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdPnp"} FatFsdPnp(actual_VolumeDeviceObject_16: int, actual_Irp_71: int) returns (Tmp_2681: int)
{
  var {:scalar} TopLevel_8: int;
  var {:scalar} Status_71: int;
  var {:scalar} Wait_11: int;
  var {:pointer} sdv_1556: int;
  var {:pointer} IrpContext_174: int;
  var {:pointer} VolumeDeviceObject_16: int;
  var {:pointer} Irp_71: int;

  anon0:
    VolumeDeviceObject_16 := actual_VolumeDeviceObject_16;
    Irp_71 := actual_Irp_71;
    IrpContext_174 := 0;
    call {:si_unique_call 3358} KeEnterCriticalRegion();
    call {:si_unique_call 3359} TopLevel_8 := FatIsIrpTopLevel(Irp_71);
    call {:si_unique_call 3360} sdv_1556 := sdv_IoGetCurrentIrpStackLocation(Irp_71);
    assume {:nonnull} sdv_1556 != 0;
    assume sdv_1556 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 3361} Wait_11 := corral_nondet();
    goto L48;

  L48:
    call {:si_unique_call 3362} IrpContext_174 := FatCreateIrpContext(Irp_71, Wait_11);
    call {:si_unique_call 3363} Status_71 := FatCommonPnp(IrpContext_174, Irp_71);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} TopLevel_8 != 0;
    goto L35;

  L35:
    call {:si_unique_call 3364} KeLeaveCriticalRegion();
    Tmp_2681 := Status_71;
    call {:si_unique_call 3365} SLIC_FatFsdPnp_exit(strConst__li2bpl2, Tmp_2681);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} TopLevel_8 == 0;
    goto L35;

  anon8_Then:
    Wait_11 := 1;
    goto L48;
}



procedure {:origName "FatPnpQueryRemove"} FatPnpQueryRemove(actual_IrpContext_175: int, actual_Irp_72: int, actual_Vcb_95: int) returns (Tmp_2683: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPnpQueryRemove"} FatPnpQueryRemove(actual_IrpContext_175: int, actual_Irp_72: int, actual_Vcb_95: int) returns (Tmp_2683: int)
{
  var {:scalar} Status_72: int;
  var {:scalar} Event_10: int;
  var {:scalar} GlobalHeld: int;
  var {:scalar} Tmp_2685: int;
  var {:scalar} Tmp_2686: int;
  var {:scalar} VcbDeleted_2: int;
  var {:pointer} IrpContext_175: int;
  var {:pointer} Irp_72: int;
  var {:pointer} Vcb_95: int;
  var vslice_dummy_var_461: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_1600: int;

  anon0:
    call {:si_unique_call 3366} Event_10 := __HAVOC_malloc(124);
    IrpContext_175 := actual_IrpContext_175;
    Irp_72 := actual_Irp_72;
    Vcb_95 := actual_Vcb_95;
    VcbDeleted_2 := 0;
    GlobalHeld := 1;
    call {:si_unique_call 3367} vslice_dummy_var_462 := FatAcquireExclusiveVcb(IrpContext_175, Vcb_95);
    call {:si_unique_call 3368} ExReleaseResourceLite(0);
    GlobalHeld := 0;
    call {:si_unique_call 3369} Status_72 := FatLockVolumeInternal(IrpContext_175, Vcb_95, 0);
    call {:si_unique_call 3370} FatPnpAdjustVpbRefCount(Vcb_95, 1);
    call {:si_unique_call 3371} ExReleaseResourceLite(0);
    assume {:nonnull} IrpContext_175 != 0;
    assume IrpContext_175 > 0;
    havoc Tmp_2686;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Tmp_2686 == 0;
    Tmp_2685 := 0;
    goto L100;

  L100:
    call {:si_unique_call 3372} vslice_dummy_var_463 := ExAcquireResourceExclusiveLite(0, Tmp_2685);
    GlobalHeld := 1;
    call {:si_unique_call 3373} vslice_dummy_var_464 := FatAcquireExclusiveVcb(IrpContext_175, Vcb_95);
    call {:si_unique_call 3374} FatPnpAdjustVpbRefCount(Vcb_95, -1);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Status_72 >= 0;
    call {:si_unique_call 3375} FatFlushAndCleanVolume(IrpContext_175, Irp_72, Vcb_95, 1);
    call {:si_unique_call 3376} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_72);
    call {:si_unique_call 3377} KeInitializeEvent(Event_10, 0, 0);
    call {:si_unique_call 3378} sdv_IoSetCompletionRoutine(Irp_72, li2bplFunctionConstant466, Event_10, 1, 1, 1);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume Irp_72 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3379} SLIC_sdv_IoCallDriver_entry(0);
    goto L91;

  L91:
    assume {:nonnull} Vcb_95 != 0;
    assume Vcb_95 > 0;
    havoc vslice_dummy_var_1600;
    call {:si_unique_call 3380} Status_72 := sdv_IoCallDriver(vslice_dummy_var_1600, Irp_72);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Status_72 == 259;
    call {:si_unique_call 3381} vslice_dummy_var_461 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_72 != 0;
    assume Irp_72 > 0;
    havoc Status_72;
    goto L65;

  L65:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Status_72 >= 0;
    call {:si_unique_call 3382} VcbDeleted_2 := FatCheckForDismount#1(IrpContext_175, Vcb_95, 1);
    goto L47;

  L47:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} VcbDeleted_2 != 0;
    goto L77;

  L77:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} GlobalHeld != 0;
    call {:si_unique_call 3383} ExReleaseResourceLite(0);
    goto L78;

  L78:
    call {:si_unique_call 3384} FatCompleteRequest_Real(IrpContext_175, Irp_72, Status_72);
    Tmp_2683 := Status_72;
    return;

  anon20_Then:
    assume {:partition} GlobalHeld == 0;
    goto L78;

  anon16_Then:
    assume {:partition} VcbDeleted_2 == 0;
    call {:si_unique_call 3385} ExReleaseResourceLite(0);
    goto L77;

  anon19_Then:
    assume {:partition} 0 > Status_72;
    goto L47;

  anon18_Then:
    assume {:partition} Status_72 != 259;
    goto L65;

  anon17_Then:
    assume !(Irp_72 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L91;

  anon15_Then:
    assume {:partition} 0 > Status_72;
    goto L47;

  anon21_Then:
    assume {:partition} Tmp_2686 != 0;
    Tmp_2685 := 1;
    goto L100;
}



procedure {:origName "FatPnpRemove"} FatPnpRemove(actual_IrpContext_176: int, actual_Irp_73: int, actual_Vcb_96: int) returns (Tmp_2687: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPnpRemove"} FatPnpRemove(actual_IrpContext_176: int, actual_Irp_73: int, actual_Vcb_96: int) returns (Tmp_2687: int)
{
  var {:scalar} Status_73: int;
  var {:scalar} Event_11: int;
  var {:scalar} VcbDeleted_3: int;
  var {:pointer} IrpContext_176: int;
  var {:pointer} Irp_73: int;
  var {:pointer} Vcb_96: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_466: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_1601: int;

  anon0:
    call {:si_unique_call 3386} Event_11 := __HAVOC_malloc(124);
    IrpContext_176 := actual_IrpContext_176;
    Irp_73 := actual_Irp_73;
    Vcb_96 := actual_Vcb_96;
    call {:si_unique_call 3387} vslice_dummy_var_465 := FatAcquireExclusiveVcb(IrpContext_176, Vcb_96);
    call {:si_unique_call 3388} vslice_dummy_var_466 := FatUnlockVolumeInternal(IrpContext_176, Vcb_96, 0);
    call {:si_unique_call 3389} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_73);
    call {:si_unique_call 3390} KeInitializeEvent(Event_11, 0, 0);
    call {:si_unique_call 3391} sdv_IoSetCompletionRoutine(Irp_73, li2bplFunctionConstant466, Event_11, 1, 1, 1);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume Irp_73 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3392} SLIC_sdv_IoCallDriver_entry(0);
    goto L58;

  L58:
    assume {:nonnull} Vcb_96 != 0;
    assume Vcb_96 > 0;
    havoc vslice_dummy_var_1601;
    call {:si_unique_call 3393} Status_73 := sdv_IoCallDriver(vslice_dummy_var_1601, Irp_73);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Status_73 == 259;
    call {:si_unique_call 3394} vslice_dummy_var_467 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_73 != 0;
    assume Irp_73 > 0;
    havoc Status_73;
    goto L26;

  L26:
    call {:si_unique_call 3395} FatFlushAndCleanVolume(IrpContext_176, Irp_73, Vcb_96, 0);
    call {:si_unique_call 3396} VcbDeleted_3 := FatCheckForDismount#1(IrpContext_176, Vcb_96, 1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} VcbDeleted_3 != 0;
    goto L48;

  L48:
    call {:si_unique_call 3397} ExReleaseResourceLite(0);
    call {:si_unique_call 3398} FatCompleteRequest_Real(IrpContext_176, Irp_73, Status_73);
    Tmp_2687 := Status_73;
    return;

  anon9_Then:
    assume {:partition} VcbDeleted_3 == 0;
    call {:si_unique_call 3399} ExReleaseResourceLite(0);
    goto L48;

  anon8_Then:
    assume {:partition} Status_73 != 259;
    goto L26;

  anon7_Then:
    assume !(Irp_73 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L58;
}



procedure {:origName "FatPnpSurpriseRemove"} FatPnpSurpriseRemove(actual_IrpContext_177: int, actual_Irp_74: int, actual_Vcb_97: int) returns (Tmp_2689: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPnpSurpriseRemove"} FatPnpSurpriseRemove(actual_IrpContext_177: int, actual_Irp_74: int, actual_Vcb_97: int) returns (Tmp_2689: int)
{
  var {:scalar} Status_74: int;
  var {:scalar} Event_12: int;
  var {:scalar} VcbDeleted_4: int;
  var {:pointer} IrpContext_177: int;
  var {:pointer} Irp_74: int;
  var {:pointer} Vcb_97: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_1602: int;

  anon0:
    call {:si_unique_call 3400} Event_12 := __HAVOC_malloc(124);
    IrpContext_177 := actual_IrpContext_177;
    Irp_74 := actual_Irp_74;
    Vcb_97 := actual_Vcb_97;
    call {:si_unique_call 3401} vslice_dummy_var_468 := FatAcquireExclusiveVcb(IrpContext_177, Vcb_97);
    call {:si_unique_call 3402} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_74);
    call {:si_unique_call 3403} KeInitializeEvent(Event_12, 0, 0);
    call {:si_unique_call 3404} sdv_IoSetCompletionRoutine(Irp_74, li2bplFunctionConstant466, Event_12, 1, 1, 1);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume Irp_74 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3405} SLIC_sdv_IoCallDriver_entry(0);
    goto L55;

  L55:
    assume {:nonnull} Vcb_97 != 0;
    assume Vcb_97 > 0;
    havoc vslice_dummy_var_1602;
    call {:si_unique_call 3406} Status_74 := sdv_IoCallDriver(vslice_dummy_var_1602, Irp_74);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Status_74 == 259;
    call {:si_unique_call 3407} vslice_dummy_var_469 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_74 != 0;
    assume Irp_74 > 0;
    havoc Status_74;
    goto L23;

  L23:
    call {:si_unique_call 3408} FatFlushAndCleanVolume(IrpContext_177, Irp_74, Vcb_97, 0);
    call {:si_unique_call 3409} VcbDeleted_4 := FatCheckForDismount#1(IrpContext_177, Vcb_97, 1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} VcbDeleted_4 != 0;
    goto L45;

  L45:
    call {:si_unique_call 3410} ExReleaseResourceLite(0);
    call {:si_unique_call 3411} FatCompleteRequest_Real(IrpContext_177, Irp_74, Status_74);
    Tmp_2689 := Status_74;
    return;

  anon9_Then:
    assume {:partition} VcbDeleted_4 == 0;
    call {:si_unique_call 3412} ExReleaseResourceLite(0);
    goto L45;

  anon8_Then:
    assume {:partition} Status_74 != 259;
    goto L23;

  anon7_Then:
    assume !(Irp_74 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L55;
}



procedure {:origName "FatFsdDeviceControl"} FatFsdDeviceControl(actual_VolumeDeviceObject_18: int, actual_Irp_75: int) returns (Tmp_2691: int);
  modifies alloc, stack_location, yogi_error, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdDeviceControl"} FatFsdDeviceControl(actual_VolumeDeviceObject_18: int, actual_Irp_75: int) returns (Tmp_2691: int)
{
  var {:scalar} TopLevel_9: int;
  var {:scalar} Status_75: int;
  var {:scalar} sdv_1580: int;
  var {:pointer} IrpContext_178: int;
  var {:pointer} VolumeDeviceObject_18: int;
  var {:pointer} Irp_75: int;

  anon0:
    VolumeDeviceObject_18 := actual_VolumeDeviceObject_18;
    Irp_75 := actual_Irp_75;
    IrpContext_178 := 0;
    call {:si_unique_call 3413} KeEnterCriticalRegion();
    call {:si_unique_call 3414} TopLevel_9 := FatIsIrpTopLevel(Irp_75);
    call {:si_unique_call 3415} sdv_1580 := corral_nondet();
    call {:si_unique_call 3416} IrpContext_178 := FatCreateIrpContext(Irp_75, sdv_1580);
    call {:si_unique_call 3417} Status_75 := FatCommonDeviceControl(IrpContext_178, Irp_75);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} TopLevel_9 != 0;
    goto L34;

  L34:
    call {:si_unique_call 3418} KeLeaveCriticalRegion();
    Tmp_2691 := Status_75;
    call {:si_unique_call 3419} SLIC_FatFsdDeviceControl_exit(strConst__li2bpl2, Tmp_2691);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} TopLevel_9 == 0;
    goto L34;
}



procedure {:origName "FatCommonDeviceControl"} FatCommonDeviceControl(actual_IrpContext_179: int, actual_Irp_76: int) returns (Tmp_2693: int);
  modifies alloc, stack_location, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonDeviceControl"} FatCommonDeviceControl(actual_IrpContext_179: int, actual_Irp_76: int) returns (Tmp_2693: int)
{
  var {:pointer} Fcb_63: int;
  var {:pointer} Ccb_38: int;
  var {:pointer} Fcb_64: int;
  var {:scalar} WaitEvent: int;
  var {:scalar} Status_76: int;
  var {:pointer} CompletionContext: int;
  var {:pointer} IrpSp_40: int;
  var {:scalar} sdv_1588: int;
  var {:pointer} Fcb_65: int;
  var {:pointer} Vcb_98: int;
  var {:pointer} IrpContext_179: int;
  var {:pointer} Irp_76: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_1603: int;
  var vslice_dummy_var_1604: int;
  var vslice_dummy_var_1605: int;
  var vslice_dummy_var_1606: int;
  var vslice_dummy_var_1607: int;
  var vslice_dummy_var_1608: int;

  anon0:
    call {:si_unique_call 3420} Ccb_38 := __HAVOC_malloc(4);
    call {:si_unique_call 3421} Fcb_64 := __HAVOC_malloc(4);
    call {:si_unique_call 3422} WaitEvent := __HAVOC_malloc(124);
    call {:si_unique_call 3423} Vcb_98 := __HAVOC_malloc(4);
    IrpContext_179 := actual_IrpContext_179;
    Irp_76 := actual_Irp_76;
    CompletionContext := 0;
    call {:si_unique_call 3424} IrpSp_40 := sdv_IoGetCurrentIrpStackLocation(Irp_76);
    assume {:nonnull} IrpSp_40 != 0;
    assume IrpSp_40 > 0;
    havoc vslice_dummy_var_1603;
    call {:si_unique_call 3425} sdv_1588 := FatDecodeFileObject(vslice_dummy_var_1603, Vcb_98, Fcb_64, Ccb_38);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_1588 != 4;
    call {:si_unique_call 3426} FatCompleteRequest_Real(IrpContext_179, Irp_76, -1073741811);
    Tmp_2693 := -1073741811;
    goto L1;

  L1:
    return;

  anon19_Then:
    assume {:partition} sdv_1588 == 4;
    assume {:nonnull} IrpSp_40 != 0;
    assume IrpSp_40 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} IrpContext_179 != 0;
    assume IrpContext_179 > 0;
    Fcb_63 := 0;
    assume {:nonnull} Vcb_98 != 0;
    assume Vcb_98 > 0;
    havoc vslice_dummy_var_1604;
    call {:si_unique_call 3427} vslice_dummy_var_472 := FatAcquireExclusiveVcb(IrpContext_179, vslice_dummy_var_1604);
    goto L33;

  L33:
    call {:si_unique_call 3428} Fcb_63, vslice_dummy_var_470 := FatCommonDeviceControl_loop_L33(Fcb_63, Vcb_98, IrpContext_179, vslice_dummy_var_470);
    goto L33_last;

  L33_last:
    assume {:nonnull} Vcb_98 != 0;
    assume Vcb_98 > 0;
    havoc vslice_dummy_var_1607;
    call {:si_unique_call 3443} Fcb_63 := FatGetNextFcbBottomUp(IrpContext_179, Fcb_63, vslice_dummy_var_1607);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Fcb_63 != 0;
    call {:si_unique_call 3429} vslice_dummy_var_470 := FatAcquireExclusiveFcb(IrpContext_179, Fcb_63);
    goto anon22_Else_dummy;

  anon22_Else_dummy:
    assume false;
    return;

  anon22_Then:
    assume {:partition} Fcb_63 == 0;
    assume {:nonnull} Vcb_98 != 0;
    assume Vcb_98 > 0;
    havoc vslice_dummy_var_1605;
    call {:si_unique_call 3430} FatFlushAndCleanVolume(IrpContext_179, Irp_76, vslice_dummy_var_1605, 3);
    call {:si_unique_call 3431} KeInitializeEvent(WaitEvent, 0, 0);
    CompletionContext := WaitEvent;
    call {:si_unique_call 3432} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_76);
    call {:si_unique_call 3433} sdv_IoSetCompletionRoutine(Irp_76, li2bplFunctionConstant714, CompletionContext, 1, 1, 1);
    goto L55;

  L55:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume Irp_76 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3434} SLIC_sdv_IoCallDriver_entry(0);
    goto L89;

  L89:
    assume {:nonnull} Vcb_98 != 0;
    assume Vcb_98 > 0;
    havoc vslice_dummy_var_1606;
    call {:si_unique_call 3435} Status_76 := sdv_IoCallDriver(vslice_dummy_var_1606, Irp_76);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Status_76 == 259;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} CompletionContext != 0;
    call {:si_unique_call 3436} vslice_dummy_var_471 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_76 != 0;
    assume Irp_76 > 0;
    havoc Status_76;
    goto L60;

  L60:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} CompletionContext != 0;
    Fcb_65 := 0;
    goto L69;

  L69:
    call {:si_unique_call 3437} Fcb_65 := FatCommonDeviceControl_loop_L69(Fcb_65, Vcb_98, IrpContext_179);
    goto L69_last;

  L69_last:
    assume {:nonnull} Vcb_98 != 0;
    assume Vcb_98 > 0;
    havoc vslice_dummy_var_1608;
    call {:si_unique_call 3444} Fcb_65 := FatGetNextFcbBottomUp(IrpContext_179, Fcb_65, vslice_dummy_var_1608);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Fcb_65 != 0;
    call {:si_unique_call 3438} ExReleaseResourceLite(0);
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} Fcb_65 == 0;
    call {:si_unique_call 3439} ExReleaseResourceLite(0);
    goto L80;

  L80:
    call {:si_unique_call 3440} FatCompleteRequest_Real(IrpContext_179, Irp_76, Status_76);
    Tmp_2693 := Status_76;
    goto L1;

  anon25_Then:
    assume {:partition} CompletionContext == 0;
    Irp_76 := 0;
    goto L80;

  anon26_Then:
    assume {:partition} CompletionContext == 0;
    goto L60;

  anon24_Then:
    assume {:partition} Status_76 != 259;
    goto L60;

  anon23_Then:
    assume !(Irp_76 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L89;

  anon20_Then:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume Irp_76 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3441} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L92;

  L92:
    call {:si_unique_call 3442} sdv_IoSkipCurrentIrpStackLocation(Irp_76);
    goto L55;

  anon21_Then:
    assume !(Irp_76 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L92;
}



procedure {:origName "_sdv_init30"} _sdv_init30();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init30"} _sdv_init30()
{
  var vslice_dummy_var_473: int;

  anon0:
    call {:si_unique_call 3445} vslice_dummy_var_473 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_474: int;

  anon0:
    call {:si_unique_call 3446} vslice_dummy_var_474 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatGetNeedEaCount"} FatGetNeedEaCount(actual_IrpContext_180: int, actual_Vcb_99: int, actual_Dirent_39: int, actual_NeedEaCount_4: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetNeedEaCount"} FatGetNeedEaCount(actual_IrpContext_180: int, actual_Vcb_99: int, actual_Dirent_39: int, actual_NeedEaCount_4: int)
{
  var {:pointer} EaDirent_1: int;
  var {:scalar} LockedEaFcb_1: int;
  var {:pointer} Buffer_32: int;
  var {:pointer} EaSetHeader_1: int;
  var {:pointer} EaBcb_1: int;
  var {:scalar} ThisFilename: int;
  var {:scalar} EaSetRange_1: int;
  var {:pointer} IrpContext_180: int;
  var {:pointer} Vcb_99: int;
  var {:pointer} Dirent_39: int;
  var {:pointer} NeedEaCount_4: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_1609: int;

  anon0:
    call {:si_unique_call 3447} vslice_dummy_var_475 := __HAVOC_malloc(4);
    call {:si_unique_call 3448} EaDirent_1 := __HAVOC_malloc(4);
    call {:si_unique_call 3449} EaBcb_1 := __HAVOC_malloc(4);
    call {:si_unique_call 3450} ThisFilename := __HAVOC_malloc(12);
    call {:si_unique_call 3451} EaSetRange_1 := __HAVOC_malloc(28);
    IrpContext_180 := actual_IrpContext_180;
    Vcb_99 := actual_Vcb_99;
    Dirent_39 := actual_Dirent_39;
    NeedEaCount_4 := actual_NeedEaCount_4;
    call {:si_unique_call 3452} Buffer_32 := __HAVOC_malloc(48);
    assume {:nonnull} Dirent_39 != 0;
    assume Dirent_39 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 3453} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} EaBcb_1 != 0;
    assume EaBcb_1 > 0;
    LockedEaFcb_1 := 0;
    call {:si_unique_call 3454} FatGetEaFile#1(IrpContext_180, Vcb_99, EaDirent_1, EaBcb_1, 0, 0);
    LockedEaFcb_1 := 1;
    assume {:nonnull} Vcb_99 != 0;
    assume Vcb_99 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L35;

  L35:
    assume {:nonnull} ThisFilename != 0;
    assume ThisFilename > 0;
    call {:si_unique_call 3455} Fat8dot3ToString(IrpContext_180, Dirent_39, 0, ThisFilename);
    assume {:nonnull} Dirent_39 != 0;
    assume Dirent_39 > 0;
    havoc vslice_dummy_var_1609;
    call {:si_unique_call 3456} FatReadEaSet(IrpContext_180, Vcb_99, vslice_dummy_var_1609, ThisFilename, 0, EaSetRange_1);
    assume {:nonnull} EaSetRange_1 != 0;
    assume EaSetRange_1 > 0;
    havoc EaSetHeader_1;
    assume {:nonnull} EaSetHeader_1 != 0;
    assume EaSetHeader_1 > 0;
    assume {:nonnull} NeedEaCount_4 != 0;
    assume NeedEaCount_4 > 0;
    assume {:nonnull} EaBcb_1 != 0;
    assume EaBcb_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} EaBcb_1 != 0;
    assume EaBcb_1 > 0;
    goto L45;

  L45:
    call {:si_unique_call 3457} FatUnpinEaRange(IrpContext_180, EaSetRange_1);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} LockedEaFcb_1 != 0;
    assume {:nonnull} Vcb_99 != 0;
    assume Vcb_99 > 0;
    call {:si_unique_call 3458} ExReleaseResourceLite(0);
    goto L1;

  L1:
    return;

  anon10_Then:
    assume {:partition} LockedEaFcb_1 == 0;
    goto L1;

  anon12_Then:
    goto L45;

  anon11_Then:
    assume {:nonnull} IrpContext_180 != 0;
    assume IrpContext_180 > 0;
    call {:si_unique_call 3459} ExRaiseStatus(-1073741742);
    goto L35;

  anon9_Then:
    assume {:nonnull} NeedEaCount_4 != 0;
    assume NeedEaCount_4 > 0;
    goto L1;
}



procedure {:origName "FatCreateEa"} FatCreateEa(actual_IrpContext_182: int, actual_Vcb_101: int, actual_Buffer_33: int, actual_Length_20: int, actual_FileName_3: int, actual_EaHandle_3: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCreateEa"} FatCreateEa(actual_IrpContext_182: int, actual_Vcb_101: int, actual_Buffer_33: int, actual_Length_20: int, actual_FileName_3: int, actual_EaHandle_3: int)
{
  var {:scalar} EaName: int;
  var {:dopa} {:scalar} EaOffset: int;
  var {:pointer} Tmp_2735: int;
  var {:scalar} Tmp_2736: int;
  var {:pointer} Tmp_2737: int;
  var {:pointer} Tmp_2739: int;
  var {:scalar} Tmp_2740: int;
  var {:scalar} Tmp_2741: int;
  var {:pointer} Tmp_2743: int;
  var {:pointer} EaDirent_3: int;
  var {:scalar} LockedEaFcb_2: int;
  var {:pointer} sdv_1607: int;
  var {:dopa} {:scalar} PackedEasLength: int;
  var {:pointer} FullEa: int;
  var {:pointer} Tmp_2744: int;
  var {:pointer} EaSetHeader_2: int;
  var {:scalar} sdv_1608: int;
  var {:pointer} EaBcb_3: int;
  var {:scalar} sdv_1609: int;
  var {:scalar} Tmp_2745: int;
  var {:pointer} Tmp_2746: int;
  var {:scalar} Tmp_2747: int;
  var {:dopa} {:scalar} AllocationLength: int;
  var {:scalar} BytesPerCluster_6: int;
  var {:scalar} EaSetRange_2: int;
  var {:pointer} Tmp_2750: int;
  var {:pointer} IrpContext_182: int;
  var {:pointer} Vcb_101: int;
  var {:pointer} Buffer_33: int;
  var {:scalar} Length_20: int;
  var {:pointer} FileName_3: int;
  var {:pointer} EaHandle_3: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_1610: int;
  var vslice_dummy_var_1611: int;
  var vslice_dummy_var_1612: int;
  var vslice_dummy_var_1613: int;
  var vslice_dummy_var_1614: int;
  var vslice_dummy_var_1615: int;
  var vslice_dummy_var_1616: int;
  var vslice_dummy_var_1617: int;

  anon0:
    call {:si_unique_call 3460} EaName := __HAVOC_malloc(12);
    call {:si_unique_call 3461} EaOffset := __HAVOC_malloc(4);
    call {:si_unique_call 3462} vslice_dummy_var_476 := __HAVOC_malloc(4);
    call {:si_unique_call 3463} EaDirent_3 := __HAVOC_malloc(4);
    call {:si_unique_call 3464} PackedEasLength := __HAVOC_malloc(4);
    call {:si_unique_call 3465} EaSetHeader_2 := __HAVOC_malloc(4);
    call {:si_unique_call 3466} EaBcb_3 := __HAVOC_malloc(4);
    call {:si_unique_call 3467} AllocationLength := __HAVOC_malloc(4);
    call {:si_unique_call 3468} EaSetRange_2 := __HAVOC_malloc(28);
    IrpContext_182 := actual_IrpContext_182;
    Vcb_101 := actual_Vcb_101;
    Buffer_33 := actual_Buffer_33;
    Length_20 := actual_Length_20;
    FileName_3 := actual_FileName_3;
    EaHandle_3 := actual_EaHandle_3;
    call {:si_unique_call 3469} Tmp_2737 := __HAVOC_malloc(4);
    assume {:nonnull} EaBcb_3 != 0;
    assume EaBcb_3 > 0;
    LockedEaFcb_2 := 0;
    call {:si_unique_call 3470} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} PackedEasLength != 0;
    assume PackedEasLength > 0;
    call {:si_unique_call 3471} BytesPerCluster_6 := corral_nondet();
    assume {:nonnull} AllocationLength != 0;
    assume AllocationLength > 0;
    assume {:nonnull} PackedEasLength != 0;
    assume PackedEasLength > 0;
    assume {:nonnull} AllocationLength != 0;
    assume AllocationLength > 0;
    havoc vslice_dummy_var_1610;
    call {:si_unique_call 3472} sdv_1607 := ExAllocatePoolWithTag(17, vslice_dummy_var_1610, -445357754);
    assume {:nonnull} EaSetHeader_2 != 0;
    assume EaSetHeader_2 > 0;
    assume {:nonnull} AllocationLength != 0;
    assume AllocationLength > 0;
    havoc vslice_dummy_var_1611;
    call {:si_unique_call 3473} sdv_RtlZeroMemory(0, vslice_dummy_var_1611);
    assume {:nonnull} FileName_3 != 0;
    assume FileName_3 > 0;
    havoc Tmp_2740;
    call {:si_unique_call 3474} sdv_RtlCopyMemory(0, 0, Tmp_2740);
    assume {:nonnull} AllocationLength != 0;
    assume AllocationLength > 0;
    FullEa := Buffer_33;
    goto L49;

  L49:
    call {:si_unique_call 3475} Tmp_2735, Tmp_2737, Tmp_2739, FullEa, Tmp_2744, sdv_1608, sdv_1609, Tmp_2745, Tmp_2746, Tmp_2747, Tmp_2750 := FatCreateEa_loop_L49(EaName, EaOffset, Tmp_2735, Tmp_2737, Tmp_2739, PackedEasLength, FullEa, Tmp_2744, EaSetHeader_2, sdv_1608, sdv_1609, Tmp_2745, Tmp_2746, Tmp_2747, AllocationLength, BytesPerCluster_6, Tmp_2750, IrpContext_182, Buffer_33, Length_20);
    goto L49_last;

  L49_last:
    Tmp_2745 := Length_20;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Buffer_33 + Tmp_2745 * 4 > FullEa;
    assume {:nonnull} EaName != 0;
    assume EaName > 0;
    assume {:nonnull} FullEa != 0;
    assume FullEa > 0;
    assume {:nonnull} FullEa != 0;
    assume FullEa > 0;
    havoc Tmp_2737;
    assume {:nonnull} EaName != 0;
    assume EaName > 0;
    call {:si_unique_call 3476} sdv_1608 := FatIsEaNameValid(IrpContext_182, EaName);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_1608 != 0;
    goto L60;

  L60:
    assume {:nonnull} FullEa != 0;
    assume FullEa > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} FullEa != 0;
    assume FullEa > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} IrpContext_182 != 0;
    assume IrpContext_182 > 0;
    havoc Tmp_2739;
    assume {:nonnull} Tmp_2739 != 0;
    assume Tmp_2739 > 0;
    assume {:nonnull} IrpContext_182 != 0;
    assume IrpContext_182 > 0;
    havoc Tmp_2744;
    assume {:nonnull} Tmp_2744 != 0;
    assume Tmp_2744 > 0;
    assume {:nonnull} IrpContext_182 != 0;
    assume IrpContext_182 > 0;
    call {:si_unique_call 3477} ExRaiseStatus(19);
    goto L61;

  L61:
    assume {:nonnull} EaSetHeader_2 != 0;
    assume EaSetHeader_2 > 0;
    assume {:nonnull} PackedEasLength != 0;
    assume PackedEasLength > 0;
    havoc vslice_dummy_var_1612;
    havoc vslice_dummy_var_1613;
    call {:si_unique_call 3478} sdv_1609 := FatLocateEaByName(IrpContext_182, vslice_dummy_var_1612, vslice_dummy_var_1613, EaName, EaOffset);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} sdv_1609 != 0;
    assume {:nonnull} EaOffset != 0;
    assume EaOffset > 0;
    assume {:nonnull} EaSetHeader_2 != 0;
    assume EaSetHeader_2 > 0;
    havoc vslice_dummy_var_1614;
    havoc vslice_dummy_var_1615;
    call {:si_unique_call 3479} FatDeletePackedEa(IrpContext_182, vslice_dummy_var_1614, PackedEasLength, vslice_dummy_var_1615);
    goto L72;

  L72:
    assume {:nonnull} FullEa != 0;
    assume FullEa > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L80;

  L80:
    assume {:nonnull} FullEa != 0;
    assume FullEa > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    Tmp_2746 := FullEa;
    goto L83;

  L83:
    FullEa := Tmp_2746;
    goto L83_dummy;

  L83_dummy:
    assume false;
    return;

  anon31_Then:
    Tmp_2747 := Length_20;
    Tmp_2746 := Buffer_33 + Tmp_2747 * 4;
    goto L83;

  anon30_Then:
    call {:si_unique_call 3480} FatAppendPackedEa(IrpContext_182, EaSetHeader_2, PackedEasLength, AllocationLength, FullEa, BytesPerCluster_6);
    goto L80;

  anon29_Then:
    assume {:partition} sdv_1609 == 0;
    goto L72;

  anon28_Then:
    goto L61;

  anon27_Then:
    goto L61;

  anon26_Then:
    assume {:partition} sdv_1608 == 0;
    assume {:nonnull} IrpContext_182 != 0;
    assume IrpContext_182 > 0;
    havoc Tmp_2750;
    assume {:nonnull} Tmp_2750 != 0;
    assume Tmp_2750 > 0;
    assume {:nonnull} IrpContext_182 != 0;
    assume IrpContext_182 > 0;
    havoc Tmp_2735;
    assume {:nonnull} Tmp_2735 != 0;
    assume Tmp_2735 > 0;
    assume {:nonnull} IrpContext_182 != 0;
    assume IrpContext_182 > 0;
    call {:si_unique_call 3481} ExRaiseStatus(19);
    goto L60;

  anon36_Then:
    assume {:partition} FullEa >= Buffer_33 + Tmp_2745 * 4;
    assume {:nonnull} PackedEasLength != 0;
    assume PackedEasLength > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} PackedEasLength != 0;
    assume PackedEasLength > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} IrpContext_182 != 0;
    assume IrpContext_182 > 0;
    call {:si_unique_call 3482} ExRaiseStatus(-1073741744);
    goto L92;

  L92:
    call {:si_unique_call 3483} FatGetEaFile#1(IrpContext_182, Vcb_101, EaDirent_3, EaBcb_3, 1, 1);
    LockedEaFcb_2 := 1;
    assume {:nonnull} PackedEasLength != 0;
    assume PackedEasLength > 0;
    havoc Tmp_2736;
    assume {:nonnull} EaBcb_3 != 0;
    assume EaBcb_3 > 0;
    assume {:nonnull} EaDirent_3 != 0;
    assume EaDirent_3 > 0;
    havoc vslice_dummy_var_1616;
    call {:si_unique_call 3484} FatAddEaSet(IrpContext_182, Vcb_101, Tmp_2736, vslice_dummy_var_1616, Mem_T.P_PACKED_DIRENT[EaDirent_3], EaHandle_3, EaSetRange_2);
    assume {:nonnull} EaSetRange_2 != 0;
    assume EaSetRange_2 > 0;
    assume {:nonnull} PackedEasLength != 0;
    assume PackedEasLength > 0;
    Tmp_2743 := PackedEasLength;
    assume {:nonnull} EaSetHeader_2 != 0;
    assume EaSetHeader_2 > 0;
    assume {:nonnull} Tmp_2743 != 0;
    assume Tmp_2743 > 0;
    assume {:nonnull} PackedEasLength != 0;
    assume PackedEasLength > 0;
    havoc Tmp_2741;
    call {:si_unique_call 3485} sdv_RtlCopyMemory(0, 0, Tmp_2741);
    assume {:nonnull} Vcb_101 != 0;
    assume Vcb_101 > 0;
    havoc vslice_dummy_var_1617;
    call {:si_unique_call 3486} FatMarkEaRangeDirty(IrpContext_182, vslice_dummy_var_1617, EaSetRange_2);
    call {:si_unique_call 3487} FatUnpinEaRange(IrpContext_182, EaSetRange_2);
    assume {:nonnull} Vcb_101 != 0;
    assume Vcb_101 > 0;
    goto L120;

  L120:
    assume {:nonnull} EaSetHeader_2 != 0;
    assume EaSetHeader_2 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 3488} sdv_ExFreePool(0);
    goto L121;

  L121:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} LockedEaFcb_2 != 0;
    assume {:nonnull} Vcb_101 != 0;
    assume Vcb_101 > 0;
    call {:si_unique_call 3489} ExReleaseResourceLite(0);
    goto L125;

  L125:
    assume {:nonnull} EaBcb_3 != 0;
    assume EaBcb_3 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} EaBcb_3 != 0;
    assume EaBcb_3 > 0;
    goto L129;

  L129:
    call {:si_unique_call 3490} FatUnpinEaRange(IrpContext_182, EaSetRange_2);
    return;

  anon35_Then:
    goto L129;

  anon34_Then:
    assume {:partition} LockedEaFcb_2 == 0;
    goto L125;

  anon33_Then:
    goto L121;

  anon32_Then:
    goto L92;

  anon25_Then:
    assume {:nonnull} EaHandle_3 != 0;
    assume EaHandle_3 > 0;
    goto L120;
}



procedure {:origName "FatReadEaSet"} FatReadEaSet(actual_IrpContext_183: int, actual_Vcb_102: int, actual_EaHandle_4: int, actual_FileName_4: int, actual_ReturnEntireSet: int, actual_EaSetRange_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatReadEaSet"} FatReadEaSet(actual_IrpContext_183: int, actual_Vcb_102: int, actual_EaHandle_4: int, actual_FileName_4: int, actual_ReturnEntireSet: int, actual_EaSetRange_3: int)
{
  var {:scalar} EaHeaderRange: int;
  var {:scalar} CbList: int;
  var {:pointer} EaSet: int;
  var {:scalar} EaOffsetRange: int;
  var {:pointer} Tmp_2758: int;
  var {:scalar} EaOffsetVbo: int;
  var {:scalar} EaOffsetCluster: int;
  var {:scalar} EaSetVbo: int;
  var {:scalar} BytesPerCluster_7: int;
  var {:pointer} EaHeader: int;
  var {:pointer} IrpContext_183: int;
  var {:pointer} Vcb_102: int;
  var {:scalar} EaHandle_4: int;
  var {:scalar} ReturnEntireSet: int;
  var {:pointer} EaSetRange_3: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_1618: int;
  var vslice_dummy_var_1619: int;
  var vslice_dummy_var_1620: int;
  var vslice_dummy_var_1621: int;
  var vslice_dummy_var_1622: int;
  var vslice_dummy_var_1623: int;
  var vslice_dummy_var_1624: int;
  var vslice_dummy_var_1625: int;

  anon0:
    call {:si_unique_call 3491} EaHeaderRange := __HAVOC_malloc(28);
    call {:si_unique_call 3492} vslice_dummy_var_477 := __HAVOC_malloc(4);
    call {:si_unique_call 3493} EaOffsetRange := __HAVOC_malloc(28);
    IrpContext_183 := actual_IrpContext_183;
    Vcb_102 := actual_Vcb_102;
    EaHandle_4 := actual_EaHandle_4;
    ReturnEntireSet := actual_ReturnEntireSet;
    EaSetRange_3 := actual_EaSetRange_3;
    call {:si_unique_call 3494} vslice_dummy_var_479 := __HAVOC_malloc(16);
    call {:si_unique_call 3495} vslice_dummy_var_480 := __HAVOC_malloc(960);
    call {:si_unique_call 3496} vslice_dummy_var_481 := __HAVOC_malloc(16);
    call {:si_unique_call 3497} vslice_dummy_var_482 := __HAVOC_malloc(16);
    call {:si_unique_call 3498} vslice_dummy_var_483 := __HAVOC_malloc(16);
    call {:si_unique_call 3499} BytesPerCluster_7 := corral_nondet();
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} 1 > EaHandle_4;
    goto L15;

  L15:
    assume {:nonnull} IrpContext_183 != 0;
    assume IrpContext_183 > 0;
    call {:si_unique_call 3500} ExRaiseStatus(-1073741743);
    goto L19;

  L19:
    call {:si_unique_call 3501} EaOffsetVbo := corral_nondet();
    call {:si_unique_call 3502} sdv_RtlZeroMemory(0, 52);
    call {:si_unique_call 3503} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} Vcb_102 != 0;
    assume Vcb_102 > 0;
    havoc vslice_dummy_var_1618;
    havoc vslice_dummy_var_1619;
    call {:si_unique_call 3504} FatPinEaRange(IrpContext_183, vslice_dummy_var_1618, vslice_dummy_var_1619, EaHeaderRange, 0, 512, -1073741743);
    assume {:nonnull} EaHeaderRange != 0;
    assume EaHeaderRange > 0;
    havoc EaHeader;
    assume {:nonnull} Vcb_102 != 0;
    assume Vcb_102 > 0;
    havoc vslice_dummy_var_1620;
    havoc vslice_dummy_var_1621;
    call {:si_unique_call 3505} FatPinEaRange(IrpContext_183, vslice_dummy_var_1620, vslice_dummy_var_1621, EaOffsetRange, EaOffsetVbo, 256, -1073741743);
    assume {:nonnull} EaOffsetRange != 0;
    assume EaOffsetRange > 0;
    havoc Tmp_2758;
    assume {:nonnull} Tmp_2758 != 0;
    assume Tmp_2758 > 0;
    havoc EaOffsetCluster;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} EaOffsetCluster == 65535;
    assume {:nonnull} IrpContext_183 != 0;
    assume IrpContext_183 > 0;
    call {:si_unique_call 3506} ExRaiseStatus(-1073741743);
    goto L42;

  L42:
    call {:si_unique_call 3507} vslice_dummy_var_478 := corral_nondet();
    assume {:nonnull} EaHeader != 0;
    assume EaHeader > 0;
    call {:si_unique_call 3508} EaSetVbo := corral_nondet();
    call {:si_unique_call 3509} FatUnpinEaRange(IrpContext_183, EaHeaderRange);
    call {:si_unique_call 3510} FatUnpinEaRange(IrpContext_183, EaOffsetRange);
    assume {:nonnull} Vcb_102 != 0;
    assume Vcb_102 > 0;
    havoc vslice_dummy_var_1622;
    havoc vslice_dummy_var_1623;
    call {:si_unique_call 3511} FatPinEaRange(IrpContext_183, vslice_dummy_var_1622, vslice_dummy_var_1623, EaSetRange_3, EaSetVbo, BytesPerCluster_7, -1073741762);
    assume {:nonnull} EaSetRange_3 != 0;
    assume EaSetRange_3 > 0;
    havoc EaSet;
    assume {:nonnull} EaSet != 0;
    assume EaSet > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L59;

  L59:
    assume {:nonnull} IrpContext_183 != 0;
    assume IrpContext_183 > 0;
    call {:si_unique_call 3512} ExRaiseStatus(-1073741762);
    goto L63;

  L63:
    assume {:nonnull} EaSet != 0;
    assume EaSet > 0;
    assume {:nonnull} EaSet != 0;
    assume EaSet > 0;
    assume {:nonnull} EaSet != 0;
    assume EaSet > 0;
    assume {:nonnull} EaSet != 0;
    assume EaSet > 0;
    call {:si_unique_call 3513} CbList := corral_nondet();
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} ReturnEntireSet != 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} CbList > BytesPerCluster_7;
    CbList := BAND(CbList + 26 + BytesPerCluster_7 - 1, BNOT(BytesPerCluster_7 - 1));
    call {:si_unique_call 3514} FatUnpinEaRange(IrpContext_183, EaSetRange_3);
    call {:si_unique_call 3515} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} Vcb_102 != 0;
    assume Vcb_102 > 0;
    havoc vslice_dummy_var_1624;
    havoc vslice_dummy_var_1625;
    call {:si_unique_call 3516} FatPinEaRange(IrpContext_183, vslice_dummy_var_1624, vslice_dummy_var_1625, EaSetRange_3, EaSetVbo, CbList, -1073741762);
    goto L65;

  L65:
    call {:si_unique_call 3517} FatUnpinEaRange(IrpContext_183, EaHeaderRange);
    call {:si_unique_call 3518} FatUnpinEaRange(IrpContext_183, EaOffsetRange);
    return;

  anon17_Then:
    assume {:partition} BytesPerCluster_7 >= CbList;
    goto L65;

  anon21_Then:
    assume {:partition} ReturnEntireSet == 0;
    goto L65;

  anon20_Then:
    assume {:nonnull} EaSet != 0;
    assume EaSet > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L63;

  anon16_Then:
    goto L59;

  anon19_Then:
    assume {:partition} EaOffsetCluster != 65535;
    goto L42;

  anon18_Then:
    assume {:partition} EaHandle_4 >= 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} EaHandle_4 <= 30719;
    goto L19;

  anon15_Then:
    assume {:partition} 30719 < EaHandle_4;
    goto L15;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_484: int;

  anon0:
    call {:si_unique_call 3519} vslice_dummy_var_484 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatGetEaLength"} FatGetEaLength(actual_IrpContext_184: int, actual_Vcb_103: int, actual_Dirent_40: int, actual_EaLength_6: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetEaLength"} FatGetEaLength(actual_IrpContext_184: int, actual_Vcb_103: int, actual_Dirent_40: int, actual_EaLength_6: int)
{
  var {:pointer} Tmp_2762: int;
  var {:pointer} EaDirent_4: int;
  var {:scalar} LockedEaFcb_3: int;
  var {:pointer} Buffer_34: int;
  var {:pointer} EaSetHeader_3: int;
  var {:pointer} EaBcb_4: int;
  var {:pointer} Tmp_2765: int;
  var {:scalar} ThisFilename_1: int;
  var {:scalar} EaSetRange_4: int;
  var {:pointer} IrpContext_184: int;
  var {:pointer} Vcb_103: int;
  var {:pointer} Dirent_40: int;
  var {:pointer} EaLength_6: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_1626: int;

  anon0:
    call {:si_unique_call 3520} EaDirent_4 := __HAVOC_malloc(4);
    call {:si_unique_call 3521} vslice_dummy_var_485 := __HAVOC_malloc(4);
    call {:si_unique_call 3522} EaBcb_4 := __HAVOC_malloc(4);
    call {:si_unique_call 3523} ThisFilename_1 := __HAVOC_malloc(12);
    call {:si_unique_call 3524} EaSetRange_4 := __HAVOC_malloc(28);
    IrpContext_184 := actual_IrpContext_184;
    Vcb_103 := actual_Vcb_103;
    Dirent_40 := actual_Dirent_40;
    EaLength_6 := actual_EaLength_6;
    call {:si_unique_call 3525} Buffer_34 := __HAVOC_malloc(48);
    assume {:nonnull} Vcb_103 != 0;
    assume Vcb_103 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L8;

  L8:
    assume {:nonnull} EaLength_6 != 0;
    assume EaLength_6 > 0;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:nonnull} Dirent_40 != 0;
    assume Dirent_40 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 3526} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} EaBcb_4 != 0;
    assume EaBcb_4 > 0;
    LockedEaFcb_3 := 0;
    call {:si_unique_call 3527} FatGetEaFile#1(IrpContext_184, Vcb_103, EaDirent_4, EaBcb_4, 0, 0);
    LockedEaFcb_3 := 1;
    assume {:nonnull} Vcb_103 != 0;
    assume Vcb_103 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L37;

  L37:
    assume {:nonnull} ThisFilename_1 != 0;
    assume ThisFilename_1 > 0;
    call {:si_unique_call 3528} Fat8dot3ToString(IrpContext_184, Dirent_40, 0, ThisFilename_1);
    assume {:nonnull} Dirent_40 != 0;
    assume Dirent_40 > 0;
    havoc vslice_dummy_var_1626;
    call {:si_unique_call 3529} FatReadEaSet(IrpContext_184, Vcb_103, vslice_dummy_var_1626, ThisFilename_1, 0, EaSetRange_4);
    assume {:nonnull} EaSetRange_4 != 0;
    assume EaSetRange_4 > 0;
    havoc EaSetHeader_3;
    Tmp_2765 := EaLength_6;
    assume {:nonnull} EaSetHeader_3 != 0;
    assume EaSetHeader_3 > 0;
    Tmp_2762 := cbList__EA_SET_HEADER(EaSetHeader_3);
    assume {:nonnull} Tmp_2762 != 0;
    assume Tmp_2762 > 0;
    assume {:nonnull} Tmp_2765 != 0;
    assume Tmp_2765 > 0;
    assume {:nonnull} Tmp_2762 != 0;
    assume Tmp_2762 > 0;
    assume {:nonnull} Tmp_2765 != 0;
    assume Tmp_2765 > 0;
    assume {:nonnull} EaBcb_4 != 0;
    assume EaBcb_4 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} EaBcb_4 != 0;
    assume EaBcb_4 > 0;
    goto L47;

  L47:
    call {:si_unique_call 3530} FatUnpinEaRange(IrpContext_184, EaSetRange_4);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} LockedEaFcb_3 != 0;
    assume {:nonnull} Vcb_103 != 0;
    assume Vcb_103 > 0;
    call {:si_unique_call 3531} ExReleaseResourceLite(0);
    goto L1;

  anon13_Then:
    assume {:partition} LockedEaFcb_3 == 0;
    goto L1;

  anon15_Then:
    goto L47;

  anon14_Then:
    assume {:nonnull} IrpContext_184 != 0;
    assume IrpContext_184 > 0;
    call {:si_unique_call 3532} ExRaiseStatus(-1073741742);
    goto L37;

  anon12_Then:
    goto L8;
}



procedure {:origName "FatUnpinEaRange"} FatUnpinEaRange(actual_IrpContext_186: int, actual_EaRange: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatUnpinEaRange"} FatUnpinEaRange(actual_IrpContext_186: int, actual_EaRange: int)
{
  var {:pointer} Tmp_2771: int;
  var {:scalar} Tmp_2774: int;
  var {:scalar} BcbCount: int;
  var {:pointer} NextBcb: int;
  var {:pointer} EaRange: int;
  var vslice_dummy_var_486: int;

  anon0:
    call {:si_unique_call 3533} vslice_dummy_var_486 := __HAVOC_malloc(4);
    EaRange := actual_EaRange;
    call {:si_unique_call 3534} Tmp_2771 := __HAVOC_malloc(32);
    assume {:nonnull} EaRange != 0;
    assume EaRange > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 3535} sdv_ExFreePool(0);
    assume {:nonnull} EaRange != 0;
    assume EaRange > 0;
    goto L6;

  L6:
    assume {:nonnull} EaRange != 0;
    assume EaRange > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} EaRange != 0;
    assume EaRange > 0;
    havoc BcbCount;
    assume {:nonnull} EaRange != 0;
    assume EaRange > 0;
    havoc NextBcb;
    goto L14;

  L14:
    call {:si_unique_call 3536} Tmp_2774, BcbCount := FatUnpinEaRange_loop_L14(Tmp_2774, BcbCount, NextBcb);
    goto L14_last;

  L14_last:
    Tmp_2774 := BcbCount;
    BcbCount := BcbCount - 1;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Tmp_2774 != 0;
    assume {:nonnull} NextBcb != 0;
    assume NextBcb > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} NextBcb != 0;
    assume NextBcb > 0;
    goto L17;

  L17:
    goto L17_dummy;

  L17_dummy:
    assume false;
    return;

  anon13_Then:
    goto L17;

  anon14_Then:
    assume {:partition} Tmp_2774 == 0;
    assume {:nonnull} EaRange != 0;
    assume EaRange > 0;
    havoc Tmp_2771;
    assume {:nonnull} EaRange != 0;
    assume EaRange > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 3537} sdv_ExFreePool(0);
    goto L22;

  L22:
    assume {:nonnull} EaRange != 0;
    assume EaRange > 0;
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L22;

  anon12_Then:
    goto L1;

  anon11_Then:
    goto L6;
}



procedure {:origName "FatIsEaNameValid"} FatIsEaNameValid(actual_IrpContext_187: int, actual_structPtr888Name: int) returns (Tmp_2775: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2775 == 0 || Tmp_2775 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsEaNameValid"} FatIsEaNameValid(actual_IrpContext_187: int, actual_structPtr888Name: int) returns (Tmp_2775: int)
{
  var {:scalar} Name: int;
  var {:scalar} Char_1: int;
  var {:pointer} Tmp_2776: int;
  var {:scalar} Tmp_2777: int;
  var {:scalar} Tmp_2778: int;
  var {:scalar} Tmp_2779: int;
  var {:scalar} Tmp_2780: int;
  var {:scalar} Tmp_2782: int;
  var {:pointer} Tmp_2783: int;
  var {:scalar} Tmp_2784: int;
  var {:scalar} Index_8: int;
  var {:pointer} structPtr888Name: int;

  anon0:
    call {:si_unique_call 3538} Name := __HAVOC_malloc(12);
    structPtr888Name := actual_structPtr888Name;
    assume {:nonnull} Name != 0;
    assume Name > 0;
    assume {:nonnull} structPtr888Name != 0;
    assume structPtr888Name > 0;
    assume {:nonnull} Name != 0;
    assume Name > 0;
    assume {:nonnull} structPtr888Name != 0;
    assume structPtr888Name > 0;
    assume {:nonnull} Name != 0;
    assume Name > 0;
    assume {:nonnull} structPtr888Name != 0;
    assume structPtr888Name > 0;
    assume {:nonnull} Name != 0;
    assume Name > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Name != 0;
    assume Name > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    Tmp_2775 := 0;
    goto L1;

  L1:
    return;

  anon20_Then:
    Index_8 := 0;
    goto L10;

  L10:
    call {:si_unique_call 3539} Char_1, Tmp_2776, Tmp_2777, Tmp_2778, Tmp_2779, Tmp_2780, Tmp_2782, Tmp_2783, Tmp_2784, Index_8 := FatIsEaNameValid_loop_L10(Name, Char_1, Tmp_2776, Tmp_2777, Tmp_2778, Tmp_2779, Tmp_2780, Tmp_2782, Tmp_2783, Tmp_2784, Index_8);
    goto L10_last;

  L10_last:
    assume {:nonnull} Name != 0;
    assume Name > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    Tmp_2778 := Index_8;
    assume {:nonnull} Name != 0;
    assume Name > 0;
    havoc Char_1;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 128 > Char_1;
    Tmp_2777 := 0;
    goto L16;

  L16:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Tmp_2777 != 0;
    Index_8 := Index_8 + 1;
    goto L20;

  L20:
    Index_8 := Index_8 + 1;
    goto L20_dummy;

  L20_dummy:
    assume false;
    return;

  anon23_Then:
    assume {:partition} Tmp_2777 == 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} 0 > Char_1;
    Tmp_2779 := 1;
    goto L23;

  L23:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Tmp_2779 == 0;
    Tmp_2775 := 0;
    goto L1;

  anon25_Then:
    assume {:partition} Tmp_2779 != 0;
    goto L20;

  anon24_Then:
    assume {:partition} Char_1 >= 0;
    Tmp_2782 := Char_1;
    assume {:nonnull} FsRtlLegalAnsiCharacterArray != 0;
    assume FsRtlLegalAnsiCharacterArray > 0;
    havoc Tmp_2783;
    assume {:nonnull} Tmp_2783 != 0;
    assume Tmp_2783 > 0;
    havoc Tmp_2779;
    goto L23;

  anon26_Then:
    assume {:partition} Char_1 >= 128;
    assume {:nonnull} NlsMbOemCodePageTag != 0;
    assume NlsMbOemCodePageTag > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    Tmp_2784 := Char_1;
    assume {:nonnull} NlsOemLeadByteInfo != 0;
    assume NlsOemLeadByteInfo > 0;
    havoc Tmp_2776;
    assume {:nonnull} Tmp_2776 != 0;
    assume Tmp_2776 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    Tmp_2780 := 1;
    goto L28;

  L28:
    Tmp_2777 := Tmp_2780;
    goto L16;

  anon27_Then:
    goto L25;

  L25:
    Tmp_2780 := 0;
    goto L28;

  anon22_Then:
    goto L25;

  anon21_Then:
    Tmp_2775 := 1;
    goto L1;

  anon19_Then:
    Tmp_2775 := 0;
    goto L1;
}



procedure {:origName "FatAppendPackedEa"} FatAppendPackedEa(actual_IrpContext_188: int, actual_EaSetHeader_4: int, actual_PackedEasLength_1: int, actual_AllocationLength_1: int, actual_FullEa_1: int, actual_BytesPerCluster_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAppendPackedEa"} FatAppendPackedEa(actual_IrpContext_188: int, actual_EaSetHeader_4: int, actual_PackedEasLength_1: int, actual_AllocationLength_1: int, actual_FullEa_1: int, actual_BytesPerCluster_8: int)
{
  var {:scalar} EaName_1: int;
  var {:pointer} Temp_1: int;
  var {:pointer} Tmp_2787: int;
  var {:pointer} Tmp_2788: int;
  var {:scalar} Tmp_2789: int;
  var {:scalar} OldAllocationSize: int;
  var {:pointer} ThisPackedEa: int;
  var {:pointer} Tmp_2791: int;
  var {:scalar} PackedEaSize: int;
  var {:pointer} Tmp_2793: int;
  var {:scalar} NewAllocationSize_1: int;
  var {:pointer} Tmp_2794: int;
  var {:scalar} Tmp_2795: int;
  var {:pointer} EaSetHeader_4: int;
  var {:pointer} PackedEasLength_1: int;
  var {:pointer} AllocationLength_1: int;
  var {:pointer} FullEa_1: int;
  var {:scalar} BytesPerCluster_8: int;
  var vslice_dummy_var_487: int;

  anon0:
    call {:si_unique_call 3540} EaName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 3541} vslice_dummy_var_487 := __HAVOC_malloc(4);
    EaSetHeader_4 := actual_EaSetHeader_4;
    PackedEasLength_1 := actual_PackedEasLength_1;
    AllocationLength_1 := actual_AllocationLength_1;
    FullEa_1 := actual_FullEa_1;
    BytesPerCluster_8 := actual_BytesPerCluster_8;
    call {:si_unique_call 3542} Tmp_2794 := __HAVOC_malloc(4);
    assume {:nonnull} FullEa_1 != 0;
    assume FullEa_1 > 0;
    havoc PackedEaSize;
    assume {:nonnull} AllocationLength_1 != 0;
    assume AllocationLength_1 > 0;
    assume {:nonnull} PackedEasLength_1 != 0;
    assume PackedEasLength_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} PackedEasLength_1 != 0;
    assume PackedEasLength_1 > 0;
    havoc NewAllocationSize_1;
    call {:si_unique_call 3543} Temp_1 := ExAllocatePoolWithTag(17, NewAllocationSize_1, -445357754);
    assume {:nonnull} AllocationLength_1 != 0;
    assume AllocationLength_1 > 0;
    havoc OldAllocationSize;
    call {:si_unique_call 3544} sdv_RtlCopyMemory(0, 0, OldAllocationSize);
    call {:si_unique_call 3545} sdv_ExFreePool(0);
    assume {:nonnull} EaSetHeader_4 != 0;
    assume EaSetHeader_4 > 0;
    Tmp_2795 := NewAllocationSize_1 - OldAllocationSize;
    assume {:nonnull} AllocationLength_1 != 0;
    assume AllocationLength_1 > 0;
    havoc Tmp_2789;
    assume {:nonnull} EaSetHeader_4 != 0;
    assume EaSetHeader_4 > 0;
    havoc Tmp_2791;
    assume {:nonnull} Tmp_2791 != 0;
    assume Tmp_2791 > 0;
    havoc Tmp_2794;
    call {:si_unique_call 3546} sdv_RtlZeroMemory(0, Tmp_2795);
    assume {:nonnull} AllocationLength_1 != 0;
    assume AllocationLength_1 > 0;
    goto L8;

  L8:
    assume {:nonnull} FullEa_1 != 0;
    assume FullEa_1 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} EaSetHeader_4 != 0;
    assume EaSetHeader_4 > 0;
    havoc Tmp_2793;
    assume {:nonnull} EaSetHeader_4 != 0;
    assume EaSetHeader_4 > 0;
    havoc Tmp_2788;
    assume {:nonnull} EaSetHeader_4 != 0;
    assume EaSetHeader_4 > 0;
    assume {:nonnull} Tmp_2788 != 0;
    assume Tmp_2788 > 0;
    assume {:nonnull} Tmp_2793 != 0;
    assume Tmp_2793 > 0;
    goto L31;

  L31:
    assume {:nonnull} EaSetHeader_4 != 0;
    assume EaSetHeader_4 > 0;
    havoc Tmp_2787;
    assume {:nonnull} Tmp_2787 != 0;
    assume Tmp_2787 > 0;
    havoc ThisPackedEa;
    call {:si_unique_call 3547} sdv_RtlCopyMemory(0, 0, PackedEaSize);
    assume {:nonnull} EaName_1 != 0;
    assume EaName_1 > 0;
    assume {:nonnull} FullEa_1 != 0;
    assume FullEa_1 > 0;
    assume {:nonnull} EaName_1 != 0;
    assume EaName_1 > 0;
    assume {:nonnull} EaName_1 != 0;
    assume EaName_1 > 0;
    assume {:nonnull} ThisPackedEa != 0;
    assume ThisPackedEa > 0;
    assume {:nonnull} PackedEasLength_1 != 0;
    assume PackedEasLength_1 > 0;
    return;

  anon5_Then:
    goto L31;

  anon6_Then:
    goto L8;
}



procedure {:origName "FatLocateNextEa"} FatLocateNextEa(actual_IrpContext_189: int, actual_FirstPackedEa: int, actual_PackedEasLength_2: int, actual_PreviousOffset: int) returns (Tmp_2797: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLocateNextEa"} FatLocateNextEa(actual_IrpContext_189: int, actual_FirstPackedEa: int, actual_PackedEasLength_2: int, actual_PreviousOffset: int) returns (Tmp_2797: int)
{
  var {:scalar} Offset_5: int;
  var {:pointer} PackedEa: int;
  var {:pointer} Tmp_2799: int;
  var {:scalar} s_p_e_c_i_a_l_8: int;
  var {:scalar} s_p_e_c_i_a_l_9: int;
  var {:scalar} PackedEaSize_1: int;
  var {:pointer} Tmp_2800: int;
  var {:pointer} FirstPackedEa: int;
  var {:scalar} PackedEasLength_2: int;
  var {:scalar} PreviousOffset: int;

  anon0:
    FirstPackedEa := actual_FirstPackedEa;
    PackedEasLength_2 := actual_PackedEasLength_2;
    PreviousOffset := actual_PreviousOffset;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} PreviousOffset >= PackedEasLength_2;
    Tmp_2797 := -1;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} PackedEasLength_2 > PreviousOffset;
    PackedEa := FirstPackedEa;
    s_p_e_c_i_a_l_8 := 0;
    s_p_e_c_i_a_l_9 := 0;
    assume {:nonnull} PackedEa != 0;
    assume PackedEa > 0;
    Tmp_2800 := EaNameLength__PACKED_EA(PackedEa);
    assume {:nonnull} Tmp_2800 != 0;
    assume Tmp_2800 > 0;
    havoc s_p_e_c_i_a_l_8;
    s_p_e_c_i_a_l_9 := 0;
    assume {:nonnull} PackedEa != 0;
    assume PackedEa > 0;
    Tmp_2799 := EaValueLength__PACKED_EA(PackedEa);
    assume {:nonnull} Tmp_2799 != 0;
    assume Tmp_2799 > 0;
    havoc s_p_e_c_i_a_l_9;
    PackedEaSize_1 := 4 + s_p_e_c_i_a_l_8 + 1 + s_p_e_c_i_a_l_9;
    Offset_5 := PreviousOffset + PackedEaSize_1;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Offset_5 >= PackedEasLength_2;
    Offset_5 := -1;
    goto L19;

  L19:
    Tmp_2797 := Offset_5;
    goto L1;

  anon6_Then:
    assume {:partition} PackedEasLength_2 > Offset_5;
    goto L19;
}



procedure {:origName "FatDeletePackedEa"} FatDeletePackedEa(actual_IrpContext_190: int, actual_EaSetHeader_5: int, actual_PackedEasLength_3: int, actual_Offset_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeletePackedEa"} FatDeletePackedEa(actual_IrpContext_190: int, actual_EaSetHeader_5: int, actual_PackedEasLength_3: int, actual_Offset_6: int)
{
  var {:scalar} Tmp_2801: int;
  var {:scalar} Tmp_2802: int;
  var {:pointer} PackedEa_1: int;
  var {:pointer} Tmp_2803: int;
  var {:scalar} Tmp_2804: int;
  var {:pointer} Tmp_2807: int;
  var {:scalar} s_p_e_c_i_a_l_10: int;
  var {:scalar} s_p_e_c_i_a_l_11: int;
  var {:pointer} Tmp_2810: int;
  var {:scalar} PackedEaSize_2: int;
  var {:pointer} Tmp_2811: int;
  var {:pointer} EaSetHeader_5: int;
  var {:pointer} PackedEasLength_3: int;
  var {:scalar} Offset_6: int;
  var vslice_dummy_var_488: int;

  anon0:
    call {:si_unique_call 3548} vslice_dummy_var_488 := __HAVOC_malloc(4);
    EaSetHeader_5 := actual_EaSetHeader_5;
    PackedEasLength_3 := actual_PackedEasLength_3;
    Offset_6 := actual_Offset_6;
    call {:si_unique_call 3549} Tmp_2803 := __HAVOC_malloc(4);
    call {:si_unique_call 3550} Tmp_2810 := __HAVOC_malloc(4);
    Tmp_2801 := Offset_6;
    assume {:nonnull} EaSetHeader_5 != 0;
    assume EaSetHeader_5 > 0;
    havoc Tmp_2810;
    PackedEa_1 := Tmp_2810 + Tmp_2801 * 4;
    s_p_e_c_i_a_l_10 := 0;
    s_p_e_c_i_a_l_11 := 0;
    assume {:nonnull} PackedEa_1 != 0;
    assume PackedEa_1 > 0;
    Tmp_2807 := EaNameLength__PACKED_EA(PackedEa_1);
    assume {:nonnull} Tmp_2807 != 0;
    assume Tmp_2807 > 0;
    havoc s_p_e_c_i_a_l_10;
    s_p_e_c_i_a_l_11 := 0;
    assume {:nonnull} PackedEa_1 != 0;
    assume PackedEa_1 > 0;
    Tmp_2811 := EaValueLength__PACKED_EA(PackedEa_1);
    assume {:nonnull} Tmp_2811 != 0;
    assume Tmp_2811 > 0;
    havoc s_p_e_c_i_a_l_11;
    PackedEaSize_2 := 4 + s_p_e_c_i_a_l_10 + 1 + s_p_e_c_i_a_l_11;
    assume {:nonnull} PackedEa_1 != 0;
    assume PackedEa_1 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} EaSetHeader_5 != 0;
    assume EaSetHeader_5 > 0;
    goto L15;

  L15:
    assume {:nonnull} PackedEasLength_3 != 0;
    assume PackedEasLength_3 > 0;
    havoc Tmp_2802;
    call {:si_unique_call 3551} sdv_RtlCopyMemory(0, 0, Tmp_2802);
    assume {:nonnull} PackedEasLength_3 != 0;
    assume PackedEasLength_3 > 0;
    havoc Tmp_2804;
    assume {:nonnull} EaSetHeader_5 != 0;
    assume EaSetHeader_5 > 0;
    havoc Tmp_2803;
    call {:si_unique_call 3552} sdv_RtlZeroMemory(0, PackedEaSize_2);
    assume {:nonnull} PackedEasLength_3 != 0;
    assume PackedEasLength_3 > 0;
    return;

  anon3_Then:
    goto L15;
}



procedure {:origName "FatPinEaRange"} FatPinEaRange(actual_IrpContext_191: int, actual_VirtualEaFile: int, actual_EaFcb_2: int, actual_EaRange_1: int, actual_StartingVbo_8: int, actual_Length_21: int, actual_ErrorStatus_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPinEaRange"} FatPinEaRange(actual_IrpContext_191: int, actual_VirtualEaFile: int, actual_EaFcb_2: int, actual_EaRange_1: int, actual_StartingVbo_8: int, actual_Length_21: int, actual_ErrorStatus_1: int)
{
  var {:scalar} LargeVbo: int;
  var {:scalar} Tmp_2814: int;
  var {:scalar} FirstPage: int;
  var {:pointer} sdv_1611: int;
  var {:scalar} Tmp_2815: int;
  var {:pointer} Buffer_35: int;
  var {:pointer} sdv_1612: int;
  var {:scalar} Tmp_2816: int;
  var {:scalar} sdv_1613: int;
  var {:scalar} Tmp_2817: int;
  var {:scalar} Tmp_2819: int;
  var {:scalar} Tmp_2820: int;
  var {:pointer} DestinationBuffer: int;
  var {:pointer} NextBcb_1: int;
  var {:scalar} ByteCount_21: int;
  var {:pointer} IrpContext_191: int;
  var {:pointer} EaFcb_2: int;
  var {:pointer} EaRange_1: int;
  var {:scalar} StartingVbo_8: int;
  var {:scalar} Length_21: int;
  var {:scalar} ErrorStatus_1: int;
  var vslice_dummy_var_489: int;

  anon0:
    call {:si_unique_call 3553} LargeVbo := __HAVOC_malloc(20);
    call {:si_unique_call 3554} vslice_dummy_var_489 := __HAVOC_malloc(4);
    IrpContext_191 := actual_IrpContext_191;
    EaFcb_2 := actual_EaFcb_2;
    EaRange_1 := actual_EaRange_1;
    StartingVbo_8 := actual_StartingVbo_8;
    Length_21 := actual_Length_21;
    ErrorStatus_1 := actual_ErrorStatus_1;
    FirstPage := 1;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Length_21 != 0;
    assume {:nonnull} EaFcb_2 != 0;
    assume EaFcb_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} EaFcb_2 != 0;
    assume EaFcb_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L14;

  L14:
    Tmp_2816 := BAND(StartingVbo_8, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(262144, 524288), 1048576), 2097152), 4194304), 8388608), 16777216), 33554432), 67108864), 134217728), 268435456), 536870912), 1073741824), -2147483648)));
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Tmp_2816 + Length_21 > 262144;
    call {:si_unique_call 3555} sdv_1611 := ExAllocatePoolWithTag(17, Length_21, -462134970);
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    havoc DestinationBuffer;
    goto L16;

  L16:
    Tmp_2817 := BAND(StartingVbo_8, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048));
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    havoc Tmp_2814;
    call {:si_unique_call 3556} sdv_1612 := ExAllocatePoolWithTag(17, Tmp_2814, -495689402);
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    havoc Tmp_2820;
    call {:si_unique_call 3557} sdv_RtlZeroMemory(0, Tmp_2820);
    goto L35;

  L35:
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    Tmp_2815 := BAND(StartingVbo_8, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048));
    ByteCount_21 := 4096 - Tmp_2815;
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    havoc NextBcb_1;
    goto L40;

  L40:
    call {:si_unique_call 3558} FirstPage, sdv_1613, Tmp_2819, ByteCount_21, StartingVbo_8, Length_21 := FatPinEaRange_loop_L40(LargeVbo, FirstPage, Buffer_35, sdv_1613, Tmp_2819, DestinationBuffer, NextBcb_1, ByteCount_21, IrpContext_191, EaRange_1, StartingVbo_8, Length_21);
    goto L40_last;

  L40_last:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Length_21 != 0;
    assume {:nonnull} LargeVbo != 0;
    assume LargeVbo > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} ByteCount_21 > Length_21;
    ByteCount_21 := Length_21;
    goto L44;

  L44:
    assume {:nonnull} IrpContext_191 != 0;
    assume IrpContext_191 > 0;
    havoc Tmp_2819;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Tmp_2819 == 0;
    goto L103;

  L103:
    call {:si_unique_call 3559} sdv_1613 := corral_nondet();
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_1613 != 0;
    goto L52;

  L52:
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 3560} sdv_RtlCopyMemory(0, 0, ByteCount_21);
    goto L54;

  L54:
    StartingVbo_8 := StartingVbo_8 + ByteCount_21;
    Length_21 := Length_21 - ByteCount_21;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} FirstPage != 0;
    FirstPage := 0;
    ByteCount_21 := 4096;
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    goto anon36_Else_dummy;

  anon36_Else_dummy:
    assume false;
    return;

  anon36_Then:
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} FirstPage == 0;
    goto anon35_Then_dummy;

  anon35_Then_dummy:
    assume false;
    return;

  anon34_Then:
    goto L54;

  anon28_Then:
    assume {:partition} sdv_1613 == 0;
    assume {:nonnull} IrpContext_191 != 0;
    assume IrpContext_191 > 0;
    call {:si_unique_call 3561} ExRaiseStatus(-1073741608);
    goto L52;

  anon33_Then:
    assume {:partition} Tmp_2819 != 0;
    goto L103;

  anon32_Then:
    assume {:partition} Length_21 >= ByteCount_21;
    goto L44;

  anon27_Then:
    assume {:partition} Length_21 == 0;
    return;

  anon31_Then:
    assume {:nonnull} EaRange_1 != 0;
    assume EaRange_1 > 0;
    goto L35;

  anon30_Then:
    assume {:partition} 262144 >= Tmp_2816 + Length_21;
    goto L16;

  anon26_Then:
    goto L11;

  L11:
    assume {:nonnull} IrpContext_191 != 0;
    assume IrpContext_191 > 0;
    call {:si_unique_call 3562} ExRaiseStatus(ErrorStatus_1);
    goto L14;

  anon25_Then:
    goto L11;

  anon29_Then:
    assume {:partition} Length_21 == 0;
    goto L11;
}



procedure {:origName "FatDeleteEaSet"} FatDeleteEaSet(actual_IrpContext_192: int, actual_Vcb_105: int, actual_EaBcb_6: int, actual_EaDirent_6: int, actual_EaHandle_6: int, actual_FileName_6: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeleteEaSet"} FatDeleteEaSet(actual_IrpContext_192: int, actual_Vcb_105: int, actual_EaBcb_6: int, actual_EaDirent_6: int, actual_EaHandle_6: int, actual_FileName_6: int)
{
  var {:scalar} UnwindPrevFileSize: int;
  var {:scalar} EaHeaderRange_1: int;
  var {:scalar} UnwindInitializeDataMcb: int;
  var {:scalar} DataMcb: int;
  var {:pointer} Tmp_2822: int;
  var {:scalar} Count_1: int;
  var {:pointer} EaSet_1: int;
  var {:scalar} PurgeCount: int;
  var {:scalar} UnwindCacheValues: int;
  var {:pointer} Tmp_2826: int;
  var {:scalar} EaOffsetRange_1: int;
  var {:scalar} UnwindSplitTail: int;
  var {:scalar} Iosb_25: int;
  var {:scalar} UnwindMergeTail: int;
  var {:pointer} Tmp_2828: int;
  var {:scalar} sdv_1615: int;
  var {:scalar} UnwindModifiedEaHeader: int;
  var {:scalar} EaSetClusterCount: int;
  var {:scalar} EaSetLength: int;
  var {:scalar} FileOffset_5: int;
  var {:scalar} Tmp_2830: int;
  var {:pointer} VirtualEaFile_1: int;
  var {:scalar} sdv_1617: int;
  var {:scalar} EaOffsetVbo_1: int;
  var {:scalar} EaOffsetCluster_1: int;
  var {:scalar} UnwindSplitData: int;
  var {:scalar} EaOffsetIndex: int;
  var {:scalar} EaHeaderBaseIndex: int;
  var {:pointer} NextEaIndex: int;
  var {:scalar} Tmp_2831: int;
  var {:pointer} EaFcb_3: int;
  var {:scalar} EaSetVbo_1: int;
  var {:scalar} TailMcb: int;
  var {:scalar} UnwindInitializeTailMcb: int;
  var {:scalar} BytesPerCluster_9: int;
  var {:scalar} Tmp_2834: int;
  var {:scalar} EaSetRange_5: int;
  var {:pointer} EaHeader_1: int;
  var {:pointer} IrpContext_192: int;
  var {:pointer} Vcb_105: int;
  var {:pointer} EaBcb_6: int;
  var {:pointer} EaDirent_6: int;
  var {:scalar} EaHandle_6: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;

  anon0:
    call {:si_unique_call 3563} EaHeaderRange_1 := __HAVOC_malloc(28);
    call {:si_unique_call 3564} DataMcb := __HAVOC_malloc(24);
    call {:si_unique_call 3565} vslice_dummy_var_490 := __HAVOC_malloc(4);
    call {:si_unique_call 3566} EaOffsetRange_1 := __HAVOC_malloc(28);
    call {:si_unique_call 3567} Iosb_25 := __HAVOC_malloc(12);
    call {:si_unique_call 3568} FileOffset_5 := __HAVOC_malloc(20);
    call {:si_unique_call 3569} TailMcb := __HAVOC_malloc(24);
    call {:si_unique_call 3570} EaSetRange_5 := __HAVOC_malloc(28);
    IrpContext_192 := actual_IrpContext_192;
    Vcb_105 := actual_Vcb_105;
    EaBcb_6 := actual_EaBcb_6;
    EaDirent_6 := actual_EaDirent_6;
    EaHandle_6 := actual_EaHandle_6;
    call {:si_unique_call 3571} vslice_dummy_var_491 := __HAVOC_malloc(16);
    call {:si_unique_call 3572} vslice_dummy_var_492 := __HAVOC_malloc(16);
    call {:si_unique_call 3573} vslice_dummy_var_493 := __HAVOC_malloc(16);
    call {:si_unique_call 3574} Tmp_2826 := __HAVOC_malloc(960);
    call {:si_unique_call 3575} vslice_dummy_var_494 := __HAVOC_malloc(16);
    call {:si_unique_call 3576} vslice_dummy_var_495 := __HAVOC_malloc(960);
    call {:si_unique_call 3577} BytesPerCluster_9 := corral_nondet();
    UnwindInitializeDataMcb := 0;
    UnwindSplitData := 0;
    UnwindInitializeTailMcb := 0;
    UnwindSplitTail := 0;
    UnwindMergeTail := 0;
    UnwindModifiedEaHeader := 0;
    UnwindCacheValues := 0;
    UnwindPrevFileSize := 0;
    assume {:nonnull} Vcb_105 != 0;
    assume Vcb_105 > 0;
    havoc VirtualEaFile_1;
    assume {:nonnull} Vcb_105 != 0;
    assume Vcb_105 > 0;
    havoc EaFcb_3;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} 1 > EaHandle_6;
    goto L43;

  L43:
    assume {:nonnull} IrpContext_192 != 0;
    assume IrpContext_192 > 0;
    call {:si_unique_call 3578} ExRaiseStatus(-1073741743);
    goto L47;

  L47:
    call {:si_unique_call 3579} EaOffsetVbo_1 := corral_nondet();
    call {:si_unique_call 3580} sdv_RtlZeroMemory(0, 52);
    call {:si_unique_call 3581} sdv_RtlZeroMemory(0, 52);
    call {:si_unique_call 3582} sdv_RtlZeroMemory(0, 52);
    call {:si_unique_call 3583} FatPinEaRange(IrpContext_192, VirtualEaFile_1, EaFcb_3, EaHeaderRange_1, 0, 512, -1073741743);
    assume {:nonnull} EaHeaderRange_1 != 0;
    assume EaHeaderRange_1 > 0;
    havoc EaHeader_1;
    call {:si_unique_call 3584} FatPinEaRange(IrpContext_192, VirtualEaFile_1, EaFcb_3, EaOffsetRange_1, EaOffsetVbo_1, 256, -1073741743);
    EaOffsetIndex := BAND(EaHandle_6, BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64));
    assume {:nonnull} EaOffsetRange_1 != 0;
    assume EaOffsetRange_1 > 0;
    havoc Tmp_2822;
    assume {:nonnull} Tmp_2822 != 0;
    assume Tmp_2822 > 0;
    havoc EaOffsetCluster_1;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} EaOffsetCluster_1 == 65535;
    assume {:nonnull} IrpContext_192 != 0;
    assume IrpContext_192 > 0;
    call {:si_unique_call 3585} ExRaiseStatus(-1073741743);
    goto L109;

  L109:
    call {:si_unique_call 3586} EaHeaderBaseIndex := corral_nondet();
    assume {:nonnull} EaHeader_1 != 0;
    assume EaHeader_1 > 0;
    call {:si_unique_call 3587} EaSetVbo_1 := corral_nondet();
    call {:si_unique_call 3588} FatUnpinEaRange(IrpContext_192, EaHeaderRange_1);
    call {:si_unique_call 3589} FatUnpinEaRange(IrpContext_192, EaOffsetRange_1);
    call {:si_unique_call 3590} FatPinEaRange(IrpContext_192, VirtualEaFile_1, EaFcb_3, EaSetRange_5, EaSetVbo_1, BytesPerCluster_9, -1073741762);
    assume {:nonnull} EaSetRange_5 != 0;
    assume EaSetRange_5 > 0;
    havoc EaSet_1;
    assume {:nonnull} EaSet_1 != 0;
    assume EaSet_1 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L127;

  L127:
    assume {:nonnull} IrpContext_192 != 0;
    assume IrpContext_192 > 0;
    call {:si_unique_call 3591} ExRaiseStatus(-1073741762);
    goto L131;

  L131:
    assume {:nonnull} EaSet_1 != 0;
    assume EaSet_1 > 0;
    assume {:nonnull} EaSet_1 != 0;
    assume EaSet_1 > 0;
    assume {:nonnull} EaSet_1 != 0;
    assume EaSet_1 > 0;
    assume {:nonnull} EaSet_1 != 0;
    assume EaSet_1 > 0;
    call {:si_unique_call 3592} vslice_dummy_var_496 := corral_nondet();
    call {:si_unique_call 3593} EaSetClusterCount := corral_nondet();
    call {:si_unique_call 3594} EaSetLength := corral_nondet();
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} EaSetLength > BytesPerCluster_9;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} IrpContext_192 != 0;
    assume IrpContext_192 > 0;
    call {:si_unique_call 3595} ExRaiseStatus(-1073741762);
    goto L135;

  L135:
    call {:si_unique_call 3596} FatUnpinEaRange(IrpContext_192, EaSetRange_5);
    assume {:nonnull} FileOffset_5 != 0;
    assume FileOffset_5 > 0;
    assume {:nonnull} FileOffset_5 != 0;
    assume FileOffset_5 > 0;
    assume {:nonnull} FileOffset_5 != 0;
    assume FileOffset_5 > 0;
    PurgeCount := 5;
    goto L149;

  L149:
    call {:si_unique_call 3597} PurgeCount, sdv_1615 := FatDeleteEaSet_loop_L149(PurgeCount, Iosb_25, sdv_1615);
    goto L149_last;

  L149_last:
    assume {:CounterLoop 5} {:Counter "PurgeCount"} true;
    PurgeCount := PurgeCount - 1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} PurgeCount != 0;
    assume {:nonnull} Iosb_25 != 0;
    assume Iosb_25 > 0;
    call {:si_unique_call 3598} sdv_1615 := corral_nondet();
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_1615 != 0;
    goto L150;

  L150:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} PurgeCount != 0;
    goto L161;

  L161:
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    assume {:nonnull} FileOffset_5 != 0;
    assume FileOffset_5 > 0;
    UnwindInitializeDataMcb := 1;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    call {:si_unique_call 3599} FatSplitAllocation(IrpContext_192, Vcb_105, Mcb__FCB(EaFcb_3), EaSetVbo_1, DataMcb);
    UnwindSplitData := 1;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    UnwindInitializeTailMcb := 1;
    call {:si_unique_call 3600} FatSplitAllocation(IrpContext_192, Vcb_105, DataMcb, EaSetLength, TailMcb);
    UnwindSplitTail := 1;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    call {:si_unique_call 3601} FatMergeAllocation(IrpContext_192, Vcb_105, Mcb__FCB(EaFcb_3), TailMcb);
    UnwindMergeTail := 1;
    goto L171;

  L171:
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    havoc UnwindPrevFileSize;
    call {:si_unique_call 3602} vslice_dummy_var_497 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    call {:si_unique_call 3603} ExReleaseResourceLite(0);
    UnwindCacheValues := 1;
    assume {:nonnull} EaDirent_6 != 0;
    assume EaDirent_6 > 0;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    call {:si_unique_call 3604} FatSetDirtyBcb#1(IrpContext_192, EaBcb_6, Vcb_105, 1);
    call {:si_unique_call 3605} sdv_RtlZeroMemory(0, 52);
    call {:si_unique_call 3606} FatPinEaRange(IrpContext_192, VirtualEaFile_1, EaFcb_3, EaHeaderRange_1, 0, 512, -1073741743);
    assume {:nonnull} EaHeaderRange_1 != 0;
    assume EaHeaderRange_1 > 0;
    havoc EaHeader_1;
    call {:si_unique_call 3607} sdv_RtlZeroMemory(0, 52);
    call {:si_unique_call 3608} FatPinEaRange(IrpContext_192, VirtualEaFile_1, EaFcb_3, EaOffsetRange_1, EaOffsetVbo_1, 256, -1073741743);
    Count_1 := 240 - EaHeaderBaseIndex - 1;
    Tmp_2830 := EaHeaderBaseIndex + 1;
    assume {:nonnull} EaHeader_1 != 0;
    assume EaHeader_1 > 0;
    havoc Tmp_2826;
    NextEaIndex := Tmp_2826 + Tmp_2830 * 4;
    goto L217;

  L217:
    call {:si_unique_call 3609} Count_1, Tmp_2828, Tmp_2834 := FatDeleteEaSet_loop_L217(Count_1, Tmp_2828, EaSetClusterCount, NextEaIndex, Tmp_2834);
    goto L217_last;

  L217_last:
    Tmp_2834 := Count_1;
    Count_1 := Count_1 - 1;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Tmp_2834 != 0;
    Tmp_2828 := NextEaIndex;
    assume {:nonnull} NextEaIndex != 0;
    assume NextEaIndex > 0;
    assume {:nonnull} Tmp_2828 != 0;
    assume Tmp_2828 > 0;
    goto anon67_Else_dummy;

  anon67_Else_dummy:
    assume false;
    return;

  anon67_Then:
    assume {:partition} Tmp_2834 == 0;
    call {:si_unique_call 3610} FatMarkEaRangeDirty(IrpContext_192, VirtualEaFile_1, EaHeaderRange_1);
    Count_1 := 128 - EaOffsetIndex - 1;
    assume {:nonnull} EaOffsetRange_1 != 0;
    assume EaOffsetRange_1 > 0;
    havoc NextEaIndex;
    assume {:nonnull} NextEaIndex != 0;
    assume NextEaIndex > 0;
    goto L225;

  L225:
    call {:si_unique_call 3611} Count_1, Tmp_2831 := FatDeleteEaSet_loop_L225(Count_1, EaSetClusterCount, NextEaIndex, Tmp_2831);
    goto L225_last;

  L225_last:
    Tmp_2831 := Count_1;
    Count_1 := Count_1 - 1;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Tmp_2831 != 0;
    assume {:nonnull} NextEaIndex != 0;
    assume NextEaIndex > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} NextEaIndex != 0;
    assume NextEaIndex > 0;
    goto L230;

  L230:
    goto L230_dummy;

  L230_dummy:
    assume false;
    return;

  anon52_Then:
    goto L230;

  anon68_Then:
    assume {:partition} Tmp_2831 == 0;
    call {:si_unique_call 3612} FatMarkEaRangeDirty(IrpContext_192, VirtualEaFile_1, EaOffsetRange_1);
    UnwindModifiedEaHeader := 1;
    call {:si_unique_call 3613} FatDeallocateDiskSpace(IrpContext_192, Vcb_105, DataMcb);
    call {:si_unique_call 3614} sdv_1617 := sdv_AbnormalTermination();
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_1617 != 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} UnwindModifiedEaHeader == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} UnwindPrevFileSize != 0;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    assume {:nonnull} EaDirent_6 != 0;
    assume EaDirent_6 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} UnwindCacheValues != 0;
    goto L245;

  L245:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} UnwindMergeTail != 0;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    call {:si_unique_call 3615} FatSplitAllocation(IrpContext_192, Vcb_105, Mcb__FCB(EaFcb_3), EaSetVbo_1, TailMcb);
    goto L253;

  L253:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} UnwindSplitTail != 0;
    call {:si_unique_call 3616} FatMergeAllocation(IrpContext_192, Vcb_105, DataMcb, TailMcb);
    goto L257;

  L257:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} UnwindSplitData != 0;
    assume {:nonnull} EaFcb_3 != 0;
    assume EaFcb_3 > 0;
    call {:si_unique_call 3617} FatMergeAllocation(IrpContext_192, Vcb_105, Mcb__FCB(EaFcb_3), DataMcb);
    goto L240;

  L240:
    call {:si_unique_call 3618} FatUnpinEaRange(IrpContext_192, EaHeaderRange_1);
    call {:si_unique_call 3619} FatUnpinEaRange(IrpContext_192, EaOffsetRange_1);
    call {:si_unique_call 3620} FatUnpinEaRange(IrpContext_192, EaSetRange_5);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} UnwindInitializeDataMcb != 0;
    goto L271;

  L271:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} UnwindInitializeTailMcb != 0;
    goto L1;

  L1:
    return;

  anon60_Then:
    assume {:partition} UnwindInitializeTailMcb == 0;
    goto L1;

  anon59_Then:
    assume {:partition} UnwindInitializeDataMcb == 0;
    goto L271;

  anon58_Then:
    assume {:partition} UnwindSplitData == 0;
    goto L240;

  anon57_Then:
    assume {:partition} UnwindSplitTail == 0;
    goto L257;

  anon56_Then:
    assume {:partition} UnwindMergeTail == 0;
    goto L253;

  anon69_Then:
    assume {:partition} UnwindCacheValues == 0;
    goto L245;

  anon55_Then:
    assume {:partition} UnwindPrevFileSize == 0;
    goto L245;

  anon54_Then:
    assume {:partition} UnwindModifiedEaHeader != 0;
    goto L240;

  anon53_Then:
    assume {:partition} sdv_1617 == 0;
    goto L240;

  anon66_Then:
    goto L171;

  anon50_Then:
    assume {:partition} PurgeCount == 0;
    assume {:nonnull} IrpContext_192 != 0;
    assume IrpContext_192 > 0;
    call {:si_unique_call 3621} ExRaiseStatus(-1073741797);
    goto L161;

  anon51_Then:
    assume {:partition} sdv_1615 == 0;
    goto anon51_Then_dummy;

  anon51_Then_dummy:
    assume false;
    return;

  anon65_Then:
    assume {:partition} PurgeCount == 0;
    goto L150;

  anon49_Then:
    goto L135;

  anon64_Then:
    assume {:partition} BytesPerCluster_9 >= EaSetLength;
    goto L135;

  anon63_Then:
    assume {:nonnull} EaSet_1 != 0;
    assume EaSet_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto L131;

  anon48_Then:
    goto L127;

  anon62_Then:
    assume {:partition} EaOffsetCluster_1 != 65535;
    goto L109;

  anon61_Then:
    assume {:partition} EaHandle_6 >= 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} EaHandle_6 <= 30719;
    goto L47;

  anon47_Then:
    assume {:partition} 30719 < EaHandle_6;
    goto L43;
}



procedure {:origName "FatAddEaSet"} FatAddEaSet(actual_IrpContext_193: int, actual_Vcb_106: int, actual_EaSetLength_1: int, actual_EaBcb_7: int, actual_EaDirent_7: int, actual_EaHandle_7: int, actual_EaSetRange_6: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAddEaSet"} FatAddEaSet(actual_IrpContext_193: int, actual_Vcb_106: int, actual_EaSetLength_1: int, actual_EaBcb_7: int, actual_EaDirent_7: int, actual_EaHandle_7: int, actual_EaSetRange_6: int)
{
  var {:scalar} UnwindPrevFileSize_1: int;
  var {:scalar} EaHeaderRange_2: int;
  var {:pointer} EaOffsetTable: int;
  var {:scalar} UnwindMergedInitialEa: int;
  var {:scalar} Tmp_2835: int;
  var {:scalar} Tmp_2836: int;
  var {:scalar} UnwindMergedNewOffset: int;
  var {:scalar} Count_2: int;
  var {:pointer} EaSet_2: int;
  var {:scalar} UnwindCacheValues_1: int;
  var {:scalar} PurgeCount_1: int;
  var {:scalar} UnwindMergedTail: int;
  var {:scalar} UnwindInitializedTailMcb: int;
  var {:pointer} Tmp_2837: int;
  var {:scalar} EaInitialEaMcb: int;
  var {:scalar} EaOffsetRange_2: int;
  var {:scalar} UnwindSplitTail_1: int;
  var {:pointer} Tmp_2838: int;
  var {:scalar} EaTailMcb: int;
  var {:pointer} Tmp_2839: int;
  var {:scalar} Tmp_2840: int;
  var {:scalar} Iosb_26: int;
  var {:scalar} NewTailPosition: int;
  var {:scalar} NewEaIndex: int;
  var {:pointer} Tmp_2841: int;
  var {:scalar} TailExists: int;
  var {:dopa} {:scalar} NewAllocation_1: int;
  var {:scalar} EaSetMcb: int;
  var {:scalar} Tmp_2844: int;
  var {:scalar} UnwindSplitNewAllocation: int;
  var {:scalar} EaSetClusterCount_1: int;
  var {:scalar} FileOffset_6: int;
  var {:scalar} Tmp_2845: int;
  var {:scalar} EaOffsetTableSize: int;
  var {:scalar} UnwindMergedNewEaSet: int;
  var {:scalar} sdv_1620: int;
  var {:pointer} VirtualEaFile_2: int;
  var {:pointer} Tmp_2846: int;
  var {:scalar} sdv_1622: int;
  var {:scalar} UnwindAllocatedNewAllocation: int;
  var {:scalar} Tmp_2847: int;
  var {:scalar} EaHeaderIndex: int;
  var {:scalar} Tmp_2848: int;
  var {:scalar} EaOffsetIndex_1: int;
  var {:scalar} EaOffsetMcb: int;
  var {:scalar} Tmp_2849: int;
  var {:scalar} EaNewOffsetVbo: int;
  var {:pointer} EaFcb_4: int;
  var {:scalar} UnwindInitializedInitialEaMcb: int;
  var {:scalar} UnwindSplitInitialEa: int;
  var {:scalar} Tmp_2850: int;
  var {:scalar} EaSetVbo_2: int;
  var {:scalar} UnwindPurgeCacheMap: int;
  var {:scalar} UnwindInitializedEaSetMcb: int;
  var {:pointer} Tmp_2851: int;
  var {:pointer} NextEaOffset: int;
  var {:scalar} EaSetClusterOffset: int;
  var {:scalar} BytesPerCluster_10: int;
  var {:scalar} AddedOffsetTableCluster: int;
  var {:scalar} Tmp_2852: int;
  var {:scalar} UnwindInitializedOffsetMcb: int;
  var {:pointer} EaHeader_2: int;
  var {:pointer} IrpContext_193: int;
  var {:pointer} Vcb_106: int;
  var {:scalar} EaSetLength_1: int;
  var {:pointer} EaBcb_7: int;
  var {:pointer} EaDirent_7: int;
  var {:pointer} EaHandle_7: int;
  var {:pointer} EaSetRange_6: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;

  anon0:
    call {:si_unique_call 3622} EaHeaderRange_2 := __HAVOC_malloc(28);
    call {:si_unique_call 3623} EaInitialEaMcb := __HAVOC_malloc(24);
    call {:si_unique_call 3624} EaOffsetRange_2 := __HAVOC_malloc(28);
    call {:si_unique_call 3625} EaTailMcb := __HAVOC_malloc(24);
    call {:si_unique_call 3626} Iosb_26 := __HAVOC_malloc(12);
    call {:si_unique_call 3627} NewAllocation_1 := __HAVOC_malloc(4);
    call {:si_unique_call 3628} EaSetMcb := __HAVOC_malloc(24);
    call {:si_unique_call 3629} vslice_dummy_var_498 := __HAVOC_malloc(4);
    call {:si_unique_call 3630} FileOffset_6 := __HAVOC_malloc(20);
    call {:si_unique_call 3631} EaOffsetMcb := __HAVOC_malloc(24);
    IrpContext_193 := actual_IrpContext_193;
    Vcb_106 := actual_Vcb_106;
    EaSetLength_1 := actual_EaSetLength_1;
    EaBcb_7 := actual_EaBcb_7;
    EaDirent_7 := actual_EaDirent_7;
    EaHandle_7 := actual_EaHandle_7;
    EaSetRange_6 := actual_EaSetRange_6;
    call {:si_unique_call 3632} Tmp_2837 := __HAVOC_malloc(960);
    call {:si_unique_call 3633} Tmp_2838 := __HAVOC_malloc(960);
    call {:si_unique_call 3634} Tmp_2839 := __HAVOC_malloc(960);
    call {:si_unique_call 3635} Tmp_2846 := __HAVOC_malloc(960);
    call {:si_unique_call 3636} vslice_dummy_var_499 := __HAVOC_malloc(960);
    call {:si_unique_call 3637} BytesPerCluster_10 := corral_nondet();
    assume {:nonnull} Vcb_106 != 0;
    assume Vcb_106 > 0;
    havoc VirtualEaFile_2;
    assume {:nonnull} Vcb_106 != 0;
    assume Vcb_106 > 0;
    havoc EaFcb_4;
    UnwindInitializedEaSetMcb := 0;
    UnwindAllocatedNewAllocation := 0;
    UnwindMergedNewEaSet := 0;
    UnwindInitializedOffsetMcb := 0;
    UnwindSplitNewAllocation := 0;
    UnwindMergedNewOffset := 0;
    UnwindInitializedTailMcb := 0;
    UnwindSplitTail_1 := 0;
    UnwindMergedTail := 0;
    UnwindInitializedInitialEaMcb := 0;
    UnwindSplitInitialEa := 0;
    UnwindMergedInitialEa := 0;
    UnwindPrevFileSize_1 := 0;
    UnwindCacheValues_1 := 0;
    TailExists := 0;
    AddedOffsetTableCluster := 0;
    UnwindPurgeCacheMap := 0;
    call {:si_unique_call 3638} sdv_RtlZeroMemory(0, 52);
    call {:si_unique_call 3639} sdv_RtlZeroMemory(0, 52);
    call {:si_unique_call 3640} FatPinEaRange(IrpContext_193, VirtualEaFile_2, EaFcb_4, EaHeaderRange_2, 0, 512, -1073741762);
    assume {:nonnull} EaHeaderRange_2 != 0;
    assume EaHeaderRange_2 > 0;
    havoc EaHeader_2;
    assume {:nonnull} EaHeader_2 != 0;
    assume EaHeader_2 > 0;
    call {:si_unique_call 3641} EaNewOffsetVbo := corral_nondet();
    EaOffsetTableSize := EaNewOffsetVbo - 512;
    call {:si_unique_call 3642} FatPinEaRange(IrpContext_193, VirtualEaFile_2, EaFcb_4, EaOffsetRange_2, 512, EaOffsetTableSize, -1073741762);
    call {:si_unique_call 3643} EaSetClusterOffset := corral_nondet();
    call {:si_unique_call 3644} NewEaIndex := corral_nondet();
    assume {:nonnull} EaOffsetRange_2 != 0;
    assume EaOffsetRange_2 > 0;
    havoc NextEaOffset;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    goto L158;

  L158:
    call {:si_unique_call 3645} NewEaIndex := FatAddEaSet_loop_L158(NewEaIndex, NextEaOffset);
    goto L158_last;

  L158_last:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} NewEaIndex != 0;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} NewEaIndex != 1;
    call {:si_unique_call 3646} Tmp_2849 := corral_nondet();
    assume {:nonnull} EaHeader_2 != 0;
    assume EaHeader_2 > 0;
    havoc Tmp_2839;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    assume {:nonnull} Tmp_2839 != 0;
    assume Tmp_2839 > 0;
    havoc EaSetClusterOffset;
    TailExists := 1;
    goto L162;

  L162:
    NewEaIndex := NewEaIndex - 1;
    goto L157;

  L157:
    call {:si_unique_call 3647} NewEaIndex := FatAddEaSet_loop_L157(NewEaIndex, NextEaOffset);
    goto L157_last;

  L157_last:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} NewEaIndex != 0;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    NewEaIndex := NewEaIndex - 1;
    goto anon98_Else_dummy;

  anon98_Else_dummy:
    assume false;
    return;

  anon98_Then:
    goto L168;

  L168:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} NewEaIndex != 0;
    goto L174;

  L174:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} NewEaIndex > 30719;
    assume {:nonnull} IrpContext_193 != 0;
    assume IrpContext_193 > 0;
    call {:si_unique_call 3648} ExRaiseStatus(-1073741670);
    goto L175;

  L175:
    call {:si_unique_call 3649} EaHeaderIndex := corral_nondet();
    EaOffsetIndex_1 := BAND(NewEaIndex, BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64));
    call {:si_unique_call 3650} EaSetVbo_2 := corral_nondet();
    EaSetLength_1 := BAND(EaSetLength_1 + BytesPerCluster_10 - 1, BNOT(BytesPerCluster_10 - 1));
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} AddedOffsetTableCluster != 0;
    Tmp_2844 := BytesPerCluster_10;
    goto L186;

  L186:
    assume {:nonnull} NewAllocation_1 != 0;
    assume NewAllocation_1 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} IrpContext_193 != 0;
    assume IrpContext_193 > 0;
    call {:si_unique_call 3651} ExRaiseStatus(-1073741670);
    goto L188;

  L188:
    UnwindInitializedEaSetMcb := 1;
    call {:si_unique_call 3652} FatAllocateDiskSpace(IrpContext_193, Vcb_106, 0, NewAllocation_1, 0, EaSetMcb);
    UnwindAllocatedNewAllocation := 1;
    call {:si_unique_call 3653} EaSetClusterCount_1 := corral_nondet();
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} AddedOffsetTableCluster != 0;
    UnwindInitializedOffsetMcb := 1;
    call {:si_unique_call 3654} FatSplitAllocation(IrpContext_193, Vcb_106, EaSetMcb, EaSetLength_1, EaOffsetMcb);
    UnwindSplitNewAllocation := 1;
    goto L202;

  L202:
    call {:si_unique_call 3655} FatUnpinEaRange(IrpContext_193, EaHeaderRange_2);
    call {:si_unique_call 3656} FatUnpinEaRange(IrpContext_193, EaOffsetRange_2);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} AddedOffsetTableCluster != 0;
    assume {:nonnull} FileOffset_6 != 0;
    assume FileOffset_6 > 0;
    goto L219;

  L219:
    assume {:nonnull} FileOffset_6 != 0;
    assume FileOffset_6 > 0;
    assume {:nonnull} FileOffset_6 != 0;
    assume FileOffset_6 > 0;
    PurgeCount_1 := 5;
    goto L224;

  L224:
    call {:si_unique_call 3657} PurgeCount_1, sdv_1620 := FatAddEaSet_loop_L224(PurgeCount_1, Iosb_26, sdv_1620);
    goto L224_last;

  L224_last:
    assume {:CounterLoop 5} {:Counter "PurgeCount_1"} true;
    PurgeCount_1 := PurgeCount_1 - 1;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} PurgeCount_1 != 0;
    assume {:nonnull} Iosb_26 != 0;
    assume Iosb_26 > 0;
    call {:si_unique_call 3658} sdv_1620 := corral_nondet();
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_1620 != 0;
    goto L225;

  L225:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} PurgeCount_1 != 0;
    goto L236;

  L236:
    UnwindPurgeCacheMap := 1;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    assume {:nonnull} FileOffset_6 != 0;
    assume FileOffset_6 > 0;
    assume {:nonnull} NewAllocation_1 != 0;
    assume NewAllocation_1 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} TailExists != 0;
    UnwindInitializedTailMcb := 1;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3659} FatSplitAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), EaSetVbo_2, EaTailMcb);
    UnwindSplitTail_1 := 1;
    goto L239;

  L239:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} AddedOffsetTableCluster != 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} EaSetVbo_2 != EaNewOffsetVbo;
    UnwindInitializedInitialEaMcb := 1;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3660} FatSplitAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), EaNewOffsetVbo, EaInitialEaMcb);
    UnwindSplitInitialEa := 1;
    goto L248;

  L248:
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} AddedOffsetTableCluster != 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3661} FatMergeAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), EaOffsetMcb);
    UnwindMergedNewOffset := 1;
    goto L258;

  L258:
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} UnwindInitializedInitialEaMcb != 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3662} FatMergeAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), EaInitialEaMcb);
    UnwindMergedInitialEa := 1;
    goto L269;

  L269:
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} AddedOffsetTableCluster != 0;
    EaSetClusterOffset := EaSetClusterOffset + 1;
    EaSetVbo_2 := EaSetVbo_2 + BytesPerCluster_10;
    goto L280;

  L280:
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3663} FatMergeAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), EaSetMcb);
    UnwindMergedNewEaSet := 1;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} UnwindInitializedTailMcb != 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3664} FatMergeAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), EaTailMcb);
    UnwindMergedTail := 1;
    goto L293;

  L293:
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    havoc UnwindPrevFileSize_1;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    assume {:nonnull} NewAllocation_1 != 0;
    assume NewAllocation_1 > 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    assume {:nonnull} EaDirent_7 != 0;
    assume EaDirent_7 > 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3665} FatSetDirtyBcb#1(IrpContext_193, EaBcb_7, Vcb_106, 1);
    UnwindCacheValues_1 := 1;
    call {:si_unique_call 3666} sdv_RtlZeroMemory(0, 52);
    call {:si_unique_call 3667} FatPinEaRange(IrpContext_193, VirtualEaFile_2, EaFcb_4, EaHeaderRange_2, 0, 512, -1073741762);
    assume {:nonnull} EaHeaderRange_2 != 0;
    assume EaHeaderRange_2 > 0;
    havoc EaHeader_2;
    call {:si_unique_call 3668} sdv_RtlZeroMemory(0, 52);
    call {:si_unique_call 3669} Tmp_2852 := corral_nondet();
    call {:si_unique_call 3670} FatPinEaRange(IrpContext_193, VirtualEaFile_2, EaFcb_4, EaOffsetRange_2, Tmp_2852, 256, -1073741762);
    assume {:nonnull} EaOffsetRange_2 != 0;
    assume EaOffsetRange_2 > 0;
    havoc EaOffsetTable;
    call {:si_unique_call 3671} FatPinEaRange(IrpContext_193, VirtualEaFile_2, EaFcb_4, EaSetRange_6, EaSetVbo_2, EaSetLength_1, -1073741762);
    assume {:nonnull} EaSetRange_6 != 0;
    assume EaSetRange_6 > 0;
    havoc EaSet_2;
    assume {:nonnull} EaSet_2 != 0;
    assume EaSet_2 > 0;
    assume {:nonnull} EaSet_2 != 0;
    assume EaSet_2 > 0;
    call {:si_unique_call 3672} FatMarkEaRangeDirty(IrpContext_193, VirtualEaFile_2, EaSetRange_6);
    Count_2 := 240 - EaHeaderIndex - 1;
    Tmp_2845 := EaHeaderIndex + 1;
    assume {:nonnull} EaHeader_2 != 0;
    assume EaHeader_2 > 0;
    havoc Tmp_2837;
    NextEaOffset := Tmp_2837 + Tmp_2845 * 4;
    goto L340;

  L340:
    call {:si_unique_call 3673} Count_2, Tmp_2841, Tmp_2847 := FatAddEaSet_loop_L340(Count_2, Tmp_2841, EaSetClusterCount_1, Tmp_2847, NextEaOffset);
    goto L340_last;

  L340_last:
    Tmp_2847 := Count_2;
    Count_2 := Count_2 - 1;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} Tmp_2847 != 0;
    Tmp_2841 := NextEaOffset;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    assume {:nonnull} Tmp_2841 != 0;
    assume Tmp_2841 > 0;
    goto anon134_Else_dummy;

  anon134_Else_dummy:
    assume false;
    return;

  anon134_Then:
    assume {:partition} Tmp_2847 == 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} AddedOffsetTableCluster != 0;
    Count_2 := 240;
    assume {:nonnull} EaHeader_2 != 0;
    assume EaHeader_2 > 0;
    havoc Tmp_2846;
    NextEaOffset := Tmp_2846;
    goto L348;

  L348:
    call {:si_unique_call 3674} Tmp_2835, Count_2, Tmp_2851 := FatAddEaSet_loop_L348(Tmp_2835, Count_2, Tmp_2851, NextEaOffset);
    goto L348_last;

  L348_last:
    Tmp_2835 := Count_2;
    Count_2 := Count_2 - 1;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} Tmp_2835 != 0;
    Tmp_2851 := NextEaOffset;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    assume {:nonnull} Tmp_2851 != 0;
    assume Tmp_2851 > 0;
    goto anon135_Else_dummy;

  anon135_Else_dummy:
    assume false;
    return;

  anon135_Then:
    assume {:partition} Tmp_2835 == 0;
    goto L343;

  L343:
    call {:si_unique_call 3675} FatMarkEaRangeDirty(IrpContext_193, VirtualEaFile_2, EaHeaderRange_2);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} AddedOffsetTableCluster != 0;
    call {:si_unique_call 3676} Count_2 := corral_nondet();
    NextEaOffset := EaOffsetTable;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    goto L355;

  L355:
    call {:si_unique_call 3677} Count_2, Tmp_2840 := FatAddEaSet_loop_L355(Count_2, Tmp_2840, NextEaOffset);
    goto L355_last;

  L355_last:
    Tmp_2840 := Count_2;
    Count_2 := Count_2 - 1;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} Tmp_2840 != 0;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    goto anon136_Else_dummy;

  anon136_Else_dummy:
    assume false;
    return;

  anon136_Then:
    assume {:partition} Tmp_2840 == 0;
    goto L351;

  L351:
    NextEaOffset := EaOffsetTable;
    Tmp_2850 := EaHeaderIndex;
    assume {:nonnull} EaHeader_2 != 0;
    assume EaHeader_2 > 0;
    havoc Tmp_2838;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    assume {:nonnull} Tmp_2838 != 0;
    assume Tmp_2838 > 0;
    Count_2 := 128 - EaOffsetIndex_1 - 1;
    goto L359;

  L359:
    call {:si_unique_call 3678} Tmp_2836, Count_2 := FatAddEaSet_loop_L359(Tmp_2836, Count_2, EaSetClusterCount_1, NextEaOffset);
    goto L359_last;

  L359_last:
    Tmp_2836 := Count_2;
    Count_2 := Count_2 - 1;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} Tmp_2836 != 0;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    goto L364;

  L364:
    goto L364_dummy;

  L364_dummy:
    assume false;
    return;

  anon111_Then:
    goto L364;

  anon137_Then:
    assume {:partition} Tmp_2836 == 0;
    call {:si_unique_call 3679} FatMarkEaRangeDirty(IrpContext_193, VirtualEaFile_2, EaOffsetRange_2);
    assume {:nonnull} EaHandle_7 != 0;
    assume EaHandle_7 > 0;
    call {:si_unique_call 3680} sdv_1622 := sdv_AbnormalTermination();
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} sdv_1622 != 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} UnwindAllocatedNewAllocation != 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} UnwindPrevFileSize_1 != 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    assume {:nonnull} EaDirent_7 != 0;
    assume EaDirent_7 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} UnwindCacheValues_1 != 0;
    goto L376;

  L376:
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} UnwindMergedTail != 0;
    NewTailPosition := EaSetVbo_2 + EaSetLength_1;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3681} FatSplitAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), NewTailPosition, EaTailMcb);
    goto L384;

  L384:
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} UnwindMergedNewEaSet != 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3682} FatSplitAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), EaSetVbo_2, EaSetMcb);
    goto L390;

  L390:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} UnwindMergedInitialEa != 0;
    Tmp_2848 := EaNewOffsetVbo + BytesPerCluster_10;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3683} FatSplitAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), Tmp_2848, EaInitialEaMcb);
    goto L394;

  L394:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} UnwindMergedNewOffset != 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3684} FatSplitAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), EaNewOffsetVbo, EaOffsetMcb);
    goto L399;

  L399:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} UnwindSplitInitialEa != 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3685} FatMergeAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), EaInitialEaMcb);
    goto L403;

  L403:
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} UnwindSplitTail_1 != 0;
    assume {:nonnull} EaFcb_4 != 0;
    assume EaFcb_4 > 0;
    call {:si_unique_call 3686} FatMergeAllocation(IrpContext_193, Vcb_106, Mcb__FCB(EaFcb_4), EaTailMcb);
    goto L407;

  L407:
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} UnwindPurgeCacheMap != 0;
    assume {:nonnull} Vcb_106 != 0;
    assume Vcb_106 > 0;
    call {:si_unique_call 3687} vslice_dummy_var_500 := sdv_ObDereferenceObject(0);
    goto L411;

  L411:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} UnwindSplitNewAllocation != 0;
    call {:si_unique_call 3688} FatDeallocateDiskSpace(IrpContext_193, Vcb_106, EaOffsetMcb);
    goto L416;

  L416:
    call {:si_unique_call 3689} FatDeallocateDiskSpace(IrpContext_193, Vcb_106, EaSetMcb);
    goto L371;

  L371:
    call {:si_unique_call 3690} FatUnpinEaRange(IrpContext_193, EaHeaderRange_2);
    call {:si_unique_call 3691} FatUnpinEaRange(IrpContext_193, EaOffsetRange_2);
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} UnwindInitializedEaSetMcb != 0;
    goto L426;

  L426:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} UnwindInitializedOffsetMcb != 0;
    goto L430;

  L430:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} UnwindInitializedTailMcb != 0;
    goto L434;

  L434:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} UnwindInitializedInitialEaMcb != 0;
    goto L1;

  L1:
    return;

  anon126_Then:
    assume {:partition} UnwindInitializedInitialEaMcb == 0;
    goto L1;

  anon125_Then:
    assume {:partition} UnwindInitializedTailMcb == 0;
    goto L434;

  anon124_Then:
    assume {:partition} UnwindInitializedOffsetMcb == 0;
    goto L430;

  anon123_Then:
    assume {:partition} UnwindInitializedEaSetMcb == 0;
    goto L426;

  anon122_Then:
    assume {:partition} UnwindSplitNewAllocation == 0;
    goto L416;

  anon121_Then:
    assume {:partition} UnwindPurgeCacheMap == 0;
    goto L411;

  anon120_Then:
    assume {:partition} UnwindSplitTail_1 == 0;
    goto L407;

  anon119_Then:
    assume {:partition} UnwindSplitInitialEa == 0;
    goto L403;

  anon118_Then:
    assume {:partition} UnwindMergedNewOffset == 0;
    goto L399;

  anon117_Then:
    assume {:partition} UnwindMergedInitialEa == 0;
    goto L394;

  anon116_Then:
    assume {:partition} UnwindMergedNewEaSet == 0;
    goto L390;

  anon115_Then:
    assume {:partition} UnwindMergedTail == 0;
    goto L384;

  anon138_Then:
    assume {:partition} UnwindCacheValues_1 == 0;
    goto L376;

  anon114_Then:
    assume {:partition} UnwindPrevFileSize_1 == 0;
    goto L376;

  anon113_Then:
    assume {:partition} UnwindAllocatedNewAllocation == 0;
    goto L371;

  anon112_Then:
    assume {:partition} sdv_1622 == 0;
    goto L371;

  anon110_Then:
    assume {:partition} AddedOffsetTableCluster == 0;
    goto L351;

  anon109_Then:
    assume {:partition} AddedOffsetTableCluster == 0;
    goto L343;

  anon133_Then:
    assume {:partition} UnwindInitializedTailMcb == 0;
    goto L293;

  anon108_Then:
    assume {:partition} AddedOffsetTableCluster == 0;
    goto L280;

  anon107_Then:
    assume {:partition} UnwindInitializedInitialEaMcb == 0;
    goto L269;

  anon105_Then:
    assume {:partition} AddedOffsetTableCluster == 0;
    goto L258;

  anon106_Then:
    assume {:partition} EaSetVbo_2 == EaNewOffsetVbo;
    goto L248;

  anon104_Then:
    assume {:partition} AddedOffsetTableCluster == 0;
    goto L248;

  anon132_Then:
    assume {:partition} TailExists == 0;
    goto L239;

  anon102_Then:
    assume {:partition} PurgeCount_1 == 0;
    assume {:nonnull} IrpContext_193 != 0;
    assume IrpContext_193 > 0;
    call {:si_unique_call 3692} ExRaiseStatus(-1073741797);
    goto L236;

  anon103_Then:
    assume {:partition} sdv_1620 == 0;
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    assume false;
    return;

  anon131_Then:
    assume {:partition} PurgeCount_1 == 0;
    goto L225;

  anon101_Then:
    assume {:partition} AddedOffsetTableCluster == 0;
    assume {:nonnull} FileOffset_6 != 0;
    assume FileOffset_6 > 0;
    goto L219;

  anon130_Then:
    assume {:partition} AddedOffsetTableCluster == 0;
    goto L202;

  anon129_Then:
    goto L188;

  anon128_Then:
    assume {:partition} AddedOffsetTableCluster == 0;
    Tmp_2844 := 0;
    goto L186;

  anon100_Then:
    assume {:partition} 30719 >= NewEaIndex;
    goto L175;

  anon97_Then:
    assume {:partition} NewEaIndex == 0;
    assume {:nonnull} NextEaOffset != 0;
    assume NextEaOffset > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    NewEaIndex := 1;
    goto L174;

  anon99_Then:
    call {:si_unique_call 3693} NewEaIndex := corral_nondet();
    AddedOffsetTableCluster := 1;
    goto L174;

  anon93_Then:
    assume {:partition} NewEaIndex == 0;
    goto L168;

  anon96_Then:
    assume {:partition} NewEaIndex == 1;
    goto L162;

  anon95_Then:
    NewEaIndex := NewEaIndex - 1;
    goto anon95_Then_dummy;

  anon95_Then_dummy:
    assume false;
    return;

  anon94_Then:
    assume {:partition} NewEaIndex == 0;
    goto L157;

  anon127_Then:
    goto L157;
}



procedure {:origName "FatLocateEaByName"} FatLocateEaByName(actual_IrpContext_194: int, actual_FirstPackedEa_1: int, actual_PackedEasLength_4: int, actual_EaName_2: int, actual_Offset_7: int) returns (Tmp_2854: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2854 == 1 || Tmp_2854 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLocateEaByName"} FatLocateEaByName(actual_IrpContext_194: int, actual_FirstPackedEa_1: int, actual_PackedEasLength_4: int, actual_EaName_2: int, actual_Offset_7: int) returns (Tmp_2854: int)
{
  var {:pointer} Tmp_2855: int;
  var {:pointer} PackedEa_2: int;
  var {:scalar} sdv_1623: int;
  var {:scalar} Name_6: int;
  var {:pointer} IrpContext_194: int;
  var {:pointer} FirstPackedEa_1: int;
  var {:scalar} PackedEasLength_4: int;
  var {:pointer} Offset_7: int;
  var boogieTmp: int;
  var vslice_dummy_var_1627: int;

  anon0:
    call {:si_unique_call 3694} Name_6 := __HAVOC_malloc(12);
    IrpContext_194 := actual_IrpContext_194;
    FirstPackedEa_1 := actual_FirstPackedEa_1;
    PackedEasLength_4 := actual_PackedEasLength_4;
    Offset_7 := actual_Offset_7;
    call {:si_unique_call 3695} Tmp_2855 := __HAVOC_malloc(4);
    assume {:nonnull} Offset_7 != 0;
    assume Offset_7 > 0;
    goto L6;

  L6:
    call {:si_unique_call 3696} Tmp_2855, PackedEa_2, sdv_1623, boogieTmp := FatLocateEaByName_loop_L6(Tmp_2855, PackedEa_2, sdv_1623, Name_6, IrpContext_194, FirstPackedEa_1, PackedEasLength_4, Offset_7, boogieTmp);
    goto L6_last;

  L6_last:
    assume {:nonnull} Offset_7 != 0;
    assume Offset_7 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    PackedEa_2 := FirstPackedEa_1;
    assume {:nonnull} PackedEa_2 != 0;
    assume PackedEa_2 > 0;
    havoc Tmp_2855;
    assume {:nonnull} Name_6 != 0;
    assume Name_6 > 0;
    assume {:nonnull} Name_6 != 0;
    assume Name_6 > 0;
    assume {:nonnull} PackedEa_2 != 0;
    assume PackedEa_2 > 0;
    assume {:nonnull} Name_6 != 0;
    assume Name_6 > 0;
    assume {:nonnull} PackedEa_2 != 0;
    assume PackedEa_2 > 0;
    call {:si_unique_call 3697} sdv_1623 := corral_nondet();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} sdv_1623 != 0;
    assume {:nonnull} Offset_7 != 0;
    assume Offset_7 > 0;
    havoc vslice_dummy_var_1627;
    call {:si_unique_call 3698} boogieTmp := FatLocateNextEa(IrpContext_194, FirstPackedEa_1, PackedEasLength_4, vslice_dummy_var_1627);
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    assume false;
    return;

  anon6_Then:
    assume {:partition} sdv_1623 == 0;
    Tmp_2854 := 1;
    goto L1;

  L1:
    return;

  anon5_Then:
    Tmp_2854 := 0;
    goto L1;
}



procedure {:origName "FatMarkEaRangeDirty"} FatMarkEaRangeDirty(actual_IrpContext_195: int, actual_EaFileObject_2: int, actual_EaRange_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatMarkEaRangeDirty"} FatMarkEaRangeDirty(actual_IrpContext_195: int, actual_EaFileObject_2: int, actual_EaRange_2: int)
{
  var {:scalar} LargeVbo_1: int;
  var {:scalar} Tmp_2858: int;
  var {:scalar} BcbCount_1: int;
  var {:pointer} NextBcb_2: int;
  var {:pointer} EaRange_2: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;

  anon0:
    call {:si_unique_call 3699} LargeVbo_1 := __HAVOC_malloc(20);
    call {:si_unique_call 3700} vslice_dummy_var_501 := __HAVOC_malloc(4);
    EaRange_2 := actual_EaRange_2;
    assume {:nonnull} EaRange_2 != 0;
    assume EaRange_2 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} EaRange_2 != 0;
    assume EaRange_2 > 0;
    assume {:nonnull} LargeVbo_1 != 0;
    assume LargeVbo_1 > 0;
    call {:si_unique_call 3701} vslice_dummy_var_502 := corral_nondet();
    goto L6;

  L6:
    assume {:nonnull} EaRange_2 != 0;
    assume EaRange_2 > 0;
    havoc BcbCount_1;
    assume {:nonnull} EaRange_2 != 0;
    assume EaRange_2 > 0;
    havoc NextBcb_2;
    goto L13;

  L13:
    call {:si_unique_call 3702} Tmp_2858, BcbCount_1 := FatMarkEaRangeDirty_loop_L13(Tmp_2858, BcbCount_1, NextBcb_2);
    goto L13_last;

  L13_last:
    Tmp_2858 := BcbCount_1;
    BcbCount_1 := BcbCount_1 - 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Tmp_2858 != 0;
    assume {:nonnull} NextBcb_2 != 0;
    assume NextBcb_2 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L16;

  L16:
    goto L16_dummy;

  L16_dummy:
    assume false;
    return;

  anon8_Then:
    goto L16;

  anon9_Then:
    assume {:partition} Tmp_2858 == 0;
    return;

  anon7_Then:
    goto L6;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_503: int;

  anon0:
    call {:si_unique_call 3703} vslice_dummy_var_503 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init25"} _sdv_init25();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init25"} _sdv_init25()
{
  var vslice_dummy_var_504: int;

  anon0:
    call {:si_unique_call 3704} vslice_dummy_var_504 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatMarkDevForVerifyIfVcbMounted"} FatMarkDevForVerifyIfVcbMounted(actual_Vcb_107: int) returns (Tmp_2864: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2864 == 1 || Tmp_2864 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatMarkDevForVerifyIfVcbMounted"} FatMarkDevForVerifyIfVcbMounted(actual_Vcb_107: int) returns (Tmp_2864: int)
{
  var {:scalar} SavedIrql_7: int;
  var {:pointer} Tmp_2865: int;
  var {:pointer} Tmp_2866: int;
  var {:pointer} Tmp_2867: int;
  var {:pointer} Tmp_2868: int;
  var {:scalar} Marked: int;
  var {:pointer} Tmp_2869: int;
  var {:pointer} Tmp_2870: int;
  var {:pointer} Tmp_2871: int;
  var {:pointer} Vcb_107: int;

  anon0:
    Vcb_107 := actual_Vcb_107;
    Marked := 0;
    call {:si_unique_call 3705} Tmp_2865 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2865 != 0;
    assume Tmp_2865 > 0;
    call {:si_unique_call 3706} IoAcquireVpbSpinLock(Tmp_2865);
    assume {:nonnull} Tmp_2865 != 0;
    assume Tmp_2865 > 0;
    havoc SavedIrql_7;
    assume {:nonnull} Vcb_107 != 0;
    assume Vcb_107 > 0;
    havoc Tmp_2867;
    assume {:nonnull} Tmp_2867 != 0;
    assume Tmp_2867 > 0;
    havoc Tmp_2871;
    assume {:nonnull} Tmp_2871 != 0;
    assume Tmp_2871 > 0;
    assume {:nonnull} Vcb_107 != 0;
    assume Vcb_107 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Vcb_107 != 0;
    assume Vcb_107 > 0;
    havoc Tmp_2869;
    assume {:nonnull} Tmp_2869 != 0;
    assume Tmp_2869 > 0;
    havoc Tmp_2866;
    assume {:nonnull} Vcb_107 != 0;
    assume Vcb_107 > 0;
    havoc Tmp_2868;
    assume {:nonnull} Tmp_2868 != 0;
    assume Tmp_2868 > 0;
    havoc Tmp_2870;
    assume {:nonnull} Tmp_2866 != 0;
    assume Tmp_2866 > 0;
    assume {:nonnull} Tmp_2870 != 0;
    assume Tmp_2870 > 0;
    Marked := 1;
    goto L13;

  L13:
    call {:si_unique_call 3707} IoReleaseVpbSpinLock(SavedIrql_7);
    Tmp_2864 := Marked;
    return;

  anon3_Then:
    assume {:nonnull} Vcb_107 != 0;
    assume Vcb_107 > 0;
    goto L13;
}



procedure {:origName "FatVerifyOperationIsLegal"} FatVerifyOperationIsLegal(actual_IrpContext_196: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatVerifyOperationIsLegal"} FatVerifyOperationIsLegal(actual_IrpContext_196: int)
{
  var {:pointer} Irp_77: int;
  var {:pointer} sdv_1626: int;
  var {:pointer} FileObject_41: int;
  var {:pointer} IrpSp_41: int;
  var {:pointer} IrpContext_196: int;
  var vslice_dummy_var_505: int;

  anon0:
    call {:si_unique_call 3708} vslice_dummy_var_505 := __HAVOC_malloc(4);
    IrpContext_196 := actual_IrpContext_196;
    assume {:nonnull} IrpContext_196 != 0;
    assume IrpContext_196 > 0;
    havoc Irp_77;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Irp_77 != 0;
    call {:si_unique_call 3709} sdv_1626 := sdv_IoGetCurrentIrpStackLocation(Irp_77);
    assume {:nonnull} sdv_1626 != 0;
    assume sdv_1626 > 0;
    havoc FileObject_41;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} FileObject_41 != 0;
    assume {:nonnull} FileObject_41 != 0;
    assume FileObject_41 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 3710} IrpSp_41 := sdv_IoGetCurrentIrpStackLocation(Irp_77);
    assume {:nonnull} Irp_77 != 0;
    assume Irp_77 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} IrpSp_41 != 0;
    assume IrpSp_41 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} IrpSp_41 != 0;
    assume IrpSp_41 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} IrpSp_41 != 0;
    assume IrpSp_41 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} IrpSp_41 != 0;
    assume IrpSp_41 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L27;

  L27:
    assume {:nonnull} IrpSp_41 != 0;
    assume IrpSp_41 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L28;

  L28:
    assume {:nonnull} IrpContext_196 != 0;
    assume IrpContext_196 > 0;
    call {:si_unique_call 3711} ExRaiseStatus(-1073741528);
    goto L1;

  L1:
    return;

  anon28_Then:
    goto L1;

  anon26_Then:
    assume {:nonnull} IrpSp_41 != 0;
    assume IrpSp_41 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L28;

  anon27_Then:
    goto L27;

  anon25_Then:
    goto L1;

  anon24_Then:
    goto L1;

  anon23_Then:
    goto L1;

  anon22_Then:
    goto L1;

  anon21_Then:
    goto L1;

  anon30_Then:
    assume {:partition} FileObject_41 == 0;
    goto L1;

  anon29_Then:
    assume {:partition} Irp_77 == 0;
    goto L1;
}



procedure {:origName "FatVerifyVcb"} FatVerifyVcb(actual_IrpContext_197: int, actual_Vcb_108: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatVerifyVcb"} FatVerifyVcb(actual_IrpContext_197: int, actual_Vcb_108: int)
{
  var {:scalar} DevMarkedForVerify: int;
  var {:scalar} Tmp_2874: int;
  var {:pointer} Tmp_2875: int;
  var {:scalar} Status_78: int;
  var {:scalar} Iosb_27: int;
  var {:dopa} {:scalar} ChangeCount_2: int;
  var {:pointer} IrpSp_42: int;
  var {:scalar} Tmp_2879: int;
  var {:scalar} sdv_1630: int;
  var {:pointer} Tmp_2881: int;
  var {:pointer} Tmp_2882: int;
  var {:scalar} Tmp_2883: int;
  var {:pointer} Tmp_2884: int;
  var {:pointer} Tmp_2885: int;
  var {:pointer} IrpContext_197: int;
  var {:pointer} Vcb_108: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_1628: int;
  var vslice_dummy_var_1629: int;

  anon0:
    call {:si_unique_call 3712} Iosb_27 := __HAVOC_malloc(12);
    call {:si_unique_call 3713} ChangeCount_2 := __HAVOC_malloc(4);
    call {:si_unique_call 3714} vslice_dummy_var_506 := __HAVOC_malloc(4);
    IrpContext_197 := actual_IrpContext_197;
    Vcb_108 := actual_Vcb_108;
    assume {:nonnull} ChangeCount_2 != 0;
    assume ChangeCount_2 > 0;
    Status_78 := 0;
    assume {:nonnull} Vcb_108 != 0;
    assume Vcb_108 > 0;
    havoc Tmp_2881;
    assume {:nonnull} Tmp_2881 != 0;
    assume Tmp_2881 > 0;
    havoc Tmp_2885;
    assume {:nonnull} Tmp_2885 != 0;
    assume Tmp_2885 > 0;
    havoc Tmp_2874;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Tmp_2874 == 0;
    DevMarkedForVerify := 0;
    goto L91;

  L91:
    assume {:nonnull} Vcb_108 != 0;
    assume Vcb_108 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Vcb_108 != 0;
    assume Vcb_108 > 0;
    havoc Tmp_2884;
    assume {:nonnull} Tmp_2884 != 0;
    assume Tmp_2884 > 0;
    havoc Tmp_2875;
    assume {:nonnull} Tmp_2875 != 0;
    assume Tmp_2875 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_2879 := 149504;
    goto L16;

  L16:
    assume {:nonnull} Vcb_108 != 0;
    assume Vcb_108 > 0;
    havoc vslice_dummy_var_1628;
    call {:si_unique_call 3715} Status_78 := FatPerformDevIoCtrl(IrpContext_197, Tmp_2879, vslice_dummy_var_1628, ChangeCount_2, 4, 0, 1, Iosb_27);
    assume {:nonnull} Iosb_27 != 0;
    assume Iosb_27 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} ChangeCount_2 != 0;
    assume ChangeCount_2 > 0;
    goto L21;

  L21:
    assume {:nonnull} Vcb_108 != 0;
    assume Vcb_108 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Status_78 == -1073741661;
    goto L26;

  L26:
    assume {:nonnull} Vcb_108 != 0;
    assume Vcb_108 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} DevMarkedForVerify == 0;
    call {:si_unique_call 3716} DevMarkedForVerify := FatMarkDevForVerifyIfVcbMounted(Vcb_108);
    goto L12;

  L12:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} DevMarkedForVerify != 0;
    goto L35;

  L35:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Status_78 >= 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} DevMarkedForVerify == 0;
    goto L40;

  L40:
    call {:si_unique_call 3717} FatQuickVerifyVcb(IrpContext_197, Vcb_108);
    return;

  anon53_Then:
    assume {:partition} DevMarkedForVerify != 0;
    goto L36;

  L36:
    assume {:nonnull} Vcb_108 != 0;
    assume Vcb_108 > 0;
    call {:si_unique_call 3718} IoSetHardErrorOrVerifyDevice(0, 0);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} DevMarkedForVerify != 0;
    Tmp_2883 := 22;
    goto L46;

  L46:
    assume {:nonnull} IrpContext_197 != 0;
    assume IrpContext_197 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} DevMarkedForVerify != 0;
    goto L50;

  L50:
    call {:si_unique_call 3719} sdv_1630 := corral_nondet();
    call {:si_unique_call 3720} ExRaiseStatus(sdv_1630);
    goto L40;

  anon59_Then:
    assume {:partition} DevMarkedForVerify == 0;
    goto L50;

  anon54_Then:
    assume {:partition} DevMarkedForVerify == 0;
    Tmp_2883 := Status_78;
    goto L46;

  anon52_Then:
    assume {:partition} 0 > Status_78;
    goto L36;

  anon41_Then:
    assume {:partition} DevMarkedForVerify == 0;
    assume {:nonnull} IrpContext_197 != 0;
    assume IrpContext_197 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} IrpContext_197 != 0;
    assume IrpContext_197 > 0;
    havoc vslice_dummy_var_1629;
    call {:si_unique_call 3721} IrpSp_42 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1629);
    assume {:nonnull} IrpSp_42 != 0;
    assume IrpSp_42 > 0;
    havoc Tmp_2882;
    assume {:nonnull} Tmp_2882 != 0;
    assume Tmp_2882 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Vcb_108 != 0;
    assume Vcb_108 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    DevMarkedForVerify := 1;
    goto L35;

  anon55_Then:
    goto L35;

  anon60_Then:
    goto L35;

  anon51_Then:
    goto L35;

  anon48_Then:
    assume {:partition} DevMarkedForVerify != 0;
    goto L12;

  anon47_Then:
    goto L12;

  anon45_Then:
    assume {:partition} Status_78 != -1073741661;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Status_78 == -1073741805;
    goto L26;

  anon46_Then:
    assume {:partition} Status_78 != -1073741805;
    goto L23;

  L23:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Status_78 != 22;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Status_78 >= 0;
    assume {:nonnull} ChangeCount_2 != 0;
    assume ChangeCount_2 > 0;
    assume {:nonnull} Vcb_108 != 0;
    assume Vcb_108 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L26;

  anon50_Then:
    goto L12;

  anon49_Then:
    assume {:partition} 0 > Status_78;
    goto L12;

  anon44_Then:
    assume {:partition} Status_78 == 22;
    goto L26;

  anon43_Then:
    goto L23;

  anon42_Then:
    goto L21;

  anon58_Then:
    Tmp_2879 := 477184;
    goto L16;

  anon57_Then:
    goto L12;

  anon56_Then:
    assume {:partition} Tmp_2874 != 0;
    DevMarkedForVerify := 1;
    goto L91;
}



procedure {:origName "FatDetermineAndMarkFcbCondition"} FatDetermineAndMarkFcbCondition(actual_IrpContext_198: int, actual_Fcb_66: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDetermineAndMarkFcbCondition"} FatDetermineAndMarkFcbCondition(actual_IrpContext_198: int, actual_Fcb_66: int)
{
  var {:scalar} sdv_1632: int;
  var {:pointer} Tmp_2887: int;
  var {:pointer} Dirent_41: int;
  var {:pointer} Buffer_36: int;
  var {:pointer} DirentBcb_16: int;
  var {:scalar} FirstClusterOfFile: int;
  var {:pointer} Tmp_2889: int;
  var {:scalar} Name_7: int;
  var {:pointer} Tmp_2890: int;
  var {:pointer} IrpContext_198: int;
  var {:pointer} Fcb_66: int;
  var vslice_dummy_var_507: int;

  anon0:
    call {:si_unique_call 3722} Dirent_41 := __HAVOC_malloc(4);
    call {:si_unique_call 3723} DirentBcb_16 := __HAVOC_malloc(4);
    call {:si_unique_call 3724} vslice_dummy_var_507 := __HAVOC_malloc(4);
    call {:si_unique_call 3725} Name_7 := __HAVOC_malloc(12);
    IrpContext_198 := actual_IrpContext_198;
    Fcb_66 := actual_Fcb_66;
    call {:si_unique_call 3726} Buffer_36 := __HAVOC_malloc(64);
    Tmp_2889 := Fcb_66;
    assume {:nonnull} Tmp_2889 != 0;
    assume Tmp_2889 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 3727} FatResetFcb(IrpContext_198, Fcb_66);
    call {:si_unique_call 3728} FatMarkFcbCondition(IrpContext_198, Fcb_66, 1, 0);
    goto L1;

  L1:
    return;

  anon25_Then:
    call {:si_unique_call 3729} FatGetDirentFromFcbOrDcb(IrpContext_198, Fcb_66, Dirent_41, DirentBcb_16);
    assume {:nonnull} DirentBcb_16 != 0;
    assume DirentBcb_16 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Name_7 != 0;
    assume Name_7 > 0;
    assume {:nonnull} Name_7 != 0;
    assume Name_7 > 0;
    assume {:nonnull} Dirent_41 != 0;
    assume Dirent_41 > 0;
    call {:si_unique_call 3730} Fat8dot3ToString(IrpContext_198, Mem_T.P_PACKED_DIRENT[Dirent_41], 0, Name_7);
    assume {:nonnull} Dirent_41 != 0;
    assume Dirent_41 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_41] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_41] > 0;
    havoc FirstClusterOfFile;
    assume {:nonnull} Fcb_66 != 0;
    assume Fcb_66 > 0;
    havoc Tmp_2890;
    assume {:nonnull} Tmp_2890 != 0;
    assume Tmp_2890 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 3731} FirstClusterOfFile := corral_nondet();
    goto L35;

  L35:
    call {:si_unique_call 3732} sdv_1632 := corral_nondet();
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_1632 != 0;
    Tmp_2887 := Fcb_66;
    assume {:nonnull} Tmp_2887 != 0;
    assume Tmp_2887 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Dirent_41 != 0;
    assume Dirent_41 > 0;
    assume {:nonnull} Fcb_66 != 0;
    assume Fcb_66 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_41] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_41] > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L44;

  L44:
    assume {:nonnull} Fcb_66 != 0;
    assume Fcb_66 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Dirent_41 != 0;
    assume Dirent_41 > 0;
    assume {:nonnull} Fcb_66 != 0;
    assume Fcb_66 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_41] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_41] > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 3733} FatResetFcb(IrpContext_198, Fcb_66);
    call {:si_unique_call 3734} FatMarkFcbCondition(IrpContext_198, Fcb_66, 1, 0);
    goto L53;

  L53:
    assume {:nonnull} DirentBcb_16 != 0;
    assume DirentBcb_16 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} DirentBcb_16 != 0;
    assume DirentBcb_16 > 0;
    goto L1;

  anon24_Then:
    goto L1;

  anon23_Then:
    goto L40;

  L40:
    call {:si_unique_call 3735} FatMarkFcbCondition(IrpContext_198, Fcb_66, 2, 1);
    goto L53;

  anon21_Then:
    goto L40;

  anon22_Then:
    goto L40;

  anon27_Then:
    goto L44;

  anon20_Then:
    assume {:partition} sdv_1632 == 0;
    goto L40;

  anon26_Then:
    goto L35;

  anon19_Then:
    call {:si_unique_call 3736} FatMarkFcbCondition(IrpContext_198, Fcb_66, 2, 1);
    goto L1;
}



procedure {:origName "FatVerifyFcb"} FatVerifyFcb(actual_IrpContext_199: int, actual_Fcb_67: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatVerifyFcb"} FatVerifyFcb(actual_IrpContext_199: int, actual_Fcb_67: int)
{
  var {:pointer} Tmp_2891: int;
  var {:pointer} Tmp_2892: int;
  var {:pointer} sdv_1633: int;
  var {:pointer} Tmp_2893: int;
  var {:pointer} CurrentFcb: int;
  var {:pointer} Tmp_2894: int;
  var {:pointer} Tmp_2895: int;
  var {:pointer} Tmp_2896: int;
  var {:pointer} IrpContext_199: int;
  var {:pointer} Fcb_67: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_1630: int;
  var vslice_dummy_var_1631: int;

  anon0:
    call {:si_unique_call 3737} vslice_dummy_var_508 := __HAVOC_malloc(4);
    IrpContext_199 := actual_IrpContext_199;
    Fcb_67 := actual_Fcb_67;
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    havoc Tmp_2894;
    assume {:nonnull} Tmp_2894 != 0;
    assume Tmp_2894 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} IrpContext_199 != 0;
    assume IrpContext_199 > 0;
    call {:si_unique_call 3738} ExRaiseStatus(-1073741202);
    goto L5;

  L5:
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L10;

  L10:
    Tmp_2892 := Fcb_67;
    assume {:nonnull} Tmp_2892 != 0;
    assume Tmp_2892 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    havoc Tmp_2895;
    assume {:nonnull} Tmp_2895 != 0;
    assume Tmp_2895 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    havoc Tmp_2896;
    assume {:nonnull} Tmp_2896 != 0;
    assume Tmp_2896 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L13;

  L13:
    call {:si_unique_call 3739} sdv_1633 := sdv_KeGetCurrentThread();
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    havoc Tmp_2891;
    assume {:nonnull} Tmp_2891 != 0;
    assume Tmp_2891 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    havoc vslice_dummy_var_1630;
    call {:si_unique_call 3740} FatQuickVerifyVcb(IrpContext_199, vslice_dummy_var_1630);
    goto L19;

  L19:
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    CurrentFcb := Fcb_67;
    goto L29;

  L29:
    call {:si_unique_call 3741} Tmp_2893, CurrentFcb := FatVerifyFcb_loop_L29(Tmp_2893, CurrentFcb, IrpContext_199);
    goto L29_last;

  L29_last:
    assume {:nonnull} CurrentFcb != 0;
    assume CurrentFcb > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 3742} FatDetermineAndMarkFcbCondition(IrpContext_199, CurrentFcb);
    assume {:nonnull} CurrentFcb != 0;
    assume CurrentFcb > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    Tmp_2893 := CurrentFcb;
    assume {:nonnull} Tmp_2893 != 0;
    assume Tmp_2893 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} CurrentFcb != 0;
    assume CurrentFcb > 0;
    havoc CurrentFcb;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    assume false;
    return;

  anon42_Then:
    goto L30;

  L30:
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} IrpContext_199 != 0;
    assume IrpContext_199 > 0;
    call {:si_unique_call 3743} ExRaiseStatus(-1073741672);
    goto L1;

  L1:
    return;

  anon33_Then:
    goto L1;

  anon34_Then:
    goto L30;

  anon32_Then:
    goto L30;

  anon35_Then:
    assume {:nonnull} Fcb_67 != 0;
    assume Fcb_67 > 0;
    havoc vslice_dummy_var_1631;
    call {:si_unique_call 3744} KeBugCheckEx(35, 1966584, vslice_dummy_var_1631, 0, 0);
    goto L1;

  anon36_Then:
    assume {:nonnull} IrpContext_199 != 0;
    assume IrpContext_199 > 0;
    call {:si_unique_call 3745} ExRaiseStatus(-1073741672);
    goto L1;

  anon31_Then:
    goto L1;

  anon41_Then:
    goto L19;

  anon40_Then:
    goto L1;

  anon39_Then:
    goto L13;

  anon38_Then:
    goto L13;

  anon30_Then:
    goto L1;

  anon29_Then:
    goto L10;

  anon37_Then:
    goto L5;
}



procedure {:origName "FatMarkFcbCondition"} FatMarkFcbCondition(actual_IrpContext_200: int, actual_Fcb_68: int, actual_FcbCondition: int, actual_Recursive: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatMarkFcbCondition"} FatMarkFcbCondition(actual_IrpContext_200: int, actual_Fcb_68: int, actual_FcbCondition: int, actual_Recursive: int)
{
  var {:pointer} Tmp_2900: int;
  var {:scalar} sdv_1634: int;
  var {:scalar} Tmp_2901: int;
  var {:pointer} Tmp_2902: int;
  var {:pointer} OriginalFcb_1: int;
  var {:pointer} Tmp_2904: int;
  var {:scalar} Tmp_2906: int;
  var {:pointer} IrpContext_200: int;
  var {:pointer} Fcb_68: int;
  var {:scalar} FcbCondition: int;
  var {:scalar} Recursive: int;
  var vslice_dummy_var_509: int;

  anon0:
    call {:si_unique_call 3746} vslice_dummy_var_509 := __HAVOC_malloc(4);
    IrpContext_200 := actual_IrpContext_200;
    Fcb_68 := actual_Fcb_68;
    FcbCondition := actual_FcbCondition;
    Recursive := actual_Recursive;
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    goto L1;

  L1:
    return;

  anon27_Then:
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L13;

  L13:
    Tmp_2906 := 0;
    goto L14;

  L14:
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    goto L8;

  L8:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} FcbCondition == 3;
    goto L23;

  L23:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Recursive != 0;
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L28;

  L28:
    OriginalFcb_1 := Fcb_68;
    goto L29;

  L29:
    call {:si_unique_call 3747} Fcb_68 := FatMarkFcbCondition_loop_L29(OriginalFcb_1, IrpContext_200, Fcb_68, FcbCondition);
    goto L29_last;

  L29_last:
    call {:si_unique_call 3749} Fcb_68 := FatGetNextFcbTopDown(IrpContext_200, Fcb_68, OriginalFcb_1);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Fcb_68 != 0;
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} Fcb_68 == 0;
    goto L1;

  anon33_Then:
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L28;

  anon34_Then:
    goto L1;

  anon32_Then:
    assume {:partition} Recursive == 0;
    goto L1;

  anon28_Then:
    assume {:partition} FcbCondition != 3;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} FcbCondition == 2;
    goto L23;

  anon31_Then:
    assume {:partition} FcbCondition != 2;
    goto L1;

  anon29_Then:
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    call {:si_unique_call 3748} sdv_1634 := corral_nondet();
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_1634 != 0;
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    Tmp_2902 := FileLock_unnamed_tag_69(Fcb_unnamed_tag_67(Specific__FCB(Fcb_68)));
    assume {:nonnull} Tmp_2902 != 0;
    assume Tmp_2902 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto L18;

  L18:
    Tmp_2901 := 2;
    goto L19;

  L19:
    Tmp_2906 := Tmp_2901;
    goto L14;

  anon37_Then:
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    havoc Tmp_2904;
    assume {:nonnull} Tmp_2904 != 0;
    assume Tmp_2904 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Fcb_68 != 0;
    assume Fcb_68 > 0;
    havoc Tmp_2900;
    assume {:nonnull} Tmp_2900 != 0;
    assume Tmp_2900 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    Tmp_2901 := 1;
    goto L19;

  anon39_Then:
    goto L18;

  anon38_Then:
    goto L18;

  anon30_Then:
    assume {:partition} sdv_1634 == 0;
    goto L13;

  anon36_Then:
    goto L8;
}



procedure {:origName "_sdv_init23"} _sdv_init23();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init23"} _sdv_init23()
{
  var vslice_dummy_var_510: int;

  anon0:
    call {:si_unique_call 3750} vslice_dummy_var_510 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatQuickVerifyVcb"} FatQuickVerifyVcb(actual_IrpContext_202: int, actual_Vcb_110: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQuickVerifyVcb"} FatQuickVerifyVcb(actual_IrpContext_202: int, actual_Vcb_110: int)
{
  var {:pointer} Tmp_2924: int;
  var {:pointer} sdv_1643: int;
  var {:pointer} Tmp_2928: int;
  var {:pointer} IrpContext_202: int;
  var {:pointer} Vcb_110: int;
  var vslice_dummy_var_511: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_1632: int;
  var vslice_dummy_var_1633: int;

  anon0:
    call {:si_unique_call 3751} vslice_dummy_var_511 := __HAVOC_malloc(4);
    IrpContext_202 := actual_IrpContext_202;
    Vcb_110 := actual_Vcb_110;
    assume {:nonnull} Vcb_110 != 0;
    assume Vcb_110 > 0;
    havoc Tmp_2928;
    assume {:nonnull} Tmp_2928 != 0;
    assume Tmp_2928 > 0;
    havoc Tmp_2924;
    assume {:nonnull} Tmp_2924 != 0;
    assume Tmp_2924 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Vcb_110 != 0;
    assume Vcb_110 > 0;
    call {:si_unique_call 3752} IoSetHardErrorOrVerifyDevice(0, 0);
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    call {:si_unique_call 3753} ExRaiseStatus(22);
    goto L4;

  L4:
    assume {:nonnull} Vcb_110 != 0;
    assume Vcb_110 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Vcb_110 != 0;
    assume Vcb_110 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Vcb_110 != 0;
    assume Vcb_110 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Vcb_110 != 0;
    assume Vcb_110 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    call {:si_unique_call 3754} ExRaiseStatus(-1073741202);
    goto L1;

  L1:
    return;

  anon31_Then:
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    call {:si_unique_call 3755} ExRaiseStatus(-1073741672);
    goto L1;

  anon40_Then:
    assume {:nonnull} Vcb_110 != 0;
    assume Vcb_110 > 0;
    havoc vslice_dummy_var_1632;
    call {:si_unique_call 3756} KeBugCheckEx(35, 1967806, vslice_dummy_var_1632, 0, 0);
    goto L1;

  anon41_Then:
    assume {:nonnull} Vcb_110 != 0;
    assume Vcb_110 > 0;
    call {:si_unique_call 3757} IoSetHardErrorOrVerifyDevice(0, 0);
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    call {:si_unique_call 3758} ExRaiseStatus(-1073741806);
    goto L1;

  anon29_Then:
    assume {:nonnull} Vcb_110 != 0;
    assume Vcb_110 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L37;

  L37:
    assume {:nonnull} Vcb_110 != 0;
    assume Vcb_110 > 0;
    call {:si_unique_call 3759} IoSetHardErrorOrVerifyDevice(0, 0);
    call {:si_unique_call 3760} vslice_dummy_var_512 := FatMarkDevForVerifyIfVcbMounted(Vcb_110);
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    call {:si_unique_call 3761} ExRaiseStatus(-1073741662);
    goto L1;

  anon32_Then:
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} IrpContext_202 != 0;
    assume IrpContext_202 > 0;
    havoc vslice_dummy_var_1633;
    call {:si_unique_call 3762} sdv_1643 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1633);
    assume {:nonnull} sdv_1643 != 0;
    assume sdv_1643 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L37;

  anon39_Then:
    goto L1;

  anon38_Then:
    goto L1;

  anon37_Then:
    goto L1;

  anon36_Then:
    goto L37;

  anon35_Then:
    goto L37;

  anon34_Then:
    goto L37;

  anon33_Then:
    goto L37;

  anon30_Then:
    goto L1;

  anon42_Then:
    goto L4;
}



procedure {:origName "FatResetFcb"} FatResetFcb(actual_IrpContext_203: int, actual_Fcb_69: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatResetFcb"} FatResetFcb(actual_IrpContext_203: int, actual_Fcb_69: int)
{
  var {:pointer} Tmp_2931: int;
  var {:pointer} Tmp_2932: int;
  var {:pointer} Tmp_2933: int;
  var {:pointer} Fcb_69: int;
  var vslice_dummy_var_513: int;

  anon0:
    call {:si_unique_call 3763} vslice_dummy_var_513 := __HAVOC_malloc(4);
    Fcb_69 := actual_Fcb_69;
    Tmp_2932 := Fcb_69;
    assume {:nonnull} Tmp_2932 != 0;
    assume Tmp_2932 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Fcb_69 != 0;
    assume Fcb_69 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Fcb_69 != 0;
    assume Fcb_69 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Fcb_69 != 0;
    assume Fcb_69 > 0;
    goto L4;

  L4:
    Tmp_2933 := Fcb_69;
    assume {:nonnull} Tmp_2933 != 0;
    assume Tmp_2933 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L13;

  L13:
    assume {:nonnull} Fcb_69 != 0;
    assume Fcb_69 > 0;
    assume {:nonnull} Fcb_69 != 0;
    assume Fcb_69 > 0;
    goto L1;

  L1:
    return;

  anon14_Then:
    Tmp_2931 := Fcb_69;
    assume {:nonnull} Tmp_2931 != 0;
    assume Tmp_2931 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L13;

  anon15_Then:
    goto L1;

  anon12_Then:
    assume {:nonnull} Fcb_69 != 0;
    assume Fcb_69 > 0;
    goto L4;

  anon11_Then:
    goto L4;

  anon13_Then:
    goto L4;
}



procedure {:origName "FatCheckDirtyBit"} FatCheckDirtyBit(actual_IrpContext_204: int, actual_Vcb_111: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCheckDirtyBit"} FatCheckDirtyBit(actual_IrpContext_204: int, actual_Vcb_111: int)
{
  var {:scalar} Dirty: int;
  var {:pointer} Tmp_2935: int;
  var {:scalar} Tmp_2936: int;
  var {:scalar} VolumeLabel: int;
  var {:pointer} Tmp_2938: int;
  var {:pointer} Tmp_2939: int;
  var {:pointer} BootSectorBcb: int;
  var {:pointer} Tmp_2940: int;
  var {:pointer} Tmp_2941: int;
  var {:pointer} BootSector_3: int;
  var {:pointer} Tmp_2942: int;
  var {:scalar} Tmp_2943: int;
  var {:pointer} IrpContext_204: int;
  var {:pointer} Vcb_111: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;

  anon0:
    call {:si_unique_call 3764} VolumeLabel := __HAVOC_malloc(12);
    call {:si_unique_call 3765} vslice_dummy_var_514 := __HAVOC_malloc(4);
    call {:si_unique_call 3766} BootSectorBcb := __HAVOC_malloc(4);
    call {:si_unique_call 3767} BootSector_3 := __HAVOC_malloc(4);
    IrpContext_204 := actual_IrpContext_204;
    Vcb_111 := actual_Vcb_111;
    call {:si_unique_call 3768} Tmp_2938 := __HAVOC_malloc(128);
    call {:si_unique_call 3769} FatReadVolumeFile(IrpContext_204, Vcb_111, 0, 62, BootSectorBcb, BootSector_3);
    assume {:nonnull} BootSector_3 != 0;
    assume BootSector_3 > 0;
    havoc Tmp_2941;
    assume {:nonnull} Tmp_2941 != 0;
    assume Tmp_2941 > 0;
    Tmp_2942 := SectorsPerFat__PACKED_BIOS_PARAMETER_BLOCK(Tmp_2941);
    assume {:nonnull} Tmp_2942 != 0;
    assume Tmp_2942 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BootSector_3 != 0;
    assume BootSector_3 > 0;
    havoc Tmp_2936;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Tmp_2936 == 0;
    Dirty := 0;
    goto L49;

  L49:
    goto L14;

  L14:
    assume {:nonnull} Vcb_111 != 0;
    assume Vcb_111 > 0;
    havoc Tmp_2939;
    assume {:nonnull} Tmp_2939 != 0;
    assume Tmp_2939 > 0;
    assume {:nonnull} VolumeLabel != 0;
    assume VolumeLabel > 0;
    assume {:nonnull} VolumeLabel != 0;
    assume VolumeLabel > 0;
    assume {:nonnull} Vcb_111 != 0;
    assume Vcb_111 > 0;
    havoc Tmp_2940;
    assume {:nonnull} Tmp_2940 != 0;
    assume Tmp_2940 > 0;
    havoc Tmp_2938;
    assume {:nonnull} VolumeLabel != 0;
    assume VolumeLabel > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Dirty != 0;
    assume {:nonnull} IrpContext_204 != 0;
    assume IrpContext_204 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} IrpContext_204 != 0;
    assume IrpContext_204 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Vcb_111 != 0;
    assume Vcb_111 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L23;

  L23:
    assume {:nonnull} BootSectorBcb != 0;
    assume BootSectorBcb > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} BootSectorBcb != 0;
    assume BootSectorBcb > 0;
    goto L1;

  L1:
    return;

  anon23_Then:
    goto L1;

  anon22_Then:
    goto L20;

  L20:
    assume {:nonnull} Vcb_111 != 0;
    assume Vcb_111 > 0;
    goto L23;

  anon21_Then:
    goto L20;

  anon20_Then:
    goto L20;

  anon26_Then:
    assume {:partition} Dirty == 0;
    assume {:nonnull} Vcb_111 != 0;
    assume Vcb_111 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Vcb_111 != 0;
    assume Vcb_111 > 0;
    goto L23;

  anon19_Then:
    call {:si_unique_call 3770} vslice_dummy_var_515 := FsRtlBalanceReads(0);
    goto L23;

  anon25_Then:
    assume {:partition} Tmp_2936 != 0;
    Dirty := 1;
    goto L49;

  anon24_Then:
    assume {:nonnull} BootSector_3 != 0;
    assume BootSector_3 > 0;
    havoc Tmp_2935;
    assume {:nonnull} Tmp_2935 != 0;
    assume Tmp_2935 > 0;
    havoc Tmp_2943;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Tmp_2943 == 0;
    Dirty := 0;
    goto L63;

  L63:
    goto L14;

  anon27_Then:
    assume {:partition} Tmp_2943 != 0;
    Dirty := 1;
    goto L63;
}



procedure {:origName "_sdv_init28"} _sdv_init28();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init28"} _sdv_init28()
{
  var vslice_dummy_var_516: int;

  anon0:
    call {:si_unique_call 3771} vslice_dummy_var_516 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatQueueClose"} FatQueueClose(actual_CloseContext_2: int, actual_DelayClose: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatQueueClose"} FatQueueClose(actual_CloseContext_2: int, actual_DelayClose: int)
{
  var {:pointer} Tmp_2950: int;
  var {:scalar} StartWorker: int;
  var {:pointer} Tmp_2951: int;
  var {:pointer} CloseContext_2: int;
  var {:scalar} DelayClose: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;

  anon0:
    call {:si_unique_call 3772} vslice_dummy_var_517 := __HAVOC_malloc(4);
    CloseContext_2 := actual_CloseContext_2;
    DelayClose := actual_DelayClose;
    StartWorker := 0;
    call {:si_unique_call 3773} ExAcquireFastMutexUnsafe(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} DelayClose != 0;
    assume {:nonnull} CloseContext_2 != 0;
    assume CloseContext_2 > 0;
    call {:si_unique_call 3774} vslice_dummy_var_519 := sdv_InsertTailList(DelayedCloseList__FAT_DATA(FatData), GlobalLinks_CLOSE_CONTEXT(CloseContext_2));
    assume {:nonnull} CloseContext_2 != 0;
    assume CloseContext_2 > 0;
    havoc Tmp_2950;
    assume {:nonnull} CloseContext_2 != 0;
    assume CloseContext_2 > 0;
    assume {:nonnull} Tmp_2950 != 0;
    assume Tmp_2950 > 0;
    call {:si_unique_call 3775} vslice_dummy_var_520 := sdv_InsertTailList(DelayedCloseList__VCB(Tmp_2950), VcbLinks_CLOSE_CONTEXT(CloseContext_2));
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    StartWorker := 1;
    goto L20;

  L20:
    call {:si_unique_call 3776} ExReleaseFastMutexUnsafe(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} StartWorker != 0;
    call {:si_unique_call 3777} IoQueueWorkItem(0, li2bplFunctionConstant674, 0, 0);
    goto L1;

  L1:
    return;

  anon13_Then:
    assume {:partition} StartWorker == 0;
    goto L1;

  anon12_Then:
    goto L20;

  anon14_Then:
    goto L20;

  anon11_Then:
    assume {:partition} DelayClose == 0;
    assume {:nonnull} CloseContext_2 != 0;
    assume CloseContext_2 > 0;
    call {:si_unique_call 3778} vslice_dummy_var_518 := sdv_InsertTailList(AsyncCloseList__FAT_DATA(FatData), GlobalLinks_CLOSE_CONTEXT(CloseContext_2));
    assume {:nonnull} CloseContext_2 != 0;
    assume CloseContext_2 > 0;
    havoc Tmp_2951;
    assume {:nonnull} CloseContext_2 != 0;
    assume CloseContext_2 > 0;
    assume {:nonnull} Tmp_2951 != 0;
    assume Tmp_2951 > 0;
    call {:si_unique_call 3779} vslice_dummy_var_521 := sdv_InsertTailList(AsyncCloseList__VCB(Tmp_2951), VcbLinks_CLOSE_CONTEXT(CloseContext_2));
    goto anon15_Then, anon15_Else;

  anon15_Else:
    StartWorker := 1;
    goto L20;

  anon15_Then:
    goto L20;
}



procedure {:origName "FatRemoveClose"} FatRemoveClose(actual_Vcb_114: int, actual_LastVcbHint: int) returns (Tmp_2962: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2962 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatRemoveClose"} FatRemoveClose(actual_Vcb_114: int, actual_LastVcbHint: int) returns (Tmp_2962: int)
{
  var {:scalar} WorkerThread: int;
  var {:pointer} sdv_1676: int;
  var {:scalar} sdv_1677: int;
  var {:pointer} sdv_1678: int;
  var {:pointer} sdv_1680: int;
  var {:scalar} sdv_1681: int;
  var {:scalar} sdv_1682: int;
  var {:scalar} sdv_1685: int;
  var {:pointer} sdv_1687: int;
  var {:pointer} Entry_2: int;
  var {:pointer} CloseContext_3: int;
  var {:pointer} Vcb_114: int;
  var {:pointer} LastVcbHint: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_525: int;

  anon0:
    Vcb_114 := actual_Vcb_114;
    LastVcbHint := actual_LastVcbHint;
    call {:si_unique_call 3780} ExAcquireFastMutexUnsafe(0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Vcb_114 != 0;
    WorkerThread := 0;
    goto L127;

  L127:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} Vcb_114 != 0;
    goto L12;

  L12:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Vcb_114 != 0;
    call {:si_unique_call 3781} sdv_1681 := sdv_IsListEmpty(0);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_1681 != 0;
    call {:si_unique_call 3782} sdv_1685 := sdv_IsListEmpty(0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_1685 != 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} LastVcbHint == 0;
    CloseContext_3 := 0;
    goto L33;

  L33:
    call {:si_unique_call 3783} ExReleaseFastMutexUnsafe(0);
    Tmp_2962 := CloseContext_3;
    return;

  anon50_Then:
    assume {:partition} LastVcbHint != 0;
    goto L13;

  L13:
    call {:si_unique_call 3784} sdv_1677 := sdv_IsListEmpty(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_1677 != 0;
    call {:si_unique_call 3785} sdv_1682 := sdv_IsListEmpty(0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_1682 != 0;
    goto L64;

  L64:
    CloseContext_3 := 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} WorkerThread != 0;
    goto L33;

  anon66_Then:
    assume {:partition} WorkerThread == 0;
    goto L33;

  anon52_Then:
    assume {:partition} sdv_1682 == 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto L68;

  L68:
    call {:si_unique_call 3786} Entry_2 := RemoveHeadList(DelayedCloseList__FAT_DATA(FatData));
    call {:si_unique_call 3787} sdv_1676 := sdv_containing_record(Entry_2, 0);
    CloseContext_3 := sdv_1676;
    call {:si_unique_call 3788} vslice_dummy_var_522 := sdv_RemoveEntryList(0);
    goto L33;

  anon53_Then:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L68;

  anon54_Then:
    goto L64;

  anon51_Then:
    assume {:partition} sdv_1677 == 0;
    call {:si_unique_call 3789} Entry_2 := RemoveHeadList(AsyncCloseList__FAT_DATA(FatData));
    call {:si_unique_call 3790} sdv_1687 := sdv_containing_record(Entry_2, 0);
    CloseContext_3 := sdv_1687;
    call {:si_unique_call 3791} vslice_dummy_var_523 := sdv_RemoveEntryList(0);
    goto L33;

  anon49_Then:
    assume {:partition} sdv_1685 == 0;
    assume {:nonnull} Vcb_114 != 0;
    assume Vcb_114 > 0;
    call {:si_unique_call 3792} Entry_2 := RemoveHeadList(DelayedCloseList__VCB(Vcb_114));
    call {:si_unique_call 3793} sdv_1678 := sdv_containing_record(Entry_2, 8);
    CloseContext_3 := sdv_1678;
    call {:si_unique_call 3794} vslice_dummy_var_524 := sdv_RemoveEntryList(0);
    goto L33;

  anon48_Then:
    assume {:partition} sdv_1681 == 0;
    assume {:nonnull} Vcb_114 != 0;
    assume Vcb_114 > 0;
    call {:si_unique_call 3795} Entry_2 := RemoveHeadList(AsyncCloseList__VCB(Vcb_114));
    call {:si_unique_call 3796} sdv_1680 := sdv_containing_record(Entry_2, 8);
    CloseContext_3 := sdv_1680;
    call {:si_unique_call 3797} vslice_dummy_var_525 := sdv_RemoveEntryList(0);
    goto L33;

  anon47_Then:
    assume {:partition} Vcb_114 == 0;
    goto L13;

  anon65_Then:
    assume {:partition} Vcb_114 == 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} LastVcbHint != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L91;

  L91:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto L92;

  L92:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L96;

  L96:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L97;

  L97:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L101;

  L101:
    Vcb_114 := LastVcbHint;
    goto L12;

  anon62_Then:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L101;

  anon64_Then:
    goto L12;

  anon63_Then:
    goto L97;

  anon61_Then:
    goto L97;

  anon58_Then:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L97;

  anon60_Then:
    goto L96;

  anon59_Then:
    goto L92;

  anon57_Then:
    goto L92;

  anon55_Then:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L92;

  anon56_Then:
    goto L91;

  anon46_Then:
    assume {:partition} LastVcbHint == 0;
    goto L12;

  anon45_Then:
    assume {:partition} Vcb_114 == 0;
    WorkerThread := 1;
    goto L127;
}



procedure {:origName "FatFsdClose"} FatFsdClose(actual_VolumeDeviceObject_20: int, actual_Irp_79: int) returns (Tmp_2964: int);
  modifies alloc, yogi_error, queued;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} Tmp_2964 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdClose"} FatFsdClose(actual_VolumeDeviceObject_20: int, actual_Irp_79: int) returns (Tmp_2964: int)
{
  var {:scalar} Tmp_2965: int;
  var {:pointer} Ccb_40: int;
  var {:pointer} Fcb_71: int;
  var {:scalar} TopLevel_10: int;
  var {:scalar} Status_81: int;
  var {:pointer} FileObject_42: int;
  var {:scalar} TypeOfOpen_13: int;
  var {:scalar} Wait_13: int;
  var {:pointer} IrpSp_43: int;
  var {:scalar} sdv_1693: int;
  var {:scalar} Tmp_2966: int;
  var {:scalar} Tmp_2967: int;
  var {:pointer} sdv_1698: int;
  var {:pointer} VolumeDeviceObject_21: int;
  var {:pointer} Vcb_115: int;
  var {:dopa} {:scalar} VcbDeleted_6: int;
  var {:pointer} CloseContext_4: int;
  var {:pointer} VolumeDeviceObject_20: int;
  var {:pointer} Irp_79: int;
  var vslice_dummy_var_1634: int;
  var vslice_dummy_var_1635: int;
  var vslice_dummy_var_1636: int;
  var vslice_dummy_var_1637: int;
  var vslice_dummy_var_1638: int;
  var vslice_dummy_var_1639: int;

  anon0:
    call {:si_unique_call 3798} Ccb_40 := __HAVOC_malloc(4);
    call {:si_unique_call 3799} Fcb_71 := __HAVOC_malloc(4);
    call {:si_unique_call 3800} Vcb_115 := __HAVOC_malloc(4);
    call {:si_unique_call 3801} VcbDeleted_6 := __HAVOC_malloc(4);
    VolumeDeviceObject_20 := actual_VolumeDeviceObject_20;
    Irp_79 := actual_Irp_79;
    Status_81 := 0;
    assume {:nonnull} VcbDeleted_6 != 0;
    assume VcbDeleted_6 > 0;
    VolumeDeviceObject_21 := VolumeDeviceObject_20;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L18;

  L18:
    assume {:nonnull} Irp_79 != 0;
    assume Irp_79 > 0;
    assume {:nonnull} Irp_79 != 0;
    assume Irp_79 > 0;
    call {:si_unique_call 3802} sdv_IoCompleteRequest(0, 1);
    Tmp_2964 := 0;
    goto L1;

  L1:
    call {:si_unique_call 3803} SLIC_FatFsdClose_exit(strConst__li2bpl2, Tmp_2964);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon69_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 3804} KeEnterCriticalRegion();
    call {:si_unique_call 3805} TopLevel_10 := FatIsIrpTopLevel(Irp_79);
    call {:si_unique_call 3806} IrpSp_43 := sdv_IoGetCurrentIrpStackLocation(Irp_79);
    assume {:nonnull} IrpSp_43 != 0;
    assume IrpSp_43 > 0;
    havoc FileObject_42;
    call {:si_unique_call 3807} TypeOfOpen_13 := FatDecodeFileObject(FileObject_42, Vcb_115, Fcb_71, Ccb_40);
    assume {:nonnull} Ccb_40 != 0;
    assume Ccb_40 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L44;

  L44:
    CloseContext_4 := 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} TopLevel_10 != 0;
    call {:si_unique_call 3808} sdv_1698 := IoGetCurrentProcess();
    goto anon53_Then, anon53_Else;

  anon53_Else:
    Tmp_2965 := 1;
    goto L75;

  L75:
    Wait_13 := Tmp_2965;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} TypeOfOpen_13 == 2;
    goto L78;

  L78:
    assume {:nonnull} Fcb_71 != 0;
    assume Fcb_71 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L83;

  L83:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} TypeOfOpen_13 == 5;
    assume {:nonnull} Vcb_115 != 0;
    assume Vcb_115 > 0;
    havoc CloseContext_4;
    assume {:nonnull} Vcb_115 != 0;
    assume Vcb_115 > 0;
    assume {:nonnull} CloseContext_4 != 0;
    assume CloseContext_4 > 0;
    goto L88;

  L88:
    assume {:nonnull} CloseContext_4 != 0;
    assume CloseContext_4 > 0;
    assume {:nonnull} Vcb_115 != 0;
    assume Vcb_115 > 0;
    assume {:nonnull} CloseContext_4 != 0;
    assume CloseContext_4 > 0;
    assume {:nonnull} Fcb_71 != 0;
    assume Fcb_71 > 0;
    assume {:nonnull} CloseContext_4 != 0;
    assume CloseContext_4 > 0;
    assume {:nonnull} Fcb_71 != 0;
    assume Fcb_71 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Fcb_71 != 0;
    assume Fcb_71 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    Tmp_2966 := 1;
    goto L95;

  L95:
    Tmp_2967 := Tmp_2966;
    call {:si_unique_call 3809} FatQueueClose(CloseContext_4, Tmp_2967);
    goto L99;

  L99:
    call {:si_unique_call 3810} FatCompleteRequest_Real(0, Irp_79, Status_81);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} TopLevel_10 != 0;
    goto L66;

  L66:
    call {:si_unique_call 3811} KeLeaveCriticalRegion();
    Tmp_2964 := Status_81;
    goto L1;

  anon52_Then:
    assume {:partition} TopLevel_10 == 0;
    goto L66;

  anon59_Then:
    goto L92;

  L92:
    Tmp_2966 := 0;
    goto L95;

  anon72_Then:
    goto L92;

  anon57_Then:
    assume {:partition} TypeOfOpen_13 != 5;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} TypeOfOpen_13 == 6;
    goto L103;

  L103:
    assume {:nonnull} Vcb_115 != 0;
    assume Vcb_115 > 0;
    havoc vslice_dummy_var_1634;
    call {:si_unique_call 3812} CloseContext_4 := FatAllocateCloseContext(vslice_dummy_var_1634);
    assume {:nonnull} CloseContext_4 != 0;
    assume CloseContext_4 > 0;
    goto L88;

  anon58_Then:
    assume {:partition} TypeOfOpen_13 != 6;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} TypeOfOpen_13 != 7;
    assume {:nonnull} Ccb_40 != 0;
    assume Ccb_40 > 0;
    havoc vslice_dummy_var_1635;
    call {:si_unique_call 3813} FatDeallocateCcbStrings(vslice_dummy_var_1635);
    assume {:nonnull} Ccb_40 != 0;
    assume Ccb_40 > 0;
    havoc CloseContext_4;
    assume {:nonnull} CloseContext_4 != 0;
    assume CloseContext_4 > 0;
    assume {:nonnull} Ccb_40 != 0;
    assume Ccb_40 > 0;
    goto L88;

  anon60_Then:
    assume {:partition} TypeOfOpen_13 == 7;
    goto L103;

  anon56_Then:
    goto L79;

  L79:
    assume {:nonnull} Ccb_40 != 0;
    assume Ccb_40 > 0;
    assume {:nonnull} Fcb_71 != 0;
    assume Fcb_71 > 0;
    assume {:nonnull} Vcb_115 != 0;
    assume Vcb_115 > 0;
    havoc vslice_dummy_var_1636;
    havoc vslice_dummy_var_1637;
    havoc vslice_dummy_var_1638;
    call {:si_unique_call 3814} sdv_1693 := FatCommonClose#1(vslice_dummy_var_1636, vslice_dummy_var_1637, vslice_dummy_var_1638, TypeOfOpen_13, Wait_13, VcbDeleted_6);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_1693 != 259;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} TypeOfOpen_13 == 5;
    goto L117;

  L117:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} TypeOfOpen_13 == 5;
    assume {:nonnull} VcbDeleted_6 != 0;
    assume VcbDeleted_6 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    CloseContext_4 := 0;
    goto L124;

  L124:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} CloseContext_4 != 0;
    call {:si_unique_call 3815} sdv_ExFreePool(0);
    goto L99;

  anon66_Then:
    assume {:partition} CloseContext_4 == 0;
    goto L99;

  anon65_Then:
    assume {:nonnull} Vcb_115 != 0;
    assume Vcb_115 > 0;
    havoc CloseContext_4;
    assume {:nonnull} Vcb_115 != 0;
    assume Vcb_115 > 0;
    goto L124;

  anon64_Then:
    assume {:partition} TypeOfOpen_13 != 5;
    assume {:nonnull} Vcb_115 != 0;
    assume Vcb_115 > 0;
    havoc vslice_dummy_var_1639;
    call {:si_unique_call 3816} CloseContext_4 := FatAllocateCloseContext(vslice_dummy_var_1639);
    goto L124;

  anon62_Then:
    assume {:partition} TypeOfOpen_13 != 5;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} TypeOfOpen_13 != 6;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} TypeOfOpen_13 == 7;
    goto L117;

  anon67_Then:
    assume {:partition} TypeOfOpen_13 != 7;
    goto L99;

  anon63_Then:
    assume {:partition} TypeOfOpen_13 == 6;
    goto L117;

  anon61_Then:
    assume {:partition} sdv_1693 == 259;
    goto L83;

  anon55_Then:
    goto L79;

  anon71_Then:
    assume {:partition} TypeOfOpen_13 != 2;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} TypeOfOpen_13 != 3;
    goto L79;

  anon54_Then:
    assume {:partition} TypeOfOpen_13 == 3;
    goto L78;

  anon53_Then:
    goto L47;

  L47:
    Tmp_2965 := 0;
    goto L75;

  anon70_Then:
    assume {:partition} TopLevel_10 == 0;
    goto L47;

  anon50_Then:
    assume {:nonnull} FileObject_42 != 0;
    assume FileObject_42 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L44;

  anon51_Then:
    assume {:nonnull} Ccb_40 != 0;
    assume Ccb_40 > 0;
    goto L44;

  anon49_Then:
    goto L18;
}



procedure {:origName "FatIsNameLongUnicodeValid"} FatIsNameLongUnicodeValid(actual_IrpContext_206: int, actual_Name_8: int, actual_CanContainWildcards: int, actual_PathNameOk: int, actual_LeadingBackslashOk: int) returns (Tmp_2969: int);
  free ensures {:va_keep} Tmp_2969 == 0 || Tmp_2969 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsNameLongUnicodeValid"} FatIsNameLongUnicodeValid(actual_IrpContext_206: int, actual_Name_8: int, actual_CanContainWildcards: int, actual_PathNameOk: int, actual_LeadingBackslashOk: int) returns (Tmp_2969: int)
{
  var {:scalar} i_23: int;
  var {:pointer} Tmp_2970: int;
  var {:scalar} Tmp_2971: int;
  var {:scalar} Tmp_2973: int;
  var {:pointer} Tmp_2974: int;
  var {:scalar} Tmp_2975: int;
  var {:pointer} Tmp_2976: int;
  var {:pointer} Tmp_2977: int;
  var {:scalar} Tmp_2978: int;
  var {:scalar} Tmp_2979: int;
  var {:scalar} Tmp_2980: int;
  var {:pointer} Name_8: int;
  var {:scalar} CanContainWildcards: int;

  anon0:
    Name_8 := actual_Name_8;
    CanContainWildcards := actual_CanContainWildcards;
    i_23 := 0;
    goto L5;

  L5:
    call {:si_unique_call 3817} i_23, Tmp_2970, Tmp_2971, Tmp_2973, Tmp_2974, Tmp_2975, Tmp_2976, Tmp_2977, Tmp_2978, Tmp_2979, Tmp_2980 := FatIsNameLongUnicodeValid_loop_L5(i_23, Tmp_2970, Tmp_2971, Tmp_2973, Tmp_2974, Tmp_2975, Tmp_2976, Tmp_2977, Tmp_2978, Tmp_2979, Tmp_2980, Name_8, CanContainWildcards);
    goto L5_last;

  L5_last:
    assume {:nonnull} Name_8 != 0;
    assume Name_8 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_2975 := i_23;
    assume {:nonnull} Name_8 != 0;
    assume Name_8 > 0;
    havoc Tmp_2976;
    assume {:nonnull} Tmp_2976 != 0;
    assume Tmp_2976 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    Tmp_2979 := i_23;
    assume {:nonnull} Name_8 != 0;
    assume Name_8 > 0;
    havoc Tmp_2970;
    assume {:nonnull} Tmp_2970 != 0;
    assume Tmp_2970 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Tmp_2973 := 1;
    goto L12;

  L12:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Tmp_2973 == 0;
    Tmp_2969 := 0;
    goto L1;

  L1:
    return;

  anon13_Then:
    assume {:partition} Tmp_2973 != 0;
    goto L8;

  L8:
    i_23 := i_23 + 1;
    goto L8_dummy;

  L8_dummy:
    assume false;
    return;

  anon15_Then:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} CanContainWildcards != 0;
    Tmp_2978 := 8;
    goto L16;

  L16:
    Tmp_2980 := i_23;
    assume {:nonnull} Name_8 != 0;
    assume Name_8 > 0;
    havoc Tmp_2977;
    assume {:nonnull} Tmp_2977 != 0;
    assume Tmp_2977 > 0;
    havoc Tmp_2971;
    assume {:nonnull} FsRtlLegalAnsiCharacterArray != 0;
    assume FsRtlLegalAnsiCharacterArray > 0;
    havoc Tmp_2974;
    assume {:nonnull} Tmp_2974 != 0;
    assume Tmp_2974 > 0;
    havoc Tmp_2973;
    goto L12;

  anon12_Then:
    assume {:partition} CanContainWildcards == 0;
    Tmp_2978 := 0;
    goto L16;

  anon14_Then:
    goto L8;

  anon11_Then:
    Tmp_2969 := 1;
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_2983: int;
  var {:pointer} Lookaside_3: int;
  var vslice_dummy_var_526: int;
  var vslice_dummy_var_527: int;

  anon0:
    call {:si_unique_call 3818} vslice_dummy_var_526 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_2983 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_2983 != 0;
    assume Tmp_2983 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L1;

  anon5_Then:
    call {:si_unique_call 3819} vslice_dummy_var_527 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "PsGetCurrentThread"} PsGetCurrentThread() returns (Tmp_2984: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "PsGetCurrentThread"} PsGetCurrentThread() returns (Tmp_2984: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_2984 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 3820} Tmp_2984 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_3: int)
{
  var {:pointer} ListHead_3: int;
  var vslice_dummy_var_528: int;

  anon0:
    call {:si_unique_call 3821} vslice_dummy_var_528 := __HAVOC_malloc(4);
    ListHead_3 := actual_ListHead_3;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    return;
}



procedure {:origName "RtlConvertLongToLuid"} RtlConvertLongToLuid(actual_Long: int) returns (SD2_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RtlConvertLongToLuid"} RtlConvertLongToLuid(actual_Long: int) returns (SD2_1: int)
{
  var {:scalar} Tmp_2: int;
  var {:scalar} TempLi: int;
  var {:scalar} TempLuid: int;
  var {:scalar} Long: int;

  anon0:
    call {:si_unique_call 3822} Tmp_2 := __HAVOC_malloc(8);
    call {:si_unique_call 3823} TempLi := __HAVOC_malloc(20);
    call {:si_unique_call 3824} TempLuid := __HAVOC_malloc(8);
    Long := actual_Long;
    assume {:nonnull} TempLi != 0;
    assume TempLi > 0;
    assume {:nonnull} TempLi != 0;
    assume TempLi > 0;
    assume {:nonnull} TempLuid != 0;
    assume TempLuid > 0;
    assume {:nonnull} TempLi != 0;
    assume TempLi > 0;
    assume {:nonnull} TempLuid != 0;
    assume TempLuid > 0;
    assume {:nonnull} TempLuid != 0;
    assume TempLuid > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} TempLuid != 0;
    assume TempLuid > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    SD2_1 := Tmp_2;
    return;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_4: int) returns (Tmp_2989: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_4: int) returns (Tmp_2989: int)
{
  var {:pointer} Entry_4: int;
  var {:pointer} Flink: int;
  var {:pointer} ListHead_4: int;

  anon0:
    ListHead_4 := actual_ListHead_4;
    call {:si_unique_call 3825} SLIC_RemoveHeadList_entry(strConst__li2bpl2);
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    havoc Entry_4;
    assume {:nonnull} Entry_4 != 0;
    assume Entry_4 > 0;
    havoc Flink;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    Tmp_2989 := Entry_4;
    return;
}



procedure {:origName "FatExplicitDeviceAccessGranted"} FatExplicitDeviceAccessGranted(actual_IrpContext_207: int, actual_DeviceObject_11: int, actual_AccessState_1: int, actual_ProcessorMode: int) returns (Tmp_2991: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatExplicitDeviceAccessGranted"} FatExplicitDeviceAccessGranted(actual_IrpContext_207: int, actual_DeviceObject_11: int, actual_AccessState_1: int, actual_ProcessorMode: int) returns (Tmp_2991: int)
{
  var {:scalar} Status_82: int;
  var {:scalar} PrivilegeSet: int;
  var {:scalar} sdv_1706: int;
  var {:pointer} EffectiveToken: int;
  var {:pointer} OriginalAccessToken: int;
  var {:pointer} RestrictedAccessToken: int;
  var {:pointer} AccessState_1: int;
  var {:scalar} ProcessorMode: int;
  var boogieTmp: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;
  var vslice_dummy_var_532: int;
  var vslice_dummy_var_1640: int;

  anon0:
    call {:si_unique_call 3826} vslice_dummy_var_529 := __HAVOC_malloc(8);
    call {:si_unique_call 3827} PrivilegeSet := __HAVOC_malloc(12);
    call {:si_unique_call 3828} RestrictedAccessToken := __HAVOC_malloc(4);
    AccessState_1 := actual_AccessState_1;
    ProcessorMode := actual_ProcessorMode;
    assume {:nonnull} AccessState_1 != 0;
    assume AccessState_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_2991 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:nonnull} PrivilegeSet != 0;
    assume PrivilegeSet > 0;
    assume {:nonnull} PrivilegeSet != 0;
    assume PrivilegeSet > 0;
    assume {:nonnull} PrivilegeSet != 0;
    assume PrivilegeSet > 0;
    call {:si_unique_call 3829} boogieTmp := RtlConvertLongToLuid(28);
    assume {:nonnull} PrivilegeSet != 0;
    assume PrivilegeSet > 0;
    call {:si_unique_call 3830} sdv_1706 := corral_nondet();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_1706 != 0;
    Tmp_2991 := 0;
    goto L1;

  anon10_Then:
    assume {:partition} sdv_1706 == 0;
    call {:si_unique_call 3831} SeLockSubjectContext(0);
    assume {:nonnull} AccessState_1 != 0;
    assume AccessState_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} AccessState_1 != 0;
    assume AccessState_1 > 0;
    EffectiveToken := ClientToken__SECURITY_SUBJECT_CONTEXT(SubjectSecurityContext__ACCESS_STATE(AccessState_1));
    goto L30;

  L30:
    assume {:nonnull} EffectiveToken != 0;
    assume EffectiveToken > 0;
    havoc OriginalAccessToken;
    call {:si_unique_call 3832} Status_82 := FatCreateRestrictEveryoneToken(OriginalAccessToken, RestrictedAccessToken);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_82 >= 0;
    assume {:nonnull} EffectiveToken != 0;
    assume EffectiveToken > 0;
    assume {:nonnull} RestrictedAccessToken != 0;
    assume RestrictedAccessToken > 0;
    call {:si_unique_call 3833} vslice_dummy_var_532 := IoGetFileObjectGenericMapping();
    assume {:nonnull} AccessState_1 != 0;
    assume AccessState_1 > 0;
    havoc vslice_dummy_var_1640;
    call {:si_unique_call 3834} vslice_dummy_var_530 := SeAccessCheck(0, 0, 0, vslice_dummy_var_1640, 0, 0, 0, ProcessorMode, 0, 0);
    assume {:nonnull} EffectiveToken != 0;
    assume EffectiveToken > 0;
    call {:si_unique_call 3835} SeUnlockSubjectContext(0);
    call {:si_unique_call 3836} vslice_dummy_var_531 := sdv_ObDereferenceObject(0);
    Tmp_2991 := Status_82;
    goto L1;

  anon12_Then:
    assume {:partition} 0 > Status_82;
    call {:si_unique_call 3837} SeReleaseSubjectContext(0);
    Tmp_2991 := Status_82;
    goto L1;

  anon11_Then:
    assume {:nonnull} AccessState_1 != 0;
    assume AccessState_1 > 0;
    EffectiveToken := PrimaryToken__SECURITY_SUBJECT_CONTEXT(SubjectSecurityContext__ACCESS_STATE(AccessState_1));
    goto L30;
}



procedure {:origName "FsRtlSetupAdvancedHeader"} FsRtlSetupAdvancedHeader(actual_AdvHdr: int, actual_FMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FsRtlSetupAdvancedHeader"} FsRtlSetupAdvancedHeader(actual_AdvHdr: int, actual_FMutex: int)
{
  var {:pointer} localAdvHdr: int;
  var {:pointer} AdvHdr: int;
  var {:pointer} FMutex: int;
  var vslice_dummy_var_533: int;

  anon0:
    call {:si_unique_call 3838} vslice_dummy_var_533 := __HAVOC_malloc(4);
    AdvHdr := actual_AdvHdr;
    FMutex := actual_FMutex;
    localAdvHdr := AdvHdr;
    assume {:nonnull} localAdvHdr != 0;
    assume localAdvHdr > 0;
    assume {:nonnull} localAdvHdr != 0;
    assume localAdvHdr > 0;
    assume {:nonnull} localAdvHdr != 0;
    assume localAdvHdr > 0;
    assume {:nonnull} localAdvHdr != 0;
    assume localAdvHdr > 0;
    call {:si_unique_call 3839} InitializeListHead(FilterContexts__FSRTL_ADVANCED_FCB_HEADER(localAdvHdr));
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} FMutex != 0;
    assume {:nonnull} localAdvHdr != 0;
    assume localAdvHdr > 0;
    goto L12;

  L12:
    assume {:nonnull} localAdvHdr != 0;
    assume localAdvHdr > 0;
    assume {:nonnull} localAdvHdr != 0;
    assume localAdvHdr > 0;
    return;

  anon3_Then:
    assume {:partition} FMutex == 0;
    goto L12;
}



procedure {:origName "KeGetCurrentProcessorNumber"} KeGetCurrentProcessorNumber() returns (Tmp_2995: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "KeGetCurrentProcessorNumber"} KeGetCurrentProcessorNumber() returns (Tmp_2995: int)
{
  var {:scalar} sdv_1710: int;

  anon0:
    Tmp_2995 := sdv_1710;
    return;
}



procedure {:origName "FatIsIoRangeValid"} FatIsIoRangeValid(actual_Vcb_116: int, actual_structPtr888Start: int, actual_Length_22: int) returns (Tmp_2997: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2997 == 1 || Tmp_2997 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatIsIoRangeValid"} FatIsIoRangeValid(actual_Vcb_116: int, actual_structPtr888Start: int, actual_Length_22: int) returns (Tmp_2997: int)
{
  var {:scalar} Start: int;
  var {:scalar} Tmp_2998: int;
  var {:pointer} structPtr888Start: int;
  var {:scalar} Length_22: int;

  anon0:
    call {:si_unique_call 3840} Start := __HAVOC_malloc(20);
    structPtr888Start := actual_structPtr888Start;
    Length_22 := actual_Length_22;
    assume {:nonnull} Start != 0;
    assume Start > 0;
    assume {:nonnull} structPtr888Start != 0;
    assume structPtr888Start > 0;
    assume {:nonnull} Start != 0;
    assume Start > 0;
    assume {:nonnull} structPtr888Start != 0;
    assume structPtr888Start > 0;
    assume {:nonnull} Start != 0;
    assume Start > 0;
    assume {:nonnull} structPtr888Start != 0;
    assume structPtr888Start > 0;
    assume {:nonnull} Start != 0;
    assume Start > 0;
    assume {:nonnull} structPtr888Start != 0;
    assume structPtr888Start > 0;
    assume {:nonnull} Start != 0;
    assume Start > 0;
    assume {:nonnull} structPtr888Start != 0;
    assume structPtr888Start > 0;
    assume {:nonnull} Start != 0;
    assume Start > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L5;

  L5:
    Tmp_2998 := 0;
    goto L6;

  L6:
    Tmp_2997 := Tmp_2998;
    return;

  anon5_Then:
    assume {:nonnull} Start != 0;
    assume Start > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_2998 := 1;
    goto L6;

  anon6_Then:
    goto L5;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_534: int;

  anon0:
    call {:si_unique_call 3841} vslice_dummy_var_534 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int)
{
  var vslice_dummy_var_535: int;

  anon0:
    call {:si_unique_call 3842} vslice_dummy_var_535 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatCreateRestrictEveryoneToken"} FatCreateRestrictEveryoneToken(actual_Token: int, actual_RestrictedToken: int) returns (Tmp_3004: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCreateRestrictEveryoneToken"} FatCreateRestrictEveryoneToken(actual_Token: int, actual_RestrictedToken: int) returns (Tmp_3004: int)
{
  var {:scalar} Status_83: int;
  var {:scalar} SidsToDisable: int;
  var {:pointer} RestrictedToken: int;

  anon0:
    call {:si_unique_call 3843} SidsToDisable := __HAVOC_malloc(8);
    RestrictedToken := actual_RestrictedToken;
    Status_83 := 0;
    assume {:nonnull} RestrictedToken != 0;
    assume RestrictedToken > 0;
    assume {:nonnull} SidsToDisable != 0;
    assume SidsToDisable > 0;
    assume {:nonnull} SidsToDisable != 0;
    assume SidsToDisable > 0;
    assume {:nonnull} SeExports != 0;
    assume SeExports > 0;
    assume {:nonnull} SidsToDisable != 0;
    assume SidsToDisable > 0;
    call {:si_unique_call 3844} Status_83 := corral_nondet();
    Tmp_3004 := Status_83;
    return;
}



procedure {:origName "FatCheckFileAccess"} FatCheckFileAccess(actual_IrpContext_208: int, actual_DirentAttributes: int, actual_DesiredAccess_15: int) returns (Tmp_3006: int);
  free ensures {:va_keep} Tmp_3006 == 0 || Tmp_3006 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCheckFileAccess"} FatCheckFileAccess(actual_IrpContext_208: int, actual_DirentAttributes: int, actual_DesiredAccess_15: int) returns (Tmp_3006: int)
{
  var {:scalar} AccessMask: int;
  var {:scalar} Result_8: int;
  var {:scalar} DirentAttributes: int;
  var {:pointer} DesiredAccess_15: int;

  anon0:
    DirentAttributes := actual_DirentAttributes;
    DesiredAccess_15 := actual_DesiredAccess_15;
    Result_8 := 1;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} BAND(DirentAttributes, 8) != 0;
    goto L7;

  L7:
    Result_8 := 0;
    goto L9;

  L9:
    Tmp_3006 := Result_8;
    return;

  anon17_Then:
    assume {:partition} BAND(DirentAttributes, 8) == 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} BAND(DirentAttributes, 64) == 0;
    assume {:nonnull} DesiredAccess_15 != 0;
    assume DesiredAccess_15 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    Result_8 := 0;
    goto L9;

  anon14_Then:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} BAND(DirentAttributes, 1) != 0;
    AccessMask := 18809273;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(DirentAttributes, 16) != 0;
    AccessMask := BOR(AccessMask, BOR(BOR(2, 4), 64));
    goto L17;

  L17:
    assume {:nonnull} DesiredAccess_15 != 0;
    assume DesiredAccess_15 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    Result_8 := 0;
    goto L9;

  anon16_Then:
    goto L9;

  anon18_Then:
    assume {:partition} BAND(DirentAttributes, 16) == 0;
    goto L17;

  anon15_Then:
    assume {:partition} BAND(DirentAttributes, 1) == 0;
    goto L9;

  anon13_Then:
    assume {:partition} BAND(DirentAttributes, 64) != 0;
    goto L7;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_5: int, actual_Entry_5: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_5: int, actual_Entry_5: int)
{
  var {:pointer} Flink_1: int;
  var {:pointer} ListHead_5: int;
  var {:pointer} Entry_5: int;
  var vslice_dummy_var_536: int;

  anon0:
    call {:si_unique_call 3845} vslice_dummy_var_536 := __HAVOC_malloc(4);
    ListHead_5 := actual_ListHead_5;
    Entry_5 := actual_Entry_5;
    call {:si_unique_call 3846} SLIC_InsertHeadList_entry(0);
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    havoc Flink_1;
    assume {:nonnull} Entry_5 != 0;
    assume Entry_5 > 0;
    assume {:nonnull} Entry_5 != 0;
    assume Entry_5 > 0;
    assume {:nonnull} Flink_1 != 0;
    assume Flink_1 > 0;
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    return;
}



procedure {:origName "FatPostStackOverflowRead"} FatPostStackOverflowRead(actual_IrpContext_209: int, actual_Irp_80: int, actual_Fcb_72: int) returns (Tmp_3010: int);
  modifies alloc, markedPending;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} Tmp_3010 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPostStackOverflowRead"} FatPostStackOverflowRead(actual_IrpContext_209: int, actual_Irp_80: int, actual_Fcb_72: int) returns (Tmp_3010: int)
{
  var {:pointer} Tmp_3011: int;
  var {:scalar} Event_14: int;
  var {:pointer} sdv_1714: int;
  var {:pointer} Vcb_117: int;
  var {:pointer} Resource_14: int;
  var {:pointer} IrpContext_209: int;
  var {:pointer} Irp_80: int;
  var {:pointer} Fcb_72: int;
  var vslice_dummy_var_537: int;
  var vslice_dummy_var_538: int;

  anon0:
    call {:si_unique_call 3847} Event_14 := __HAVOC_malloc(124);
    IrpContext_209 := actual_IrpContext_209;
    Irp_80 := actual_Irp_80;
    Fcb_72 := actual_Fcb_72;
    call {:si_unique_call 3848} KeInitializeEvent(Event_14, 0, 0);
    assume {:nonnull} Irp_80 != 0;
    assume Irp_80 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Fcb_72 != 0;
    assume Fcb_72 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Fcb_72 != 0;
    assume Fcb_72 > 0;
    havoc Resource_14;
    goto L13;

  L13:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Resource_14 != 0;
    call {:si_unique_call 3849} vslice_dummy_var_537 := ExAcquireResourceSharedLite(0, 1);
    goto L14;

  L14:
    Tmp_3011 := Fcb_72;
    assume {:nonnull} Tmp_3011 != 0;
    assume Tmp_3011 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    Vcb_117 := Fcb_72;
    goto L20;

  L20:
    call {:si_unique_call 3850} FatPrePostIrp(IrpContext_209, Irp_80);
    call {:si_unique_call 3851} sdv_1714 := sdv_KeGetCurrentThread();
    assume {:nonnull} Vcb_117 != 0;
    assume Vcb_117 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} IrpContext_209 != 0;
    assume IrpContext_209 > 0;
    goto L31;

  L31:
    call {:si_unique_call 3852} vslice_dummy_var_538 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Resource_14 != 0;
    call {:si_unique_call 3853} ExReleaseResourceLite(0);
    goto L39;

  L39:
    Tmp_3010 := 259;
    return;

  anon17_Then:
    assume {:partition} Resource_14 == 0;
    goto L39;

  anon16_Then:
    goto L31;

  anon18_Then:
    assume {:nonnull} Fcb_72 != 0;
    assume Fcb_72 > 0;
    havoc Vcb_117;
    goto L20;

  anon15_Then:
    assume {:partition} Resource_14 == 0;
    goto L14;

  anon14_Then:
    goto L10;

  L10:
    assume {:nonnull} Fcb_72 != 0;
    assume Fcb_72 > 0;
    havoc Resource_14;
    goto L13;

  anon13_Then:
    goto L10;
}



procedure {:origName "FatCommonRead"} FatCommonRead(actual_IrpContext_210: int, actual_Irp_81: int) returns (Tmp_3013: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonRead"} FatCommonRead(actual_IrpContext_210: int, actual_Irp_81: int) returns (Tmp_3013: int)
{
  var {:scalar} VolumeSize_1: int;
  var {:scalar} Tmp_3014: int;
  var {:scalar} Tmp_3015: int;
  var {:pointer} SystemBuffer_1: int;
  var {:pointer} Ccb_41: int;
  var {:scalar} sdv_1717: int;
  var {:scalar} NonCachedIo_1: int;
  var {:scalar} Tmp_3016: int;
  var {:pointer} Tmp_3017: int;
  var {:scalar} sdv_1720: int;
  var {:scalar} Tmp_3019: int;
  var {:scalar} Tmp_3020: int;
  var {:scalar} sdv_1721: int;
  var {:pointer} Tmp_3022: int;
  var {:scalar} ActualBytesRead: int;
  var {:scalar} ValidDataLength_3: int;
  var {:scalar} Tmp_3023: int;
  var {:pointer} Tmp_3024: int;
  var {:scalar} FileSize_1: int;
  var {:scalar} Status_84: int;
  var {:pointer} FileObject_43: int;
  var {:scalar} Tmp_3026: int;
  var {:scalar} BytesToRead: int;
  var {:scalar} sdv_1724: int;
  var {:pointer} Tmp_3027: int;
  var {:scalar} Tmp_3028: int;
  var {:scalar} StartingLbo_1: int;
  var {:pointer} Tmp_3029: int;
  var {:scalar} TypeOfOpen_14: int;
  var {:pointer} Tmp_3030: int;
  var {:scalar} sdv_1725: int;
  var {:scalar} Wait_14: int;
  var {:pointer} IrpSp_44: int;
  var {:scalar} StartingVbo_9: int;
  var {:scalar} sdv_1727: int;
  var {:scalar} Tmp_3032: int;
  var {:scalar} PostIrp_2: int;
  var {:pointer} Tmp_3033: int;
  var {:pointer} Tmp_3034: int;
  var {:pointer} Tmp_3035: int;
  var {:scalar} sdv_1730: int;
  var {:scalar} sdv_1731: int;
  var {:scalar} FcbOrDcbAcquired_1: int;
  var {:pointer} sdv_1732: int;
  var {:pointer} sdv_1733: int;
  var {:scalar} RequestedByteCount: int;
  var {:pointer} Tmp_3036: int;
  var {:scalar} Tmp_3037: int;
  var {:scalar} sdv_1734: int;
  var {:pointer} Vcb_118: int;
  var {:scalar} sdv_1735: int;
  var {:pointer} Tmp_3038: int;
  var {:scalar} Tmp_3040: int;
  var {:scalar} SectorSize_8: int;
  var {:scalar} StackFatIoContext_1: int;
  var {:scalar} OplockPostIrp_4: int;
  var {:pointer} Stats_11: int;
  var {:pointer} Tmp_3041: int;
  var {:scalar} sdv_1738: int;
  var {:scalar} PagingIo_1: int;
  var {:scalar} StartingByte_1: int;
  var {:scalar} sdv_1739: int;
  var {:pointer} FcbOrDcb_16: int;
  var {:pointer} Tmp_3042: int;
  var {:scalar} sdv_1740: int;
  var {:scalar} ZeroingOffset: int;
  var {:pointer} Tmp_3043: int;
  var {:scalar} SynchronousIo_1: int;
  var {:scalar} sdv_1741: int;
  var {:scalar} sdv_1742: int;
  var {:pointer} Tmp_3044: int;
  var {:scalar} ByteCount_22: int;
  var {:pointer} Tmp_3046: int;
  var {:scalar} Tmp_3047: int;
  var {:pointer} IrpContext_210: int;
  var {:pointer} Irp_81: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_1641: int;
  var vslice_dummy_var_1642: int;
  var vslice_dummy_var_1643: int;
  var vslice_dummy_var_1644: int;
  var vslice_dummy_var_1645: int;
  var vslice_dummy_var_1646: int;
  var vslice_dummy_var_1647: int;
  var vslice_dummy_var_1648: int;
  var vslice_dummy_var_1649: int;
  var vslice_dummy_var_1650: int;
  var vslice_dummy_var_1651: int;
  var vslice_dummy_var_1652: int;
  var vslice_dummy_var_1653: int;

  anon0:
    call {:si_unique_call 3854} Ccb_41 := __HAVOC_malloc(4);
    call {:si_unique_call 3855} Vcb_118 := __HAVOC_malloc(4);
    call {:si_unique_call 3856} StackFatIoContext_1 := __HAVOC_malloc(160);
    call {:si_unique_call 3857} StartingByte_1 := __HAVOC_malloc(20);
    call {:si_unique_call 3858} FcbOrDcb_16 := __HAVOC_malloc(4);
    IrpContext_210 := actual_IrpContext_210;
    Irp_81 := actual_Irp_81;
    PostIrp_2 := 0;
    OplockPostIrp_4 := 0;
    FcbOrDcbAcquired_1 := 0;
    SystemBuffer_1 := 0;
    call {:si_unique_call 3859} IrpSp_44 := sdv_IoGetCurrentIrpStackLocation(Irp_81);
    assume {:nonnull} IrpSp_44 != 0;
    assume IrpSp_44 > 0;
    havoc FileObject_43;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    havoc Tmp_3015;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:partition} Tmp_3015 == 0;
    Wait_14 := 0;
    goto L548;

  L548:
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    havoc Tmp_3032;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:partition} Tmp_3032 == 0;
    PagingIo_1 := 0;
    goto L552;

  L552:
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    havoc Tmp_3037;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:partition} Tmp_3037 == 0;
    NonCachedIo_1 := 0;
    goto L556;

  L556:
    assume {:nonnull} FileObject_43 != 0;
    assume FileObject_43 > 0;
    havoc Tmp_3014;
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:partition} Tmp_3014 == 0;
    SynchronousIo_1 := 0;
    goto L560;

  L560:
    assume {:nonnull} IrpSp_44 != 0;
    assume IrpSp_44 > 0;
    assume {:nonnull} StartingByte_1 != 0;
    assume StartingByte_1 > 0;
    assume {:nonnull} IrpSp_44 != 0;
    assume IrpSp_44 > 0;
    assume {:nonnull} StartingByte_1 != 0;
    assume StartingByte_1 > 0;
    assume {:nonnull} IrpSp_44 != 0;
    assume IrpSp_44 > 0;
    assume {:nonnull} StartingByte_1 != 0;
    assume StartingByte_1 > 0;
    assume {:nonnull} IrpSp_44 != 0;
    assume IrpSp_44 > 0;
    assume {:nonnull} StartingByte_1 != 0;
    assume StartingByte_1 > 0;
    assume {:nonnull} IrpSp_44 != 0;
    assume IrpSp_44 > 0;
    assume {:nonnull} StartingByte_1 != 0;
    assume StartingByte_1 > 0;
    assume {:nonnull} StartingByte_1 != 0;
    assume StartingByte_1 > 0;
    havoc StartingVbo_9;
    assume {:nonnull} IrpSp_44 != 0;
    assume IrpSp_44 > 0;
    havoc ByteCount_22;
    RequestedByteCount := ByteCount_22;
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} ByteCount_22 != 0;
    call {:si_unique_call 3860} TypeOfOpen_14 := FatDecodeFileObject(FileObject_43, Vcb_118, FcbOrDcb_16, Ccb_41);
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} TypeOfOpen_14 == 4;
    NonCachedIo_1 := 1;
    goto L51;

  L51:
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} PagingIo_1 != 0;
    call {:si_unique_call 3861} sdv_1731 := KeGetCurrentProcessorNumber();
    Tmp_3026 := sdv_1731;
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    havoc Tmp_3042;
    assume {:nonnull} Tmp_3042 != 0;
    assume Tmp_3042 > 0;
    Stats_11 := Common__FILE_SYSTEM_STATISTICS(Tmp_3042 + Tmp_3026 * 240);
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:partition} TypeOfOpen_14 == 2;
    assume {:nonnull} Stats_11 != 0;
    assume Stats_11 > 0;
    assume {:nonnull} Stats_11 != 0;
    assume Stats_11 > 0;
    goto L63;

  L63:
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} TypeOfOpen_14 == 2;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    goto L53;

  L53:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} NonCachedIo_1 != 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    goto L72;

  L72:
    call {:si_unique_call 3862} sdv_RtlZeroMemory(0, 36);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Wait_14 != 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    havoc Tmp_3036;
    assume {:nonnull} Tmp_3036 != 0;
    assume Tmp_3036 > 0;
    call {:si_unique_call 3863} KeInitializeEvent(SyncEvent_unnamed_tag_63(Wait__FAT_IO_CONTEXT(Tmp_3036)), 0, 0);
    goto L69;

  L69:
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} TypeOfOpen_14 == 5;
    goto L93;

  L93:
    assume {:nonnull} StartingByte_1 != 0;
    assume StartingByte_1 > 0;
    havoc StartingLbo_1;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:partition} TypeOfOpen_14 == 4;
    assume {:nonnull} Ccb_41 != 0;
    assume Ccb_41 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    goto L102;

  L102:
    assume {:nonnull} Ccb_41 != 0;
    assume Ccb_41 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    goto L106;

  L106:
    assume {:nonnull} Ccb_41 != 0;
    assume Ccb_41 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    havoc Tmp_3020;
    goto L142;

  L142:
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    havoc VolumeSize_1;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:partition} StartingLbo_1 >= VolumeSize_1;
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    call {:si_unique_call 3864} FatCompleteRequest_Real(IrpContext_210, Irp_81, -1073741807);
    Tmp_3013 := -1073741807;
    goto L1;

  L1:
    return;

  anon266_Then:
    assume {:partition} VolumeSize_1 > StartingLbo_1;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} ByteCount_22 > VolumeSize_1 - StartingLbo_1;
    RequestedByteCount := VolumeSize_1 - StartingLbo_1;
    ByteCount_22 := RequestedByteCount;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} Wait_14 == 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    havoc Tmp_3044;
    assume {:nonnull} Tmp_3044 != 0;
    assume Tmp_3044 > 0;
    goto L108;

  L108:
    call {:si_unique_call 3865} FatLockUserBuffer(IrpContext_210, Irp_81, 1, ByteCount_22);
    goto L111;

  L111:
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    havoc vslice_dummy_var_1641;
    call {:si_unique_call 3866} FatSingleAsync(IrpContext_210, vslice_dummy_var_1641, StartingLbo_1, ByteCount_22, Irp_81);
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} Wait_14 != 0;
    call {:si_unique_call 3867} FatWaitSync(IrpContext_210);
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    havoc Status_84;
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} Status_84 >= 0;
    goto L122;

  L122:
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} SynchronousIo_1 != 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} PagingIo_1 == 0;
    assume {:nonnull} FileObject_43 != 0;
    assume FileObject_43 > 0;
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    goto L123;

  L123:
    call {:si_unique_call 3868} FatCompleteRequest_Real(IrpContext_210, Irp_81, Status_84);
    Tmp_3013 := Status_84;
    goto L1;

  anon205_Then:
    assume {:partition} PagingIo_1 != 0;
    goto L123;

  anon204_Then:
    assume {:partition} SynchronousIo_1 == 0;
    goto L123;

  anon265_Then:
    assume {:partition} 0 > Status_84;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    call {:si_unique_call 3869} sdv_1727 := corral_nondet();
    call {:si_unique_call 3870} ExRaiseStatus(sdv_1727);
    goto L122;

  anon203_Then:
    assume {:partition} Wait_14 == 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    call {:si_unique_call 3871} FatDeleteIrpContext_Real(IrpContext_210);
    Tmp_3013 := 259;
    goto L1;

  anon267_Then:
    assume {:partition} Wait_14 != 0;
    goto L108;

  anon207_Then:
    assume {:partition} VolumeSize_1 - StartingLbo_1 >= ByteCount_22;
    goto L108;

  anon206_Then:
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    havoc Tmp_3020;
    goto L142;

  anon202_Then:
    goto L108;

  anon201_Then:
    call {:si_unique_call 3872} vslice_dummy_var_539 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto L158;

  L158:
    call {:si_unique_call 3873} ExReleaseResourceLite(0);
    assume {:nonnull} Ccb_41 != 0;
    assume Ccb_41 > 0;
    goto L106;

  anon208_Then:
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    havoc vslice_dummy_var_1642;
    call {:si_unique_call 3874} vslice_dummy_var_540 := FatFlushVolume(IrpContext_210, vslice_dummy_var_1642, 1);
    goto L158;

  anon200_Then:
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    havoc vslice_dummy_var_1643;
    call {:si_unique_call 3875} FatQuickVerifyVcb(IrpContext_210, vslice_dummy_var_1643);
    goto L102;

  anon264_Then:
    assume {:partition} TypeOfOpen_14 != 4;
    call {:si_unique_call 3876} sdv_1724 := KeGetCurrentProcessorNumber();
    Tmp_3019 := sdv_1724;
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    havoc Tmp_3038;
    Tmp_3028 := sdv_1724;
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    havoc Tmp_3024;
    assume {:nonnull} Tmp_3024 != 0;
    assume Tmp_3024 > 0;
    assume {:nonnull} Tmp_3038 != 0;
    assume Tmp_3038 > 0;
    goto L111;

  anon195_Then:
    assume {:partition} TypeOfOpen_14 != 5;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} TypeOfOpen_14 != 4;
    assume {:nonnull} StartingByte_1 != 0;
    assume StartingByte_1 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    call {:si_unique_call 3877} FatCompleteRequest_Real(IrpContext_210, Irp_81, -1073741807);
    Tmp_3013 := -1073741807;
    goto L1;

  anon209_Then:
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} TypeOfOpen_14 == 2;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} PagingIo_1 != 0;
    goto L178;

  L178:
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} PagingIo_1 != 0;
    call {:si_unique_call 3878} sdv_1741 := ExAcquireResourceSharedLite(0, Wait_14);
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} sdv_1741 != 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} Wait_14 != 0;
    goto L211;

  L211:
    FcbOrDcbAcquired_1 := 1;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc vslice_dummy_var_1644;
    call {:si_unique_call 3879} FatVerifyFcb(IrpContext_210, vslice_dummy_var_1644);
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} PagingIo_1 != 0;
    goto L219;

  L219:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc FileSize_1;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc ValidDataLength_3;
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:partition} StartingVbo_9 >= FileSize_1;
    Status_84 := -1073741807;
    goto L225;

  L225:
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} Irp_81 != 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} PostIrp_2 == 0;
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    havoc ActualBytesRead;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume {:partition} SynchronousIo_1 != 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} PagingIo_1 == 0;
    assume {:nonnull} FileObject_43 != 0;
    assume FileObject_43 > 0;
    goto L236;

  L236:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} Status_84 >= 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} PagingIo_1 == 0;
    assume {:nonnull} FileObject_43 != 0;
    assume FileObject_43 > 0;
    goto L226;

  L226:
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} FcbOrDcbAcquired_1 != 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} Irp_81 != 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} PagingIo_1 != 0;
    call {:si_unique_call 3880} ExReleaseResourceLite(0);
    goto L241;

  L241:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} PostIrp_2 != 0;
    goto L251;

  L251:
    Tmp_3013 := Status_84;
    goto L1;

  anon227_Then:
    assume {:partition} PostIrp_2 == 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    havoc Tmp_3033;
    assume {:nonnull} Tmp_3033 != 0;
    assume Tmp_3033 > 0;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    call {:si_unique_call 3881} IoFreeMdl(0);
    goto L256;

  L256:
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    goto L252;

  L252:
    call {:si_unique_call 3882} sdv_1734 := sdv_AbnormalTermination();
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} sdv_1734 == 0;
    call {:si_unique_call 3883} FatCompleteRequest_Real(IrpContext_210, Irp_81, Status_84);
    goto L251;

  anon231_Then:
    assume {:partition} sdv_1734 != 0;
    goto L251;

  anon269_Then:
    goto L256;

  anon230_Then:
    goto L252;

  anon229_Then:
    assume {:partition} PagingIo_1 == 0;
    call {:si_unique_call 3884} ExReleaseResourceLite(0);
    goto L241;

  anon228_Then:
    assume {:partition} Irp_81 == 0;
    goto L241;

  anon221_Then:
    assume {:partition} FcbOrDcbAcquired_1 == 0;
    goto L241;

  anon226_Then:
    assume {:partition} PagingIo_1 != 0;
    goto L226;

  anon224_Then:
    assume {:partition} 0 > Status_84;
    goto L226;

  anon225_Then:
    assume {:partition} PagingIo_1 != 0;
    goto L236;

  anon270_Then:
    assume {:partition} SynchronousIo_1 == 0;
    goto L236;

  anon222_Then:
    assume {:partition} PostIrp_2 != 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} OplockPostIrp_4 == 0;
    call {:si_unique_call 3885} Status_84 := FatFsdPostRequest(IrpContext_210, Irp_81);
    goto L226;

  anon223_Then:
    assume {:partition} OplockPostIrp_4 != 0;
    goto L226;

  anon220_Then:
    assume {:partition} Irp_81 == 0;
    goto L226;

  anon268_Then:
    assume {:partition} FileSize_1 > StartingVbo_9;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} ByteCount_22 > FileSize_1 - StartingVbo_9;
    RequestedByteCount := FileSize_1 - StartingVbo_9;
    ByteCount_22 := RequestedByteCount;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:partition} NonCachedIo_1 != 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} Wait_14 == 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    havoc Tmp_3035;
    assume {:nonnull} Tmp_3035 != 0;
    assume Tmp_3035 > 0;
    goto L265;

  L265:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} NonCachedIo_1 != 0;
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    havoc SectorSize_8;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc ValidDataLength_3;
    goto L276;

  L276:
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} StartingVbo_9 + ByteCount_22 > ValidDataLength_3;
    call {:si_unique_call 3886} SystemBuffer_1 := FatMapUserBuffer(IrpContext_210, Irp_81);
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} ValidDataLength_3 > StartingVbo_9;
    ZeroingOffset := BAND(ValidDataLength_3 - StartingVbo_9 + SectorSize_8 - 1, BNOT(SectorSize_8 - 1));
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} ByteCount_22 > ZeroingOffset;
    Tmp_3023 := ByteCount_22 - ZeroingOffset;
    call {:si_unique_call 3887} sdv_RtlZeroMemory(0, Tmp_3023);
    goto L278;

  L278:
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} ByteCount_22 > ValidDataLength_3 - StartingVbo_9;
    Tmp_3040 := ValidDataLength_3 - StartingVbo_9;
    goto L311;

  L311:
    ByteCount_22 := Tmp_3040;
    BytesToRead := BAND(ByteCount_22 + SectorSize_8 - 1, BNOT(SectorSize_8 - 1));
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume {:partition} BAND(StartingVbo_9, SectorSize_8 - 1) != 0;
    goto L315;

  L315:
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} Wait_14 != 0;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc vslice_dummy_var_1645;
    call {:si_unique_call 3888} FatNonCachedNonAlignedRead(IrpContext_210, Irp_81, vslice_dummy_var_1645, StartingVbo_9, ByteCount_22);
    BytesToRead := ByteCount_22;
    goto L321;

  L321:
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    havoc Status_84;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:partition} Status_84 >= 0;
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    goto L225;

  anon275_Then:
    assume {:partition} 0 > Status_84;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    call {:si_unique_call 3889} sdv_1739 := corral_nondet();
    call {:si_unique_call 3890} ExRaiseStatus(sdv_1739);
    goto L225;

  anon239_Then:
    assume {:partition} Wait_14 == 0;
    PostIrp_2 := 1;
    goto L225;

  anon274_Then:
    assume {:partition} BAND(StartingVbo_9, SectorSize_8 - 1) == 0;
    assume {:nonnull} IrpSp_44 != 0;
    assume IrpSp_44 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc vslice_dummy_var_1646;
    call {:si_unique_call 3891} sdv_1717 := FatNonCachedIo(IrpContext_210, Irp_81, vslice_dummy_var_1646, StartingVbo_9, BytesToRead, ByteCount_22);
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} sdv_1717 == 259;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    Irp_81 := 0;
    Status_84 := 259;
    goto L225;

  anon240_Then:
    assume {:partition} sdv_1717 != 259;
    goto L321;

  anon238_Then:
    goto L315;

  anon236_Then:
    assume {:partition} ValidDataLength_3 - StartingVbo_9 >= ByteCount_22;
    Tmp_3040 := ByteCount_22;
    goto L311;

  anon273_Then:
    assume {:partition} ZeroingOffset >= ByteCount_22;
    goto L278;

  anon237_Then:
    assume {:partition} StartingVbo_9 >= ValidDataLength_3;
    call {:si_unique_call 3892} sdv_RtlZeroMemory(0, ByteCount_22);
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    Status_84 := 0;
    goto L225;

  anon235_Then:
    assume {:partition} ValidDataLength_3 >= StartingVbo_9 + ByteCount_22;
    goto L278;

  anon272_Then:
    goto L276;

  anon232_Then:
    assume {:partition} NonCachedIo_1 == 0;
    assume {:nonnull} FileObject_43 != 0;
    assume FileObject_43 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto L342;

  L342:
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    havoc Status_84;
    goto L225;

  anon242_Then:
    call {:si_unique_call 3893} SystemBuffer_1 := FatMapUserBuffer(IrpContext_210, Irp_81);
    call {:si_unique_call 3894} sdv_1730 := corral_nondet();
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} sdv_1730 != 0;
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    havoc Status_84;
    goto L225;

  anon243_Then:
    assume {:partition} sdv_1730 == 0;
    PostIrp_2 := 1;
    goto L225;

  anon234_Then:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc vslice_dummy_var_1647;
    call {:si_unique_call 3895} FatLookupFileAllocationSize#1(IrpContext_210, vslice_dummy_var_1647);
    goto L360;

  L360:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc vslice_dummy_var_1648;
    call {:si_unique_call 3896} FatPopUpFileCorrupt#1(IrpContext_210, vslice_dummy_var_1648);
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    call {:si_unique_call 3897} ExRaiseStatus(-1073741566);
    goto L364;

  L364:
    goto L342;

  anon244_Then:
    goto L364;

  anon241_Then:
    goto L360;

  anon233_Then:
    assume {:partition} Wait_14 != 0;
    goto L265;

  anon271_Then:
    assume {:partition} NonCachedIo_1 == 0;
    goto L265;

  anon219_Then:
    assume {:partition} FileSize_1 - StartingVbo_9 >= ByteCount_22;
    goto L265;

  anon218_Then:
    assume {:partition} PagingIo_1 == 0;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    call {:si_unique_call 3898} Status_84 := corral_nondet();
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} Status_84 != 0;
    OplockPostIrp_4 := 1;
    PostIrp_2 := 1;
    goto L225;

  anon245_Then:
    assume {:partition} Status_84 == 0;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    goto L386;

  L386:
    Tmp_3016 := 0;
    goto L387;

  L387:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} PagingIo_1 == 0;
    call {:si_unique_call 3899} sdv_1720 := FsRtlCheckLockForReadAccess(0, 0);
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} sdv_1720 == 0;
    Status_84 := -1073741740;
    goto L225;

  anon247_Then:
    assume {:partition} sdv_1720 != 0;
    goto L219;

  anon276_Then:
    assume {:partition} PagingIo_1 != 0;
    goto L219;

  anon246_Then:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    call {:si_unique_call 3900} sdv_1725 := corral_nondet();
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:partition} sdv_1725 != 0;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc Tmp_3027;
    assume {:nonnull} Tmp_3027 != 0;
    assume Tmp_3027 > 0;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    goto L398;

  L398:
    Tmp_3047 := 2;
    goto L399;

  L399:
    Tmp_3016 := Tmp_3047;
    goto L387;

  anon277_Then:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc Tmp_3046;
    assume {:nonnull} Tmp_3046 != 0;
    assume Tmp_3046 > 0;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc Tmp_3022;
    assume {:nonnull} Tmp_3022 != 0;
    assume Tmp_3022 > 0;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    Tmp_3047 := 1;
    goto L399;

  anon279_Then:
    goto L398;

  anon278_Then:
    goto L398;

  anon248_Then:
    assume {:partition} sdv_1725 == 0;
    goto L386;

  anon217_Then:
    assume {:partition} Wait_14 == 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    havoc Tmp_3043;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    assume {:nonnull} Tmp_3043 != 0;
    assume Tmp_3043 > 0;
    goto L211;

  anon216_Then:
    assume {:partition} sdv_1741 == 0;
    PostIrp_2 := 1;
    goto L225;

  anon214_Then:
    assume {:partition} PagingIo_1 == 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} Wait_14 != 0;
    goto L404;

  L404:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc vslice_dummy_var_1649;
    call {:si_unique_call 3901} sdv_1740 := FatAcquireSharedFcb(IrpContext_210, vslice_dummy_var_1649);
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} sdv_1740 == 0;
    PostIrp_2 := 1;
    goto L225;

  anon250_Then:
    assume {:partition} sdv_1740 != 0;
    goto L211;

  anon215_Then:
    assume {:partition} Wait_14 == 0;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} NonCachedIo_1 != 0;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc vslice_dummy_var_1650;
    call {:si_unique_call 3902} sdv_1721 := FatAcquireSharedFcbWaitForEx(IrpContext_210, vslice_dummy_var_1650);
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} sdv_1721 != 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    havoc Tmp_3017;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    assume {:nonnull} Tmp_3017 != 0;
    assume Tmp_3017 > 0;
    goto L211;

  anon251_Then:
    assume {:partition} sdv_1721 == 0;
    PostIrp_2 := 1;
    goto L225;

  anon249_Then:
    assume {:partition} NonCachedIo_1 == 0;
    goto L404;

  anon212_Then:
    assume {:partition} PagingIo_1 == 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} NonCachedIo_1 != 0;
    assume {:nonnull} FileObject_43 != 0;
    assume FileObject_43 > 0;
    havoc Tmp_3041;
    assume {:nonnull} Tmp_3041 != 0;
    assume Tmp_3041 > 0;
    goto anon280_Then, anon280_Else;

  anon280_Else:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc vslice_dummy_var_1651;
    call {:si_unique_call 3903} sdv_1742 := FatAcquireExclusiveFcb(IrpContext_210, vslice_dummy_var_1651);
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:partition} sdv_1742 != 0;
    call {:si_unique_call 3904} vslice_dummy_var_541 := ExAcquireResourceExclusiveLite(0, 1);
    call {:si_unique_call 3905} ExReleaseResourceLite(0);
    call {:si_unique_call 3906} ExReleaseResourceLite(0);
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    goto L225;

  anon253_Then:
    goto L178;

  anon252_Then:
    assume {:partition} sdv_1742 == 0;
    PostIrp_2 := 1;
    goto L225;

  anon280_Then:
    goto L178;

  anon213_Then:
    assume {:partition} NonCachedIo_1 == 0;
    goto L178;

  anon210_Then:
    assume {:partition} TypeOfOpen_14 != 2;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} TypeOfOpen_14 == 6;
    goto L441;

  L441:
    assume {:nonnull} Vcb_118 != 0;
    assume Vcb_118 > 0;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    Status_84 := 0;
    goto L225;

  anon281_Then:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc ByteCount_22;
    goto L447;

  L447:
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc vslice_dummy_var_1652;
    call {:si_unique_call 3907} sdv_1735 := FatNonCachedIo(IrpContext_210, Irp_81, vslice_dummy_var_1652, StartingVbo_9, ByteCount_22, ByteCount_22);
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:partition} sdv_1735 == 259;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    Irp_81 := 0;
    Status_84 := 259;
    goto L225;

  anon256_Then:
    assume {:partition} sdv_1735 != 259;
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    havoc Status_84;
    goto anon282_Then, anon282_Else;

  anon282_Else:
    assume {:partition} Status_84 < 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    call {:si_unique_call 3908} sdv_1738 := corral_nondet();
    call {:si_unique_call 3909} ExRaiseStatus(sdv_1738);
    goto L225;

  anon282_Then:
    assume {:partition} 0 <= Status_84;
    goto L225;

  anon255_Then:
    goto L447;

  anon211_Then:
    assume {:partition} TypeOfOpen_14 != 6;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:partition} TypeOfOpen_14 != 7;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:partition} TypeOfOpen_14 == 3;
    Status_84 := -1073741811;
    goto L225;

  anon257_Then:
    assume {:partition} TypeOfOpen_14 != 3;
    assume {:nonnull} FcbOrDcb_16 != 0;
    assume FcbOrDcb_16 > 0;
    havoc vslice_dummy_var_1653;
    call {:si_unique_call 3910} KeBugCheckEx(35, 1574353, TypeOfOpen_14, vslice_dummy_var_1653, 0);
    goto L225;

  anon254_Then:
    assume {:partition} TypeOfOpen_14 == 7;
    goto L441;

  anon199_Then:
    assume {:partition} TypeOfOpen_14 == 4;
    goto L93;

  anon198_Then:
    assume {:partition} Wait_14 == 0;
    call {:si_unique_call 3911} sdv_1732 := PsGetCurrentThread();
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    havoc Tmp_3030;
    assume {:nonnull} Tmp_3030 != 0;
    assume Tmp_3030 > 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    havoc Tmp_3034;
    assume {:nonnull} Tmp_3034 != 0;
    assume Tmp_3034 > 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    havoc Tmp_3029;
    assume {:nonnull} Tmp_3029 != 0;
    assume Tmp_3029 > 0;
    goto L69;

  anon196_Then:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} Wait_14 != 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    goto L72;

  anon197_Then:
    assume {:partition} Wait_14 == 0;
    call {:si_unique_call 3912} sdv_1733 := ExAllocatePoolWithTag(16, 36, -663461562);
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    goto L72;

  anon191_Then:
    assume {:partition} NonCachedIo_1 == 0;
    goto L69;

  anon193_Then:
    assume {:partition} TypeOfOpen_14 != 2;
    assume {:nonnull} IrpContext_210 != 0;
    assume IrpContext_210 > 0;
    goto L53;

  anon263_Then:
    assume {:partition} TypeOfOpen_14 != 2;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} TypeOfOpen_14 == 5;
    goto L67;

  L67:
    assume {:nonnull} Stats_11 != 0;
    assume Stats_11 > 0;
    assume {:nonnull} Stats_11 != 0;
    assume Stats_11 > 0;
    goto L63;

  anon192_Then:
    assume {:partition} TypeOfOpen_14 != 5;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} TypeOfOpen_14 == 6;
    goto L67;

  anon194_Then:
    assume {:partition} TypeOfOpen_14 != 6;
    goto L63;

  anon190_Then:
    assume {:partition} PagingIo_1 == 0;
    goto L53;

  anon189_Then:
    assume {:partition} TypeOfOpen_14 != 4;
    goto L51;

  anon262_Then:
    assume {:partition} ByteCount_22 == 0;
    assume {:nonnull} Irp_81 != 0;
    assume Irp_81 > 0;
    call {:si_unique_call 3913} FatCompleteRequest_Real(IrpContext_210, Irp_81, 0);
    Tmp_3013 := 0;
    goto L1;

  anon261_Then:
    assume {:partition} Tmp_3014 != 0;
    SynchronousIo_1 := 1;
    goto L560;

  anon260_Then:
    assume {:partition} Tmp_3037 != 0;
    NonCachedIo_1 := 1;
    goto L556;

  anon259_Then:
    assume {:partition} Tmp_3032 != 0;
    PagingIo_1 := 1;
    goto L552;

  anon258_Then:
    assume {:partition} Tmp_3015 != 0;
    Wait_14 := 1;
    goto L548;
}



procedure {:origName "_sdv_init17"} _sdv_init17();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init17"} _sdv_init17()
{
  var vslice_dummy_var_542: int;

  anon0:
    call {:si_unique_call 3914} vslice_dummy_var_542 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatFsdRead"} FatFsdRead(actual_VolumeDeviceObject_22: int, actual_Irp_82: int) returns (Tmp_3050: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, markedPending, locked, queuedWithoutMarking, queued, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdRead"} FatFsdRead(actual_VolumeDeviceObject_22: int, actual_Irp_82: int) returns (Tmp_3050: int)
{
  var {:pointer} Fcb_73: int;
  var {:scalar} TopLevel_11: int;
  var {:pointer} sdv_1745: int;
  var {:scalar} Status_85: int;
  var {:scalar} Event_15: int;
  var {:scalar} sdv_1748: int;
  var {:pointer} sdv_1749: int;
  var {:pointer} IrpContext_211: int;
  var {:pointer} sdv_1754: int;
  var {:pointer} Tmp_3052: int;
  var {:scalar} sdv_1755: int;
  var {:scalar} Packet: int;
  var {:scalar} sdv_1758: int;
  var {:pointer} Tmp_3053: int;
  var {:pointer} VolumeDeviceObject_22: int;
  var {:pointer} Irp_82: int;
  var vslice_dummy_var_543: int;

  anon0:
    call {:si_unique_call 3915} Event_15 := __HAVOC_malloc(124);
    call {:si_unique_call 3916} Packet := __HAVOC_malloc(8);
    VolumeDeviceObject_22 := actual_VolumeDeviceObject_22;
    Irp_82 := actual_Irp_82;
    Fcb_73 := 0;
    IrpContext_211 := 0;
    call {:si_unique_call 3917} KeEnterCriticalRegion();
    call {:si_unique_call 3918} sdv_1745 := sdv_IoGetCurrentIrpStackLocation(Irp_82);
    assume {:nonnull} sdv_1745 != 0;
    assume sdv_1745 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L21;

  L21:
    call {:si_unique_call 3919} TopLevel_11 := FatIsIrpTopLevel(Irp_82);
    call {:si_unique_call 3920} sdv_1748 := corral_nondet();
    call {:si_unique_call 3921} IrpContext_211 := FatCreateIrpContext(Irp_82, sdv_1748);
    assume {:nonnull} IrpContext_211 != 0;
    assume IrpContext_211 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 3922} Status_85 := FatCompleteMdl(IrpContext_211, Irp_82);
    goto L38;

  L38:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} TopLevel_11 != 0;
    goto L39;

  L39:
    call {:si_unique_call 3923} KeLeaveCriticalRegion();
    Tmp_3050 := Status_85;
    goto L1;

  L1:
    call {:si_unique_call 3924} SLIC_FatFsdRead_exit(strConst__li2bpl2, Tmp_3050);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon26_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} TopLevel_11 == 0;
    goto L39;

  anon21_Then:
    call {:si_unique_call 3925} sdv_1758 := sdv_IoGetRemainingStackSize();
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} 3584 > sdv_1758;
    call {:si_unique_call 3926} Status_85 := FatPostStackOverflowRead(IrpContext_211, Irp_82, Fcb_73);
    goto L38;

  anon22_Then:
    assume {:partition} sdv_1758 >= 3584;
    call {:si_unique_call 3927} Status_85 := FatCommonRead(IrpContext_211, Irp_82);
    goto L38;

  anon19_Then:
    call {:si_unique_call 3928} sdv_1749 := sdv_IoGetCurrentIrpStackLocation(Irp_82);
    assume {:nonnull} sdv_1749 != 0;
    assume sdv_1749 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 3929} sdv_1754 := sdv_IoGetCurrentIrpStackLocation(Irp_82);
    assume {:nonnull} sdv_1754 != 0;
    assume sdv_1754 > 0;
    havoc Tmp_3053;
    assume {:nonnull} Tmp_3053 != 0;
    assume Tmp_3053 > 0;
    havoc Fcb_73;
    Tmp_3052 := Fcb_73;
    assume {:nonnull} Tmp_3052 != 0;
    assume Tmp_3052 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Fcb_73 != 0;
    assume Fcb_73 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 3930} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 3931} sdv_1755 := sdv_IoGetRemainingStackSize();
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} 3584 > sdv_1755;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    call {:si_unique_call 3932} KeInitializeEvent(Event_15, 0, 0);
    call {:si_unique_call 3933} vslice_dummy_var_543 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L103;

  L103:
    call {:si_unique_call 3934} KeLeaveCriticalRegion();
    Tmp_3050 := 259;
    goto L1;

  anon25_Then:
    assume {:partition} sdv_1755 >= 3584;
    call {:si_unique_call 3935} FatPagingFileIo(Irp_82, Fcb_73);
    goto L103;

  anon24_Then:
    goto L21;

  anon27_Then:
    goto L21;

  anon23_Then:
    goto L21;
}



procedure {:origName "_sdv_init32"} _sdv_init32();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init32"} _sdv_init32()
{
  var vslice_dummy_var_544: int;

  anon0:
    call {:si_unique_call 3936} vslice_dummy_var_544 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatCommonShutdown"} FatCommonShutdown(actual_IrpContext_212: int, actual_Irp_83: int) returns (Tmp_3056: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_3056 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonShutdown"} FatCommonShutdown(actual_IrpContext_212: int, actual_Irp_83: int) returns (Tmp_3056: int)
{
  var {:pointer} Fcb_74: int;
  var {:pointer} Links_9: int;
  var {:pointer} Fcb_75: int;
  var {:pointer} sdv_1761: int;
  var {:scalar} Iosb_28: int;
  var {:pointer} Event_16: int;
  var {:scalar} sdv_1766: int;
  var {:pointer} NewIrp: int;
  var {:pointer} sdv_1767: int;
  var {:scalar} Tmp_3057: int;
  var {:pointer} Vcb_119: int;
  var {:scalar} Tmp_3059: int;
  var {:scalar} VcbDeleted_7: int;
  var {:pointer} IrpContext_212: int;
  var {:pointer} Irp_83: int;
  var vslice_dummy_var_545: int;
  var vslice_dummy_var_546: int;
  var vslice_dummy_var_547: int;
  var vslice_dummy_var_548: int;
  var vslice_dummy_var_549: int;
  var vslice_dummy_var_550: int;
  var vslice_dummy_var_1654: int;
  var vslice_dummy_var_1655: int;
  var vslice_dummy_var_1656: int;

  anon0:
    call {:si_unique_call 3937} Iosb_28 := __HAVOC_malloc(12);
    IrpContext_212 := actual_IrpContext_212;
    Irp_83 := actual_Irp_83;
    assume {:nonnull} IrpContext_212 != 0;
    assume IrpContext_212 > 0;
    call {:si_unique_call 3938} sdv_1761 := ExAllocatePoolWithTag(16, 16, -160145082);
    Event_16 := sdv_1761;
    call {:si_unique_call 3939} KeInitializeEvent(Event_16, 0, 0);
    assume {:nonnull} IrpContext_212 != 0;
    assume IrpContext_212 > 0;
    havoc Tmp_3057;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Tmp_3057 == 0;
    Tmp_3059 := 0;
    goto L150;

  L150:
    call {:si_unique_call 3940} vslice_dummy_var_549 := ExAcquireResourceExclusiveLite(0, Tmp_3059);
    havoc Links_9;
    goto L24;

  L24:
    call {:si_unique_call 3941} Fcb_74, Links_9, Fcb_75, sdv_1766, NewIrp, sdv_1767, Vcb_119, VcbDeleted_7, vslice_dummy_var_545, vslice_dummy_var_546, vslice_dummy_var_547, vslice_dummy_var_548, vslice_dummy_var_550 := FatCommonShutdown_loop_L24(Fcb_74, Links_9, Fcb_75, Iosb_28, Event_16, sdv_1766, NewIrp, sdv_1767, Vcb_119, VcbDeleted_7, IrpContext_212, vslice_dummy_var_545, vslice_dummy_var_546, vslice_dummy_var_547, vslice_dummy_var_548, vslice_dummy_var_550);
    goto L24_last;

  L24_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    call {:si_unique_call 3942} sdv_1767 := sdv_containing_record(Links_9, 64);
    Vcb_119 := sdv_1767;
    assume {:nonnull} Links_9 != 0;
    assume Links_9 > 0;
    havoc Links_9;
    assume {:nonnull} Vcb_119 != 0;
    assume Vcb_119 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Vcb_119 != 0;
    assume Vcb_119 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    Fcb_75 := 0;
    call {:si_unique_call 3943} vslice_dummy_var_550 := FatAcquireExclusiveVcb(IrpContext_212, Vcb_119);
    goto L62;

  L62:
    call {:si_unique_call 3944} Fcb_75, vslice_dummy_var_546 := FatCommonShutdown_loop_L62(Fcb_75, Vcb_119, IrpContext_212, vslice_dummy_var_546);
    goto L62_last;

  L62_last:
    assume {:nonnull} Vcb_119 != 0;
    assume Vcb_119 > 0;
    havoc vslice_dummy_var_1656;
    call {:si_unique_call 3963} Fcb_75 := FatGetNextFcbBottomUp(IrpContext_212, Fcb_75, vslice_dummy_var_1656);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Fcb_75 != 0;
    call {:si_unique_call 3945} vslice_dummy_var_546 := FatAcquireExclusiveFcb(IrpContext_212, Fcb_75);
    goto anon23_Else_dummy;

  anon23_Else_dummy:
    assume false;
    return;

  anon23_Then:
    assume {:partition} Fcb_75 == 0;
    call {:si_unique_call 3946} vslice_dummy_var_545 := FatFlushVolume(IrpContext_212, Vcb_119, 1);
    assume {:nonnull} Vcb_119 != 0;
    assume Vcb_119 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 3947} vslice_dummy_var_548 := corral_nondet();
    call {:si_unique_call 3948} FatMarkVolume#1(IrpContext_212, Vcb_119, 0);
    goto L75;

  L75:
    call {:si_unique_call 3949} NewIrp := IoBuildSynchronousFsdRequest(16, 0, 0, 0, 0, 0, Iosb_28);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} NewIrp != 0;
    assume {:nonnull} Vcb_119 != 0;
    assume Vcb_119 > 0;
    havoc vslice_dummy_var_1654;
    call {:si_unique_call 3950} sdv_1766 := sdv_IoCallDriver(vslice_dummy_var_1654, NewIrp);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_1766 >= 0;
    call {:si_unique_call 3951} vslice_dummy_var_547 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 3952} KeClearEvent(Event_16);
    goto L80;

  L80:
    assume {:nonnull} Vcb_119 != 0;
    assume Vcb_119 > 0;
    call {:si_unique_call 3953} VcbDeleted_7 := FatCheckForDismount#1(IrpContext_212, Vcb_119, 0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} VcbDeleted_7 == 0;
    Fcb_74 := 0;
    goto L88;

  L88:
    call {:si_unique_call 3954} Fcb_74 := FatCommonShutdown_loop_L88(Fcb_74, Vcb_119, IrpContext_212);
    goto L88_last;

  L88_last:
    assume {:nonnull} Vcb_119 != 0;
    assume Vcb_119 > 0;
    havoc vslice_dummy_var_1655;
    call {:si_unique_call 3962} Fcb_74 := FatGetNextFcbBottomUp(IrpContext_212, Fcb_74, vslice_dummy_var_1655);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Fcb_74 != 0;
    call {:si_unique_call 3955} ExReleaseResourceLite(0);
    goto anon25_Else_dummy;

  anon25_Else_dummy:
    assume false;
    return;

  anon25_Then:
    assume {:partition} Fcb_74 == 0;
    call {:si_unique_call 3956} ExReleaseResourceLite(0);
    goto anon25_Then_dummy;

  anon25_Then_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:partition} VcbDeleted_7 != 0;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} 0 > sdv_1766;
    goto L80;

  anon26_Then:
    assume {:partition} NewIrp == 0;
    goto L80;

  anon28_Then:
    goto L75;

  anon22_Then:
    goto anon22_Then_dummy;

  anon22_Then_dummy:
    assume false;
    return;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    assume false;
    return;

  anon21_Then:
    call {:si_unique_call 3957} sdv_ExFreePool(0);
    call {:si_unique_call 3958} ExReleaseResourceLite(0);
    call {:si_unique_call 3959} IoDeleteDevice(0);
    call {:si_unique_call 3960} IoDeleteDevice(0);
    call {:si_unique_call 3961} FatCompleteRequest_Real(IrpContext_212, Irp_83, 0);
    Tmp_3056 := 0;
    return;

  anon29_Then:
    assume {:partition} Tmp_3057 != 0;
    Tmp_3059 := 1;
    goto L150;
}



procedure {:origName "_sdv_init19"} _sdv_init19();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init19"} _sdv_init19()
{
  var vslice_dummy_var_551: int;

  anon0:
    call {:si_unique_call 3964} vslice_dummy_var_551 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatFsdShutdown"} FatFsdShutdown(actual_VolumeDeviceObject_24: int, actual_Irp_84: int) returns (Tmp_3062: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_3062 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFsdShutdown"} FatFsdShutdown(actual_VolumeDeviceObject_24: int, actual_Irp_84: int) returns (Tmp_3062: int)
{
  var {:scalar} TopLevel_12: int;
  var {:scalar} Status_86: int;
  var {:pointer} IrpContext_213: int;
  var {:pointer} VolumeDeviceObject_24: int;
  var {:pointer} Irp_84: int;

  anon0:
    VolumeDeviceObject_24 := actual_VolumeDeviceObject_24;
    Irp_84 := actual_Irp_84;
    IrpContext_213 := 0;
    call {:si_unique_call 3965} KeEnterCriticalRegion();
    call {:si_unique_call 3966} TopLevel_12 := FatIsIrpTopLevel(Irp_84);
    call {:si_unique_call 3967} IrpContext_213 := FatCreateIrpContext(Irp_84, 1);
    call {:si_unique_call 3968} Status_86 := FatCommonShutdown(IrpContext_213, Irp_84);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} TopLevel_12 != 0;
    goto L34;

  L34:
    call {:si_unique_call 3969} KeLeaveCriticalRegion();
    Tmp_3062 := Status_86;
    call {:si_unique_call 3970} SLIC_FatFsdShutdown_exit(strConst__li2bpl2, Tmp_3062);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} TopLevel_12 == 0;
    goto L34;
}



procedure {:origName "_sdv_init18"} _sdv_init18();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init18"} _sdv_init18()
{
  var vslice_dummy_var_552: int;

  anon0:
    call {:si_unique_call 3971} vslice_dummy_var_552 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "FatAcquireExclusiveVcb"} FatAcquireExclusiveVcb(actual_IrpContext_214: int, actual_Vcb_120: int) returns (Tmp_3066: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_3066 == 1 || Tmp_3066 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAcquireExclusiveVcb"} FatAcquireExclusiveVcb(actual_IrpContext_214: int, actual_Vcb_120: int) returns (Tmp_3066: int)
{
  var {:scalar} Tmp_3067: int;
  var {:scalar} sdv_1779: int;
  var {:scalar} sdv_1781: int;
  var {:scalar} Tmp_3069: int;
  var {:pointer} IrpContext_214: int;

  anon0:
    IrpContext_214 := actual_IrpContext_214;
    assume {:nonnull} IrpContext_214 != 0;
    assume IrpContext_214 > 0;
    havoc Tmp_3067;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Tmp_3067 == 0;
    Tmp_3069 := 0;
    goto L33;

  L33:
    call {:si_unique_call 3972} sdv_1779 := ExAcquireResourceExclusiveLite(0, Tmp_3069);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_1779 != 0;
    call {:si_unique_call 3973} FatVerifyOperationIsLegal(IrpContext_214);
    call {:si_unique_call 3974} sdv_1781 := sdv_AbnormalTermination();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_1781 != 0;
    call {:si_unique_call 3975} ExReleaseResourceLite(0);
    goto L24;

  L24:
    Tmp_3066 := 1;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} sdv_1781 == 0;
    goto L24;

  anon7_Then:
    assume {:partition} sdv_1779 == 0;
    Tmp_3066 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} Tmp_3067 != 0;
    Tmp_3069 := 1;
    goto L33;
}



procedure {:origName "FatAcquireExclusiveFcb"} FatAcquireExclusiveFcb(actual_IrpContext_215: int, actual_Fcb_76: int) returns (Tmp_3070: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_3070 == 1 || Tmp_3070 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAcquireExclusiveFcb"} FatAcquireExclusiveFcb(actual_IrpContext_215: int, actual_Fcb_76: int) returns (Tmp_3070: int)
{
  var {:pointer} Tmp_3072: int;
  var {:scalar} sdv_1782: int;
  var {:scalar} sdv_1783: int;
  var {:scalar} Tmp_3073: int;
  var {:scalar} Tmp_3074: int;
  var {:scalar} sdv_1785: int;
  var {:scalar} sdv_1787: int;
  var {:pointer} Tmp_3076: int;
  var {:pointer} IrpContext_215: int;
  var {:pointer} Fcb_76: int;
  var vslice_dummy_var_553: int;

  anon0:
    IrpContext_215 := actual_IrpContext_215;
    Fcb_76 := actual_Fcb_76;
    goto L3;

  L3:
    call {:si_unique_call 3976} Tmp_3072, sdv_1782, Tmp_3073, Tmp_3074, sdv_1785, sdv_1787, Tmp_3076, vslice_dummy_var_553 := FatAcquireExclusiveFcb_loop_L3(Tmp_3072, sdv_1782, Tmp_3073, Tmp_3074, sdv_1785, sdv_1787, Tmp_3076, IrpContext_215, Fcb_76, vslice_dummy_var_553);
    goto L3_last;

  L3_last:
    assume {:nonnull} IrpContext_215 != 0;
    assume IrpContext_215 > 0;
    havoc Tmp_3073;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Tmp_3073 == 0;
    Tmp_3074 := 0;
    goto L57;

  L57:
    call {:si_unique_call 3977} sdv_1782 := ExAcquireResourceExclusiveLite(0, Tmp_3074);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_1782 != 0;
    assume {:nonnull} Fcb_76 != 0;
    assume Fcb_76 > 0;
    havoc Tmp_3076;
    assume {:nonnull} Tmp_3076 != 0;
    assume Tmp_3076 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} IrpContext_215 != 0;
    assume IrpContext_215 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L16;

  L16:
    assume {:nonnull} Fcb_76 != 0;
    assume Fcb_76 > 0;
    call {:si_unique_call 3978} vslice_dummy_var_553 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 3979} ExReleaseResourceLite(0);
    goto L16_dummy;

  L16_dummy:
    assume false;
    return;

  anon18_Then:
    assume {:nonnull} IrpContext_215 != 0;
    assume IrpContext_215 > 0;
    havoc Tmp_3072;
    assume {:nonnull} Tmp_3072 != 0;
    assume Tmp_3072 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 3980} sdv_1785 := ExGetSharedWaiterCount(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_1785 == 0;
    call {:si_unique_call 3981} sdv_1787 := ExGetExclusiveWaiterCount(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_1787 != 0;
    goto L16;

  anon20_Then:
    assume {:partition} sdv_1787 == 0;
    goto L11;

  L11:
    call {:si_unique_call 3982} FatVerifyOperationIsLegal(IrpContext_215);
    call {:si_unique_call 3983} sdv_1783 := sdv_AbnormalTermination();
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_1783 != 0;
    call {:si_unique_call 3984} ExReleaseResourceLite(0);
    goto L42;

  L42:
    Tmp_3070 := 1;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} sdv_1783 == 0;
    goto L42;

  anon19_Then:
    assume {:partition} sdv_1785 != 0;
    goto L16;

  anon24_Then:
    goto L16;

  anon23_Then:
    goto L11;

  anon17_Then:
    assume {:partition} sdv_1782 == 0;
    Tmp_3070 := 0;
    goto L1;

  anon22_Then:
    assume {:partition} Tmp_3073 != 0;
    Tmp_3074 := 1;
    goto L57;
}



procedure {:origName "FatAcquireSharedFcb"} FatAcquireSharedFcb(actual_IrpContext_216: int, actual_Fcb_77: int) returns (Tmp_3077: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_3077 == 1 || Tmp_3077 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAcquireSharedFcb"} FatAcquireSharedFcb(actual_IrpContext_216: int, actual_Fcb_77: int) returns (Tmp_3077: int)
{
  var {:scalar} Tmp_3078: int;
  var {:scalar} Tmp_3080: int;
  var {:scalar} sdv_1788: int;
  var {:scalar} sdv_1789: int;
  var {:pointer} Tmp_3081: int;
  var {:scalar} sdv_1791: int;
  var {:scalar} sdv_1793: int;
  var {:pointer} Tmp_3083: int;
  var {:pointer} IrpContext_216: int;
  var {:pointer} Fcb_77: int;
  var vslice_dummy_var_554: int;

  anon0:
    IrpContext_216 := actual_IrpContext_216;
    Fcb_77 := actual_Fcb_77;
    goto L3;

  L3:
    call {:si_unique_call 3985} Tmp_3078, Tmp_3080, sdv_1788, Tmp_3081, sdv_1791, sdv_1793, Tmp_3083, vslice_dummy_var_554 := FatAcquireSharedFcb_loop_L3(Tmp_3078, Tmp_3080, sdv_1788, Tmp_3081, sdv_1791, sdv_1793, Tmp_3083, IrpContext_216, Fcb_77, vslice_dummy_var_554);
    goto L3_last;

  L3_last:
    assume {:nonnull} IrpContext_216 != 0;
    assume IrpContext_216 > 0;
    havoc Tmp_3080;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Tmp_3080 == 0;
    Tmp_3078 := 0;
    goto L57;

  L57:
    call {:si_unique_call 3986} sdv_1788 := ExAcquireResourceSharedLite(0, Tmp_3078);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_1788 != 0;
    assume {:nonnull} Fcb_77 != 0;
    assume Fcb_77 > 0;
    havoc Tmp_3081;
    assume {:nonnull} Tmp_3081 != 0;
    assume Tmp_3081 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} IrpContext_216 != 0;
    assume IrpContext_216 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L16;

  L16:
    assume {:nonnull} Fcb_77 != 0;
    assume Fcb_77 > 0;
    call {:si_unique_call 3987} vslice_dummy_var_554 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 3988} ExReleaseResourceLite(0);
    goto L16_dummy;

  L16_dummy:
    assume false;
    return;

  anon18_Then:
    assume {:nonnull} IrpContext_216 != 0;
    assume IrpContext_216 > 0;
    havoc Tmp_3083;
    assume {:nonnull} Tmp_3083 != 0;
    assume Tmp_3083 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 3989} sdv_1791 := ExGetSharedWaiterCount(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_1791 == 0;
    call {:si_unique_call 3990} sdv_1793 := ExGetExclusiveWaiterCount(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_1793 != 0;
    goto L16;

  anon20_Then:
    assume {:partition} sdv_1793 == 0;
    goto L11;

  L11:
    call {:si_unique_call 3991} FatVerifyOperationIsLegal(IrpContext_216);
    call {:si_unique_call 3992} sdv_1789 := sdv_AbnormalTermination();
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} sdv_1789 != 0;
    call {:si_unique_call 3993} ExReleaseResourceLite(0);
    goto L42;

  L42:
    Tmp_3077 := 1;
    goto L1;

  L1:
    return;

  anon21_Then:
    assume {:partition} sdv_1789 == 0;
    goto L42;

  anon19_Then:
    assume {:partition} sdv_1791 != 0;
    goto L16;

  anon24_Then:
    goto L16;

  anon23_Then:
    goto L11;

  anon17_Then:
    assume {:partition} sdv_1788 == 0;
    Tmp_3077 := 0;
    goto L1;

  anon22_Then:
    assume {:partition} Tmp_3080 != 0;
    Tmp_3078 := 1;
    goto L57;
}



procedure {:origName "FatAcquireSharedFcbWaitForEx"} FatAcquireSharedFcbWaitForEx(actual_IrpContext_217: int, actual_Fcb_78: int) returns (Tmp_3084: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_3084 == 1 || Tmp_3084 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAcquireSharedFcbWaitForEx"} FatAcquireSharedFcbWaitForEx(actual_IrpContext_217: int, actual_Fcb_78: int) returns (Tmp_3084: int)
{
  var {:scalar} sdv_1794: int;
  var {:pointer} Tmp_3085: int;
  var {:scalar} sdv_1797: int;
  var {:pointer} IrpContext_217: int;
  var {:pointer} Fcb_78: int;
  var vslice_dummy_var_555: int;

  anon0:
    IrpContext_217 := actual_IrpContext_217;
    Fcb_78 := actual_Fcb_78;
    goto L3;

  L3:
    call {:si_unique_call 3994} sdv_1794, Tmp_3085, vslice_dummy_var_555 := FatAcquireSharedFcbWaitForEx_loop_L3(sdv_1794, Tmp_3085, IrpContext_217, Fcb_78, vslice_dummy_var_555);
    goto L3_last;

  L3_last:
    call {:si_unique_call 4000} sdv_1794 := ExAcquireSharedWaitForExclusive(0, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_1794 != 0;
    assume {:nonnull} Fcb_78 != 0;
    assume Fcb_78 > 0;
    havoc Tmp_3085;
    assume {:nonnull} Tmp_3085 != 0;
    assume Tmp_3085 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} IrpContext_217 != 0;
    assume IrpContext_217 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Fcb_78 != 0;
    assume Fcb_78 > 0;
    call {:si_unique_call 3995} vslice_dummy_var_555 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 3996} ExReleaseResourceLite(0);
    goto anon10_Else_dummy;

  anon10_Else_dummy:
    assume false;
    return;

  anon10_Then:
    goto L9;

  L9:
    call {:si_unique_call 3997} FatVerifyOperationIsLegal(IrpContext_217);
    call {:si_unique_call 3998} sdv_1797 := sdv_AbnormalTermination();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_1797 != 0;
    call {:si_unique_call 3999} ExReleaseResourceLite(0);
    goto L31;

  L31:
    Tmp_3084 := 1;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} sdv_1797 == 0;
    goto L31;

  anon12_Then:
    goto L9;

  anon9_Then:
    assume {:partition} sdv_1794 == 0;
    Tmp_3084 := 0;
    goto L1;
}



procedure {:origName "FatAcquireSharedVcb"} FatAcquireSharedVcb(actual_IrpContext_218: int, actual_Vcb_121: int) returns (Tmp_3088: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_3088 == 1 || Tmp_3088 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatAcquireSharedVcb"} FatAcquireSharedVcb(actual_IrpContext_218: int, actual_Vcb_121: int) returns (Tmp_3088: int)
{
  var {:scalar} sdv_1798: int;
  var {:scalar} sdv_1800: int;
  var {:scalar} Tmp_3090: int;
  var {:scalar} Tmp_3091: int;
  var {:pointer} IrpContext_218: int;

  anon0:
    IrpContext_218 := actual_IrpContext_218;
    assume {:nonnull} IrpContext_218 != 0;
    assume IrpContext_218 > 0;
    havoc Tmp_3090;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Tmp_3090 == 0;
    Tmp_3091 := 0;
    goto L33;

  L33:
    call {:si_unique_call 4001} sdv_1798 := ExAcquireResourceSharedLite(0, Tmp_3091);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_1798 != 0;
    call {:si_unique_call 4002} FatVerifyOperationIsLegal(IrpContext_218);
    call {:si_unique_call 4003} sdv_1800 := sdv_AbnormalTermination();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_1800 != 0;
    call {:si_unique_call 4004} ExReleaseResourceLite(0);
    goto L24;

  L24:
    Tmp_3088 := 1;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} sdv_1800 == 0;
    goto L24;

  anon7_Then:
    assume {:partition} sdv_1798 == 0;
    Tmp_3088 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} Tmp_3090 != 0;
    Tmp_3091 := 1;
    goto L33;
}



procedure {:origName "FatFatDateToNtTime"} FatFatDateToNtTime(actual_IrpContext_219: int, actual_structPtr888FatDate: int) returns (SD1_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFatDateToNtTime"} FatFatDateToNtTime(actual_IrpContext_219: int, actual_structPtr888FatDate: int) returns (SD1_2: int)
{
  var {:scalar} FatDate: int;
  var {:scalar} Time_1: int;
  var {:scalar} TimeFields: int;
  var {:scalar} sdv_1801: int;
  var {:scalar} Tmp_1: int;
  var {:pointer} structPtr888FatDate: int;

  anon0:
    call {:si_unique_call 4005} FatDate := __HAVOC_malloc(12);
    call {:si_unique_call 4006} Time_1 := __HAVOC_malloc(20);
    call {:si_unique_call 4007} TimeFields := __HAVOC_malloc(32);
    call {:si_unique_call 4008} Tmp_1 := __HAVOC_malloc(20);
    structPtr888FatDate := actual_structPtr888FatDate;
    assume {:nonnull} FatDate != 0;
    assume FatDate > 0;
    assume {:nonnull} structPtr888FatDate != 0;
    assume structPtr888FatDate > 0;
    assume {:nonnull} FatDate != 0;
    assume FatDate > 0;
    assume {:nonnull} structPtr888FatDate != 0;
    assume structPtr888FatDate > 0;
    assume {:nonnull} FatDate != 0;
    assume FatDate > 0;
    assume {:nonnull} structPtr888FatDate != 0;
    assume structPtr888FatDate > 0;
    assume {:nonnull} FatDate != 0;
    assume FatDate > 0;
    assume {:nonnull} TimeFields != 0;
    assume TimeFields > 0;
    assume {:nonnull} FatDate != 0;
    assume FatDate > 0;
    assume {:nonnull} TimeFields != 0;
    assume TimeFields > 0;
    assume {:nonnull} FatDate != 0;
    assume FatDate > 0;
    assume {:nonnull} TimeFields != 0;
    assume TimeFields > 0;
    assume {:nonnull} TimeFields != 0;
    assume TimeFields > 0;
    assume {:nonnull} TimeFields != 0;
    assume TimeFields > 0;
    assume {:nonnull} TimeFields != 0;
    assume TimeFields > 0;
    assume {:nonnull} TimeFields != 0;
    assume TimeFields > 0;
    call {:si_unique_call 4009} sdv_1801 := corral_nondet();
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_1801 != 0;
    goto L20;

  L20:
    assume {:nonnull} Time_1 != 0;
    assume Time_1 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Time_1 != 0;
    assume Time_1 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Time_1 != 0;
    assume Time_1 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Time_1 != 0;
    assume Time_1 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Time_1 != 0;
    assume Time_1 > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    SD1_2 := Tmp_1;
    return;

  anon3_Then:
    assume {:partition} sdv_1801 == 0;
    assume {:nonnull} Time_1 != 0;
    assume Time_1 > 0;
    assume {:nonnull} Time_1 != 0;
    assume Time_1 > 0;
    goto L20;
}



procedure {:origName "FatNtTimeToFatTime"} FatNtTimeToFatTime(actual_IrpContext_220: int, actual_NtTime: int, actual_Rounding: int, actual_FatTime_1: int, actual_TenMsecs: int) returns (Tmp_3093: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_3093 == 1 || Tmp_3093 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatNtTimeToFatTime"} FatNtTimeToFatTime(actual_IrpContext_220: int, actual_NtTime: int, actual_Rounding: int, actual_FatTime_1: int, actual_TenMsecs: int) returns (Tmp_3093: int)
{
  var {:scalar} TimeFields_1: int;
  var {:scalar} Tmp_3095: int;
  var {:pointer} NtTime: int;
  var {:scalar} Rounding: int;
  var {:pointer} FatTime_1: int;
  var {:pointer} TenMsecs: int;
  var vslice_dummy_var_556: int;

  anon0:
    call {:si_unique_call 4010} TimeFields_1 := __HAVOC_malloc(32);
    NtTime := actual_NtTime;
    Rounding := actual_Rounding;
    FatTime_1 := actual_FatTime_1;
    TenMsecs := actual_TenMsecs;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Rounding != 0;
    assume {:nonnull} NtTime != 0;
    assume NtTime > 0;
    goto L5;

  L5:
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L14;

  L14:
    Tmp_3093 := 0;
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} FatTime_1 != 0;
    assume FatTime_1 > 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    assume {:nonnull} FatTime_1 != 0;
    assume FatTime_1 > 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    assume {:nonnull} FatTime_1 != 0;
    assume FatTime_1 > 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    assume {:nonnull} FatTime_1 != 0;
    assume FatTime_1 > 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    assume {:nonnull} FatTime_1 != 0;
    assume FatTime_1 > 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    assume {:nonnull} FatTime_1 != 0;
    assume FatTime_1 > 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} TenMsecs != 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Rounding != 0;
    assume {:nonnull} TenMsecs != 0;
    assume TenMsecs > 0;
    goto L25;

  L25:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Rounding != 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    goto L33;

  L33:
    call {:si_unique_call 4011} vslice_dummy_var_556 := corral_nondet();
    Tmp_3093 := 1;
    goto L1;

  anon16_Then:
    assume {:partition} Rounding == 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    goto L33;

  anon17_Then:
    assume {:partition} Rounding == 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    havoc Tmp_3095;
    assume {:nonnull} TenMsecs != 0;
    assume TenMsecs > 0;
    assume {:nonnull} TimeFields_1 != 0;
    assume TimeFields_1 > 0;
    goto L25;

  anon18_Then:
    assume {:partition} TenMsecs == 0;
    goto L25;

  anon15_Then:
    goto L14;

  anon13_Then:
    assume {:partition} Rounding == 0;
    goto L5;
}



procedure {:origName "FatFatTimeToNtTime"} FatFatTimeToNtTime(actual_IrpContext_221: int, actual_structPtr888FatTime: int, actual_TenMilliSeconds: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFatTimeToNtTime"} FatFatTimeToNtTime(actual_IrpContext_221: int, actual_structPtr888FatTime: int, actual_TenMilliSeconds: int) returns (structPtr888Tmp: int)
{
  var {:scalar} FatTime: int;
  var {:scalar} Time_2: int;
  var {:scalar} TimeFields_2: int;
  var {:scalar} sdv_1803: int;
  var {:scalar} Tmp_3096: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888FatTime: int;
  var {:scalar} TenMilliSeconds: int;

  anon0:
    call {:si_unique_call 4012} FatTime := __HAVOC_malloc(24);
    call {:si_unique_call 4013} Time_2 := __HAVOC_malloc(20);
    call {:si_unique_call 4014} TimeFields_2 := __HAVOC_malloc(32);
    call {:si_unique_call 4015} Tmp := __HAVOC_malloc(20);
    structPtr888FatTime := actual_structPtr888FatTime;
    TenMilliSeconds := actual_TenMilliSeconds;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} structPtr888FatTime != 0;
    assume structPtr888FatTime > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} structPtr888FatTime != 0;
    assume structPtr888FatTime > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} structPtr888FatTime != 0;
    assume structPtr888FatTime > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} structPtr888FatTime != 0;
    assume structPtr888FatTime > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} structPtr888FatTime != 0;
    assume structPtr888FatTime > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} structPtr888FatTime != 0;
    assume structPtr888FatTime > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    assume {:nonnull} FatTime != 0;
    assume FatTime > 0;
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} TenMilliSeconds != 0;
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    Tmp_3096 := INTMOD(TenMilliSeconds, 100);
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    goto L16;

  L16:
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    goto L17;

  L17:
    call {:si_unique_call 4016} sdv_1803 := corral_nondet();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_1803 != 0;
    goto L26;

  L26:
    assume {:nonnull} Time_2 != 0;
    assume Time_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} Time_2 != 0;
    assume Time_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} Time_2 != 0;
    assume Time_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} Time_2 != 0;
    assume Time_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} Time_2 != 0;
    assume Time_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    structPtr888Tmp := Tmp;
    return;

  anon8_Then:
    assume {:partition} sdv_1803 == 0;
    assume {:nonnull} Time_2 != 0;
    assume Time_2 > 0;
    assume {:nonnull} Time_2 != 0;
    assume Time_2 > 0;
    goto L26;

  anon7_Then:
    goto L17;

  anon9_Then:
    assume {:partition} TenMilliSeconds == 0;
    assume {:nonnull} TimeFields_2 != 0;
    assume TimeFields_2 > 0;
    goto L16;
}



procedure {:origName "_sdv_init22"} _sdv_init22();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "_sdv_init22"} _sdv_init22()
{
  var vslice_dummy_var_557: int;

  anon0:
    call {:si_unique_call 4017} vslice_dummy_var_557 := __HAVOC_malloc(4);
    return;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.AccessState__IO_SECURITY_CONTEXT"} {:fieldname "AccessState"} AccessState__IO_SECURITY_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AcquireForCcFlush__FAST_IO_DISPATCH"} {:fieldname "AcquireForCcFlush"} AcquireForCcFlush__FAST_IO_DISPATCH(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.AcquireForLazyWrite__CACHE_MANAGER_CALLBACKS"} {:fieldname "AcquireForLazyWrite"} AcquireForLazyWrite__CACHE_MANAGER_CALLBACKS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AcquireForReadAhead__CACHE_MANAGER_CALLBACKS"} {:fieldname "AcquireForReadAhead"} AcquireForReadAhead__CACHE_MANAGER_CALLBACKS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AdvanceOnly_unnamed_tag_14"} {:fieldname "AdvanceOnly"} AdvanceOnly_unnamed_tag_14(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._FAST_MUTEX"} {:fieldname "AdvancedFcbHeaderMutex"} AdvancedFcbHeaderMutex__NON_PAGED_FCB(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._FAST_MUTEX"} {:fieldname "AdvancedFcbHeaderMutex"} AdvancedFcbHeaderMutex__VCB(x: int) : int
{
  x + 1248
}

function {:inline true} {:fieldmap "Mem_T.AlignmentRequirement__DEVICE_OBJECT"} {:fieldname "AlignmentRequirement"} AlignmentRequirement__DEVICE_OBJECT(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.AllocatedResourcesTranslated_unnamed_tag_38"} {:fieldname "AllocatedResourcesTranslated"} AllocatedResourcesTranslated_unnamed_tag_38(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AllocatedResources_unnamed_tag_38"} {:fieldname "AllocatedResources"} AllocatedResources_unnamed_tag_38(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AllocationSize__FILE_ALLOCATION_INFORMATION"} {:fieldname "AllocationSize"} AllocationSize__FILE_ALLOCATION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AllocationSize__FILE_NETWORK_OPEN_INFORMATION"} {:fieldname "AllocationSize"} AllocationSize__FILE_NETWORK_OPEN_INFORMATION(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.AllocationSize__FSRTL_COMMON_FCB_HEADER"} {:fieldname "AllocationSize"} AllocationSize__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.AllocationSize_unnamed_tag_4"} {:fieldname "AllocationSize"} AllocationSize_unnamed_tag_4(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.AllocationSupport__VCB"} {:fieldname "AllocationSupport"} AllocationSupport__VCB(x: int) : int
{
  x + 296
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_40"} {:fieldname "Argument1"} Argument1_unnamed_tag_40(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Argument2_unnamed_tag_40"} {:fieldname "Argument2"} Argument2_unnamed_tag_40(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Argument3_unnamed_tag_40"} {:fieldname "Argument3"} Argument3_unnamed_tag_40(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Argument4_unnamed_tag_40"} {:fieldname "Argument4"} Argument4_unnamed_tag_40(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.AssociatedIrp__IRP"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AsyncCloseActive__FAT_DATA"} {:fieldname "AsyncCloseActive"} AsyncCloseActive__FAT_DATA(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.AsyncCloseCount__FAT_DATA"} {:fieldname "AsyncCloseCount"} AsyncCloseCount__FAT_DATA(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AsyncCloseList"} AsyncCloseList__FAT_DATA(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AsyncCloseList"} AsyncCloseList__VCB(x: int) : int
{
  x + 1232
}

function {:inline true} {:fieldmap "Mem_T.Async_unnamed_tag_63"} {:fieldname "Async"} Async_unnamed_tag_63(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Attributes__LUID_AND_ATTRIBUTES"} {:fieldname "Attributes"} Attributes__LUID_AND_ATTRIBUTES(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Attributes__PACKED_DIRENT"} {:fieldname "Attributes"} Attributes__PACKED_DIRENT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Attributes__PACKED_LFN_DIRENT"} {:fieldname "Attributes"} Attributes__PACKED_LFN_DIRENT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Attributes__SID_AND_ATTRIBUTES"} {:fieldname "Attributes"} Attributes__SID_AND_ATTRIBUTES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AuxilaryBuffer__EA_RANGE"} {:fieldname "AuxilaryBuffer"} AuxilaryBuffer__EA_RANGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BackupBootSector_BIOS_PARAMETER_BLOCK"} {:fieldname "BackupBootSector"} BackupBootSector_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.BackupBootSector__PACKED_BIOS_PARAMETER_BLOCK_EX"} {:fieldname "BackupBootSector"} BackupBootSector__PACKED_BIOS_PARAMETER_BLOCK_EX(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T._FILE_BASIC_INFORMATION"} {:fieldname "BasicInformation"} BasicInformation__FILE_ALL_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PPVOID"} {:fieldname "BcbArray"} BcbArray__EA_RANGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.BcbChainLength__EA_RANGE"} {:fieldname "BcbChainLength"} BcbChainLength__EA_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BcbChain__EA_RANGE"} {:fieldname "BcbChain"} BcbChain__EA_RANGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Bcb"} Bcb__FAT_ENUMERATION_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Bcb__REPINNED_BCBS"} {:fieldname "Bcb"} Bcb__REPINNED_BCBS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BitmapSize_VOLUME_BITMAP_BUFFER"} {:fieldname "BitmapSize"} BitmapSize_VOLUME_BITMAP_BUFFER(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BIOS_PARAMETER_BLOCK"} {:fieldname "Bpb"} Bpb__VCB(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.BufferSize_unnamed_tag_39"} {:fieldname "BufferSize"} BufferSize_unnamed_tag_39(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Buffer_VOLUME_BITMAP_BUFFER"} {:fieldname "Buffer"} Buffer_VOLUME_BITMAP_BUFFER(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Buffer__RTL_BITMAP"} {:fieldname "Buffer"} Buffer__RTL_BITMAP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Buffer__STRING"} {:fieldname "Buffer"} Buffer__STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Buffer_unnamed_tag_30"} {:fieldname "Buffer"} Buffer_unnamed_tag_30(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Buffer_unnamed_tag_39"} {:fieldname "Buffer"} Buffer_unnamed_tag_39(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ByteCount__IO_RUNS"} {:fieldname "ByteCount"} ByteCount__IO_RUNS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ByteOffset_unnamed_tag_10"} {:fieldname "ByteOffset"} ByteOffset_unnamed_tag_10(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ByteOffset_unnamed_tag_19"} {:fieldname "ByteOffset"} ByteOffset_unnamed_tag_19(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BytesPerSector_BIOS_PARAMETER_BLOCK"} {:fieldname "BytesPerSector"} BytesPerSector_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.BytesPerSector__DISK_GEOMETRY"} {:fieldname "BytesPerSector"} BytesPerSector__DISK_GEOMETRY(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.BytesPerSector__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "BytesPerSector"} BytesPerSector__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CacheManagerCallbacks__FAT_DATA"} {:fieldname "CacheManagerCallbacks"} CacheManagerCallbacks__FAT_DATA(x: int) : int
{
  x + 172
}

function {:inline true} {:fieldmap "Mem_T.CacheManagerNoOpCallbacks__FAT_DATA"} {:fieldname "CacheManagerNoOpCallbacks"} CacheManagerNoOpCallbacks__FAT_DATA(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CdromFileSystemDeviceObject__FAT_DATA"} {:fieldname "CdromFileSystemDeviceObject"} CdromFileSystemDeviceObject__FAT_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._ERESOURCE"} {:fieldname "ChangeBitMapResource"} ChangeBitMapResource__VCB(x: int) : int
{
  x + 576
}

function {:inline true} {:fieldmap "Mem_T.ChangeCount__VCB"} {:fieldname "ChangeCount"} ChangeCount__VCB(x: int) : int
{
  x + 1224
}

function {:inline true} {:fieldmap "Mem_T.Characteristics__DEVICE_OBJECT"} {:fieldname "Characteristics"} Characteristics__DEVICE_OBJECT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Checksum__PACKED_LFN_DIRENT"} {:fieldname "Checksum"} Checksum__PACKED_LFN_DIRENT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.ChicagoMode__FAT_DATA"} {:fieldname "ChicagoMode"} ChicagoMode__FAT_DATA(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CleanVolumeDpc"} CleanVolumeDpc__VCB(x: int) : int
{
  x + 844
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "ClientToken"} ClientToken__SECURITY_SUBJECT_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CLOSE_CONTEXT"} {:fieldname "CloseContext"} CloseContext__CCB(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.CloseContext__VCB"} {:fieldname "CloseContext"} CloseContext__VCB(x: int) : int
{
  x + 1388
}

function {:inline true} {:fieldmap "Mem_T.ClusterCount_MOVE_FILE_DATA"} {:fieldname "ClusterCount"} ClusterCount_MOVE_FILE_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.ClusterCount_unnamed_tag_14"} {:fieldname "ClusterCount"} ClusterCount_unnamed_tag_14(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.ClusterHint__VCB"} {:fieldname "ClusterHint"} ClusterHint__VCB(x: int) : int
{
  x + 668
}

function {:inline true} {:fieldmap "Mem_T.ClustersFree__FAT_WINDOW"} {:fieldname "ClustersFree"} ClustersFree__FAT_WINDOW(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CodePageInvariant__FAT_DATA"} {:fieldname "CodePageInvariant"} CodePageInvariant__FAT_DATA(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T._FILESYSTEM_STATISTICS"} {:fieldname "Common"} Common__FILE_SYSTEM_STATISTICS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CompletionFilter_unnamed_tag_12"} {:fieldname "CompletionFilter"} CompletionFilter_unnamed_tag_12(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Constant"} Constant_unnamed_tag_72(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ContainsWildCards__CCB"} {:fieldname "ContainsWildCards"} ContainsWildCards__CCB(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ContextAsUlong__SYSTEM_POWER_STATE_CONTEXT"} {:fieldname "ContextAsUlong"} ContextAsUlong__SYSTEM_POWER_STATE_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Context__IO_STACK_LOCATION"} {:fieldname "Context"} Context__IO_STACK_LOCATION(x: int) : int
{
  x + 500
}

function {:inline true} {:fieldmap "Mem_T.Control__INITIAL_PRIVILEGE_SET"} {:fieldname "Control"} Control__INITIAL_PRIVILEGE_SET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Control__IO_STACK_LOCATION"} {:fieldname "Control"} Control__IO_STACK_LOCATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Control__TRACK_DATA"} {:fieldname "Control"} Control__TRACK_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CreateHits__FAT_STATISTICS"} {:fieldname "CreateHits"} CreateHits__FAT_STATISTICS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_9"} {:fieldname "Create"} Create_unnamed_tag_8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "CreationMSec"} CreationMSec__PACKED_DIRENT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.CreationTime__FCB"} {:fieldname "CreationTime"} CreationTime__FCB(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.CreationTime__FILE_BASIC_INFORMATION"} {:fieldname "CreationTime"} CreationTime__FILE_BASIC_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CreationTime__FILE_NETWORK_OPEN_INFORMATION"} {:fieldname "CreationTime"} CreationTime__FILE_NETWORK_OPEN_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._FAT_TIME_STAMP"} {:fieldname "CreationTime"} CreationTime__PACKED_DIRENT(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.CurrentByteOffset__FILE_OBJECT"} {:fieldname "CurrentByteOffset"} CurrentByteOffset__FILE_OBJECT(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.CurrentByteOffset__FILE_POSITION_INFORMATION"} {:fieldname "CurrentByteOffset"} CurrentByteOffset__FILE_POSITION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CurrentDevice__VCB"} {:fieldname "CurrentDevice"} CurrentDevice__VCB(x: int) : int
{
  x + 672
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "CurrentHead"} CurrentHead__PACKED_BOOT_SECTOR(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "CurrentHead"} CurrentHead__PACKED_BOOT_SECTOR_EX(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_7"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_7(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CurrentSystemState__SYSTEM_POWER_STATE_CONTEXT"} {:fieldname "CurrentSystemState"} CurrentSystemState__SYSTEM_POWER_STATE_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CurrentWindow__VCB"} {:fieldname "CurrentWindow"} CurrentWindow__VCB(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DataLength__KEY_VALUE_FULL_INFORMATION"} {:fieldname "DataLength"} DataLength__KEY_VALUE_FULL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataPath_unnamed_tag_39"} {:fieldname "DataPath"} DataPath_unnamed_tag_39(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DataSectionObject__SECTION_OBJECT_POINTERS"} {:fieldname "DataSectionObject"} DataSectionObject__SECTION_OBJECT_POINTERS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data_unnamed_tag_47"} {:fieldname "Data"} Data_unnamed_tag_47(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Date__FAT_TIME_STAMP"} {:fieldname "Date"} Date__FAT_TIME_STAMP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Day__FAT_DATE"} {:fieldname "Day"} Day__FAT_DATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Day__TIME_FIELDS"} {:fieldname "Day"} Day__TIME_FIELDS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Dcb_unnamed_tag_67"} {:fieldname "Dcb"} Dcb_unnamed_tag_67(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DelayedCloseCount__FAT_DATA"} {:fieldname "DelayedCloseCount"} DelayedCloseCount__FAT_DATA(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DelayedCloseList"} DelayedCloseList__FAT_DATA(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DelayedCloseList"} DelayedCloseList__VCB(x: int) : int
{
  x + 1240
}

function {:inline true} {:fieldmap "Mem_T.DeleteAccess__FILE_OBJECT"} {:fieldname "DeleteAccess"} DeleteAccess__FILE_OBJECT(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DeleteFile__FILE_DISPOSITION_INFORMATION"} {:fieldname "DeleteFile"} DeleteFile__FILE_DISPOSITION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeleteHandle_unnamed_tag_14"} {:fieldname "DeleteHandle"} DeleteHandle_unnamed_tag_14(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DeletePending__FILE_OBJECT"} {:fieldname "DeletePending"} DeletePending__FILE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeletePending__FILE_STANDARD_INFORMATION"} {:fieldname "DeletePending"} DeletePending__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeletedDirentHint_unnamed_tag_68"} {:fieldname "DeletedDirentHint"} DeletedDirentHint_unnamed_tag_68(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DesiredAccess"} DesiredAccess__IO_SECURITY_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceHotplug__STORAGE_HOTPLUG_INFO"} {:fieldname "DeviceHotplug"} DeviceHotplug__STORAGE_HOTPLUG_INFO(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__DEVOBJ_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__DEVOBJ_EXTENSION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__IO_STACK_LOCATION"} {:fieldname "DeviceObject"} DeviceObject__IO_STACK_LOCATION(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__VOLUME_DEVICE_OBJECT"} {:fieldname "DeviceObject"} DeviceObject__VOLUME_DEVICE_OBJECT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__VPB"} {:fieldname "DeviceObject"} DeviceObject__VPB(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject_unnamed_tag_23"} {:fieldname "DeviceObject"} DeviceObject_unnamed_tag_23(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_33"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_33(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__DEVICE_OBJECT"} {:fieldname "DeviceType"} DeviceType__DEVICE_OBJECT(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DirNotifyList"} DirNotifyList__VCB(x: int) : int
{
  x + 688
}

function {:inline true} {:fieldmap "Mem_T.DirectAccessOpenCount__VCB"} {:fieldname "DirectAccessOpenCount"} DirectAccessOpenCount__VCB(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.DirectoryFileOpenCount_unnamed_tag_68"} {:fieldname "DirectoryFileOpenCount"} DirectoryFileOpenCount_unnamed_tag_68(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DirectoryFile_unnamed_tag_68"} {:fieldname "DirectoryFile"} DirectoryFile_unnamed_tag_68(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Directory__FILE_STANDARD_INFORMATION"} {:fieldname "Directory"} Directory__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.DirentFatFlags__FCB"} {:fieldname "DirentFatFlags"} DirentFatFlags__FCB(x: int) : int
{
  x + 512
}

function {:inline true} {:fieldmap "Mem_T.DirentOffsetWithinDirectory__FCB"} {:fieldname "DirentOffsetWithinDirectory"} DirentOffsetWithinDirectory__FCB(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T._LARGE_MCB"} {:fieldname "DirtyFatMcb"} DirtyFatMcb__VCB(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.DiskFileSystemDeviceObject__FAT_DATA"} {:fieldname "DiskFileSystemDeviceObject"} DiskFileSystemDeviceObject__FAT_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DoubleSeconds__FAT_TIME"} {:fieldname "DoubleSeconds"} DoubleSeconds__FAT_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "Dpc"} Dpc__DEFERRED_FLUSH_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__FAT_DATA"} {:fieldname "DriverObject"} DriverObject__FAT_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DriverUnload__DRIVER_OBJECT"} {:fieldname "DriverUnload"} DriverUnload__DRIVER_OBJECT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.EaBaseTable__EA_FILE_HEADER"} {:fieldname "EaBaseTable"} EaBaseTable__EA_FILE_HEADER(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.EaFcb__VCB"} {:fieldname "EaFcb"} EaFcb__VCB(x: int) : int
{
  x + 680
}

function {:inline true} {:fieldmap "Mem_T.EaIndex_unnamed_tag_15"} {:fieldname "EaIndex"} EaIndex_unnamed_tag_15(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._FILE_EA_INFORMATION"} {:fieldname "EaInformation"} EaInformation__FILE_ALL_INFORMATION(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.EaLength_unnamed_tag_9"} {:fieldname "EaLength"} EaLength_unnamed_tag_9(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.EaListLength_unnamed_tag_15"} {:fieldname "EaListLength"} EaListLength_unnamed_tag_15(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.EaList_unnamed_tag_15"} {:fieldname "EaList"} EaList_unnamed_tag_15(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.EaModificationCount__CCB"} {:fieldname "EaModificationCount"} EaModificationCount__CCB(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.EaModificationCount__FCB"} {:fieldname "EaModificationCount"} EaModificationCount__FCB(x: int) : int
{
  x + 448
}

function {:inline true} {:fieldmap "Mem_T.EaNameLength__FILE_FULL_EA_INFORMATION"} {:fieldname "EaNameLength"} EaNameLength__FILE_FULL_EA_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "EaNameLength"} EaNameLength__PACKED_EA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.EaName__FILE_FULL_EA_INFORMATION"} {:fieldname "EaName"} EaName__FILE_FULL_EA_INFORMATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.EaName__PACKED_EA"} {:fieldname "EaName"} EaName__PACKED_EA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "EaSize"} EaSize__FILE_EA_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.EaValueLength__FILE_FULL_EA_INFORMATION"} {:fieldname "EaValueLength"} EaValueLength__FILE_FULL_EA_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "EaValueLength"} EaValueLength__PACKED_EA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.EffectiveSystemState__SYSTEM_POWER_STATE_CONTEXT"} {:fieldname "EffectiveSystemState"} EffectiveSystemState__SYSTEM_POWER_STATE_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.EndOfFile__FILE_END_OF_FILE_INFORMATION"} {:fieldname "EndOfFile"} EndOfFile__FILE_END_OF_FILE_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.EndOfFile__FILE_NETWORK_OPEN_INFORMATION"} {:fieldname "EndOfFile"} EndOfFile__FILE_NETWORK_OPEN_INFORMATION(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.EndOfFile__FILE_STANDARD_INFORMATION"} {:fieldname "EndOfFile"} EndOfFile__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "Event"} Event_FAT_PAGING_FILE_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "Event"} Event__CACHE_UNINITIALIZE_EVENT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "ExactCaseLongName"} ExactCaseLongName__FCB(x: int) : int
{
  x + 516
}

function {:inline true} {:fieldmap "Mem_T.ExceptionStatus__IRP_CONTEXT"} {:fieldname "ExceptionStatus"} ExceptionStatus__IRP_CONTEXT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.ExtendedAttributes__PACKED_DIRENT"} {:fieldname "ExtendedAttributes"} ExtendedAttributes__PACKED_DIRENT(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.ExtendedFlags_BIOS_PARAMETER_BLOCK"} {:fieldname "ExtendedFlags"} ExtendedFlags_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.ExtendedFlags__PACKED_BIOS_PARAMETER_BLOCK_EX"} {:fieldname "ExtendedFlags"} ExtendedFlags__PACKED_BIOS_PARAMETER_BLOCK_EX(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.ExtentCount_RETRIEVAL_POINTERS_BUFFER"} {:fieldname "ExtentCount"} ExtentCount_RETRIEVAL_POINTERS_BUFFER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extents_RETRIEVAL_POINTERS_BUFFER"} {:fieldname "Extents"} Extents_RETRIEVAL_POINTERS_BUFFER(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.FailedCreates__FAT_STATISTICS"} {:fieldname "FailedCreates"} FailedCreates__FAT_STATISTICS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.FastIoCheckIfPossible__FAST_IO_DISPATCH"} {:fieldname "FastIoCheckIfPossible"} FastIoCheckIfPossible__FAST_IO_DISPATCH(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FastIoDispatch__DRIVER_OBJECT"} {:fieldname "FastIoDispatch"} FastIoDispatch__DRIVER_OBJECT(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.FastIoIsQuestionable__FILE_LOCK"} {:fieldname "FastIoIsQuestionable"} FastIoIsQuestionable__FILE_LOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.FastIoLock__FAST_IO_DISPATCH"} {:fieldname "FastIoLock"} FastIoLock__FAST_IO_DISPATCH(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.FastIoQueryBasicInfo__FAST_IO_DISPATCH"} {:fieldname "FastIoQueryBasicInfo"} FastIoQueryBasicInfo__FAST_IO_DISPATCH(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.FastIoQueryNetworkOpenInfo__FAST_IO_DISPATCH"} {:fieldname "FastIoQueryNetworkOpenInfo"} FastIoQueryNetworkOpenInfo__FAST_IO_DISPATCH(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.FastIoQueryStandardInfo__FAST_IO_DISPATCH"} {:fieldname "FastIoQueryStandardInfo"} FastIoQueryStandardInfo__FAST_IO_DISPATCH(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.FastIoRead__FAST_IO_DISPATCH"} {:fieldname "FastIoRead"} FastIoRead__FAST_IO_DISPATCH(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.FastIoUnlockAllByKey__FAST_IO_DISPATCH"} {:fieldname "FastIoUnlockAllByKey"} FastIoUnlockAllByKey__FAST_IO_DISPATCH(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.FastIoUnlockAll__FAST_IO_DISPATCH"} {:fieldname "FastIoUnlockAll"} FastIoUnlockAll__FAST_IO_DISPATCH(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FastIoUnlockSingle__FAST_IO_DISPATCH"} {:fieldname "FastIoUnlockSingle"} FastIoUnlockSingle__FAST_IO_DISPATCH(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.FastIoWrite__FAST_IO_DISPATCH"} {:fieldname "FastIoWrite"} FastIoWrite__FAST_IO_DISPATCH(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FastMutex__FSRTL_ADVANCED_FCB_HEADER"} {:fieldname "FastMutex"} FastMutex__FSRTL_ADVANCED_FCB_HEADER(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.FatCloseItem__FAT_DATA"} {:fieldname "FatCloseItem"} FatCloseItem__FAT_DATA(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.FatIndexBitSize_unnamed_tag_65"} {:fieldname "FatIndexBitSize"} FatIndexBitSize_unnamed_tag_65(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.FatIoContext__IRP_CONTEXT"} {:fieldname "FatIoContext"} FatIoContext__IRP_CONTEXT(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Fat__FILE_SYSTEM_STATISTICS"} {:fieldname "Fat"} Fat__FILE_SYSTEM_STATISTICS(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.Fats_BIOS_PARAMETER_BLOCK"} {:fieldname "Fats"} Fats_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Fats__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "Fats"} Fats__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.FcbCondition__FCB"} {:fieldname "FcbCondition"} FcbCondition__FCB(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.FcbState__FCB"} {:fieldname "FcbState"} FcbState__FCB(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.Fcb_CLOSE_CONTEXT"} {:fieldname "Fcb"} Fcb_CLOSE_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Fcb__FILE_NAME_NODE"} {:fieldname "Fcb"} Fcb__FILE_NAME_NODE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Fcb__PAGING_FILE_OVERFLOW_PACKET"} {:fieldname "Fcb"} Fcb__PAGING_FILE_OVERFLOW_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_69"} {:fieldname "Fcb"} Fcb_unnamed_tag_67(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.FileAreaLbo_unnamed_tag_65"} {:fieldname "FileAreaLbo"} FileAreaLbo_unnamed_tag_65(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FileAttributes__FILE_BASIC_INFORMATION"} {:fieldname "FileAttributes"} FileAttributes__FILE_BASIC_INFORMATION(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.FileAttributes__FILE_NETWORK_OPEN_INFORMATION"} {:fieldname "FileAttributes"} FileAttributes__FILE_NETWORK_OPEN_INFORMATION(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.FileAttributes_unnamed_tag_9"} {:fieldname "FileAttributes"} FileAttributes_unnamed_tag_9(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.FileContextSupportPointer__FSRTL_ADVANCED_FCB_HEADER"} {:fieldname "FileContextSupportPointer"} FileContextSupportPointer__FSRTL_ADVANCED_FCB_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.FileIndex_unnamed_tag_11"} {:fieldname "FileIndex"} FileIndex_unnamed_tag_11(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FileInformationClass_unnamed_tag_11"} {:fieldname "FileInformationClass"} FileInformationClass_unnamed_tag_11(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.FileInformationClass_unnamed_tag_13"} {:fieldname "FileInformationClass"} FileInformationClass_unnamed_tag_13(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._FILE_LOCK"} {:fieldname "FileLock"} FileLock_unnamed_tag_69(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FileNameDos__FILE_NAME_NODE"} {:fieldname "FileNameDos"} FileNameDos__FILE_NAME_NODE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.FileNameLength__FILE_NAME_INFORMATION"} {:fieldname "FileNameLength"} FileNameLength__FILE_NAME_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FileNameLength__FILE_RENAME_INFORMATION"} {:fieldname "FileNameLength"} FileNameLength__FILE_RENAME_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.FileName__FILE_NAME_INFORMATION"} {:fieldname "FileName"} FileName__FILE_NAME_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FileName__FILE_OBJECT"} {:fieldname "FileName"} FileName__FILE_OBJECT(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "FileName"} FileName__FILE_RENAME_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FileName__PACKED_DIRENT"} {:fieldname "FileName"} FileName__PACKED_DIRENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FileName_unnamed_tag_11"} {:fieldname "FileName"} FileName_unnamed_tag_11(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FileObjectWithVcbLocked__VCB"} {:fieldname "FileObjectWithVcbLocked"} FileObjectWithVcbLocked__VCB(x: int) : int
{
  x + 684
}

function {:inline true} {:fieldmap "Mem_T.FileObject__IO_STACK_LOCATION"} {:fieldname "FileObject"} FileObject__IO_STACK_LOCATION(x: int) : int
{
  x + 492
}

function {:inline true} {:fieldmap "Mem_T.FileObject_unnamed_tag_14"} {:fieldname "FileObject"} FileObject_unnamed_tag_14(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.FileObject_unnamed_tag_64"} {:fieldname "FileObject"} FileObject_unnamed_tag_64(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.FileSize__CC_FILE_SIZES"} {:fieldname "FileSize"} FileSize__CC_FILE_SIZES(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.FileSize__DELETE_CONTEXT"} {:fieldname "FileSize"} FileSize__DELETE_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "FileSize"} FileSize__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.FileSize__PACKED_DIRENT"} {:fieldname "FileSize"} FileSize__PACKED_DIRENT(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.FileSystemControl_unnamed_tag_8"} {:fieldname "FileSystemControl"} FileSystemControl_unnamed_tag_8(x: int) : int
{
  x + 172
}

function {:inline true} {:fieldmap "Mem_T.FileSystemType__FILESYSTEM_STATISTICS"} {:fieldname "FileSystemType"} FileSystemType__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.File__DEFERRED_FLUSH_CONTEXT"} {:fieldname "File"} File__DEFERRED_FLUSH_CONTEXT(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FilterContexts"} FilterContexts__FSRTL_ADVANCED_FCB_HEADER(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.FilterResourceRequirements_unnamed_tag_8"} {:fieldname "FilterResourceRequirements"} FilterResourceRequirements_unnamed_tag_8(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.FinalNameLength__FCB"} {:fieldname "FinalNameLength"} FinalNameLength__FCB(x: int) : int
{
  x + 508
}

function {:inline true} {:fieldmap "Mem_T.First0x24BytesOfBootSector__VCB"} {:fieldname "First0x24BytesOfBootSector"} First0x24BytesOfBootSector__VCB(x: int) : int
{
  x + 292
}

function {:inline true} {:fieldmap "Mem_T.FirstClusterOfFileHi__PACKED_DIRENT"} {:fieldname "FirstClusterOfFileHi"} FirstClusterOfFileHi__PACKED_DIRENT(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.FirstClusterOfFile__DELETE_CONTEXT"} {:fieldname "FirstClusterOfFile"} FirstClusterOfFile__DELETE_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FirstClusterOfFile__FCB"} {:fieldname "FirstClusterOfFile"} FirstClusterOfFile__FCB(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.FirstClusterOfFile__PACKED_DIRENT"} {:fieldname "FirstClusterOfFile"} FirstClusterOfFile__PACKED_DIRENT(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.FirstCluster__FAT_WINDOW"} {:fieldname "FirstCluster"} FirstCluster__FAT_WINDOW(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FirstTrack__CDROM_TOC"} {:fieldname "FirstTrack"} FirstTrack__CDROM_TOC(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags2__FSRTL_COMMON_FCB_HEADER"} {:fieldname "Flags2"} Flags2__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Flags__CCB"} {:fieldname "Flags"} Flags__CCB(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__FILE_FULL_EA_INFORMATION"} {:fieldname "Flags"} Flags__FILE_FULL_EA_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__FILE_OBJECT"} {:fieldname "Flags"} Flags__FILE_OBJECT(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.Flags__FSRTL_COMMON_FCB_HEADER"} {:fieldname "Flags"} Flags__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__IO_STACK_LOCATION"} {:fieldname "Flags"} Flags__IO_STACK_LOCATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRP"} {:fieldname "Flags"} Flags__IRP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRP_CONTEXT"} {:fieldname "Flags"} Flags__IRP_CONTEXT(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Flags__PACKED_EA"} {:fieldname "Flags"} Flags__PACKED_EA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__VPB"} {:fieldname "Flags"} Flags__VPB(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ForceAlignment__UCHAR2"} {:fieldname "ForceAlignment"} ForceAlignment__UCHAR2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ForceAlignment__UCHAR4"} {:fieldname "ForceAlignment"} ForceAlignment__UCHAR4(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._RTL_BITMAP"} {:fieldname "FreeClusterBitMap"} FreeClusterBitMap__VCB(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.FreeClusterCount__FSINFO_SECTOR"} {:fieldname "FreeClusterCount"} FreeClusterCount__FSINFO_SECTOR(x: int) : int
{
  x + 1928
}

function {:inline true} {:fieldmap "Mem_T.FreeDirentBitmapBuffer_unnamed_tag_68"} {:fieldname "FreeDirentBitmapBuffer"} FreeDirentBitmapBuffer_unnamed_tag_68(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._RTL_BITMAP"} {:fieldname "FreeDirentBitmap"} FreeDirentBitmap_unnamed_tag_68(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free_CLOSE_CONTEXT"} {:fieldname "Free"} Free_CLOSE_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FsContext2__FILE_OBJECT"} {:fieldname "FsContext2"} FsContext2__FILE_OBJECT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.FsContext__FILE_OBJECT"} {:fieldname "FsContext"} FsContext__FILE_OBJECT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.FsControlCode_unnamed_tag_18"} {:fieldname "FsControlCode"} FsControlCode_unnamed_tag_18(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.FsInfoSector_BIOS_PARAMETER_BLOCK"} {:fieldname "FsInfoSector"} FsInfoSector_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.FsInfoSector__PACKED_BIOS_PARAMETER_BLOCK_EX"} {:fieldname "FsInfoSector"} FsInfoSector__PACKED_BIOS_PARAMETER_BLOCK_EX(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.FsInfoSignature__FSINFO_SECTOR"} {:fieldname "FsInfoSignature"} FsInfoSignature__FSINFO_SECTOR(x: int) : int
{
  x + 1924
}

function {:inline true} {:fieldmap "Mem_T.FsInformationClass_unnamed_tag_17"} {:fieldname "FsInformationClass"} FsInformationClass_unnamed_tag_17(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FsVersion_BIOS_PARAMETER_BLOCK"} {:fieldname "FsVersion"} FsVersion_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.FsVersion__PACKED_BIOS_PARAMETER_BLOCK_EX"} {:fieldname "FsVersion"} FsVersion__PACKED_BIOS_PARAMETER_BLOCK_EX(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.FujitsuFMR__FAT_DATA"} {:fieldname "FujitsuFMR"} FujitsuFMR__FAT_DATA(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "FullFileName"} FullFileName__FCB(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.GeneralSpinLock__FAT_DATA"} {:fieldname "GeneralSpinLock"} GeneralSpinLock__FAT_DATA(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "GlobalLinks"} GlobalLinks_CLOSE_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.GroupCount__TOKEN_GROUPS"} {:fieldname "GroupCount"} GroupCount__TOKEN_GROUPS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Groups__TOKEN_GROUPS"} {:fieldname "Groups"} Groups__TOKEN_GROUPS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._FSRTL_ADVANCED_FCB_HEADER"} {:fieldname "Header"} Header__FCB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Heads_BIOS_PARAMETER_BLOCK"} {:fieldname "Heads"} Heads_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Heads__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "Heads"} Heads__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.HiddenSectors_BIOS_PARAMETER_BLOCK"} {:fieldname "HiddenSectors"} HiddenSectors_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.HiddenSectors__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "HiddenSectors"} HiddenSectors__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.HighAsync__FAT_DATA"} {:fieldname "HighAsync"} HighAsync__FAT_DATA(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.HighDelayed__FAT_DATA"} {:fieldname "HighDelayed"} HighDelayed__FAT_DATA(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Hour__FAT_TIME"} {:fieldname "Hour"} Hour__FAT_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Hour__TIME_FIELDS"} {:fieldname "Hour"} Hour__TIME_FIELDS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Id"} Id__PACKED_BOOT_SECTOR(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Id"} Id__PACKED_BOOT_SECTOR_EX(x: int) : int
{
  x + 268
}

function {:inline true} {:fieldmap "Mem_T.IgnoreHibernationPath__SYSTEM_POWER_STATE_CONTEXT"} {:fieldname "IgnoreHibernationPath"} IgnoreHibernationPath__SYSTEM_POWER_STATE_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ImageSectionObject__SECTION_OBJECT_POINTERS"} {:fieldname "ImageSectionObject"} ImageSectionObject__SECTION_OBJECT_POINTERS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InPath_unnamed_tag_34"} {:fieldname "InPath"} InPath_unnamed_tag_34(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IndexNumber__FILE_INTERNAL_INFORMATION"} {:fieldname "IndexNumber"} IndexNumber__FILE_INTERNAL_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_18"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_18(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_20"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfaceSpecificData_unnamed_tag_27"} {:fieldname "InterfaceSpecificData"} InterfaceSpecificData_unnamed_tag_27(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType_unnamed_tag_27"} {:fieldname "InterfaceType"} InterfaceType_unnamed_tag_27(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Interface_unnamed_tag_27"} {:fieldname "Interface"} Interface_unnamed_tag_27(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._FILE_INTERNAL_INFORMATION"} {:fieldname "InternalInformation"} InternalInformation__FILE_ALL_INFORMATION(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.InternalOpenCount__VCB"} {:fieldname "InternalOpenCount"} InternalOpenCount__VCB(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoResourceRequirementList_unnamed_tag_29"} {:fieldname "IoResourceRequirementList"} IoResourceRequirementList_unnamed_tag_29(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IrpCount__FAT_IO_CONTEXT"} {:fieldname "IrpCount"} IrpCount__FAT_IO_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IrpCount_unnamed_tag_3"} {:fieldname "IrpCount"} IrpCount_unnamed_tag_3(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irp__PAGING_FILE_OVERFLOW_PACKET"} {:fieldname "Irp"} Irp__PAGING_FILE_OVERFLOW_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IsFastIoPossible__FSRTL_COMMON_FCB_HEADER"} {:fieldname "IsFastIoPossible"} IsFastIoPossible__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Jump__PACKED_BOOT_SECTOR"} {:fieldname "Jump"} Jump__PACKED_BOOT_SECTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Key_unnamed_tag_10"} {:fieldname "Key"} Key_unnamed_tag_10(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Key_unnamed_tag_19"} {:fieldname "Key"} Key_unnamed_tag_19(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LargeSectorsPerFat_BIOS_PARAMETER_BLOCK"} {:fieldname "LargeSectorsPerFat"} LargeSectorsPerFat_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.LargeSectorsPerFat__PACKED_BIOS_PARAMETER_BLOCK_EX"} {:fieldname "LargeSectorsPerFat"} LargeSectorsPerFat__PACKED_BIOS_PARAMETER_BLOCK_EX(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.LargeSectors_BIOS_PARAMETER_BLOCK"} {:fieldname "LargeSectors"} LargeSectors_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.LargeSectors__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "LargeSectors"} LargeSectors__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.LastAccessDate__PACKED_DIRENT"} {:fieldname "LastAccessDate"} LastAccessDate__PACKED_DIRENT(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.LastAccessTime__FCB"} {:fieldname "LastAccessTime"} LastAccessTime__FCB(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.LastAccessTime__FILE_BASIC_INFORMATION"} {:fieldname "LastAccessTime"} LastAccessTime__FILE_BASIC_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.LastAccessTime__FILE_NETWORK_OPEN_INFORMATION"} {:fieldname "LastAccessTime"} LastAccessTime__FILE_NETWORK_OPEN_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.LastCluster__FAT_WINDOW"} {:fieldname "LastCluster"} LastCluster__FAT_WINDOW(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LastFatMarkVolumeDirtyCall__VCB"} {:fieldname "LastFatMarkVolumeDirtyCall"} LastFatMarkVolumeDirtyCall__VCB(x: int) : int
{
  x + 1044
}

function {:inline true} {:fieldmap "Mem_T.LastTrack__CDROM_TOC"} {:fieldname "LastTrack"} LastTrack__CDROM_TOC(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "LastWriteTime"} LastWriteTime__FCB(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.LastWriteTime__FILE_BASIC_INFORMATION"} {:fieldname "LastWriteTime"} LastWriteTime__FILE_BASIC_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.LastWriteTime__FILE_NETWORK_OPEN_INFORMATION"} {:fieldname "LastWriteTime"} LastWriteTime__FILE_NETWORK_OPEN_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._FAT_TIME_STAMP"} {:fieldname "LastWriteTime"} LastWriteTime__PACKED_DIRENT(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.LazyWriteThread_unnamed_tag_69"} {:fieldname "LazyWriteThread"} LazyWriteThread_unnamed_tag_69(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.Lbo__IO_RUNS"} {:fieldname "Lbo"} Lbo__IO_RUNS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Lcn_unnamed_tag_73"} {:fieldname "Lcn"} Lcn_unnamed_tag_73(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.LeftChild__RTL_SPLAY_LINKS"} {:fieldname "LeftChild"} LeftChild__RTL_SPLAY_LINKS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Length__EA_RANGE"} {:fieldname "Length"} Length__EA_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_16"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_19"} {:fieldname "Length"} Length_unnamed_tag_19(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_21"} {:fieldname "Length"} Length_unnamed_tag_21(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_30"} {:fieldname "Length"} Length_unnamed_tag_30(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LfnOffsetWithinDirectory__FCB"} {:fieldname "LfnOffsetWithinDirectory"} LfnOffsetWithinDirectory__FCB(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T._RTL_SPLAY_LINKS"} {:fieldname "Links"} Links__FILE_NAME_NODE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "List"} List__WORK_QUEUE_ITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LocaleId_unnamed_tag_33"} {:fieldname "LocaleId"} LocaleId_unnamed_tag_33(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LockControl_unnamed_tag_8"} {:fieldname "LockControl"} LockControl_unnamed_tag_8(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.Lock_unnamed_tag_31"} {:fieldname "Lock"} Lock_unnamed_tag_31(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LogOfBytesPerCluster_unnamed_tag_65"} {:fieldname "LogOfBytesPerCluster"} LogOfBytesPerCluster_unnamed_tag_65(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.LogOfBytesPerSector_unnamed_tag_65"} {:fieldname "LogOfBytesPerSector"} LogOfBytesPerSector_unnamed_tag_65(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LongName__FCB"} {:fieldname "LongName"} LongName__FCB(x: int) : int
{
  x + 528
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Luid__LUID_AND_ATTRIBUTES"} {:fieldname "Luid"} Luid__LUID_AND_ATTRIBUTES(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IRP_CONTEXT"} {:fieldname "MajorFunction"} MajorFunction__IRP_CONTEXT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.MasterIrp__FAT_IO_CONTEXT"} {:fieldname "MasterIrp"} MasterIrp__FAT_IO_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__STRING"} {:fieldname "MaximumLength"} MaximumLength__STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Mbr__PARTITION_INFORMATION_EX"} {:fieldname "Mbr"} Mbr__PARTITION_INFORMATION_EX(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._LARGE_MCB"} {:fieldname "Mcb"} Mcb__FCB(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T.MdlAddress__IRP"} {:fieldname "MdlAddress"} MdlAddress__IRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MdlReadComplete__FAST_IO_DISPATCH"} {:fieldname "MdlReadComplete"} MdlReadComplete__FAST_IO_DISPATCH(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.MdlRead__FAST_IO_DISPATCH"} {:fieldname "MdlRead"} MdlRead__FAST_IO_DISPATCH(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MdlWriteComplete__FAST_IO_DISPATCH"} {:fieldname "MdlWriteComplete"} MdlWriteComplete__FAST_IO_DISPATCH(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.MediaHotplug__STORAGE_HOTPLUG_INFO"} {:fieldname "MediaHotplug"} MediaHotplug__STORAGE_HOTPLUG_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MediaRemovable__STORAGE_HOTPLUG_INFO"} {:fieldname "MediaRemovable"} MediaRemovable__STORAGE_HOTPLUG_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Media_BIOS_PARAMETER_BLOCK"} {:fieldname "Media"} Media_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Media__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "Media"} Media__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.MetaDataDiskReads__FILESYSTEM_STATISTICS"} {:fieldname "MetaDataDiskReads"} MetaDataDiskReads__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.MetaDataDiskWrites__FILESYSTEM_STATISTICS"} {:fieldname "MetaDataDiskWrites"} MetaDataDiskWrites__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.MetaDataReadBytes__FILESYSTEM_STATISTICS"} {:fieldname "MetaDataReadBytes"} MetaDataReadBytes__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.MetaDataReads__FILESYSTEM_STATISTICS"} {:fieldname "MetaDataReads"} MetaDataReads__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.MetaDataWriteBytes__FILESYSTEM_STATISTICS"} {:fieldname "MetaDataWriteBytes"} MetaDataWriteBytes__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.MetaDataWrites__FILESYSTEM_STATISTICS"} {:fieldname "MetaDataWrites"} MetaDataWrites__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Milliseconds__TIME_FIELDS"} {:fieldname "Milliseconds"} Milliseconds__TIME_FIELDS(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IRP_CONTEXT"} {:fieldname "MinorFunction"} MinorFunction__IRP_CONTEXT(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Minute__FAT_TIME"} {:fieldname "Minute"} Minute__FAT_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Minute__TIME_FIELDS"} {:fieldname "Minute"} Minute__TIME_FIELDS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.MirrorDisabled_BIOS_PARAMETER_BLOCK"} {:fieldname "MirrorDisabled"} MirrorDisabled_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Month__FAT_DATE"} {:fieldname "Month"} Month__FAT_DATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Month__TIME_FIELDS"} {:fieldname "Month"} Month__TIME_FIELDS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MountVolume_unnamed_tag_8"} {:fieldname "MountVolume"} MountVolume_unnamed_tag_8(x: int) : int
{
  x + 248
}

function {:inline true} {:fieldmap "Mem_T.MoveFileEvent__FCB"} {:fieldname "MoveFileEvent"} MoveFileEvent__FCB(x: int) : int
{
  x + 616
}

function {:inline true} {:fieldmap "Mem_T.MustBeZero__PACKED_LFN_DIRENT"} {:fieldname "MustBeZero"} MustBeZero__PACKED_LFN_DIRENT(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.Name1__PACKED_LFN_DIRENT"} {:fieldname "Name1"} Name1__PACKED_LFN_DIRENT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Name2__PACKED_LFN_DIRENT"} {:fieldname "Name2"} Name2__PACKED_LFN_DIRENT(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Name3__PACKED_LFN_DIRENT"} {:fieldname "Name3"} Name3__PACKED_LFN_DIRENT(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T._FILE_NAME_INFORMATION"} {:fieldname "NameInformation"} NameInformation__FILE_ALL_INFORMATION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.Name__FILE_NAME_NODE"} {:fieldname "Name"} Name__FILE_NAME_NODE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NeedEaCount__EA_SET_HEADER"} {:fieldname "NeedEaCount"} NeedEaCount__EA_SET_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NextEntryOffset__FILE_FULL_EA_INFORMATION"} {:fieldname "NextEntryOffset"} NextEntryOffset__FILE_FULL_EA_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NextFreeCluster__FSINFO_SECTOR"} {:fieldname "NextFreeCluster"} NextFreeCluster__FSINFO_SECTOR(x: int) : int
{
  x + 1932
}

function {:inline true} {:fieldmap "Mem_T.NextVcn_unnamed_tag_73"} {:fieldname "NextVcn"} NextVcn_unnamed_tag_73(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__MDL"} {:fieldname "Next"} Next__MDL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__REPINNED_BCBS"} {:fieldname "Next"} Next__REPINNED_BCBS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeByteSize__CCB"} {:fieldname "NodeByteSize"} NodeByteSize__CCB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NodeByteSize__FAT_DATA"} {:fieldname "NodeByteSize"} NodeByteSize__FAT_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NodeByteSize__FSRTL_COMMON_FCB_HEADER"} {:fieldname "NodeByteSize"} NodeByteSize__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NodeByteSize__IRP_CONTEXT"} {:fieldname "NodeByteSize"} NodeByteSize__IRP_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NodeTypeCode__CCB"} {:fieldname "NodeTypeCode"} NodeTypeCode__CCB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeTypeCode__FAT_DATA"} {:fieldname "NodeTypeCode"} NodeTypeCode__FAT_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeTypeCode__FSRTL_COMMON_FCB_HEADER"} {:fieldname "NodeTypeCode"} NodeTypeCode__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeTypeCode__IRP_CONTEXT"} {:fieldname "NodeTypeCode"} NodeTypeCode__IRP_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NonCachedDiskReads__FAT_STATISTICS"} {:fieldname "NonCachedDiskReads"} NonCachedDiskReads__FAT_STATISTICS(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.NonCachedDiskWrites__FAT_STATISTICS"} {:fieldname "NonCachedDiskWrites"} NonCachedDiskWrites__FAT_STATISTICS(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.NonCachedReadBytes__FAT_STATISTICS"} {:fieldname "NonCachedReadBytes"} NonCachedReadBytes__FAT_STATISTICS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.NonCachedReads__FAT_STATISTICS"} {:fieldname "NonCachedReads"} NonCachedReads__FAT_STATISTICS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.NonCachedUncleanCount__FCB"} {:fieldname "NonCachedUncleanCount"} NonCachedUncleanCount__FCB(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.NonCachedWriteBytes__FAT_STATISTICS"} {:fieldname "NonCachedWriteBytes"} NonCachedWriteBytes__FAT_STATISTICS(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.NonCachedWrites__FAT_STATISTICS"} {:fieldname "NonCachedWrites"} NonCachedWrites__FAT_STATISTICS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.NonPagedFcb_unnamed_tag_64"} {:fieldname "NonPagedFcb"} NonPagedFcb_unnamed_tag_64(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.NonPaged__FCB"} {:fieldname "NonPaged"} NonPaged__FCB(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.NotifyDirectory_unnamed_tag_8"} {:fieldname "NotifyDirectory"} NotifyDirectory_unnamed_tag_8(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.NtByte__PACKED_DIRENT"} {:fieldname "NtByte"} NtByte__PACKED_DIRENT(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.NumberOfClusters_unnamed_tag_65"} {:fieldname "NumberOfClusters"} NumberOfClusters_unnamed_tag_65(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "NumberOfFreeClusters"} NumberOfFreeClusters_unnamed_tag_65(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.NumberOfLinks__FILE_STANDARD_INFORMATION"} {:fieldname "NumberOfLinks"} NumberOfLinks__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.NumberOfWindows__VCB"} {:fieldname "NumberOfWindows"} NumberOfWindows__VCB(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.OemQueryTemplate__CCB"} {:fieldname "OemQueryTemplate"} OemQueryTemplate__CCB(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._STRING"} {:fieldname "Oem"} Oem_unnamed_tag_70(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._FILE_NAME_NODE"} {:fieldname "Oem"} Oem_unnamed_tag_71(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Offset__IO_RUNS"} {:fieldname "Offset"} Offset__IO_RUNS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Offset_unnamed_tag_30"} {:fieldname "Offset"} Offset_unnamed_tag_30(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.OpenCount__FCB"} {:fieldname "OpenCount"} OpenCount__FCB(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.OpenFileCount__VCB"} {:fieldname "OpenFileCount"} OpenFileCount__VCB(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Oplock"} Oplock_unnamed_tag_69(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Options_unnamed_tag_9"} {:fieldname "Options"} Options_unnamed_tag_9(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Ordinal__PACKED_LFN_DIRENT"} {:fieldname "Ordinal"} Ordinal__PACKED_LFN_DIRENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OriginalDesiredAccess__ACCESS_STATE"} {:fieldname "OriginalDesiredAccess"} OriginalDesiredAccess__ACCESS_STATE(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.OriginatingIrp__IRP_CONTEXT"} {:fieldname "OriginatingIrp"} OriginatingIrp__IRP_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.OurProcess__FAT_DATA"} {:fieldname "OurProcess"} OurProcess__FAT_DATA(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_18"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_18(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_20"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OutstandingAsyncEvent__NON_PAGED_FCB"} {:fieldname "OutstandingAsyncEvent"} OutstandingAsyncEvent__NON_PAGED_FCB(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.OutstandingAsyncWrites__NON_PAGED_FCB"} {:fieldname "OutstandingAsyncWrites"} OutstandingAsyncWrites__NON_PAGED_FCB(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.OverflowQueueCount__VOLUME_DEVICE_OBJECT"} {:fieldname "OverflowQueueCount"} OverflowQueueCount__VOLUME_DEVICE_OBJECT(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.OverflowQueueSpinLock__VOLUME_DEVICE_OBJECT"} {:fieldname "OverflowQueueSpinLock"} OverflowQueueSpinLock__VOLUME_DEVICE_OBJECT(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "OverflowQueue"} OverflowQueue__VOLUME_DEVICE_OBJECT(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.Overlay__IRP"} {:fieldname "Overlay"} Overlay__IRP(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_6"} {:fieldname "Overlay"} Overlay_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OwnEaHandle__EA_SET_HEADER"} {:fieldname "OwnEaHandle"} OwnEaHandle__EA_SET_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "PackedBpb"} PackedBpb__PACKED_BOOT_SECTOR(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "PackedEas"} PackedEas__EA_SET_HEADER(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.PagingIoResource__FSRTL_COMMON_FCB_HEADER"} {:fieldname "PagingIoResource"} PagingIoResource__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Parameter__WORK_QUEUE_ITEM"} {:fieldname "Parameter"} Parameter__WORK_QUEUE_ITEM(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ParentDcbLinks"} ParentDcbLinks__FCB(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ParentDcbQueue"} ParentDcbQueue_unnamed_tag_68(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ParentDcb__FCB"} {:fieldname "ParentDcb"} ParentDcb__FCB(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.Parent__RTL_SPLAY_LINKS"} {:fieldname "Parent"} Parent__RTL_SPLAY_LINKS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PartitionStyle__PARTITION_INFORMATION_EX"} {:fieldname "PartitionStyle"} PartitionStyle__PARTITION_INFORMATION_EX(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PartitionType__PARTITION_INFORMATION_MBR"} {:fieldname "PartitionType"} PartitionType__PARTITION_INFORMATION_MBR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "PinnedPage"} PinnedPage__FAT_ENUMERATION_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Pointer__IO_STATUS_BLOCK"} {:fieldname "Pointer"} Pointer__IO_STATUS_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._FILE_POSITION_INFORMATION"} {:fieldname "PositionInformation"} PositionInformation__FILE_ALL_INFORMATION(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.PostedRequestCount__VOLUME_DEVICE_OBJECT"} {:fieldname "PostedRequestCount"} PostedRequestCount__VOLUME_DEVICE_OBJECT(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T.PowerSequence_unnamed_tag_36"} {:fieldname "PowerSequence"} PowerSequence_unnamed_tag_36(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PowerSequence_unnamed_tag_8"} {:fieldname "PowerSequence"} PowerSequence_unnamed_tag_8(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.PowerState_unnamed_tag_35"} {:fieldname "PowerState"} PowerState_unnamed_tag_35(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.PrepareMdlWrite__FAST_IO_DISPATCH"} {:fieldname "PrepareMdlWrite"} PrepareMdlWrite__FAST_IO_DISPATCH(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.PreventMediaRemoval__PREVENT_MEDIA_REMOVAL"} {:fieldname "PreventMediaRemoval"} PreventMediaRemoval__PREVENT_MEDIA_REMOVAL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PreviouslyGrantedAccess__ACCESS_STATE"} {:fieldname "PreviouslyGrantedAccess"} PreviouslyGrantedAccess__ACCESS_STATE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "PrimaryToken"} PrimaryToken__SECURITY_SUBJECT_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PrivateCacheMap__FILE_OBJECT"} {:fieldname "PrivateCacheMap"} PrivateCacheMap__FILE_OBJECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PrivilegeCount__INITIAL_PRIVILEGE_SET"} {:fieldname "PrivilegeCount"} PrivilegeCount__INITIAL_PRIVILEGE_SET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Privilege__INITIAL_PRIVILEGE_SET"} {:fieldname "Privilege"} Privilege__INITIAL_PRIVILEGE_SET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ProviderId_unnamed_tag_39"} {:fieldname "ProviderId"} ProviderId_unnamed_tag_39(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PseudoTransition__SYSTEM_POWER_STATE_CONTEXT"} {:fieldname "PseudoTransition"} PseudoTransition__SYSTEM_POWER_STATE_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PushLock__FSRTL_ADVANCED_FCB_HEADER"} {:fieldname "PushLock"} PushLock__FSRTL_ADVANCED_FCB_HEADER(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__ULARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__ULARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.QueryDirectory_unnamed_tag_8"} {:fieldname "QueryDirectory"} QueryDirectory_unnamed_tag_8(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.QueryEa_unnamed_tag_8"} {:fieldname "QueryEa"} QueryEa_unnamed_tag_8(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.QueryFile_unnamed_tag_8"} {:fieldname "QueryFile"} QueryFile_unnamed_tag_8(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryInterface_unnamed_tag_8"} {:fieldname "QueryInterface"} QueryInterface_unnamed_tag_8(x: int) : int
{
  x + 292
}

function {:inline true} {:fieldmap "Mem_T.QueryQuota_unnamed_tag_8"} {:fieldname "QueryQuota"} QueryQuota_unnamed_tag_8(x: int) : int
{
  x + 268
}

function {:inline true} {:fieldmap "Mem_T.QuerySecurity_unnamed_tag_8"} {:fieldname "QuerySecurity"} QuerySecurity_unnamed_tag_8(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T.QueryVolume_unnamed_tag_8"} {:fieldname "QueryVolume"} QueryVolume_unnamed_tag_8(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.ReadAccess__FILE_OBJECT"} {:fieldname "ReadAccess"} ReadAccess__FILE_OBJECT(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ReadOnlyCount__VCB"} {:fieldname "ReadOnlyCount"} ReadOnlyCount__VCB(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.ReadWriteConfig_unnamed_tag_8"} {:fieldname "ReadWriteConfig"} ReadWriteConfig_unnamed_tag_8(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T.Read_unnamed_tag_8"} {:fieldname "Read"} Read_unnamed_tag_8(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.RealDevice__IRP_CONTEXT"} {:fieldname "RealDevice"} RealDevice__IRP_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.RealDevice__VPB"} {:fieldname "RealDevice"} RealDevice__VPB(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.ReferenceCount__VPB"} {:fieldname "ReferenceCount"} ReferenceCount__VPB(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.RelatedFileObject__FILE_OBJECT"} {:fieldname "RelatedFileObject"} RelatedFileObject__FILE_OBJECT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.ReleaseForCcFlush__FAST_IO_DISPATCH"} {:fieldname "ReleaseForCcFlush"} ReleaseForCcFlush__FAST_IO_DISPATCH(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.ReleaseFromLazyWrite__CACHE_MANAGER_CALLBACKS"} {:fieldname "ReleaseFromLazyWrite"} ReleaseFromLazyWrite__CACHE_MANAGER_CALLBACKS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ReleaseFromReadAhead__CACHE_MANAGER_CALLBACKS"} {:fieldname "ReleaseFromReadAhead"} ReleaseFromReadAhead__CACHE_MANAGER_CALLBACKS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.RemainingDesiredAccess__ACCESS_STATE"} {:fieldname "RemainingDesiredAccess"} RemainingDesiredAccess__ACCESS_STATE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._REPINNED_BCBS"} {:fieldname "Repinned"} Repinned__IRP_CONTEXT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.ReplaceIfExists_unnamed_tag_14"} {:fieldname "ReplaceIfExists"} ReplaceIfExists_unnamed_tag_14(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.RequestedByteCount_unnamed_tag_64"} {:fieldname "RequestedByteCount"} RequestedByteCount_unnamed_tag_64(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.RequestorMode__IRP"} {:fieldname "RequestorMode"} RequestorMode__IRP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__SYSTEM_POWER_STATE_CONTEXT"} {:fieldname "Reserved1"} Reserved1__SYSTEM_POWER_STATE_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Reserved2__SYSTEM_POWER_STATE_CONTEXT"} {:fieldname "Reserved2"} Reserved2__SYSTEM_POWER_STATE_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ReservedSectors_BIOS_PARAMETER_BLOCK"} {:fieldname "ReservedSectors"} ReservedSectors_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ReservedSectors__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "ReservedSectors"} ReservedSectors__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Reserved_unnamed_tag_34"} {:fieldname "Reserved"} Reserved_unnamed_tag_34(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ResidualOpenCount__VCB"} {:fieldname "ResidualOpenCount"} ResidualOpenCount__VCB(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.Resource2_unnamed_tag_64"} {:fieldname "Resource2"} Resource2_unnamed_tag_64(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ResourceThreadId_unnamed_tag_64"} {:fieldname "ResourceThreadId"} ResourceThreadId_unnamed_tag_64(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Resource__FSRTL_COMMON_FCB_HEADER"} {:fieldname "Resource"} Resource__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._ERESOURCE"} {:fieldname "Resource"} Resource__VCB(x: int) : int
{
  x + 500
}

function {:inline true} {:fieldmap "Mem_T.Resource_unnamed_tag_64"} {:fieldname "Resource"} Resource_unnamed_tag_64(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RestoreMdl_FAT_PAGING_FILE_CONTEXT"} {:fieldname "RestoreMdl"} RestoreMdl_FAT_PAGING_FILE_CONTEXT(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.RightChild__RTL_SPLAY_LINKS"} {:fieldname "RightChild"} RightChild__RTL_SPLAY_LINKS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.RootDcb__VCB"} {:fieldname "RootDcb"} RootDcb__VCB(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.RootDirFirstCluster_BIOS_PARAMETER_BLOCK"} {:fieldname "RootDirFirstCluster"} RootDirFirstCluster_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.RootDirFirstCluster__PACKED_BIOS_PARAMETER_BLOCK_EX"} {:fieldname "RootDirFirstCluster"} RootDirFirstCluster__PACKED_BIOS_PARAMETER_BLOCK_EX(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.RootDirectoryLbo_unnamed_tag_65"} {:fieldname "RootDirectoryLbo"} RootDirectoryLbo_unnamed_tag_65(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RootDirectorySize_unnamed_tag_65"} {:fieldname "RootDirectorySize"} RootDirectorySize_unnamed_tag_65(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.RootEntries_BIOS_PARAMETER_BLOCK"} {:fieldname "RootEntries"} RootEntries_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.RootEntries__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "RootEntries"} RootEntries__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.P_RTL_SPLAY_LINKS"} {:fieldname "RootOemNode"} RootOemNode_unnamed_tag_68(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.P_RTL_SPLAY_LINKS"} {:fieldname "RootUnicodeNode"} RootUnicodeNode_unnamed_tag_68(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SavedIrp__IO_RUNS"} {:fieldname "SavedIrp"} SavedIrp__IO_RUNS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Scsi_unnamed_tag_8"} {:fieldname "Scsi"} Scsi_unnamed_tag_8(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.SeWorldSid__SE_EXPORTS"} {:fieldname "SeWorldSid"} SeWorldSid__SE_EXPORTS(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.Second__TIME_FIELDS"} {:fieldname "Second"} Second__TIME_FIELDS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SectionObjectPointer__FILE_OBJECT"} {:fieldname "SectionObjectPointer"} SectionObjectPointer__FILE_OBJECT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._SECTION_OBJECT_POINTERS"} {:fieldname "SectionObjectPointers"} SectionObjectPointers__NON_PAGED_FCB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._SECTION_OBJECT_POINTERS"} {:fieldname "SectionObjectPointers"} SectionObjectPointers__VCB(x: int) : int
{
  x + 656
}

function {:inline true} {:fieldmap "Mem_T.SectorBeginSignature__FSINFO_SECTOR"} {:fieldname "SectorBeginSignature"} SectorBeginSignature__FSINFO_SECTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SectorEndSignature__FSINFO_SECTOR"} {:fieldname "SectorEndSignature"} SectorEndSignature__FSINFO_SECTOR(x: int) : int
{
  x + 1984
}

function {:inline true} {:fieldmap "Mem_T.SectorSize__DEVICE_OBJECT"} {:fieldname "SectorSize"} SectorSize__DEVICE_OBJECT(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.SectorsPerCluster_BIOS_PARAMETER_BLOCK"} {:fieldname "SectorsPerCluster"} SectorsPerCluster_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SectorsPerCluster__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "SectorsPerCluster"} SectorsPerCluster__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SectorsPerFat_BIOS_PARAMETER_BLOCK"} {:fieldname "SectorsPerFat"} SectorsPerFat_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "SectorsPerFat"} SectorsPerFat__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SectorsPerTrack_BIOS_PARAMETER_BLOCK"} {:fieldname "SectorsPerTrack"} SectorsPerTrack_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SectorsPerTrack__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "SectorsPerTrack"} SectorsPerTrack__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.Sectors_BIOS_PARAMETER_BLOCK"} {:fieldname "Sectors"} Sectors_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Sectors__PACKED_BIOS_PARAMETER_BLOCK"} {:fieldname "Sectors"} Sectors__PACKED_BIOS_PARAMETER_BLOCK(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SecurityContext_unnamed_tag_9"} {:fieldname "SecurityContext"} SecurityContext_unnamed_tag_9(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SecurityDescriptor_unnamed_tag_22"} {:fieldname "SecurityDescriptor"} SecurityDescriptor_unnamed_tag_22(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SecurityInformation_unnamed_tag_21"} {:fieldname "SecurityInformation"} SecurityInformation_unnamed_tag_21(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SecurityInformation_unnamed_tag_22"} {:fieldname "SecurityInformation"} SecurityInformation_unnamed_tag_22(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SerialNumber__VPB"} {:fieldname "SerialNumber"} SerialNumber__VPB(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.SetEa_unnamed_tag_8"} {:fieldname "SetEa"} SetEa_unnamed_tag_8(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.SetFile_unnamed_tag_8"} {:fieldname "SetFile"} SetFile_unnamed_tag_8(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.SetLock_unnamed_tag_8"} {:fieldname "SetLock"} SetLock_unnamed_tag_8(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.SetQuota_unnamed_tag_8"} {:fieldname "SetQuota"} SetQuota_unnamed_tag_8(x: int) : int
{
  x + 284
}

function {:inline true} {:fieldmap "Mem_T.SetSecurity_unnamed_tag_8"} {:fieldname "SetSecurity"} SetSecurity_unnamed_tag_8(x: int) : int
{
  x + 240
}

function {:inline true} {:fieldmap "Mem_T.SetVolume_unnamed_tag_8"} {:fieldname "SetVolume"} SetVolume_unnamed_tag_8(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T._SHARE_ACCESS"} {:fieldname "ShareAccess"} ShareAccess__FCB(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T._SHARE_ACCESS"} {:fieldname "ShareAccess"} ShareAccess__VCB(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.ShareAccess_unnamed_tag_9"} {:fieldname "ShareAccess"} ShareAccess_unnamed_tag_9(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SharedCacheMap__SECTION_OBJECT_POINTERS"} {:fieldname "SharedCacheMap"} SharedCacheMap__SECTION_OBJECT_POINTERS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._FILE_NAME_NODE"} {:fieldname "ShortName"} ShortName__FCB(x: int) : int
{
  x + 452
}

function {:inline true} {:fieldmap "Mem_T.ShutdownStarted__FAT_DATA"} {:fieldname "ShutdownStarted"} ShutdownStarted__FAT_DATA(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.ShutdownType_unnamed_tag_37"} {:fieldname "ShutdownType"} ShutdownType_unnamed_tag_37(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.SidListLength_unnamed_tag_25"} {:fieldname "SidListLength"} SidListLength_unnamed_tag_25(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SidList_unnamed_tag_25"} {:fieldname "SidList"} SidList_unnamed_tag_25(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Sid__SID_AND_ATTRIBUTES"} {:fieldname "Sid"} Sid__SID_AND_ATTRIBUTES(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Signature__DRIVE_LAYOUT_INFORMATION_MBR"} {:fieldname "Signature"} Signature__DRIVE_LAYOUT_INFORMATION_MBR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SizeOfBitMap__RTL_BITMAP"} {:fieldname "SizeOfBitMap"} SizeOfBitMap__RTL_BITMAP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SizeOfCompleteStructure__FILESYSTEM_STATISTICS"} {:fieldname "SizeOfCompleteStructure"} SizeOfCompleteStructure__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SizeOfFastIoDispatch__FAST_IO_DISPATCH"} {:fieldname "SizeOfFastIoDispatch"} SizeOfFastIoDispatch__FAST_IO_DISPATCH(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Size__DEVICE_OBJECT"} {:fieldname "Size"} Size__DEVICE_OBJECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Size__VPB"} {:fieldname "Size"} Size__VPB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size_unnamed_tag_27"} {:fieldname "Size"} Size_unnamed_tag_27(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Specific__FCB"} {:fieldname "Specific"} Specific__FCB(x: int) : int
{
  x + 284
}

function {:inline true} {:fieldmap "Mem_T.Srb_unnamed_tag_24"} {:fieldname "Srb"} Srb_unnamed_tag_24(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._FILE_STANDARD_INFORMATION"} {:fieldname "StandardInformation"} StandardInformation__FILE_ALL_INFORMATION(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.StartDevice_unnamed_tag_8"} {:fieldname "StartDevice"} StartDevice_unnamed_tag_8(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.StartSid_unnamed_tag_25"} {:fieldname "StartSid"} StartSid_unnamed_tag_25(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.StartingLcn_MOVE_FILE_DATA"} {:fieldname "StartingLcn"} StartingLcn_MOVE_FILE_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.StartingLcn_STARTING_LCN_INPUT_BUFFER"} {:fieldname "StartingLcn"} StartingLcn_STARTING_LCN_INPUT_BUFFER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StartingVbo__EA_RANGE"} {:fieldname "StartingVbo"} StartingVbo__EA_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.StartingVcn_MOVE_FILE_DATA"} {:fieldname "StartingVcn"} StartingVcn_MOVE_FILE_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.StartingVcn_RETRIEVAL_POINTERS_BUFFER"} {:fieldname "StartingVcn"} StartingVcn_RETRIEVAL_POINTERS_BUFFER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.StartingVcn_STARTING_VCN_INPUT_BUFFER"} {:fieldname "StartingVcn"} StartingVcn_STARTING_VCN_INPUT_BUFFER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_37"} {:fieldname "State"} State_unnamed_tag_37(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Statistics__VCB"} {:fieldname "Statistics"} Statistics__VCB(x: int) : int
{
  x + 1064
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SubjectSecurityContext__ACCESS_STATE"} {:fieldname "SubjectSecurityContext"} SubjectSecurityContext__ACCESS_STATE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SuccessfulCreates__FAT_STATISTICS"} {:fieldname "SuccessfulCreates"} SuccessfulCreates__FAT_STATISTICS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SwapVpb__VCB"} {:fieldname "SwapVpb"} SwapVpb__VCB(x: int) : int
{
  x + 1228
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "SyncEvent"} SyncEvent_unnamed_tag_63(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_3"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemContext_unnamed_tag_37"} {:fieldname "SystemContext"} SystemContext_unnamed_tag_37(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerStateContext_unnamed_tag_37"} {:fieldname "SystemPowerStateContext"} SystemPowerStateContext_unnamed_tag_37(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TargetDeviceObject__VCB"} {:fieldname "TargetDeviceObject"} TargetDeviceObject__VCB(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.TargetSystemState__SYSTEM_POWER_STATE_CONTEXT"} {:fieldname "TargetSystemState"} TargetSystemState__SYSTEM_POWER_STATE_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Thread_unnamed_tag_7"} {:fieldname "Thread"} Thread_unnamed_tag_7(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Time__FAT_TIME_STAMP"} {:fieldname "Time"} Time__FAT_TIME_STAMP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TrackData__CDROM_TOC"} {:fieldname "TrackData"} TrackData__CDROM_TOC(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Type3InputBuffer_unnamed_tag_18"} {:fieldname "Type3InputBuffer"} Type3InputBuffer_unnamed_tag_18(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Type3InputBuffer_unnamed_tag_20"} {:fieldname "Type3InputBuffer"} Type3InputBuffer_unnamed_tag_20(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.TypeOfOpen_CLOSE_CONTEXT"} {:fieldname "TypeOfOpen"} TypeOfOpen_CLOSE_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Type__PACKED_LFN_DIRENT"} {:fieldname "Type"} Type__PACKED_LFN_DIRENT(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_26"} {:fieldname "Type"} Type_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_34"} {:fieldname "Type"} Type_unnamed_tag_34(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_37"} {:fieldname "Type"} Type_unnamed_tag_37(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Uchar__UCHAR2"} {:fieldname "Uchar"} Uchar__UCHAR2(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Uchar__UCHAR4"} {:fieldname "Uchar"} Uchar__UCHAR4(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.UncleanCount__FCB"} {:fieldname "UncleanCount"} UncleanCount__FCB(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.UnicodeQueryTemplate__CCB"} {:fieldname "UnicodeQueryTemplate"} UnicodeQueryTemplate__CCB(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "Unicode"} Unicode_unnamed_tag_70(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._FILE_NAME_NODE"} {:fieldname "Unicode"} Unicode_unnamed_tag_71(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.UnusedDirentVbo_unnamed_tag_68"} {:fieldname "UnusedDirentVbo"} UnusedDirentVbo_unnamed_tag_68(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.UsageNotification_unnamed_tag_8"} {:fieldname "UsageNotification"} UsageNotification_unnamed_tag_8(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.UserBuffer__IRP"} {:fieldname "UserBuffer"} UserBuffer__IRP(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.UserDiskReads__FILESYSTEM_STATISTICS"} {:fieldname "UserDiskReads"} UserDiskReads__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.UserDiskWrites__FILESYSTEM_STATISTICS"} {:fieldname "UserDiskWrites"} UserDiskWrites__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UserFileReadBytes__FILESYSTEM_STATISTICS"} {:fieldname "UserFileReadBytes"} UserFileReadBytes__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.UserFileReads__FILESYSTEM_STATISTICS"} {:fieldname "UserFileReads"} UserFileReads__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UserFileWriteBytes__FILESYSTEM_STATISTICS"} {:fieldname "UserFileWriteBytes"} UserFileWriteBytes__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UserFileWrites__FILESYSTEM_STATISTICS"} {:fieldname "UserFileWrites"} UserFileWrites__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ValidDataLength__CC_FILE_SIZES"} {:fieldname "ValidDataLength"} ValidDataLength__CC_FILE_SIZES(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.ValidDataLength__FSRTL_COMMON_FCB_HEADER"} {:fieldname "ValidDataLength"} ValidDataLength__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.ValidDataToDisk__FCB"} {:fieldname "ValidDataToDisk"} ValidDataToDisk__FCB(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T.VboOfPinnedPage__FAT_ENUMERATION_CONTEXT"} {:fieldname "VboOfPinnedPage"} VboOfPinnedPage__FAT_ENUMERATION_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Vbo__IO_RUNS"} {:fieldname "Vbo"} Vbo__IO_RUNS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.VcbCondition__VCB"} {:fieldname "VcbCondition"} VcbCondition__VCB(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "VcbLinks"} VcbLinks_CLOSE_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "VcbLinks"} VcbLinks__VCB(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "VcbQueue"} VcbQueue__FAT_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.VcbState__VCB"} {:fieldname "VcbState"} VcbState__VCB(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.Vcb_CLOSE_CONTEXT"} {:fieldname "Vcb"} Vcb_CLOSE_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Vcb__FCB"} {:fieldname "Vcb"} Vcb__FCB(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.Vcb__IRP_CONTEXT"} {:fieldname "Vcb"} Vcb__IRP_CONTEXT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._VCB"} {:fieldname "Vcb"} Vcb__VOLUME_DEVICE_OBJECT(x: int) : int
{
  x + 436
}

function {:inline true} {:fieldmap "Mem_T.VerifyThread__VCB"} {:fieldname "VerifyThread"} VerifyThread__VCB(x: int) : int
{
  x + 840
}

function {:inline true} {:fieldmap "Mem_T.VerifyVolume_unnamed_tag_8"} {:fieldname "VerifyVolume"} VerifyVolume_unnamed_tag_8(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T.Version__FILESYSTEM_STATISTICS"} {:fieldname "Version"} Version__FILESYSTEM_STATISTICS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Version__FSRTL_COMMON_FCB_HEADER"} {:fieldname "Version"} Version__FSRTL_COMMON_FCB_HEADER(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Version_unnamed_tag_27"} {:fieldname "Version"} Version_unnamed_tag_27(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.VirtualEaFile__VCB"} {:fieldname "VirtualEaFile"} VirtualEaFile__VCB(x: int) : int
{
  x + 676
}

function {:inline true} {:fieldmap "Mem_T.VirtualVolumeFile__VCB"} {:fieldname "VirtualVolumeFile"} VirtualVolumeFile__VCB(x: int) : int
{
  x + 652
}

function {:inline true} {:fieldmap "Mem_T._FSRTL_ADVANCED_FCB_HEADER"} {:fieldname "VolumeFileHeader"} VolumeFileHeader__VCB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.VolumeLabelLength__VPB"} {:fieldname "VolumeLabelLength"} VolumeLabelLength__VPB(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.VolumeLabel__VPB"} {:fieldname "VolumeLabel"} VolumeLabel__VPB(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Vpb__DEVICE_OBJECT"} {:fieldname "Vpb"} Vpb__DEVICE_OBJECT(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Vpb__FILE_OBJECT"} {:fieldname "Vpb"} Vpb__FILE_OBJECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Vpb__VCB"} {:fieldname "Vpb"} Vpb__VCB(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.P_VPB"} {:fieldname "Vpb"} Vpb_unnamed_tag_23(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WMI_unnamed_tag_8"} {:fieldname "WMI"} WMI_unnamed_tag_8(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.WaitWake_unnamed_tag_8"} {:fieldname "WaitWake"} WaitWake_unnamed_tag_8(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T.Wait__FAT_IO_CONTEXT"} {:fieldname "Wait"} Wait__FAT_IO_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.WhichSpace_unnamed_tag_30"} {:fieldname "WhichSpace"} WhichSpace_unnamed_tag_30(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Wild_unnamed_tag_72"} {:fieldname "Wild"} Wild_unnamed_tag_72(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Windows__VCB"} {:fieldname "Windows"} Windows__VCB(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.WorkItem__IO_WORKITEM"} {:fieldname "WorkItem"} WorkItem__IO_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WorkQueueItem__IRP_CONTEXT"} {:fieldname "WorkQueueItem"} WorkQueueItem__IRP_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.WorkerRoutine__WORK_QUEUE_ITEM"} {:fieldname "WorkerRoutine"} WorkerRoutine__WORK_QUEUE_ITEM(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.WriteAccess__FILE_OBJECT"} {:fieldname "WriteAccess"} WriteAccess__FILE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheEnableOverride__STORAGE_HOTPLUG_INFO"} {:fieldname "WriteCacheEnableOverride"} WriteCacheEnableOverride__STORAGE_HOTPLUG_INFO(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Write_unnamed_tag_8"} {:fieldname "Write"} Write_unnamed_tag_8(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Year__FAT_DATE"} {:fieldname "Year"} Year__FAT_DATE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Year__TIME_FIELDS"} {:fieldname "Year"} Year__TIME_FIELDS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ZeroMdl__FAT_IO_CONTEXT"} {:fieldname "ZeroMdl"} ZeroMdl__FAT_IO_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "cbList"} cbList__EA_SET_HEADER(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

const {:string ""} unique strConst__li2bpl1: int;

const {:string ".          "} unique strConst__li2bpl14: int;

const {:string "..         "} unique strConst__li2bpl15: int;

const {:string "EA DATA  SF"} unique strConst__li2bpl11: int;

const {:string "EA DATA. SF"} unique strConst__li2bpl16: int;

const {:string "FUJITSU FMR-"} unique strConst__li2bpl10: int;

const {:string "FatDisableCodePageInvariance"} unique strConst__li2bpl6: int;

const {:string "Identifier"} unique strConst__li2bpl9: int;

const {:string "Warning: Driver may have queued the IRP without marking it as pending inside the locked state."} unique strConst__li2bpl13: int;

const {:string "Win31FileSystem"} unique strConst__li2bpl7: int;

const {:string "\\"} unique strConst__li2bpl0: int;

const {:string "\\Fat"} unique strConst__li2bpl4: int;

const {:string "\\FatCdrom"} unique strConst__li2bpl5: int;

const {:string "\\Registry\\Machine\\Hardware\\DESCRIPTION\\System"} unique strConst__li2bpl8: int;

const {:string "\\Registry\\Machine\\System\\CurrentControlSet\\Control\\FileSystem"} unique strConst__li2bpl3: int;

const {:string "callee"} unique strConst__li2bpl2: int;

const {:string "halt"} unique strConst__li2bpl12: int;

const {:allocated} li2bplFunctionConstant166: int;

axiom li2bplFunctionConstant166 == 166;

const {:allocated} li2bplFunctionConstant167: int;

axiom li2bplFunctionConstant167 == 167;

const {:allocated} li2bplFunctionConstant225: int;

axiom li2bplFunctionConstant225 == 225;

const {:allocated} li2bplFunctionConstant226: int;

axiom li2bplFunctionConstant226 == 226;

const {:allocated} li2bplFunctionConstant227: int;

axiom li2bplFunctionConstant227 == 227;

const {:allocated} li2bplFunctionConstant228: int;

axiom li2bplFunctionConstant228 == 228;

const {:allocated} li2bplFunctionConstant241: int;

axiom li2bplFunctionConstant241 == 241;

const {:allocated} li2bplFunctionConstant242: int;

axiom li2bplFunctionConstant242 == 242;

const {:allocated} li2bplFunctionConstant243: int;

axiom li2bplFunctionConstant243 == 243;

const {:allocated} li2bplFunctionConstant244: int;

axiom li2bplFunctionConstant244 == 244;

const {:allocated} li2bplFunctionConstant245: int;

axiom li2bplFunctionConstant245 == 245;

const {:allocated} li2bplFunctionConstant246: int;

axiom li2bplFunctionConstant246 == 246;

const {:allocated} li2bplFunctionConstant247: int;

axiom li2bplFunctionConstant247 == 247;

const {:allocated} li2bplFunctionConstant248: int;

axiom li2bplFunctionConstant248 == 248;

const {:allocated} li2bplFunctionConstant249: int;

axiom li2bplFunctionConstant249 == 249;

const {:allocated} li2bplFunctionConstant250: int;

axiom li2bplFunctionConstant250 == 250;

const {:allocated} li2bplFunctionConstant251: int;

axiom li2bplFunctionConstant251 == 251;

const {:allocated} li2bplFunctionConstant252: int;

axiom li2bplFunctionConstant252 == 252;

const {:allocated} li2bplFunctionConstant253: int;

axiom li2bplFunctionConstant253 == 253;

const {:allocated} li2bplFunctionConstant254: int;

axiom li2bplFunctionConstant254 == 254;

const {:allocated} li2bplFunctionConstant255: int;

axiom li2bplFunctionConstant255 == 255;

const {:allocated} li2bplFunctionConstant256: int;

axiom li2bplFunctionConstant256 == 256;

const {:allocated} li2bplFunctionConstant257: int;

axiom li2bplFunctionConstant257 == 257;

const {:allocated} li2bplFunctionConstant258: int;

axiom li2bplFunctionConstant258 == 258;

const {:allocated} li2bplFunctionConstant259: int;

axiom li2bplFunctionConstant259 == 259;

const {:allocated} li2bplFunctionConstant260: int;

axiom li2bplFunctionConstant260 == 260;

const {:allocated} li2bplFunctionConstant261: int;

axiom li2bplFunctionConstant261 == 261;

const {:allocated} li2bplFunctionConstant262: int;

axiom li2bplFunctionConstant262 == 262;

const {:allocated} li2bplFunctionConstant263: int;

axiom li2bplFunctionConstant263 == 263;

const {:allocated} li2bplFunctionConstant264: int;

axiom li2bplFunctionConstant264 == 264;

const {:allocated} li2bplFunctionConstant265: int;

axiom li2bplFunctionConstant265 == 265;

const {:allocated} li2bplFunctionConstant266: int;

axiom li2bplFunctionConstant266 == 266;

const {:allocated} li2bplFunctionConstant267: int;

axiom li2bplFunctionConstant267 == 267;

const {:allocated} li2bplFunctionConstant268: int;

axiom li2bplFunctionConstant268 == 268;

const {:allocated} li2bplFunctionConstant269: int;

axiom li2bplFunctionConstant269 == 269;

const {:allocated} li2bplFunctionConstant270: int;

axiom li2bplFunctionConstant270 == 270;

const {:allocated} li2bplFunctionConstant271: int;

axiom li2bplFunctionConstant271 == 271;

const {:allocated} li2bplFunctionConstant272: int;

axiom li2bplFunctionConstant272 == 272;

const {:allocated} li2bplFunctionConstant273: int;

axiom li2bplFunctionConstant273 == 273;

const {:allocated} li2bplFunctionConstant274: int;

axiom li2bplFunctionConstant274 == 274;

const {:allocated} li2bplFunctionConstant275: int;

axiom li2bplFunctionConstant275 == 275;

const {:allocated} li2bplFunctionConstant332: int;

axiom li2bplFunctionConstant332 == 332;

const {:allocated} li2bplFunctionConstant338: int;

axiom li2bplFunctionConstant338 == 338;

const {:allocated} li2bplFunctionConstant397: int;

axiom li2bplFunctionConstant397 == 397;

const {:allocated} li2bplFunctionConstant466: int;

axiom li2bplFunctionConstant466 == 466;

const {:allocated} li2bplFunctionConstant532: int;

axiom li2bplFunctionConstant532 == 532;

const {:allocated} li2bplFunctionConstant600: int;

axiom li2bplFunctionConstant600 == 600;

const {:allocated} li2bplFunctionConstant662: int;

axiom li2bplFunctionConstant662 == 662;

const {:allocated} li2bplFunctionConstant674: int;

axiom li2bplFunctionConstant674 == 674;

const {:allocated} li2bplFunctionConstant714: int;

axiom li2bplFunctionConstant714 == 714;

const {:allocated} li2bplFunctionConstant726: int;

axiom li2bplFunctionConstant726 == 726;

const {:allocated} li2bplFunctionConstant727: int;

axiom li2bplFunctionConstant727 == 727;

const {:allocated} li2bplFunctionConstant731: int;

axiom li2bplFunctionConstant731 == 731;

const {:allocated} li2bplFunctionConstant732: int;

axiom li2bplFunctionConstant732 == 732;

const {:allocated} li2bplFunctionConstant734: int;

axiom li2bplFunctionConstant734 == 734;

const {:allocated} li2bplFunctionConstant735: int;

axiom li2bplFunctionConstant735 == 735;

const {:allocated} li2bplFunctionConstant739: int;

axiom li2bplFunctionConstant739 == 739;

const {:allocated} li2bplFunctionConstant835: int;

axiom li2bplFunctionConstant835 == 835;

const {:allocated} li2bplFunctionConstant837: int;

axiom li2bplFunctionConstant837 == 837;

const {:allocated} li2bplFunctionConstant840: int;

axiom li2bplFunctionConstant840 == 840;

implementation {:origName "SdvExit"} {:osmodel} SdvExit#0()
{
  var vslice_dummy_var_558: int;

  anon0:
    call {:si_unique_call 4018} vslice_dummy_var_558 := __HAVOC_malloc(4);
    assume false;
    assume false;
    return;
}



procedure {:origName "SdvExit"} {:osmodel} SdvExit#0();
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "SdvExit"} {:osmodel} SdvExit#1()
{
  var vslice_dummy_var_559: int;

  anon0:
    call {:si_unique_call 4019} vslice_dummy_var_559 := __HAVOC_malloc(4);
    assume false;
    call {:si_unique_call 4020} SdvExit#0();
    return;
}



procedure {:origName "SdvExit"} {:osmodel} SdvExit#1();
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetFatEntry"} FatSetFatEntry#0(actual_IrpContext_24: int, actual_Vcb_17: int, actual_FatIndex_1: int, actual_FatEntry_2: int)
{
  var {:pointer} Tmp_270: int;
  var {:pointer} Tmp_271: int;
  var {:scalar} Tmp_272: int;
  var {:scalar} RegularOperation: int;
  var {:pointer} PinnedFatEntry: int;
  var {:pointer} Tmp_273: int;
  var {:pointer} Tmp_274: int;
  var {:pointer} Tmp_275: int;
  var {:scalar} OffsetIntoVolumeFile: int;
  var {:scalar} Lbo_3: int;
  var {:pointer} Tmp_276: int;
  var {:scalar} Tmp_278: int;
  var {:pointer} Tmp_279: int;
  var {:pointer} PinnedFat: int;
  var {:scalar} WasWait: int;
  var {:scalar} Tmp_282: int;
  var {:scalar} CleaningOperation: int;
  var {:pointer} Tmp_283: int;
  var {:pointer} Tmp_284: int;
  var {:pointer} Tmp_285: int;
  var {:pointer} Bcb_1: int;
  var {:pointer} Tmp_286: int;
  var {:scalar} Tmp_287: int;
  var {:pointer} Tmp_288: int;
  var {:scalar} Tmp_289: int;
  var {:scalar} Tmp_290: int;
  var {:pointer} PinnedFatEntry32: int;
  var {:scalar} Tmp_291: int;
  var {:scalar} Tmp_292: int;
  var {:scalar} SectorSize: int;
  var {:scalar} Tmp_293: int;
  var {:pointer} Tmp_294: int;
  var {:pointer} Tmp_295: int;
  var {:dopa} {:scalar} TmpFatEntry: int;
  var {:pointer} Tmp_296: int;
  var {:scalar} Tmp_297: int;
  var {:pointer} Tmp_298: int;
  var {:scalar} ReleaseMutex: int;
  var {:pointer} IrpContext_24: int;
  var {:pointer} Vcb_17: int;
  var {:scalar} FatIndex_1: int;
  var {:scalar} FatEntry_2: int;
  var vslice_dummy_var_560: int;
  var vslice_dummy_var_561: int;
  var vslice_dummy_var_562: int;
  var vslice_dummy_var_563: int;
  var vslice_dummy_var_564: int;
  var vslice_dummy_var_565: int;

  anon0:
    call {:si_unique_call 4021} PinnedFatEntry := __HAVOC_malloc(4);
    call {:si_unique_call 4022} vslice_dummy_var_560 := __HAVOC_malloc(4);
    call {:si_unique_call 4023} PinnedFat := __HAVOC_malloc(4);
    call {:si_unique_call 4024} Bcb_1 := __HAVOC_malloc(4);
    call {:si_unique_call 4025} vslice_dummy_var_561 := __HAVOC_malloc(12);
    call {:si_unique_call 4026} PinnedFatEntry32 := __HAVOC_malloc(4);
    call {:si_unique_call 4027} TmpFatEntry := __HAVOC_malloc(4);
    IrpContext_24 := actual_IrpContext_24;
    Vcb_17 := actual_Vcb_17;
    FatIndex_1 := actual_FatIndex_1;
    FatEntry_2 := actual_FatEntry_2;
    assume {:nonnull} Bcb_1 != 0;
    assume Bcb_1 > 0;
    WasWait := 1;
    RegularOperation := 1;
    CleaningOperation := 0;
    ReleaseMutex := 0;
    call {:si_unique_call 4028} sdv_do_paged_code_check();
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} FatIndex_1 == 1;
    RegularOperation := 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} FatEntry_2 != -268435456;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} FatEntry_2 == -268435455;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    FatEntry_2 := -1;
    goto L31;

  L31:
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    havoc WasWait;
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    goto L33;

  L33:
    call {:si_unique_call 4029} SectorSize := corral_nondet();
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    FatEntry_2 := BAND(FatEntry_2, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048));
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_283 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_298 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    havoc OffsetIntoVolumeFile;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_279 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_279 != 0;
    assume Tmp_279 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_271 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_296 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_271 != 0;
    assume Tmp_271 > 0;
    assume {:nonnull} Tmp_296 != 0;
    assume Tmp_296 > 0;
    havoc Tmp_292;
    goto L42;

  L42:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_295 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_285 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_285 != 0;
    assume Tmp_285 > 0;
    assume {:nonnull} Tmp_295 != 0;
    assume Tmp_295 > 0;
    havoc Tmp_278;
    call {:si_unique_call 4030} FatPrepareWriteVolumeFile#0(IrpContext_24, Vcb_17, Tmp_278, Tmp_292, Bcb_1, PinnedFat, RegularOperation, 0);
    Lbo_3 := BAND(OffsetIntoVolumeFile, BNOT(SectorSize - 1));
    Tmp_291 := Lbo_3;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    call {:si_unique_call 4031} vslice_dummy_var_562 := FatAddMcbEntry(Vcb_17, DirtyFatMcb__VCB(Vcb_17), Tmp_291, Lbo_3, SectorSize);
    Tmp_282 := BAND(OffsetIntoVolumeFile, SectorSize - 1);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Tmp_282 == SectorSize - 1;
    Lbo_3 := Lbo_3 + SectorSize;
    Tmp_290 := Lbo_3;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    call {:si_unique_call 4032} vslice_dummy_var_563 := FatAddMcbEntry(Vcb_17, DirtyFatMcb__VCB(Vcb_17), Tmp_290, Lbo_3, SectorSize);
    goto L77;

  L77:
    call {:si_unique_call 4033} ExAcquireFastMutexUnsafe(0);
    ReleaseMutex := 1;
    assume {:nonnull} PinnedFat != 0;
    assume PinnedFat > 0;
    havoc Tmp_275;
    assume {:nonnull} TmpFatEntry != 0;
    assume TmpFatEntry > 0;
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(FatIndex_1, 1) != 0;
    assume {:nonnull} TmpFatEntry != 0;
    assume TmpFatEntry > 0;
    call {:si_unique_call 4034} Tmp_297 := corral_nondet();
    goto L92;

  L92:
    assume {:nonnull} TmpFatEntry != 0;
    assume TmpFatEntry > 0;
    assume {:nonnull} PinnedFat != 0;
    assume PinnedFat > 0;
    havoc Tmp_274;
    Tmp_273 := TmpFatEntry;
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} Tmp_274 != 0;
    assume Tmp_274 > 0;
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} Tmp_274 != 0;
    assume Tmp_274 > 0;
    call {:si_unique_call 4035} ExReleaseFastMutexUnsafe(0);
    ReleaseMutex := 0;
    goto L98;

  L98:
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} WasWait != 0;
    goto L101;

  L101:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} ReleaseMutex != 0;
    call {:si_unique_call 4036} ExReleaseFastMutexUnsafe(0);
    goto L102;

  L102:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} CleaningOperation != 0;
    assume {:nonnull} Bcb_1 != 0;
    assume Bcb_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L1;

  L1:
    return;

  anon44_Then:
    goto L106;

  L106:
    assume {:nonnull} Bcb_1 != 0;
    assume Bcb_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Bcb_1 != 0;
    assume Bcb_1 > 0;
    goto L1;

  anon43_Then:
    goto L1;

  anon42_Then:
    assume {:partition} CleaningOperation == 0;
    goto L106;

  anon41_Then:
    assume {:partition} ReleaseMutex == 0;
    goto L102;

  anon54_Then:
    assume {:partition} WasWait == 0;
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    goto L101;

  anon53_Then:
    assume {:partition} BAND(FatIndex_1, 1) == 0;
    assume {:nonnull} TmpFatEntry != 0;
    assume TmpFatEntry > 0;
    havoc Tmp_272;
    Tmp_297 := BOR(FatEntry_2, Tmp_272);
    goto L92;

  anon52_Then:
    assume {:partition} Tmp_282 != SectorSize - 1;
    goto L77;

  anon51_Then:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_284 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_270 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_270 != 0;
    assume Tmp_270 > 0;
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    havoc Tmp_292;
    goto L42;

  anon50_Then:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_286 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_294 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_286 != 0;
    assume Tmp_286 > 0;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    havoc OffsetIntoVolumeFile;
    call {:si_unique_call 4037} FatPrepareWriteVolumeFile#0(IrpContext_24, Vcb_17, OffsetIntoVolumeFile, 2, Bcb_1, PinnedFatEntry, RegularOperation, 0);
    Lbo_3 := BAND(OffsetIntoVolumeFile, BNOT(SectorSize - 1));
    Tmp_287 := Lbo_3;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    call {:si_unique_call 4038} vslice_dummy_var_565 := FatAddMcbEntry(Vcb_17, DirtyFatMcb__VCB(Vcb_17), Tmp_287, Lbo_3, SectorSize);
    assume {:nonnull} PinnedFatEntry != 0;
    assume PinnedFatEntry > 0;
    goto L98;

  anon40_Then:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_276 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_288 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_276 != 0;
    assume Tmp_276 > 0;
    assume {:nonnull} Tmp_288 != 0;
    assume Tmp_288 > 0;
    havoc OffsetIntoVolumeFile;
    call {:si_unique_call 4039} FatPrepareWriteVolumeFile#0(IrpContext_24, Vcb_17, OffsetIntoVolumeFile, 4, Bcb_1, PinnedFatEntry32, RegularOperation, 0);
    Lbo_3 := BAND(OffsetIntoVolumeFile, BNOT(SectorSize - 1));
    Tmp_293 := Lbo_3;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    call {:si_unique_call 4040} vslice_dummy_var_564 := FatAddMcbEntry(Vcb_17, DirtyFatMcb__VCB(Vcb_17), Tmp_293, Lbo_3, SectorSize);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} FatIndex_1 != 1;
    assume {:nonnull} PinnedFatEntry32 != 0;
    assume PinnedFatEntry32 > 0;
    havoc Tmp_289;
    assume {:nonnull} PinnedFatEntry32 != 0;
    assume PinnedFatEntry32 > 0;
    goto L98;

  anon45_Then:
    assume {:partition} FatIndex_1 == 1;
    assume {:nonnull} PinnedFatEntry32 != 0;
    assume PinnedFatEntry32 > 0;
    goto L98;

  anon48_Then:
    FatEntry_2 := 32767;
    goto L31;

  anon39_Then:
    FatEntry_2 := 2047;
    goto L31;

  anon47_Then:
    assume {:partition} FatEntry_2 != -268435455;
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    call {:si_unique_call 4041} ExRaiseStatus(-1073741566);
    goto L31;

  anon49_Then:
    assume {:partition} FatEntry_2 == -268435456;
    FatEntry_2 := -1;
    CleaningOperation := 1;
    goto L31;

  anon37_Then:
    assume {:partition} FatIndex_1 != 1;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} 2 > FatIndex_1;
    goto L158;

  L158:
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    call {:si_unique_call 4042} ExRaiseStatus(-1073741566);
    goto L33;

  anon38_Then:
    assume {:partition} FatIndex_1 >= 2;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L158;

  anon46_Then:
    goto L33;
}



procedure {:origName "FatSetFatEntry"} FatSetFatEntry#0(actual_IrpContext_24: int, actual_Vcb_17: int, actual_FatIndex_1: int, actual_FatEntry_2: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetFatEntry"} FatSetFatEntry#1(actual_IrpContext_24: int, actual_Vcb_17: int, actual_FatIndex_1: int, actual_FatEntry_2: int)
{
  var {:pointer} Tmp_270: int;
  var {:pointer} Tmp_271: int;
  var {:scalar} Tmp_272: int;
  var {:scalar} RegularOperation: int;
  var {:pointer} PinnedFatEntry: int;
  var {:pointer} Tmp_273: int;
  var {:pointer} Tmp_274: int;
  var {:pointer} Tmp_275: int;
  var {:scalar} OffsetIntoVolumeFile: int;
  var {:scalar} Lbo_3: int;
  var {:pointer} Tmp_276: int;
  var {:scalar} Tmp_278: int;
  var {:pointer} Tmp_279: int;
  var {:pointer} PinnedFat: int;
  var {:scalar} WasWait: int;
  var {:scalar} Tmp_282: int;
  var {:scalar} CleaningOperation: int;
  var {:pointer} Tmp_283: int;
  var {:pointer} Tmp_284: int;
  var {:pointer} Tmp_285: int;
  var {:pointer} Bcb_1: int;
  var {:pointer} Tmp_286: int;
  var {:scalar} Tmp_287: int;
  var {:pointer} Tmp_288: int;
  var {:scalar} Tmp_289: int;
  var {:scalar} Tmp_290: int;
  var {:pointer} PinnedFatEntry32: int;
  var {:scalar} Tmp_291: int;
  var {:scalar} Tmp_292: int;
  var {:scalar} SectorSize: int;
  var {:scalar} Tmp_293: int;
  var {:pointer} Tmp_294: int;
  var {:pointer} Tmp_295: int;
  var {:dopa} {:scalar} TmpFatEntry: int;
  var {:pointer} Tmp_296: int;
  var {:scalar} Tmp_297: int;
  var {:pointer} Tmp_298: int;
  var {:scalar} ReleaseMutex: int;
  var {:pointer} IrpContext_24: int;
  var {:pointer} Vcb_17: int;
  var {:scalar} FatIndex_1: int;
  var {:scalar} FatEntry_2: int;
  var vslice_dummy_var_566: int;
  var vslice_dummy_var_567: int;
  var vslice_dummy_var_568: int;
  var vslice_dummy_var_569: int;
  var vslice_dummy_var_570: int;
  var vslice_dummy_var_571: int;

  anon0:
    call {:si_unique_call 4043} PinnedFatEntry := __HAVOC_malloc(4);
    call {:si_unique_call 4044} vslice_dummy_var_566 := __HAVOC_malloc(4);
    call {:si_unique_call 4045} PinnedFat := __HAVOC_malloc(4);
    call {:si_unique_call 4046} Bcb_1 := __HAVOC_malloc(4);
    call {:si_unique_call 4047} vslice_dummy_var_567 := __HAVOC_malloc(12);
    call {:si_unique_call 4048} PinnedFatEntry32 := __HAVOC_malloc(4);
    call {:si_unique_call 4049} TmpFatEntry := __HAVOC_malloc(4);
    IrpContext_24 := actual_IrpContext_24;
    Vcb_17 := actual_Vcb_17;
    FatIndex_1 := actual_FatIndex_1;
    FatEntry_2 := actual_FatEntry_2;
    assume {:nonnull} Bcb_1 != 0;
    assume Bcb_1 > 0;
    WasWait := 1;
    RegularOperation := 1;
    CleaningOperation := 0;
    ReleaseMutex := 0;
    call {:si_unique_call 4050} sdv_do_paged_code_check();
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} FatIndex_1 == 1;
    RegularOperation := 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} FatEntry_2 != -268435456;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} FatEntry_2 == -268435455;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    FatEntry_2 := -1;
    goto L31;

  L31:
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    havoc WasWait;
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    goto L33;

  L33:
    call {:si_unique_call 4051} SectorSize := corral_nondet();
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    FatEntry_2 := BAND(FatEntry_2, BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048));
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_283 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_298 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    havoc OffsetIntoVolumeFile;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_279 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_279 != 0;
    assume Tmp_279 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_271 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_296 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_271 != 0;
    assume Tmp_271 > 0;
    assume {:nonnull} Tmp_296 != 0;
    assume Tmp_296 > 0;
    havoc Tmp_292;
    goto L42;

  L42:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_295 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_285 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_285 != 0;
    assume Tmp_285 > 0;
    assume {:nonnull} Tmp_295 != 0;
    assume Tmp_295 > 0;
    havoc Tmp_278;
    call {:si_unique_call 4052} FatPrepareWriteVolumeFile#1(IrpContext_24, Vcb_17, Tmp_278, Tmp_292, Bcb_1, PinnedFat, RegularOperation, 0);
    Lbo_3 := BAND(OffsetIntoVolumeFile, BNOT(SectorSize - 1));
    Tmp_291 := Lbo_3;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    call {:si_unique_call 4053} vslice_dummy_var_568 := FatAddMcbEntry(Vcb_17, DirtyFatMcb__VCB(Vcb_17), Tmp_291, Lbo_3, SectorSize);
    Tmp_282 := BAND(OffsetIntoVolumeFile, SectorSize - 1);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Tmp_282 == SectorSize - 1;
    Lbo_3 := Lbo_3 + SectorSize;
    Tmp_290 := Lbo_3;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    call {:si_unique_call 4054} vslice_dummy_var_569 := FatAddMcbEntry(Vcb_17, DirtyFatMcb__VCB(Vcb_17), Tmp_290, Lbo_3, SectorSize);
    goto L77;

  L77:
    call {:si_unique_call 4055} ExAcquireFastMutexUnsafe(0);
    ReleaseMutex := 1;
    assume {:nonnull} PinnedFat != 0;
    assume PinnedFat > 0;
    havoc Tmp_275;
    assume {:nonnull} TmpFatEntry != 0;
    assume TmpFatEntry > 0;
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(FatIndex_1, 1) != 0;
    assume {:nonnull} TmpFatEntry != 0;
    assume TmpFatEntry > 0;
    call {:si_unique_call 4056} Tmp_297 := corral_nondet();
    goto L92;

  L92:
    assume {:nonnull} TmpFatEntry != 0;
    assume TmpFatEntry > 0;
    assume {:nonnull} PinnedFat != 0;
    assume PinnedFat > 0;
    havoc Tmp_274;
    Tmp_273 := TmpFatEntry;
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} Tmp_274 != 0;
    assume Tmp_274 > 0;
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} Tmp_274 != 0;
    assume Tmp_274 > 0;
    call {:si_unique_call 4057} ExReleaseFastMutexUnsafe(0);
    ReleaseMutex := 0;
    goto L98;

  L98:
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} WasWait != 0;
    goto L101;

  L101:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} ReleaseMutex != 0;
    call {:si_unique_call 4058} ExReleaseFastMutexUnsafe(0);
    goto L102;

  L102:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} CleaningOperation != 0;
    assume {:nonnull} Bcb_1 != 0;
    assume Bcb_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L1;

  L1:
    return;

  anon44_Then:
    goto L106;

  L106:
    assume {:nonnull} Bcb_1 != 0;
    assume Bcb_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Bcb_1 != 0;
    assume Bcb_1 > 0;
    goto L1;

  anon43_Then:
    goto L1;

  anon42_Then:
    assume {:partition} CleaningOperation == 0;
    goto L106;

  anon41_Then:
    assume {:partition} ReleaseMutex == 0;
    goto L102;

  anon54_Then:
    assume {:partition} WasWait == 0;
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    goto L101;

  anon53_Then:
    assume {:partition} BAND(FatIndex_1, 1) == 0;
    assume {:nonnull} TmpFatEntry != 0;
    assume TmpFatEntry > 0;
    havoc Tmp_272;
    Tmp_297 := BOR(FatEntry_2, Tmp_272);
    goto L92;

  anon52_Then:
    assume {:partition} Tmp_282 != SectorSize - 1;
    goto L77;

  anon51_Then:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_284 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_270 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_270 != 0;
    assume Tmp_270 > 0;
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    havoc Tmp_292;
    goto L42;

  anon50_Then:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_286 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_294 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_286 != 0;
    assume Tmp_286 > 0;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    havoc OffsetIntoVolumeFile;
    call {:si_unique_call 4059} FatPrepareWriteVolumeFile#1(IrpContext_24, Vcb_17, OffsetIntoVolumeFile, 2, Bcb_1, PinnedFatEntry, RegularOperation, 0);
    Lbo_3 := BAND(OffsetIntoVolumeFile, BNOT(SectorSize - 1));
    Tmp_287 := Lbo_3;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    call {:si_unique_call 4060} vslice_dummy_var_571 := FatAddMcbEntry(Vcb_17, DirtyFatMcb__VCB(Vcb_17), Tmp_287, Lbo_3, SectorSize);
    assume {:nonnull} PinnedFatEntry != 0;
    assume PinnedFatEntry > 0;
    goto L98;

  anon40_Then:
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_276 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    Tmp_288 := Bpb__VCB(Vcb_17);
    assume {:nonnull} Tmp_276 != 0;
    assume Tmp_276 > 0;
    assume {:nonnull} Tmp_288 != 0;
    assume Tmp_288 > 0;
    havoc OffsetIntoVolumeFile;
    call {:si_unique_call 4061} FatPrepareWriteVolumeFile#1(IrpContext_24, Vcb_17, OffsetIntoVolumeFile, 4, Bcb_1, PinnedFatEntry32, RegularOperation, 0);
    Lbo_3 := BAND(OffsetIntoVolumeFile, BNOT(SectorSize - 1));
    Tmp_293 := Lbo_3;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    call {:si_unique_call 4062} vslice_dummy_var_570 := FatAddMcbEntry(Vcb_17, DirtyFatMcb__VCB(Vcb_17), Tmp_293, Lbo_3, SectorSize);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} FatIndex_1 != 1;
    assume {:nonnull} PinnedFatEntry32 != 0;
    assume PinnedFatEntry32 > 0;
    havoc Tmp_289;
    assume {:nonnull} PinnedFatEntry32 != 0;
    assume PinnedFatEntry32 > 0;
    goto L98;

  anon45_Then:
    assume {:partition} FatIndex_1 == 1;
    assume {:nonnull} PinnedFatEntry32 != 0;
    assume PinnedFatEntry32 > 0;
    goto L98;

  anon48_Then:
    FatEntry_2 := 32767;
    goto L31;

  anon39_Then:
    FatEntry_2 := 2047;
    goto L31;

  anon47_Then:
    assume {:partition} FatEntry_2 != -268435455;
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    call {:si_unique_call 4063} ExRaiseStatus(-1073741566);
    goto L31;

  anon49_Then:
    assume {:partition} FatEntry_2 == -268435456;
    FatEntry_2 := -1;
    CleaningOperation := 1;
    goto L31;

  anon37_Then:
    assume {:partition} FatIndex_1 != 1;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} 2 > FatIndex_1;
    goto L158;

  L158:
    assume {:nonnull} IrpContext_24 != 0;
    assume IrpContext_24 > 0;
    call {:si_unique_call 4064} ExRaiseStatus(-1073741566);
    goto L33;

  anon38_Then:
    assume {:partition} FatIndex_1 >= 2;
    assume {:nonnull} Vcb_17 != 0;
    assume Vcb_17 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L158;

  anon46_Then:
    goto L33;
}



procedure {:origName "FatSetFatEntry"} FatSetFatEntry#1(actual_IrpContext_24: int, actual_Vcb_17: int, actual_FatIndex_1: int, actual_FatEntry_2: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPrepareWriteVolumeFile"} FatPrepareWriteVolumeFile#0(actual_IrpContext_68: int, actual_Vcb_42: int, actual_StartingVbo: int, actual_ByteCount_6: int, actual_Bcb_6: int, actual_Buffer_19: int, actual_Reversible: int, actual_Zero: int)
{
  var {:scalar} Vbo_2: int;
  var {:scalar} sdv_894: int;
  var {:scalar} Tmp_1508: int;
  var {:scalar} sdv_896: int;
  var {:pointer} IrpContext_68: int;
  var {:pointer} Vcb_42: int;
  var {:scalar} StartingVbo: int;
  var {:scalar} ByteCount_6: int;
  var {:pointer} Bcb_6: int;
  var {:scalar} Reversible: int;
  var {:scalar} Zero: int;
  var vslice_dummy_var_572: int;
  var vslice_dummy_var_1657: int;

  anon0:
    call {:si_unique_call 4065} Vbo_2 := __HAVOC_malloc(20);
    call {:si_unique_call 4066} vslice_dummy_var_572 := __HAVOC_malloc(4);
    IrpContext_68 := actual_IrpContext_68;
    Vcb_42 := actual_Vcb_42;
    StartingVbo := actual_StartingVbo;
    ByteCount_6 := actual_ByteCount_6;
    Bcb_6 := actual_Bcb_6;
    Reversible := actual_Reversible;
    Zero := actual_Zero;
    call {:si_unique_call 4067} sdv_do_paged_code_check();
    assume {:nonnull} Vbo_2 != 0;
    assume Vbo_2 > 0;
    assume {:nonnull} IrpContext_68 != 0;
    assume IrpContext_68 > 0;
    havoc Tmp_1508;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Tmp_1508 == 0;
    goto L53;

  L53:
    call {:si_unique_call 4068} sdv_894 := corral_nondet();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_894 != 0;
    goto L15;

  L15:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Zero != 0;
    call {:si_unique_call 4069} sdv_RtlZeroMemory(0, ByteCount_6);
    goto L16;

  L16:
    assume {:nonnull} Bcb_6 != 0;
    assume Bcb_6 > 0;
    havoc vslice_dummy_var_1657;
    call {:si_unique_call 4070} FatSetDirtyBcb#0(IrpContext_68, vslice_dummy_var_1657, Vcb_42, Reversible);
    call {:si_unique_call 4071} sdv_896 := sdv_AbnormalTermination();
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_896 != 0;
    assume {:nonnull} Bcb_6 != 0;
    assume Bcb_6 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Bcb_6 != 0;
    assume Bcb_6 > 0;
    goto L1;

  L1:
    return;

  anon14_Then:
    goto L1;

  anon13_Then:
    assume {:partition} sdv_896 == 0;
    goto L1;

  anon12_Then:
    assume {:partition} Zero == 0;
    goto L16;

  anon11_Then:
    assume {:partition} sdv_894 == 0;
    assume {:nonnull} IrpContext_68 != 0;
    assume IrpContext_68 > 0;
    call {:si_unique_call 4072} ExRaiseStatus(-1073741608);
    goto L15;

  anon15_Then:
    assume {:partition} Tmp_1508 != 0;
    goto L53;
}



procedure {:origName "FatPrepareWriteVolumeFile"} FatPrepareWriteVolumeFile#0(actual_IrpContext_68: int, actual_Vcb_42: int, actual_StartingVbo: int, actual_ByteCount_6: int, actual_Bcb_6: int, actual_Buffer_19: int, actual_Reversible: int, actual_Zero: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPrepareWriteVolumeFile"} FatPrepareWriteVolumeFile#1(actual_IrpContext_68: int, actual_Vcb_42: int, actual_StartingVbo: int, actual_ByteCount_6: int, actual_Bcb_6: int, actual_Buffer_19: int, actual_Reversible: int, actual_Zero: int)
{
  var {:scalar} Vbo_2: int;
  var {:scalar} sdv_894: int;
  var {:scalar} Tmp_1508: int;
  var {:scalar} sdv_896: int;
  var {:pointer} IrpContext_68: int;
  var {:pointer} Vcb_42: int;
  var {:scalar} StartingVbo: int;
  var {:scalar} ByteCount_6: int;
  var {:pointer} Bcb_6: int;
  var {:scalar} Reversible: int;
  var {:scalar} Zero: int;
  var vslice_dummy_var_573: int;
  var vslice_dummy_var_1658: int;

  anon0:
    call {:si_unique_call 4073} Vbo_2 := __HAVOC_malloc(20);
    call {:si_unique_call 4074} vslice_dummy_var_573 := __HAVOC_malloc(4);
    IrpContext_68 := actual_IrpContext_68;
    Vcb_42 := actual_Vcb_42;
    StartingVbo := actual_StartingVbo;
    ByteCount_6 := actual_ByteCount_6;
    Bcb_6 := actual_Bcb_6;
    Reversible := actual_Reversible;
    Zero := actual_Zero;
    call {:si_unique_call 4075} sdv_do_paged_code_check();
    assume {:nonnull} Vbo_2 != 0;
    assume Vbo_2 > 0;
    assume {:nonnull} IrpContext_68 != 0;
    assume IrpContext_68 > 0;
    havoc Tmp_1508;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Tmp_1508 == 0;
    goto L53;

  L53:
    call {:si_unique_call 4076} sdv_894 := corral_nondet();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_894 != 0;
    goto L15;

  L15:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Zero != 0;
    call {:si_unique_call 4077} sdv_RtlZeroMemory(0, ByteCount_6);
    goto L16;

  L16:
    assume {:nonnull} Bcb_6 != 0;
    assume Bcb_6 > 0;
    havoc vslice_dummy_var_1658;
    call {:si_unique_call 4078} FatSetDirtyBcb#1(IrpContext_68, vslice_dummy_var_1658, Vcb_42, Reversible);
    call {:si_unique_call 4079} sdv_896 := sdv_AbnormalTermination();
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_896 != 0;
    assume {:nonnull} Bcb_6 != 0;
    assume Bcb_6 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Bcb_6 != 0;
    assume Bcb_6 > 0;
    goto L1;

  L1:
    return;

  anon14_Then:
    goto L1;

  anon13_Then:
    assume {:partition} sdv_896 == 0;
    goto L1;

  anon12_Then:
    assume {:partition} Zero == 0;
    goto L16;

  anon11_Then:
    assume {:partition} sdv_894 == 0;
    assume {:nonnull} IrpContext_68 != 0;
    assume IrpContext_68 > 0;
    call {:si_unique_call 4080} ExRaiseStatus(-1073741608);
    goto L15;

  anon15_Then:
    assume {:partition} Tmp_1508 != 0;
    goto L53;
}



procedure {:origName "FatPrepareWriteVolumeFile"} FatPrepareWriteVolumeFile#1(actual_IrpContext_68: int, actual_Vcb_42: int, actual_StartingVbo: int, actual_ByteCount_6: int, actual_Bcb_6: int, actual_Buffer_19: int, actual_Reversible: int, actual_Zero: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetDirtyBcb"} FatSetDirtyBcb#0(actual_IrpContext_75: int, actual_Bcb_11: int, actual_Vcb_44: int, actual_Reversible_2: int)
{
  var {:scalar} SavedIrql_1: int;
  var {:scalar} CurrentTime: int;
  var {:scalar} Tmp_1568: int;
  var {:scalar} CleanVolumeTimer: int;
  var {:scalar} TimeSincePreviousCall: int;
  var {:pointer} Tmp_1570: int;
  var {:scalar} SetTimer: int;
  var {:pointer} IrpContext_75: int;
  var {:pointer} Bcb_11: int;
  var {:pointer} Vcb_44: int;
  var {:scalar} Reversible_2: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_575: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_577: int;
  var vslice_dummy_var_578: int;

  anon0:
    call {:si_unique_call 4081} CurrentTime := __HAVOC_malloc(20);
    call {:si_unique_call 4082} CleanVolumeTimer := __HAVOC_malloc(20);
    call {:si_unique_call 4083} TimeSincePreviousCall := __HAVOC_malloc(20);
    call {:si_unique_call 4084} vslice_dummy_var_574 := __HAVOC_malloc(4);
    IrpContext_75 := actual_IrpContext_75;
    Bcb_11 := actual_Bcb_11;
    Vcb_44 := actual_Vcb_44;
    Reversible_2 := actual_Reversible_2;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Reversible_2 != 0;
    call {:si_unique_call 4085} FatRepinBcb(IrpContext_75, Bcb_11);
    goto L4;

  L4:
    assume {:nonnull} IrpContext_75 != 0;
    assume IrpContext_75 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Vcb_44 != 0;
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 4086} Tmp_1570 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    call {:si_unique_call 4087} sdv_KeAcquireSpinLock(0, Tmp_1570);
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    havoc SavedIrql_1;
    assume {:nonnull} CurrentTime != 0;
    assume CurrentTime > 0;
    assume {:nonnull} TimeSincePreviousCall != 0;
    assume TimeSincePreviousCall > 0;
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    assume {:nonnull} TimeSincePreviousCall != 0;
    assume TimeSincePreviousCall > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L26;

  L26:
    SetTimer := 1;
    goto L27;

  L27:
    call {:si_unique_call 4088} sdv_KeReleaseSpinLock(0, SavedIrql_1);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} SetTimer != 0;
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    Tmp_1568 := -15000000;
    goto L35;

  L35:
    assume {:nonnull} CleanVolumeTimer != 0;
    assume CleanVolumeTimer > 0;
    call {:si_unique_call 4089} vslice_dummy_var_578 := KeCancelTimer(0);
    call {:si_unique_call 4090} vslice_dummy_var_575 := KeRemoveQueueDpc(0);
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L44;

  L44:
    call {:si_unique_call 4091} Tmp_1570 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    call {:si_unique_call 4092} sdv_KeAcquireSpinLock(0, Tmp_1570);
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    havoc SavedIrql_1;
    call {:si_unique_call 4093} sdv_KeReleaseSpinLock(0, SavedIrql_1);
    call {:si_unique_call 4094} vslice_dummy_var_576 := KeSetTimer(0, CleanVolumeTimer, 0);
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L59;

  L59:
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 4095} vslice_dummy_var_577 := FatToggleMediaEjectDisable(IrpContext_75, Vcb_44, 1);
    goto L44;

  anon33_Then:
    goto L44;

  anon31_Then:
    call {:si_unique_call 4096} FatMarkVolume#0(IrpContext_75, Vcb_44, 1);
    goto L59;

  anon29_Then:
    Tmp_1568 := -80000000;
    goto L35;

  anon28_Then:
    assume {:partition} SetTimer == 0;
    goto L1;

  anon32_Then:
    assume {:nonnull} TimeSincePreviousCall != 0;
    assume TimeSincePreviousCall > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    SetTimer := 0;
    goto L27;

  anon27_Then:
    goto L26;

  anon26_Then:
    goto L1;

  anon25_Then:
    assume {:partition} Vcb_44 == 0;
    goto L1;

  anon24_Then:
    goto L1;

  anon23_Then:
    assume {:partition} Reversible_2 == 0;
    goto L4;
}



procedure {:origName "FatSetDirtyBcb"} FatSetDirtyBcb#0(actual_IrpContext_75: int, actual_Bcb_11: int, actual_Vcb_44: int, actual_Reversible_2: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetDirtyBcb"} FatSetDirtyBcb#1(actual_IrpContext_75: int, actual_Bcb_11: int, actual_Vcb_44: int, actual_Reversible_2: int)
{
  var {:scalar} SavedIrql_1: int;
  var {:scalar} CurrentTime: int;
  var {:scalar} Tmp_1568: int;
  var {:scalar} CleanVolumeTimer: int;
  var {:scalar} TimeSincePreviousCall: int;
  var {:pointer} Tmp_1570: int;
  var {:scalar} SetTimer: int;
  var {:pointer} IrpContext_75: int;
  var {:pointer} Bcb_11: int;
  var {:pointer} Vcb_44: int;
  var {:scalar} Reversible_2: int;
  var vslice_dummy_var_579: int;
  var vslice_dummy_var_580: int;
  var vslice_dummy_var_581: int;
  var vslice_dummy_var_582: int;
  var vslice_dummy_var_583: int;

  anon0:
    call {:si_unique_call 4097} CurrentTime := __HAVOC_malloc(20);
    call {:si_unique_call 4098} CleanVolumeTimer := __HAVOC_malloc(20);
    call {:si_unique_call 4099} TimeSincePreviousCall := __HAVOC_malloc(20);
    call {:si_unique_call 4100} vslice_dummy_var_579 := __HAVOC_malloc(4);
    IrpContext_75 := actual_IrpContext_75;
    Bcb_11 := actual_Bcb_11;
    Vcb_44 := actual_Vcb_44;
    Reversible_2 := actual_Reversible_2;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Reversible_2 != 0;
    call {:si_unique_call 4101} FatRepinBcb(IrpContext_75, Bcb_11);
    goto L4;

  L4:
    assume {:nonnull} IrpContext_75 != 0;
    assume IrpContext_75 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Vcb_44 != 0;
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 4102} Tmp_1570 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    call {:si_unique_call 4103} sdv_KeAcquireSpinLock(0, Tmp_1570);
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    havoc SavedIrql_1;
    assume {:nonnull} CurrentTime != 0;
    assume CurrentTime > 0;
    assume {:nonnull} TimeSincePreviousCall != 0;
    assume TimeSincePreviousCall > 0;
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    assume {:nonnull} TimeSincePreviousCall != 0;
    assume TimeSincePreviousCall > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L26;

  L26:
    SetTimer := 1;
    goto L27;

  L27:
    call {:si_unique_call 4104} sdv_KeReleaseSpinLock(0, SavedIrql_1);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} SetTimer != 0;
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    Tmp_1568 := -15000000;
    goto L35;

  L35:
    assume {:nonnull} CleanVolumeTimer != 0;
    assume CleanVolumeTimer > 0;
    call {:si_unique_call 4105} vslice_dummy_var_583 := KeCancelTimer(0);
    call {:si_unique_call 4106} vslice_dummy_var_580 := KeRemoveQueueDpc(0);
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L44;

  L44:
    call {:si_unique_call 4107} Tmp_1570 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    call {:si_unique_call 4108} sdv_KeAcquireSpinLock(0, Tmp_1570);
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    havoc SavedIrql_1;
    call {:si_unique_call 4109} sdv_KeReleaseSpinLock(0, SavedIrql_1);
    call {:si_unique_call 4110} vslice_dummy_var_581 := KeSetTimer(0, CleanVolumeTimer, 0);
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L59;

  L59:
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    assume {:nonnull} Vcb_44 != 0;
    assume Vcb_44 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 4111} vslice_dummy_var_582 := FatToggleMediaEjectDisable(IrpContext_75, Vcb_44, 1);
    goto L44;

  anon33_Then:
    goto L44;

  anon31_Then:
    call {:si_unique_call 4112} FatMarkVolume#1(IrpContext_75, Vcb_44, 1);
    goto L59;

  anon29_Then:
    Tmp_1568 := -80000000;
    goto L35;

  anon28_Then:
    assume {:partition} SetTimer == 0;
    goto L1;

  anon32_Then:
    assume {:nonnull} TimeSincePreviousCall != 0;
    assume TimeSincePreviousCall > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    SetTimer := 0;
    goto L27;

  anon27_Then:
    goto L26;

  anon26_Then:
    goto L1;

  anon25_Then:
    assume {:partition} Vcb_44 == 0;
    goto L1;

  anon24_Then:
    goto L1;

  anon23_Then:
    assume {:partition} Reversible_2 == 0;
    goto L4;
}



procedure {:origName "FatSetDirtyBcb"} FatSetDirtyBcb#1(actual_IrpContext_75: int, actual_Bcb_11: int, actual_Vcb_44: int, actual_Reversible_2: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatMarkVolume"} FatMarkVolume#0(actual_IrpContext_201: int, actual_Vcb_109: int, actual_VolumeState_1: int)
{
  var {:pointer} Tmp_2909: int;
  var {:scalar} Offset_8: int;
  var {:pointer} Irp_78: int;
  var {:scalar} abort: int;
  var {:scalar} Tmp_2910: int;
  var {:pointer} Tmp_2911: int;
  var {:scalar} PinLength: int;
  var {:pointer} NextMdl: int;
  var {:scalar} Status_79: int;
  var {:pointer} Tmp_2912: int;
  var {:scalar} sdv_1637: int;
  var {:pointer} Bcb_25: int;
  var {:scalar} ThisPass: int;
  var {:pointer} Tmp_2913: int;
  var {:scalar} Event_13: int;
  var {:pointer} Tmp_2914: int;
  var {:pointer} Tmp_2915: int;
  var {:pointer} Tmp_2916: int;
  var {:pointer} sdv_1639: int;
  var {:pointer} Tmp_2918: int;
  var {:scalar} WriteLength_1: int;
  var {:scalar} FsInfoUpdate: int;
  var {:pointer} Tmp_2919: int;
  var {:pointer} FsInfoSector: int;
  var {:pointer} Tmp_2920: int;
  var {:pointer} CurrentHead: int;
  var {:pointer} Sector: int;
  var {:pointer} IrpContext_201: int;
  var {:pointer} Vcb_109: int;
  var {:scalar} VolumeState_1: int;
  var vslice_dummy_var_584: int;
  var vslice_dummy_var_585: int;
  var vslice_dummy_var_586: int;
  var vslice_dummy_var_1659: int;

  anon0:
    call {:si_unique_call 4113} Offset_8 := __HAVOC_malloc(20);
    call {:si_unique_call 4114} Event_13 := __HAVOC_malloc(124);
    call {:si_unique_call 4115} vslice_dummy_var_584 := __HAVOC_malloc(4);
    IrpContext_201 := actual_IrpContext_201;
    Vcb_109 := actual_Vcb_109;
    VolumeState_1 := actual_VolumeState_1;
    Bcb_25 := 0;
    Irp_78 := 0;
    FsInfoUpdate := 0;
    abort := 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    ThisPass := 0;
    goto L22;

  L22:
    call {:si_unique_call 4116} Tmp_2909, Irp_78, abort, Tmp_2910, Tmp_2911, PinLength, NextMdl, Status_79, Tmp_2912, sdv_1637, Bcb_25, ThisPass, Tmp_2913, Tmp_2914, Tmp_2915, Tmp_2916, sdv_1639, Tmp_2918, WriteLength_1, FsInfoUpdate, Tmp_2919, FsInfoSector, Tmp_2920, CurrentHead, vslice_dummy_var_585, vslice_dummy_var_586 := FatMarkVolume#0_loop_L22(Tmp_2909, Offset_8, Irp_78, abort, Tmp_2910, Tmp_2911, PinLength, NextMdl, Status_79, Tmp_2912, sdv_1637, Bcb_25, ThisPass, Tmp_2913, Event_13, Tmp_2914, Tmp_2915, Tmp_2916, sdv_1639, Tmp_2918, WriteLength_1, FsInfoUpdate, Tmp_2919, FsInfoSector, Tmp_2920, CurrentHead, Sector, Vcb_109, VolumeState_1, vslice_dummy_var_585, vslice_dummy_var_586);
    goto L22_last;

  L22_last:
    assume {:CounterLoop 2} {:Counter "ThisPass"} true;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} 2 > ThisPass;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} ThisPass != 1;
    goto L32;

  L32:
    assume {:nonnull} Offset_8 != 0;
    assume Offset_8 > 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2911 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Tmp_2911 != 0;
    assume Tmp_2911 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2914 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2916 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Tmp_2914 != 0;
    assume Tmp_2914 > 0;
    assume {:nonnull} Tmp_2916 != 0;
    assume Tmp_2916 > 0;
    havoc Tmp_2910;
    goto L38;

  L38:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2918 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2919 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Tmp_2918 != 0;
    assume Tmp_2918 > 0;
    assume {:nonnull} Tmp_2919 != 0;
    assume Tmp_2919 > 0;
    havoc PinLength;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    havoc WriteLength_1;
    goto L40;

  L40:
    call {:si_unique_call 4117} vslice_dummy_var_585 := corral_nondet();
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} ThisPass == 0;
    call {:si_unique_call 4118} sdv_1637 := FatIsBootSectorFat(Sector);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_1637 != 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    Tmp_2909 := Sector;
    assume {:nonnull} Tmp_2909 != 0;
    assume Tmp_2909 > 0;
    CurrentHead := CurrentHead__PACKED_BOOT_SECTOR_EX(Tmp_2909);
    goto L126;

  L126:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} VolumeState_1 != 0;
    assume {:nonnull} CurrentHead != 0;
    assume CurrentHead > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} VolumeState_1 == 2;
    assume {:nonnull} CurrentHead != 0;
    assume CurrentHead > 0;
    goto L65;

  L65:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} FsInfoUpdate != 0;
    FsInfoSector := Sector;
    assume {:nonnull} FsInfoSector != 0;
    assume FsInfoSector > 0;
    assume {:nonnull} FsInfoSector != 0;
    assume FsInfoSector > 0;
    assume {:nonnull} FsInfoSector != 0;
    assume FsInfoSector > 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    assume {:nonnull} FsInfoSector != 0;
    assume FsInfoSector > 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    assume {:nonnull} FsInfoSector != 0;
    assume FsInfoSector > 0;
    goto L66;

  L66:
    call {:si_unique_call 4119} KeInitializeEvent(Event_13, 0, 0);
    call {:si_unique_call 4120} Irp_78 := IoBuildAsynchronousFsdRequest(4, 0, 0, WriteLength_1, 0, 0);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Irp_78 == 0;
    goto L94;

  L94:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} Irp_78 != 0;
    goto L99;

  L99:
    call {:si_unique_call 4121} NextMdl, Tmp_2912 := FatMarkVolume#0_loop_L99(Irp_78, NextMdl, Tmp_2912);
    goto L99_last;

  L99_last:
    assume {:nonnull} Irp_78 != 0;
    assume Irp_78 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Irp_78 != 0;
    assume Irp_78 > 0;
    havoc Tmp_2912;
    assume {:nonnull} Tmp_2912 != 0;
    assume Tmp_2912 > 0;
    havoc NextMdl;
    call {:si_unique_call 4122} MmUnlockPages(0);
    call {:si_unique_call 4123} IoFreeMdl(0);
    assume {:nonnull} Irp_78 != 0;
    assume Irp_78 > 0;
    goto anon71_Else_dummy;

  anon71_Else_dummy:
    assume false;
    return;

  anon71_Then:
    call {:si_unique_call 4124} IoFreeIrp(0);
    goto L98;

  L98:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Bcb_25 != 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Bcb_25 != 0;
    Bcb_25 := 0;
    goto L112;

  L112:
    ThisPass := ThisPass + 1;
    goto L112_dummy;

  L112_dummy:
    assume false;
    return;

  anon72_Then:
    assume {:partition} Bcb_25 == 0;
    goto L112;

  anon70_Then:
    assume {:partition} Bcb_25 == 0;
    goto L112;

  anon69_Then:
    assume {:partition} Irp_78 == 0;
    goto L98;

  anon67_Then:
    assume {:partition} Irp_78 != 0;
    call {:si_unique_call 4125} sdv_1639 := sdv_IoGetNextIrpStackLocation(Irp_78);
    assume {:nonnull} sdv_1639 != 0;
    assume sdv_1639 > 0;
    call {:si_unique_call 4126} sdv_IoSetCompletionRoutine(Irp_78, li2bplFunctionConstant600, Event_13, 1, 1, 1);
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    havoc vslice_dummy_var_1659;
    call {:si_unique_call 4127} Status_79 := sdv_IoCallDriver(vslice_dummy_var_1659, Irp_78);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Status_79 == 259;
    call {:si_unique_call 4128} vslice_dummy_var_586 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L94;

  anon68_Then:
    assume {:partition} Status_79 != 259;
    goto L94;

  anon66_Then:
    assume {:partition} FsInfoUpdate == 0;
    goto L66;

  anon83_Then:
    assume {:partition} VolumeState_1 != 2;
    goto L65;

  anon75_Then:
    assume {:partition} VolumeState_1 == 0;
    assume {:nonnull} CurrentHead != 0;
    assume CurrentHead > 0;
    goto L65;

  anon74_Then:
    Tmp_2920 := Sector;
    assume {:nonnull} Tmp_2920 != 0;
    assume Tmp_2920 > 0;
    CurrentHead := CurrentHead__PACKED_BOOT_SECTOR(Tmp_2920);
    goto L126;

  anon73_Then:
    assume {:partition} sdv_1637 == 0;
    abort := 1;
    goto L94;

  anon65_Then:
    assume {:partition} ThisPass != 0;
    goto L65;

  anon82_Then:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2915 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2913 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Tmp_2913 != 0;
    assume Tmp_2913 > 0;
    assume {:nonnull} Tmp_2915 != 0;
    assume Tmp_2915 > 0;
    havoc Tmp_2910;
    goto L38;

  anon81_Then:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    havoc PinLength;
    WriteLength_1 := PinLength;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} VolumeState_1 == 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    FsInfoUpdate := 1;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    havoc PinLength;
    WriteLength_1 := PinLength;
    goto L40;

  anon77_Then:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} ThisPass == 1;
    FsInfoUpdate := 1;
    assume {:nonnull} Offset_8 != 0;
    assume Offset_8 > 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto L40;

  anon78_Then:
    assume {:partition} ThisPass != 1;
    goto L40;

  anon76_Then:
    assume {:partition} VolumeState_1 != 0;
    goto L40;

  anon84_Then:
    goto L40;

  anon60_Then:
    assume {:partition} ThisPass == 1;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} VolumeState_1 == 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} FsInfoUpdate == 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L32;

  anon64_Then:
    goto L23;

  L23:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} abort == 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} VolumeState_1 == 1;
    assume false;
    return;

  anon79_Then:
    assume {:partition} VolumeState_1 != 1;
    assume false;
    return;

  anon59_Then:
    assume {:partition} abort != 0;
    goto L1;

  L1:
    return;

  anon63_Then:
    assume {:partition} FsInfoUpdate != 0;
    goto L23;

  anon62_Then:
    assume {:partition} VolumeState_1 != 0;
    goto L23;

  anon61_Then:
    goto L23;

  anon58_Then:
    assume {:partition} ThisPass >= 2;
    goto L23;

  anon57_Then:
    goto L1;

  anon80_Then:
    goto L1;
}



procedure {:origName "FatMarkVolume"} FatMarkVolume#0(actual_IrpContext_201: int, actual_Vcb_109: int, actual_VolumeState_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatMarkVolume"} FatMarkVolume#1(actual_IrpContext_201: int, actual_Vcb_109: int, actual_VolumeState_1: int)
{
  var {:pointer} Tmp_2909: int;
  var {:scalar} Offset_8: int;
  var {:pointer} Irp_78: int;
  var {:scalar} abort: int;
  var {:scalar} Tmp_2910: int;
  var {:pointer} Tmp_2911: int;
  var {:scalar} PinLength: int;
  var {:pointer} NextMdl: int;
  var {:scalar} Status_79: int;
  var {:pointer} Tmp_2912: int;
  var {:scalar} sdv_1637: int;
  var {:pointer} Bcb_25: int;
  var {:scalar} ThisPass: int;
  var {:pointer} Tmp_2913: int;
  var {:scalar} Event_13: int;
  var {:pointer} Tmp_2914: int;
  var {:pointer} Tmp_2915: int;
  var {:pointer} Tmp_2916: int;
  var {:pointer} sdv_1639: int;
  var {:pointer} Tmp_2918: int;
  var {:scalar} WriteLength_1: int;
  var {:scalar} FsInfoUpdate: int;
  var {:pointer} Tmp_2919: int;
  var {:pointer} FsInfoSector: int;
  var {:pointer} Tmp_2920: int;
  var {:pointer} CurrentHead: int;
  var {:pointer} Sector: int;
  var {:pointer} IrpContext_201: int;
  var {:pointer} Vcb_109: int;
  var {:scalar} VolumeState_1: int;
  var vslice_dummy_var_587: int;
  var vslice_dummy_var_588: int;
  var vslice_dummy_var_589: int;
  var vslice_dummy_var_1660: int;

  anon0:
    call {:si_unique_call 4129} Offset_8 := __HAVOC_malloc(20);
    call {:si_unique_call 4130} Event_13 := __HAVOC_malloc(124);
    call {:si_unique_call 4131} vslice_dummy_var_587 := __HAVOC_malloc(4);
    IrpContext_201 := actual_IrpContext_201;
    Vcb_109 := actual_Vcb_109;
    VolumeState_1 := actual_VolumeState_1;
    Bcb_25 := 0;
    Irp_78 := 0;
    FsInfoUpdate := 0;
    abort := 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    ThisPass := 0;
    goto L22;

  L22:
    call {:si_unique_call 4132} Tmp_2909, Irp_78, abort, Tmp_2910, Tmp_2911, PinLength, NextMdl, Status_79, Tmp_2912, sdv_1637, Bcb_25, ThisPass, Tmp_2913, Tmp_2914, Tmp_2915, Tmp_2916, sdv_1639, Tmp_2918, WriteLength_1, FsInfoUpdate, Tmp_2919, FsInfoSector, Tmp_2920, CurrentHead, vslice_dummy_var_588, vslice_dummy_var_589 := FatMarkVolume#1_loop_L22(Tmp_2909, Offset_8, Irp_78, abort, Tmp_2910, Tmp_2911, PinLength, NextMdl, Status_79, Tmp_2912, sdv_1637, Bcb_25, ThisPass, Tmp_2913, Event_13, Tmp_2914, Tmp_2915, Tmp_2916, sdv_1639, Tmp_2918, WriteLength_1, FsInfoUpdate, Tmp_2919, FsInfoSector, Tmp_2920, CurrentHead, Sector, Vcb_109, VolumeState_1, vslice_dummy_var_588, vslice_dummy_var_589);
    goto L22_last;

  L22_last:
    assume {:CounterLoop 2} {:Counter "ThisPass"} true;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} 2 > ThisPass;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} ThisPass != 1;
    goto L32;

  L32:
    assume {:nonnull} Offset_8 != 0;
    assume Offset_8 > 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2911 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Tmp_2911 != 0;
    assume Tmp_2911 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2914 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2916 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Tmp_2914 != 0;
    assume Tmp_2914 > 0;
    assume {:nonnull} Tmp_2916 != 0;
    assume Tmp_2916 > 0;
    havoc Tmp_2910;
    goto L38;

  L38:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2918 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2919 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Tmp_2918 != 0;
    assume Tmp_2918 > 0;
    assume {:nonnull} Tmp_2919 != 0;
    assume Tmp_2919 > 0;
    havoc PinLength;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    havoc WriteLength_1;
    goto L40;

  L40:
    call {:si_unique_call 4133} vslice_dummy_var_588 := corral_nondet();
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} ThisPass == 0;
    call {:si_unique_call 4134} sdv_1637 := FatIsBootSectorFat(Sector);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_1637 != 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    Tmp_2909 := Sector;
    assume {:nonnull} Tmp_2909 != 0;
    assume Tmp_2909 > 0;
    CurrentHead := CurrentHead__PACKED_BOOT_SECTOR_EX(Tmp_2909);
    goto L126;

  L126:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} VolumeState_1 != 0;
    assume {:nonnull} CurrentHead != 0;
    assume CurrentHead > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} VolumeState_1 == 2;
    assume {:nonnull} CurrentHead != 0;
    assume CurrentHead > 0;
    goto L65;

  L65:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} FsInfoUpdate != 0;
    FsInfoSector := Sector;
    assume {:nonnull} FsInfoSector != 0;
    assume FsInfoSector > 0;
    assume {:nonnull} FsInfoSector != 0;
    assume FsInfoSector > 0;
    assume {:nonnull} FsInfoSector != 0;
    assume FsInfoSector > 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    assume {:nonnull} FsInfoSector != 0;
    assume FsInfoSector > 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    assume {:nonnull} FsInfoSector != 0;
    assume FsInfoSector > 0;
    goto L66;

  L66:
    call {:si_unique_call 4135} KeInitializeEvent(Event_13, 0, 0);
    call {:si_unique_call 4136} Irp_78 := IoBuildAsynchronousFsdRequest(4, 0, 0, WriteLength_1, 0, 0);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Irp_78 == 0;
    goto L94;

  L94:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} Irp_78 != 0;
    goto L99;

  L99:
    call {:si_unique_call 4137} NextMdl, Tmp_2912 := FatMarkVolume#1_loop_L99(Irp_78, NextMdl, Tmp_2912);
    goto L99_last;

  L99_last:
    assume {:nonnull} Irp_78 != 0;
    assume Irp_78 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Irp_78 != 0;
    assume Irp_78 > 0;
    havoc Tmp_2912;
    assume {:nonnull} Tmp_2912 != 0;
    assume Tmp_2912 > 0;
    havoc NextMdl;
    call {:si_unique_call 4138} MmUnlockPages(0);
    call {:si_unique_call 4139} IoFreeMdl(0);
    assume {:nonnull} Irp_78 != 0;
    assume Irp_78 > 0;
    goto anon71_Else_dummy;

  anon71_Else_dummy:
    assume false;
    return;

  anon71_Then:
    call {:si_unique_call 4140} IoFreeIrp(0);
    goto L98;

  L98:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Bcb_25 != 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Bcb_25 != 0;
    Bcb_25 := 0;
    goto L112;

  L112:
    ThisPass := ThisPass + 1;
    goto L112_dummy;

  L112_dummy:
    assume false;
    return;

  anon72_Then:
    assume {:partition} Bcb_25 == 0;
    goto L112;

  anon70_Then:
    assume {:partition} Bcb_25 == 0;
    goto L112;

  anon69_Then:
    assume {:partition} Irp_78 == 0;
    goto L98;

  anon67_Then:
    assume {:partition} Irp_78 != 0;
    call {:si_unique_call 4141} sdv_1639 := sdv_IoGetNextIrpStackLocation(Irp_78);
    assume {:nonnull} sdv_1639 != 0;
    assume sdv_1639 > 0;
    call {:si_unique_call 4142} sdv_IoSetCompletionRoutine(Irp_78, li2bplFunctionConstant600, Event_13, 1, 1, 1);
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    havoc vslice_dummy_var_1660;
    call {:si_unique_call 4143} Status_79 := sdv_IoCallDriver(vslice_dummy_var_1660, Irp_78);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Status_79 == 259;
    call {:si_unique_call 4144} vslice_dummy_var_589 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L94;

  anon68_Then:
    assume {:partition} Status_79 != 259;
    goto L94;

  anon66_Then:
    assume {:partition} FsInfoUpdate == 0;
    goto L66;

  anon83_Then:
    assume {:partition} VolumeState_1 != 2;
    goto L65;

  anon75_Then:
    assume {:partition} VolumeState_1 == 0;
    assume {:nonnull} CurrentHead != 0;
    assume CurrentHead > 0;
    goto L65;

  anon74_Then:
    Tmp_2920 := Sector;
    assume {:nonnull} Tmp_2920 != 0;
    assume Tmp_2920 > 0;
    CurrentHead := CurrentHead__PACKED_BOOT_SECTOR(Tmp_2920);
    goto L126;

  anon73_Then:
    assume {:partition} sdv_1637 == 0;
    abort := 1;
    goto L94;

  anon65_Then:
    assume {:partition} ThisPass != 0;
    goto L65;

  anon82_Then:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2915 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    Tmp_2913 := Bpb__VCB(Vcb_109);
    assume {:nonnull} Tmp_2913 != 0;
    assume Tmp_2913 > 0;
    assume {:nonnull} Tmp_2915 != 0;
    assume Tmp_2915 > 0;
    havoc Tmp_2910;
    goto L38;

  anon81_Then:
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    havoc PinLength;
    WriteLength_1 := PinLength;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} VolumeState_1 == 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    FsInfoUpdate := 1;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    havoc PinLength;
    WriteLength_1 := PinLength;
    goto L40;

  anon77_Then:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} ThisPass == 1;
    FsInfoUpdate := 1;
    assume {:nonnull} Offset_8 != 0;
    assume Offset_8 > 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto L40;

  anon78_Then:
    assume {:partition} ThisPass != 1;
    goto L40;

  anon76_Then:
    assume {:partition} VolumeState_1 != 0;
    goto L40;

  anon84_Then:
    goto L40;

  anon60_Then:
    assume {:partition} ThisPass == 1;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} VolumeState_1 == 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} FsInfoUpdate == 0;
    assume {:nonnull} Vcb_109 != 0;
    assume Vcb_109 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L32;

  anon64_Then:
    goto L23;

  L23:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} abort == 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} VolumeState_1 == 1;
    call {:si_unique_call 4145} FatSetFatEntry#0(IrpContext_201, Vcb_109, 1, -268435455);
    goto L1;

  L1:
    return;

  anon79_Then:
    assume {:partition} VolumeState_1 != 1;
    call {:si_unique_call 4146} FatSetFatEntry#0(IrpContext_201, Vcb_109, 1, -268435456);
    goto L1;

  anon59_Then:
    assume {:partition} abort != 0;
    goto L1;

  anon63_Then:
    assume {:partition} FsInfoUpdate != 0;
    goto L23;

  anon62_Then:
    assume {:partition} VolumeState_1 != 0;
    goto L23;

  anon61_Then:
    goto L23;

  anon58_Then:
    assume {:partition} ThisPass >= 2;
    goto L23;

  anon57_Then:
    goto L1;

  anon80_Then:
    goto L1;
}



procedure {:origName "FatMarkVolume"} FatMarkVolume#1(actual_IrpContext_201: int, actual_Vcb_109: int, actual_VolumeState_1: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOpenDirectoryFile"} FatOpenDirectoryFile#0(actual_IrpContext_77: int, actual_Dcb_10: int)
{
  var {:pointer} DirectoryFileObject_5: int;
  var {:pointer} Tmp_1577: int;
  var {:pointer} Tmp_1578: int;
  var {:pointer} Tmp_1579: int;
  var {:pointer} Tmp_1580: int;
  var {:pointer} Tmp_1582: int;
  var {:pointer} Tmp_1583: int;
  var {:pointer} Tmp_1585: int;
  var {:pointer} IrpContext_77: int;
  var {:pointer} Dcb_10: int;
  var vslice_dummy_var_590: int;
  var vslice_dummy_var_591: int;
  var vslice_dummy_var_592: int;
  var vslice_dummy_var_593: int;
  var vslice_dummy_var_594: int;
  var vslice_dummy_var_1661: int;

  anon0:
    call {:si_unique_call 4147} vslice_dummy_var_590 := __HAVOC_malloc(4);
    IrpContext_77 := actual_IrpContext_77;
    Dcb_10 := actual_Dcb_10;
    call {:si_unique_call 4148} sdv_do_paged_code_check();
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 4149} FatLookupFileAllocationSize#0(IrpContext_77, Dcb_10);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    goto L7;

  L7:
    call {:si_unique_call 4150} FatCheckFreeDirentBitmap(IrpContext_77, Dcb_10);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    DirectoryFileObject_5 := 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    call {:si_unique_call 4151} ExAcquireFastMutexUnsafe(0);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc Tmp_1577;
    assume {:nonnull} Tmp_1577 != 0;
    assume Tmp_1577 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    DirectoryFileObject_5 := 0;
    goto L48;

  L48:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc vslice_dummy_var_1661;
    call {:si_unique_call 4152} FatPreallocateCloseContext(vslice_dummy_var_1661);
    call {:si_unique_call 4153} FatSetFileObject(DirectoryFileObject_5, 6, Dcb_10, 0);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc Tmp_1585;
    call {:si_unique_call 4154} Tmp_1583 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    assume {:nonnull} Tmp_1585 != 0;
    assume Tmp_1585 > 0;
    call {:si_unique_call 4155} vslice_dummy_var_592 := sdv_InterlockedIncrement(Tmp_1583);
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    assume {:nonnull} Tmp_1585 != 0;
    assume Tmp_1585 > 0;
    Tmp_1578 := Dcb_10;
    assume {:nonnull} Tmp_1578 != 0;
    assume Tmp_1578 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc Tmp_1579;
    call {:si_unique_call 4156} Tmp_1583 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1579 != 0;
    assume Tmp_1579 > 0;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    call {:si_unique_call 4157} vslice_dummy_var_593 := sdv_InterlockedIncrement(Tmp_1583);
    assume {:nonnull} Tmp_1579 != 0;
    assume Tmp_1579 > 0;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    goto L58;

  L58:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc Tmp_1580;
    assume {:nonnull} DirectoryFileObject_5 != 0;
    assume DirectoryFileObject_5 > 0;
    assume {:nonnull} Tmp_1580 != 0;
    assume Tmp_1580 > 0;
    assume {:nonnull} DirectoryFileObject_5 != 0;
    assume DirectoryFileObject_5 > 0;
    assume {:nonnull} DirectoryFileObject_5 != 0;
    assume DirectoryFileObject_5 > 0;
    assume {:nonnull} DirectoryFileObject_5 != 0;
    assume DirectoryFileObject_5 > 0;
    call {:si_unique_call 4158} Tmp_1583 := __HAVOC_malloc(4);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    call {:si_unique_call 4159} vslice_dummy_var_594 := sdv_InterlockedIncrement(Tmp_1583);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    DirectoryFileObject_5 := 0;
    goto L29;

  L29:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    call {:si_unique_call 4160} ExReleaseFastMutexUnsafe(0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} DirectoryFileObject_5 != 0;
    call {:si_unique_call 4161} vslice_dummy_var_591 := sdv_ObDereferenceObject(0);
    goto L16;

  L16:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc Tmp_1582;
    assume {:nonnull} Tmp_1582 != 0;
    assume Tmp_1582 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    goto L1;

  L1:
    return;

  anon19_Then:
    goto L1;

  anon18_Then:
    assume {:partition} DirectoryFileObject_5 == 0;
    goto L16;

  anon21_Then:
    goto L58;

  anon20_Then:
    call {:si_unique_call 4162} DirectoryFileObject_5 := __HAVOC_malloc(1);
    goto L48;

  anon17_Then:
    goto L29;

  anon16_Then:
    goto L16;

  anon15_Then:
    goto L7;
}



procedure {:origName "FatOpenDirectoryFile"} FatOpenDirectoryFile#0(actual_IrpContext_77: int, actual_Dcb_10: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatOpenDirectoryFile"} FatOpenDirectoryFile#1(actual_IrpContext_77: int, actual_Dcb_10: int)
{
  var {:pointer} DirectoryFileObject_5: int;
  var {:pointer} Tmp_1577: int;
  var {:pointer} Tmp_1578: int;
  var {:pointer} Tmp_1579: int;
  var {:pointer} Tmp_1580: int;
  var {:pointer} Tmp_1582: int;
  var {:pointer} Tmp_1583: int;
  var {:pointer} Tmp_1585: int;
  var {:pointer} IrpContext_77: int;
  var {:pointer} Dcb_10: int;
  var vslice_dummy_var_595: int;
  var vslice_dummy_var_596: int;
  var vslice_dummy_var_597: int;
  var vslice_dummy_var_598: int;
  var vslice_dummy_var_599: int;
  var vslice_dummy_var_1662: int;

  anon0:
    call {:si_unique_call 4163} vslice_dummy_var_595 := __HAVOC_malloc(4);
    IrpContext_77 := actual_IrpContext_77;
    Dcb_10 := actual_Dcb_10;
    call {:si_unique_call 4164} sdv_do_paged_code_check();
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 4165} FatLookupFileAllocationSize#1(IrpContext_77, Dcb_10);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    goto L7;

  L7:
    call {:si_unique_call 4166} FatCheckFreeDirentBitmap(IrpContext_77, Dcb_10);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    DirectoryFileObject_5 := 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    call {:si_unique_call 4167} ExAcquireFastMutexUnsafe(0);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc Tmp_1577;
    assume {:nonnull} Tmp_1577 != 0;
    assume Tmp_1577 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    DirectoryFileObject_5 := 0;
    goto L48;

  L48:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc vslice_dummy_var_1662;
    call {:si_unique_call 4168} FatPreallocateCloseContext(vslice_dummy_var_1662);
    call {:si_unique_call 4169} FatSetFileObject(DirectoryFileObject_5, 6, Dcb_10, 0);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc Tmp_1585;
    call {:si_unique_call 4170} Tmp_1583 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    assume {:nonnull} Tmp_1585 != 0;
    assume Tmp_1585 > 0;
    call {:si_unique_call 4171} vslice_dummy_var_597 := sdv_InterlockedIncrement(Tmp_1583);
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    assume {:nonnull} Tmp_1585 != 0;
    assume Tmp_1585 > 0;
    Tmp_1578 := Dcb_10;
    assume {:nonnull} Tmp_1578 != 0;
    assume Tmp_1578 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc Tmp_1579;
    call {:si_unique_call 4172} Tmp_1583 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1579 != 0;
    assume Tmp_1579 > 0;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    call {:si_unique_call 4173} vslice_dummy_var_598 := sdv_InterlockedIncrement(Tmp_1583);
    assume {:nonnull} Tmp_1579 != 0;
    assume Tmp_1579 > 0;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    goto L58;

  L58:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc Tmp_1580;
    assume {:nonnull} DirectoryFileObject_5 != 0;
    assume DirectoryFileObject_5 > 0;
    assume {:nonnull} Tmp_1580 != 0;
    assume Tmp_1580 > 0;
    assume {:nonnull} DirectoryFileObject_5 != 0;
    assume DirectoryFileObject_5 > 0;
    assume {:nonnull} DirectoryFileObject_5 != 0;
    assume DirectoryFileObject_5 > 0;
    assume {:nonnull} DirectoryFileObject_5 != 0;
    assume DirectoryFileObject_5 > 0;
    call {:si_unique_call 4174} Tmp_1583 := __HAVOC_malloc(4);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    call {:si_unique_call 4175} vslice_dummy_var_599 := sdv_InterlockedIncrement(Tmp_1583);
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    DirectoryFileObject_5 := 0;
    goto L29;

  L29:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    call {:si_unique_call 4176} ExReleaseFastMutexUnsafe(0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} DirectoryFileObject_5 != 0;
    call {:si_unique_call 4177} vslice_dummy_var_596 := sdv_ObDereferenceObject(0);
    goto L16;

  L16:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    havoc Tmp_1582;
    assume {:nonnull} Tmp_1582 != 0;
    assume Tmp_1582 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    assume {:nonnull} Dcb_10 != 0;
    assume Dcb_10 > 0;
    goto L1;

  L1:
    return;

  anon19_Then:
    goto L1;

  anon18_Then:
    assume {:partition} DirectoryFileObject_5 == 0;
    goto L16;

  anon21_Then:
    goto L58;

  anon20_Then:
    call {:si_unique_call 4178} DirectoryFileObject_5 := __HAVOC_malloc(1);
    goto L48;

  anon17_Then:
    goto L29;

  anon16_Then:
    goto L16;

  anon15_Then:
    goto L7;
}



procedure {:origName "FatOpenDirectoryFile"} FatOpenDirectoryFile#1(actual_IrpContext_77: int, actual_Dcb_10: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLookupFileAllocationSize"} FatLookupFileAllocationSize#0(actual_IrpContext_23: int, actual_FcbOrDcb_1: int)
{
  var {:dopa} {:scalar} Lbo_2: int;
  var {:dopa} {:scalar} DontCare_1: int;
  var {:dopa} {:scalar} ByteCount_2: int;
  var {:pointer} IrpContext_23: int;
  var {:pointer} FcbOrDcb_1: int;
  var vslice_dummy_var_600: int;

  anon0:
    call {:si_unique_call 4179} Lbo_2 := __HAVOC_malloc(4);
    call {:si_unique_call 4180} DontCare_1 := __HAVOC_malloc(4);
    call {:si_unique_call 4181} vslice_dummy_var_600 := __HAVOC_malloc(4);
    call {:si_unique_call 4182} ByteCount_2 := __HAVOC_malloc(4);
    IrpContext_23 := actual_IrpContext_23;
    FcbOrDcb_1 := actual_FcbOrDcb_1;
    call {:si_unique_call 4183} sdv_do_paged_code_check();
    call {:si_unique_call 4184} FatLookupFileAllocation#0(IrpContext_23, FcbOrDcb_1, -2, Lbo_2, ByteCount_2, DontCare_1, DontCare_1, 0);
    assume {:nonnull} FcbOrDcb_1 != 0;
    assume FcbOrDcb_1 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 4185} FatPopUpFileCorrupt#0(IrpContext_23, FcbOrDcb_1);
    assume {:nonnull} IrpContext_23 != 0;
    assume IrpContext_23 > 0;
    call {:si_unique_call 4186} ExRaiseStatus(-1073741566);
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "FatLookupFileAllocationSize"} FatLookupFileAllocationSize#0(actual_IrpContext_23: int, actual_FcbOrDcb_1: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLookupFileAllocationSize"} FatLookupFileAllocationSize#1(actual_IrpContext_23: int, actual_FcbOrDcb_1: int)
{
  var {:dopa} {:scalar} Lbo_2: int;
  var {:dopa} {:scalar} DontCare_1: int;
  var {:dopa} {:scalar} ByteCount_2: int;
  var {:pointer} IrpContext_23: int;
  var {:pointer} FcbOrDcb_1: int;
  var vslice_dummy_var_601: int;

  anon0:
    call {:si_unique_call 4187} Lbo_2 := __HAVOC_malloc(4);
    call {:si_unique_call 4188} DontCare_1 := __HAVOC_malloc(4);
    call {:si_unique_call 4189} vslice_dummy_var_601 := __HAVOC_malloc(4);
    call {:si_unique_call 4190} ByteCount_2 := __HAVOC_malloc(4);
    IrpContext_23 := actual_IrpContext_23;
    FcbOrDcb_1 := actual_FcbOrDcb_1;
    call {:si_unique_call 4191} sdv_do_paged_code_check();
    call {:si_unique_call 4192} FatLookupFileAllocation#1(IrpContext_23, FcbOrDcb_1, -2, Lbo_2, ByteCount_2, DontCare_1, DontCare_1, 0);
    assume {:nonnull} FcbOrDcb_1 != 0;
    assume FcbOrDcb_1 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 4193} FatPopUpFileCorrupt#1(IrpContext_23, FcbOrDcb_1);
    assume {:nonnull} IrpContext_23 != 0;
    assume IrpContext_23 > 0;
    call {:si_unique_call 4194} ExRaiseStatus(-1073741566);
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "FatLookupFileAllocationSize"} FatLookupFileAllocationSize#1(actual_IrpContext_23: int, actual_FcbOrDcb_1: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLookupFileAllocation"} FatLookupFileAllocation#0(actual_IrpContext_22: int, actual_FcbOrDcb: int, actual_Vbo: int, actual_Lbo_1: int, actual_ByteCount_1: int, actual_Allocated: int, actual_EndOnMax: int, actual_Index: int)
{
  var {:scalar} BytesOnVolume: int;
  var {:scalar} sdv_122: int;
  var {:scalar} Tmp_257: int;
  var {:dopa} {:scalar} CurrentLbo: int;
  var {:scalar} Tmp_258: int;
  var {:scalar} sdv_123: int;
  var {:dopa} {:scalar} Runs: int;
  var {:scalar} Context: int;
  var {:scalar} sdv_124: int;
  var {:scalar} LastCluster: int;
  var {:pointer} Vcb_15: int;
  var {:dopa} {:scalar} FatEntry_1: int;
  var {:scalar} FirstLboOfCurrentRun: int;
  var {:scalar} FirstVboOfCurrentRun: int;
  var {:dopa} {:scalar} CurrentVbo: int;
  var {:scalar} BytesPerCluster_1: int;
  var {:scalar} PriorLbo: int;
  var {:pointer} IrpContext_22: int;
  var {:pointer} FcbOrDcb: int;
  var {:scalar} Vbo: int;
  var {:pointer} Lbo_1: int;
  var {:pointer} ByteCount_1: int;
  var {:pointer} Allocated: int;
  var {:pointer} EndOnMax: int;
  var {:pointer} Index: int;
  var boogieTmp: int;
  var vslice_dummy_var_602: int;
  var vslice_dummy_var_603: int;
  var vslice_dummy_var_604: int;
  var vslice_dummy_var_1663: int;
  var vslice_dummy_var_1664: int;

  anon0:
    call {:si_unique_call 4195} BytesOnVolume := __HAVOC_malloc(20);
    call {:si_unique_call 4196} vslice_dummy_var_602 := __HAVOC_malloc(4);
    call {:si_unique_call 4197} CurrentLbo := __HAVOC_malloc(4);
    call {:si_unique_call 4198} Runs := __HAVOC_malloc(4);
    call {:si_unique_call 4199} Context := __HAVOC_malloc(12);
    call {:si_unique_call 4200} FatEntry_1 := __HAVOC_malloc(4);
    call {:si_unique_call 4201} CurrentVbo := __HAVOC_malloc(4);
    IrpContext_22 := actual_IrpContext_22;
    FcbOrDcb := actual_FcbOrDcb;
    Vbo := actual_Vbo;
    Lbo_1 := actual_Lbo_1;
    ByteCount_1 := actual_ByteCount_1;
    Allocated := actual_Allocated;
    EndOnMax := actual_EndOnMax;
    Index := actual_Index;
    call {:si_unique_call 4202} sdv_do_paged_code_check();
    assume {:nonnull} Context != 0;
    assume Context > 0;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    havoc Vcb_15;
    assume {:nonnull} EndOnMax != 0;
    assume EndOnMax > 0;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    call {:si_unique_call 4203} sdv_122 := FatLookupMcbEntry(Vcb_15, Mcb__FCB(FcbOrDcb), Vbo, Lbo_1, ByteCount_1, Index);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_122 != 0;
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    assume {:nonnull} ByteCount_1 != 0;
    assume ByteCount_1 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} EndOnMax != 0;
    assume EndOnMax > 0;
    goto L1;

  L1:
    return;

  anon69_Then:
    goto L1;

  anon49_Then:
    assume {:partition} sdv_122 == 0;
    call {:si_unique_call 4204} BytesPerCluster_1 := corral_nondet();
    assume {:nonnull} BytesOnVolume != 0;
    assume BytesOnVolume > 0;
    assume {:nonnull} Vcb_15 != 0;
    assume Vcb_15 > 0;
    LastCluster := 0;
    FirstLboOfCurrentRun := 0;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    goto L1;

  anon70_Then:
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    call {:si_unique_call 4205} sdv_123 := FatLookupLastMcbEntry(Vcb_15, Mcb__FCB(FcbOrDcb), CurrentVbo, CurrentLbo, Runs);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_123 != 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    assume {:nonnull} Runs != 0;
    assume Runs > 0;
    goto L44;

  L44:
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    assume {:nonnull} FatEntry_1 != 0;
    assume FatEntry_1 > 0;
    call {:si_unique_call 4206} boogieTmp := corral_nondet();
    goto L46;

  L46:
    call {:si_unique_call 4207} Tmp_257, Tmp_258, sdv_124, LastCluster, FirstLboOfCurrentRun, FirstVboOfCurrentRun, PriorLbo, boogieTmp, vslice_dummy_var_603, vslice_dummy_var_604 := FatLookupFileAllocation#0_loop_L46(BytesOnVolume, Tmp_257, CurrentLbo, Tmp_258, Runs, Context, sdv_124, LastCluster, Vcb_15, FatEntry_1, FirstLboOfCurrentRun, FirstVboOfCurrentRun, CurrentVbo, BytesPerCluster_1, PriorLbo, IrpContext_22, FcbOrDcb, Vbo, EndOnMax, boogieTmp, vslice_dummy_var_603, vslice_dummy_var_604);
    goto L46_last;

  L46_last:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} LastCluster != 0;
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    assume {:nonnull} Lbo_1 != 0;
    assume Lbo_1 > 0;
    assume {:nonnull} ByteCount_1 != 0;
    assume ByteCount_1 > 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Index != 0;
    assume {:nonnull} Index != 0;
    assume Index > 0;
    assume {:nonnull} Runs != 0;
    assume Runs > 0;
    goto L54;

  L54:
    assume {:nonnull} Context != 0;
    assume Context > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Context != 0;
    assume Context > 0;
    goto L1;

  anon53_Then:
    goto L1;

  anon71_Then:
    assume {:partition} Index == 0;
    goto L54;

  anon52_Then:
    assume {:partition} LastCluster == 0;
    assume {:nonnull} FatEntry_1 != 0;
    assume FatEntry_1 > 0;
    havoc vslice_dummy_var_1663;
    call {:si_unique_call 4208} FatLookupFatEntry(IrpContext_22, Vcb_15, vslice_dummy_var_1663, FatEntry_1, Context);
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    havoc PriorLbo;
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    call {:si_unique_call 4209} boogieTmp := corral_nondet();
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    assume {:nonnull} FatEntry_1 != 0;
    assume FatEntry_1 > 0;
    havoc vslice_dummy_var_1664;
    call {:si_unique_call 4210} sdv_124 := FatInterpretClusterType(Vcb_15, vslice_dummy_var_1664);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_124 != 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} sdv_124 != 1;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} sdv_124 != 2;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_124 != 3;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_124 == 4;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} BytesOnVolume != 0;
    assume BytesOnVolume > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L86;

  L86:
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} FirstLboOfCurrentRun != 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    havoc Tmp_258;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    call {:si_unique_call 4211} vslice_dummy_var_604 := FatAddMcbEntry(Vcb_15, Mcb__FCB(FcbOrDcb), FirstVboOfCurrentRun, FirstLboOfCurrentRun, Tmp_258);
    assume {:nonnull} Runs != 0;
    assume Runs > 0;
    goto L89;

  L89:
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    LastCluster := 1;
    goto anon61_Else_dummy;

  anon61_Else_dummy:
    assume false;
    return;

  anon61_Then:
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    havoc FirstVboOfCurrentRun;
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    havoc FirstLboOfCurrentRun;
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    assume false;
    return;

  anon60_Then:
    assume {:partition} FirstLboOfCurrentRun == 0;
    goto L89;

  anon59_Then:
    goto anon59_Then_dummy;

  anon59_Then_dummy:
    assume false;
    return;

  anon57_Then:
    assume {:nonnull} BytesOnVolume != 0;
    assume BytesOnVolume > 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L86;

  anon58_Then:
    goto L81;

  L81:
    call {:si_unique_call 4212} FatPopUpFileCorrupt#0(IrpContext_22, FcbOrDcb);
    assume {:nonnull} IrpContext_22 != 0;
    assume IrpContext_22 > 0;
    call {:si_unique_call 4213} ExRaiseStatus(-1073741566);
    goto L86;

  anon56_Then:
    goto L81;

  anon65_Then:
    assume {:partition} sdv_124 != 4;
    call {:si_unique_call 4214} KeBugCheckEx(35, 132170, 0, 0, 0);
    goto anon65_Then_dummy;

  anon65_Then_dummy:
    assume false;
    return;

  anon66_Then:
    assume {:partition} sdv_124 == 3;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L103;

  L103:
    LastCluster := 1;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} FirstLboOfCurrentRun != 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    havoc Tmp_257;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    call {:si_unique_call 4215} vslice_dummy_var_603 := FatAddMcbEntry(Vcb_15, Mcb__FCB(FcbOrDcb), FirstVboOfCurrentRun, FirstLboOfCurrentRun, Tmp_257);
    assume {:nonnull} Runs != 0;
    assume Runs > 0;
    goto L105;

  L105:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Vbo == -2;
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    goto L54;

  anon62_Then:
    assume {:partition} Vbo != -2;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} EndOnMax != 0;
    assume EndOnMax > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    goto L54;

  anon64_Then:
    goto anon64_Then_dummy;

  anon64_Then_dummy:
    assume false;
    return;

  anon63_Then:
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    assume false;
    return;

  anon72_Then:
    assume {:partition} FirstLboOfCurrentRun == 0;
    goto L105;

  anon55_Then:
    assume {:nonnull} EndOnMax != 0;
    assume EndOnMax > 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto L103;

  anon67_Then:
    assume {:partition} sdv_124 == 2;
    goto L76;

  L76:
    call {:si_unique_call 4216} FatPopUpFileCorrupt#0(IrpContext_22, FcbOrDcb);
    assume {:nonnull} IrpContext_22 != 0;
    assume IrpContext_22 > 0;
    call {:si_unique_call 4217} ExRaiseStatus(-1073741566);
    goto L76_dummy;

  L76_dummy:
    assume false;
    return;

  anon68_Then:
    assume {:partition} sdv_124 == 1;
    goto L76;

  anon54_Then:
    assume {:partition} sdv_124 == 0;
    goto L76;

  anon50_Then:
    assume {:partition} sdv_123 == 0;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    call {:si_unique_call 4218} boogieTmp := corral_nondet();
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    havoc FirstVboOfCurrentRun;
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    havoc FirstLboOfCurrentRun;
    assume {:nonnull} Runs != 0;
    assume Runs > 0;
    goto L44;

  anon51_Then:
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    goto L1;
}



procedure {:origName "FatLookupFileAllocation"} FatLookupFileAllocation#0(actual_IrpContext_22: int, actual_FcbOrDcb: int, actual_Vbo: int, actual_Lbo_1: int, actual_ByteCount_1: int, actual_Allocated: int, actual_EndOnMax: int, actual_Index: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLookupFileAllocation"} FatLookupFileAllocation#1(actual_IrpContext_22: int, actual_FcbOrDcb: int, actual_Vbo: int, actual_Lbo_1: int, actual_ByteCount_1: int, actual_Allocated: int, actual_EndOnMax: int, actual_Index: int)
{
  var {:scalar} BytesOnVolume: int;
  var {:scalar} sdv_122: int;
  var {:scalar} Tmp_257: int;
  var {:dopa} {:scalar} CurrentLbo: int;
  var {:scalar} Tmp_258: int;
  var {:scalar} sdv_123: int;
  var {:dopa} {:scalar} Runs: int;
  var {:scalar} Context: int;
  var {:scalar} sdv_124: int;
  var {:scalar} LastCluster: int;
  var {:pointer} Vcb_15: int;
  var {:dopa} {:scalar} FatEntry_1: int;
  var {:scalar} FirstLboOfCurrentRun: int;
  var {:scalar} FirstVboOfCurrentRun: int;
  var {:dopa} {:scalar} CurrentVbo: int;
  var {:scalar} BytesPerCluster_1: int;
  var {:scalar} PriorLbo: int;
  var {:pointer} IrpContext_22: int;
  var {:pointer} FcbOrDcb: int;
  var {:scalar} Vbo: int;
  var {:pointer} Lbo_1: int;
  var {:pointer} ByteCount_1: int;
  var {:pointer} Allocated: int;
  var {:pointer} EndOnMax: int;
  var {:pointer} Index: int;
  var boogieTmp: int;
  var vslice_dummy_var_605: int;
  var vslice_dummy_var_606: int;
  var vslice_dummy_var_607: int;
  var vslice_dummy_var_1665: int;
  var vslice_dummy_var_1666: int;

  anon0:
    call {:si_unique_call 4219} BytesOnVolume := __HAVOC_malloc(20);
    call {:si_unique_call 4220} vslice_dummy_var_605 := __HAVOC_malloc(4);
    call {:si_unique_call 4221} CurrentLbo := __HAVOC_malloc(4);
    call {:si_unique_call 4222} Runs := __HAVOC_malloc(4);
    call {:si_unique_call 4223} Context := __HAVOC_malloc(12);
    call {:si_unique_call 4224} FatEntry_1 := __HAVOC_malloc(4);
    call {:si_unique_call 4225} CurrentVbo := __HAVOC_malloc(4);
    IrpContext_22 := actual_IrpContext_22;
    FcbOrDcb := actual_FcbOrDcb;
    Vbo := actual_Vbo;
    Lbo_1 := actual_Lbo_1;
    ByteCount_1 := actual_ByteCount_1;
    Allocated := actual_Allocated;
    EndOnMax := actual_EndOnMax;
    Index := actual_Index;
    call {:si_unique_call 4226} sdv_do_paged_code_check();
    assume {:nonnull} Context != 0;
    assume Context > 0;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    havoc Vcb_15;
    assume {:nonnull} EndOnMax != 0;
    assume EndOnMax > 0;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    call {:si_unique_call 4227} sdv_122 := FatLookupMcbEntry(Vcb_15, Mcb__FCB(FcbOrDcb), Vbo, Lbo_1, ByteCount_1, Index);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_122 != 0;
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    assume {:nonnull} ByteCount_1 != 0;
    assume ByteCount_1 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} EndOnMax != 0;
    assume EndOnMax > 0;
    goto L1;

  L1:
    return;

  anon69_Then:
    goto L1;

  anon49_Then:
    assume {:partition} sdv_122 == 0;
    call {:si_unique_call 4228} BytesPerCluster_1 := corral_nondet();
    assume {:nonnull} BytesOnVolume != 0;
    assume BytesOnVolume > 0;
    assume {:nonnull} Vcb_15 != 0;
    assume Vcb_15 > 0;
    LastCluster := 0;
    FirstLboOfCurrentRun := 0;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    goto L1;

  anon70_Then:
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    call {:si_unique_call 4229} sdv_123 := FatLookupLastMcbEntry(Vcb_15, Mcb__FCB(FcbOrDcb), CurrentVbo, CurrentLbo, Runs);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_123 != 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    assume {:nonnull} Runs != 0;
    assume Runs > 0;
    goto L44;

  L44:
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    assume {:nonnull} FatEntry_1 != 0;
    assume FatEntry_1 > 0;
    call {:si_unique_call 4230} boogieTmp := corral_nondet();
    goto L46;

  L46:
    call {:si_unique_call 4231} Tmp_257, Tmp_258, sdv_124, LastCluster, FirstLboOfCurrentRun, FirstVboOfCurrentRun, PriorLbo, boogieTmp, vslice_dummy_var_606, vslice_dummy_var_607 := FatLookupFileAllocation#1_loop_L46(BytesOnVolume, Tmp_257, CurrentLbo, Tmp_258, Runs, Context, sdv_124, LastCluster, Vcb_15, FatEntry_1, FirstLboOfCurrentRun, FirstVboOfCurrentRun, CurrentVbo, BytesPerCluster_1, PriorLbo, IrpContext_22, FcbOrDcb, Vbo, EndOnMax, boogieTmp, vslice_dummy_var_606, vslice_dummy_var_607);
    goto L46_last;

  L46_last:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} LastCluster != 0;
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    assume {:nonnull} Lbo_1 != 0;
    assume Lbo_1 > 0;
    assume {:nonnull} ByteCount_1 != 0;
    assume ByteCount_1 > 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Index != 0;
    assume {:nonnull} Index != 0;
    assume Index > 0;
    assume {:nonnull} Runs != 0;
    assume Runs > 0;
    goto L54;

  L54:
    assume {:nonnull} Context != 0;
    assume Context > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Context != 0;
    assume Context > 0;
    goto L1;

  anon53_Then:
    goto L1;

  anon71_Then:
    assume {:partition} Index == 0;
    goto L54;

  anon52_Then:
    assume {:partition} LastCluster == 0;
    assume {:nonnull} FatEntry_1 != 0;
    assume FatEntry_1 > 0;
    havoc vslice_dummy_var_1665;
    call {:si_unique_call 4232} FatLookupFatEntry(IrpContext_22, Vcb_15, vslice_dummy_var_1665, FatEntry_1, Context);
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    havoc PriorLbo;
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    call {:si_unique_call 4233} boogieTmp := corral_nondet();
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    assume {:nonnull} FatEntry_1 != 0;
    assume FatEntry_1 > 0;
    havoc vslice_dummy_var_1666;
    call {:si_unique_call 4234} sdv_124 := FatInterpretClusterType(Vcb_15, vslice_dummy_var_1666);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_124 != 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} sdv_124 != 1;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} sdv_124 != 2;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_124 != 3;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_124 == 4;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} BytesOnVolume != 0;
    assume BytesOnVolume > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L86;

  L86:
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} FirstLboOfCurrentRun != 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    havoc Tmp_258;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    call {:si_unique_call 4235} vslice_dummy_var_607 := FatAddMcbEntry(Vcb_15, Mcb__FCB(FcbOrDcb), FirstVboOfCurrentRun, FirstLboOfCurrentRun, Tmp_258);
    assume {:nonnull} Runs != 0;
    assume Runs > 0;
    goto L89;

  L89:
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    LastCluster := 1;
    goto anon61_Else_dummy;

  anon61_Else_dummy:
    assume false;
    return;

  anon61_Then:
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    havoc FirstVboOfCurrentRun;
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    havoc FirstLboOfCurrentRun;
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    assume false;
    return;

  anon60_Then:
    assume {:partition} FirstLboOfCurrentRun == 0;
    goto L89;

  anon59_Then:
    goto anon59_Then_dummy;

  anon59_Then_dummy:
    assume false;
    return;

  anon57_Then:
    assume {:nonnull} BytesOnVolume != 0;
    assume BytesOnVolume > 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L86;

  anon58_Then:
    goto L81;

  L81:
    call {:si_unique_call 4236} FatPopUpFileCorrupt#1(IrpContext_22, FcbOrDcb);
    assume {:nonnull} IrpContext_22 != 0;
    assume IrpContext_22 > 0;
    call {:si_unique_call 4237} ExRaiseStatus(-1073741566);
    goto L86;

  anon56_Then:
    goto L81;

  anon65_Then:
    assume {:partition} sdv_124 != 4;
    call {:si_unique_call 4238} KeBugCheckEx(35, 132170, 0, 0, 0);
    goto anon65_Then_dummy;

  anon65_Then_dummy:
    assume false;
    return;

  anon66_Then:
    assume {:partition} sdv_124 == 3;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L103;

  L103:
    LastCluster := 1;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} FirstLboOfCurrentRun != 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    havoc Tmp_257;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    call {:si_unique_call 4239} vslice_dummy_var_606 := FatAddMcbEntry(Vcb_15, Mcb__FCB(FcbOrDcb), FirstVboOfCurrentRun, FirstLboOfCurrentRun, Tmp_257);
    assume {:nonnull} Runs != 0;
    assume Runs > 0;
    goto L105;

  L105:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Vbo == -2;
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    goto L54;

  anon62_Then:
    assume {:partition} Vbo != -2;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} EndOnMax != 0;
    assume EndOnMax > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    goto L54;

  anon64_Then:
    goto anon64_Then_dummy;

  anon64_Then_dummy:
    assume false;
    return;

  anon63_Then:
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    assume false;
    return;

  anon72_Then:
    assume {:partition} FirstLboOfCurrentRun == 0;
    goto L105;

  anon55_Then:
    assume {:nonnull} EndOnMax != 0;
    assume EndOnMax > 0;
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    goto L103;

  anon67_Then:
    assume {:partition} sdv_124 == 2;
    goto L76;

  L76:
    call {:si_unique_call 4240} FatPopUpFileCorrupt#1(IrpContext_22, FcbOrDcb);
    assume {:nonnull} IrpContext_22 != 0;
    assume IrpContext_22 > 0;
    call {:si_unique_call 4241} ExRaiseStatus(-1073741566);
    goto L76_dummy;

  L76_dummy:
    assume false;
    return;

  anon68_Then:
    assume {:partition} sdv_124 == 1;
    goto L76;

  anon54_Then:
    assume {:partition} sdv_124 == 0;
    goto L76;

  anon50_Then:
    assume {:partition} sdv_123 == 0;
    assume {:nonnull} FcbOrDcb != 0;
    assume FcbOrDcb > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    call {:si_unique_call 4242} boogieTmp := corral_nondet();
    assume {:nonnull} CurrentVbo != 0;
    assume CurrentVbo > 0;
    havoc FirstVboOfCurrentRun;
    assume {:nonnull} CurrentLbo != 0;
    assume CurrentLbo > 0;
    havoc FirstLboOfCurrentRun;
    assume {:nonnull} Runs != 0;
    assume Runs > 0;
    goto L44;

  anon51_Then:
    assume {:nonnull} Allocated != 0;
    assume Allocated > 0;
    goto L1;
}



procedure {:origName "FatLookupFileAllocation"} FatLookupFileAllocation#1(actual_IrpContext_22: int, actual_FcbOrDcb: int, actual_Vbo: int, actual_Lbo_1: int, actual_ByteCount_1: int, actual_Allocated: int, actual_EndOnMax: int, actual_Index: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPopUpFileCorrupt"} FatPopUpFileCorrupt#0(actual_IrpContext_148: int, actual_Fcb_57: int)
{
  var {:pointer} Tmp_2340: int;
  var {:pointer} Tmp_2341: int;
  var {:scalar} sdv_1426: int;
  var {:pointer} IrpContext_148: int;
  var {:pointer} Fcb_57: int;
  var vslice_dummy_var_608: int;
  var vslice_dummy_var_609: int;

  anon0:
    call {:si_unique_call 4243} vslice_dummy_var_608 := __HAVOC_malloc(4);
    IrpContext_148 := actual_IrpContext_148;
    Fcb_57 := actual_Fcb_57;
    Tmp_2340 := Fcb_57;
    assume {:nonnull} Tmp_2340 != 0;
    assume Tmp_2340 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Fcb_57 != 0;
    assume Fcb_57 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto L10;

  L10:
    assume {:nonnull} IrpContext_148 != 0;
    assume IrpContext_148 > 0;
    call {:si_unique_call 4244} sdv_1426 := corral_nondet();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_1426 != 0;
    goto L16;

  L16:
    call {:si_unique_call 4245} vslice_dummy_var_609 := IoRaiseInformationalHardError(-1073741566, 0, 0);
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} sdv_1426 == 0;
    assume {:nonnull} IrpContext_148 != 0;
    assume IrpContext_148 > 0;
    havoc Tmp_2341;
    assume {:nonnull} Tmp_2341 != 0;
    assume Tmp_2341 > 0;
    goto L16;

  anon7_Then:
    call {:si_unique_call 4246} FatSetFullFileNameInFcb#0(IrpContext_148, Fcb_57);
    goto L10;

  anon9_Then:
    goto L1;
}



procedure {:origName "FatPopUpFileCorrupt"} FatPopUpFileCorrupt#0(actual_IrpContext_148: int, actual_Fcb_57: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatPopUpFileCorrupt"} FatPopUpFileCorrupt#1(actual_IrpContext_148: int, actual_Fcb_57: int)
{
  var {:pointer} Tmp_2340: int;
  var {:pointer} Tmp_2341: int;
  var {:scalar} sdv_1426: int;
  var {:pointer} IrpContext_148: int;
  var {:pointer} Fcb_57: int;
  var vslice_dummy_var_610: int;
  var vslice_dummy_var_611: int;

  anon0:
    call {:si_unique_call 4247} vslice_dummy_var_610 := __HAVOC_malloc(4);
    IrpContext_148 := actual_IrpContext_148;
    Fcb_57 := actual_Fcb_57;
    Tmp_2340 := Fcb_57;
    assume {:nonnull} Tmp_2340 != 0;
    assume Tmp_2340 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Fcb_57 != 0;
    assume Fcb_57 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto L10;

  L10:
    assume {:nonnull} IrpContext_148 != 0;
    assume IrpContext_148 > 0;
    call {:si_unique_call 4248} sdv_1426 := corral_nondet();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_1426 != 0;
    goto L16;

  L16:
    call {:si_unique_call 4249} vslice_dummy_var_611 := IoRaiseInformationalHardError(-1073741566, 0, 0);
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} sdv_1426 == 0;
    assume {:nonnull} IrpContext_148 != 0;
    assume IrpContext_148 > 0;
    havoc Tmp_2341;
    assume {:nonnull} Tmp_2341 != 0;
    assume Tmp_2341 > 0;
    goto L16;

  anon7_Then:
    call {:si_unique_call 4250} FatSetFullFileNameInFcb#1(IrpContext_148, Fcb_57);
    goto L10;

  anon9_Then:
    goto L1;
}



procedure {:origName "FatPopUpFileCorrupt"} FatPopUpFileCorrupt#1(actual_IrpContext_148: int, actual_Fcb_57: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetFullFileNameInFcb"} FatSetFullFileNameInFcb#0(actual_IrpContext_140: int, actual_Fcb_56: int)
{
  var {:scalar} PathLength: int;
  var {:pointer} TmpFcb: int;
  var {:scalar} Lfn_8: int;
  var {:pointer} sdv_1412: int;
  var {:scalar} Tmp_2254: int;
  var {:scalar} Tmp_2255: int;
  var {:pointer} sdv_1413: int;
  var {:pointer} Tmp_2256: int;
  var {:scalar} sdv_1415: int;
  var {:pointer} sdv_1416: int;
  var {:pointer} StopFcb: int;
  var {:pointer} TmpBuffer: int;
  var {:pointer} IrpContext_140: int;
  var {:pointer} Fcb_56: int;
  var vslice_dummy_var_612: int;

  anon0:
    call {:si_unique_call 4251} vslice_dummy_var_612 := __HAVOC_malloc(4);
    call {:si_unique_call 4252} Lfn_8 := __HAVOC_malloc(12);
    IrpContext_140 := actual_IrpContext_140;
    Fcb_56 := actual_Fcb_56;
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    TmpFcb := Fcb_56;
    PathLength := 0;
    assume {:nonnull} Lfn_8 != 0;
    assume Lfn_8 > 0;
    assume {:nonnull} Lfn_8 != 0;
    assume Lfn_8 > 0;
    call {:si_unique_call 4253} sdv_1412 := ExAllocatePoolWithTag(17, 520, -294362810);
    assume {:nonnull} Lfn_8 != 0;
    assume Lfn_8 > 0;
    goto L17;

  L17:
    call {:si_unique_call 4254} PathLength, TmpFcb, Tmp_2256 := FatSetFullFileNameInFcb#0_loop_L17(PathLength, TmpFcb, Tmp_2256, Fcb_56);
    goto L17_last;

  L17_last:
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    havoc Tmp_2256;
    assume {:nonnull} Tmp_2256 != 0;
    assume Tmp_2256 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} TmpFcb != Fcb_56;
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    havoc PathLength;
    call {:si_unique_call 4255} sdv_1413 := ExAllocatePoolWithTag(17, PathLength, -294362810);
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    havoc Tmp_2255;
    call {:si_unique_call 4256} sdv_RtlCopyMemory(0, 0, Tmp_2255);
    goto L18;

  L18:
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L48;

  L48:
    StopFcb := TmpFcb;
    TmpFcb := Fcb_56;
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    havoc TmpBuffer;
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto L53;

  L53:
    call {:si_unique_call 4257} TmpFcb, Tmp_2254 := FatSetFullFileNameInFcb#0_loop_L53(TmpFcb, Lfn_8, Tmp_2254, StopFcb, TmpBuffer, IrpContext_140);
    goto L53_last;

  L53_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} TmpFcb != StopFcb;
    call {:si_unique_call 4258} FatGetUnicodeNameFromFcb#0(IrpContext_140, TmpFcb, Lfn_8);
    assume {:nonnull} Lfn_8 != 0;
    assume Lfn_8 > 0;
    havoc Tmp_2254;
    call {:si_unique_call 4259} sdv_RtlCopyMemory(0, 0, Tmp_2254);
    assume {:nonnull} TmpBuffer != 0;
    assume TmpBuffer > 0;
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    havoc TmpFcb;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} TmpFcb == StopFcb;
    call {:si_unique_call 4260} sdv_1415 := sdv_AbnormalTermination();
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_1415 != 0;
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    call {:si_unique_call 4261} sdv_ExFreePool(0);
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto L69;

  L69:
    call {:si_unique_call 4262} sdv_ExFreePool(0);
    goto L1;

  L1:
    return;

  anon23_Then:
    goto L69;

  anon22_Then:
    assume {:partition} sdv_1415 == 0;
    goto L69;

  anon18_Then:
    call {:si_unique_call 4263} sdv_1416 := ExAllocatePoolWithTag(17, PathLength, -294362810);
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto L48;

  anon20_Then:
    goto L20;

  L20:
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    havoc PathLength;
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    havoc TmpFcb;
    goto L20_dummy;

  L20_dummy:
    assume false;
    return;

  anon19_Then:
    assume {:partition} TmpFcb == Fcb_56;
    goto L20;

  anon24_Then:
    goto L18;

  anon17_Then:
    goto L1;
}



procedure {:origName "FatSetFullFileNameInFcb"} FatSetFullFileNameInFcb#0(actual_IrpContext_140: int, actual_Fcb_56: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatSetFullFileNameInFcb"} FatSetFullFileNameInFcb#1(actual_IrpContext_140: int, actual_Fcb_56: int)
{
  var {:scalar} PathLength: int;
  var {:pointer} TmpFcb: int;
  var {:scalar} Lfn_8: int;
  var {:pointer} sdv_1412: int;
  var {:scalar} Tmp_2254: int;
  var {:scalar} Tmp_2255: int;
  var {:pointer} sdv_1413: int;
  var {:pointer} Tmp_2256: int;
  var {:scalar} sdv_1415: int;
  var {:pointer} sdv_1416: int;
  var {:pointer} StopFcb: int;
  var {:pointer} TmpBuffer: int;
  var {:pointer} IrpContext_140: int;
  var {:pointer} Fcb_56: int;
  var vslice_dummy_var_613: int;

  anon0:
    call {:si_unique_call 4264} vslice_dummy_var_613 := __HAVOC_malloc(4);
    call {:si_unique_call 4265} Lfn_8 := __HAVOC_malloc(12);
    IrpContext_140 := actual_IrpContext_140;
    Fcb_56 := actual_Fcb_56;
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    TmpFcb := Fcb_56;
    PathLength := 0;
    assume {:nonnull} Lfn_8 != 0;
    assume Lfn_8 > 0;
    assume {:nonnull} Lfn_8 != 0;
    assume Lfn_8 > 0;
    call {:si_unique_call 4266} sdv_1412 := ExAllocatePoolWithTag(17, 520, -294362810);
    assume {:nonnull} Lfn_8 != 0;
    assume Lfn_8 > 0;
    goto L17;

  L17:
    call {:si_unique_call 4267} PathLength, TmpFcb, Tmp_2256 := FatSetFullFileNameInFcb#1_loop_L17(PathLength, TmpFcb, Tmp_2256, Fcb_56);
    goto L17_last;

  L17_last:
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    havoc Tmp_2256;
    assume {:nonnull} Tmp_2256 != 0;
    assume Tmp_2256 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} TmpFcb != Fcb_56;
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    havoc PathLength;
    call {:si_unique_call 4268} sdv_1413 := ExAllocatePoolWithTag(17, PathLength, -294362810);
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    havoc Tmp_2255;
    call {:si_unique_call 4269} sdv_RtlCopyMemory(0, 0, Tmp_2255);
    goto L18;

  L18:
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L48;

  L48:
    StopFcb := TmpFcb;
    TmpFcb := Fcb_56;
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    havoc TmpBuffer;
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto L53;

  L53:
    call {:si_unique_call 4270} TmpFcb, Tmp_2254 := FatSetFullFileNameInFcb#1_loop_L53(TmpFcb, Lfn_8, Tmp_2254, StopFcb, TmpBuffer, IrpContext_140);
    goto L53_last;

  L53_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} TmpFcb != StopFcb;
    call {:si_unique_call 4271} FatGetUnicodeNameFromFcb#1(IrpContext_140, TmpFcb, Lfn_8);
    assume {:nonnull} Lfn_8 != 0;
    assume Lfn_8 > 0;
    havoc Tmp_2254;
    call {:si_unique_call 4272} sdv_RtlCopyMemory(0, 0, Tmp_2254);
    assume {:nonnull} TmpBuffer != 0;
    assume TmpBuffer > 0;
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    havoc TmpFcb;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} TmpFcb == StopFcb;
    call {:si_unique_call 4273} sdv_1415 := sdv_AbnormalTermination();
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_1415 != 0;
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    call {:si_unique_call 4274} sdv_ExFreePool(0);
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto L69;

  L69:
    call {:si_unique_call 4275} sdv_ExFreePool(0);
    goto L1;

  L1:
    return;

  anon23_Then:
    goto L69;

  anon22_Then:
    assume {:partition} sdv_1415 == 0;
    goto L69;

  anon18_Then:
    call {:si_unique_call 4276} sdv_1416 := ExAllocatePoolWithTag(17, PathLength, -294362810);
    assume {:nonnull} Fcb_56 != 0;
    assume Fcb_56 > 0;
    goto L48;

  anon20_Then:
    goto L20;

  L20:
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    havoc PathLength;
    assume {:nonnull} TmpFcb != 0;
    assume TmpFcb > 0;
    havoc TmpFcb;
    goto L20_dummy;

  L20_dummy:
    assume false;
    return;

  anon19_Then:
    assume {:partition} TmpFcb == Fcb_56;
    goto L20;

  anon24_Then:
    goto L18;

  anon17_Then:
    goto L1;
}



procedure {:origName "FatSetFullFileNameInFcb"} FatSetFullFileNameInFcb#1(actual_IrpContext_140: int, actual_Fcb_56: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetUnicodeNameFromFcb"} FatGetUnicodeNameFromFcb#0(actual_IrpContext_139: int, actual_Fcb_55: int, actual_Lfn_7: int)
{
  var {:pointer} Dirent_22: int;
  var {:pointer} DirentBcb_12: int;
  var {:scalar} ShortName_5: int;
  var {:scalar} LocalCcb_2: int;
  var {:pointer} ShortNameBuffer_4: int;
  var {:dopa} {:scalar} DirentByteOffset_5: int;
  var {:pointer} IrpContext_139: int;
  var {:pointer} Fcb_55: int;
  var {:pointer} Lfn_7: int;
  var vslice_dummy_var_614: int;
  var vslice_dummy_var_615: int;
  var vslice_dummy_var_1667: int;
  var vslice_dummy_var_1668: int;
  var vslice_dummy_var_1669: int;

  anon0:
    call {:si_unique_call 4277} Dirent_22 := __HAVOC_malloc(4);
    call {:si_unique_call 4278} DirentBcb_12 := __HAVOC_malloc(4);
    call {:si_unique_call 4279} ShortName_5 := __HAVOC_malloc(12);
    call {:si_unique_call 4280} LocalCcb_2 := __HAVOC_malloc(88);
    call {:si_unique_call 4281} vslice_dummy_var_614 := __HAVOC_malloc(4);
    call {:si_unique_call 4282} DirentByteOffset_5 := __HAVOC_malloc(4);
    IrpContext_139 := actual_IrpContext_139;
    Fcb_55 := actual_Fcb_55;
    Lfn_7 := actual_Lfn_7;
    call {:si_unique_call 4283} ShortNameBuffer_4 := __HAVOC_malloc(48);
    assume {:nonnull} DirentBcb_12 != 0;
    assume DirentBcb_12 > 0;
    assume {:nonnull} Fcb_55 != 0;
    assume Fcb_55 > 0;
    assume {:nonnull} LocalCcb_2 != 0;
    assume LocalCcb_2 > 0;
    havoc vslice_dummy_var_1667;
    call {:si_unique_call 4284} FatStringTo8dot3(IrpContext_139, vslice_dummy_var_1667, Constant_unnamed_tag_72(OemQueryTemplate__CCB(LocalCcb_2)));
    assume {:nonnull} LocalCcb_2 != 0;
    assume LocalCcb_2 > 0;
    assume {:nonnull} LocalCcb_2 != 0;
    assume LocalCcb_2 > 0;
    assume {:nonnull} LocalCcb_2 != 0;
    assume LocalCcb_2 > 0;
    assume {:nonnull} Fcb_55 != 0;
    assume Fcb_55 > 0;
    havoc vslice_dummy_var_1668;
    havoc vslice_dummy_var_1669;
    call {:si_unique_call 4285} FatLocateDirent#0(IrpContext_139, vslice_dummy_var_1668, LocalCcb_2, vslice_dummy_var_1669, Dirent_22, DirentBcb_12, DirentByteOffset_5, 0, Lfn_7);
    assume {:nonnull} DirentBcb_12 != 0;
    assume DirentBcb_12 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} DirentByteOffset_5 != 0;
    assume DirentByteOffset_5 > 0;
    assume {:nonnull} Fcb_55 != 0;
    assume Fcb_55 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L20;

  L20:
    assume {:nonnull} Lfn_7 != 0;
    assume Lfn_7 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Fcb_55 != 0;
    assume Fcb_55 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} IrpContext_139 != 0;
    assume IrpContext_139 > 0;
    call {:si_unique_call 4286} ExRaiseStatus(-1073741672);
    goto L30;

  L30:
    assume {:nonnull} ShortName_5 != 0;
    assume ShortName_5 > 0;
    assume {:nonnull} ShortName_5 != 0;
    assume ShortName_5 > 0;
    assume {:nonnull} ShortName_5 != 0;
    assume ShortName_5 > 0;
    assume {:nonnull} Dirent_22 != 0;
    assume Dirent_22 > 0;
    call {:si_unique_call 4287} Fat8dot3ToString(IrpContext_139, Mem_T.P_PACKED_DIRENT[Dirent_22], 1, ShortName_5);
    call {:si_unique_call 4288} vslice_dummy_var_615 := RtlOemStringToCountedUnicodeString(0, 0, 0);
    goto L22;

  L22:
    assume {:nonnull} DirentBcb_12 != 0;
    assume DirentBcb_12 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} DirentBcb_12 != 0;
    assume DirentBcb_12 > 0;
    goto L1;

  L1:
    return;

  anon14_Then:
    goto L1;

  anon15_Then:
    goto L30;

  anon13_Then:
    goto L22;

  anon12_Then:
    goto L18;

  L18:
    assume {:nonnull} IrpContext_139 != 0;
    assume IrpContext_139 > 0;
    call {:si_unique_call 4289} ExRaiseStatus(-1073741672);
    goto L20;

  anon11_Then:
    goto L18;
}



procedure {:origName "FatGetUnicodeNameFromFcb"} FatGetUnicodeNameFromFcb#0(actual_IrpContext_139: int, actual_Fcb_55: int, actual_Lfn_7: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetUnicodeNameFromFcb"} FatGetUnicodeNameFromFcb#1(actual_IrpContext_139: int, actual_Fcb_55: int, actual_Lfn_7: int)
{
  var {:pointer} Dirent_22: int;
  var {:pointer} DirentBcb_12: int;
  var {:scalar} ShortName_5: int;
  var {:scalar} LocalCcb_2: int;
  var {:pointer} ShortNameBuffer_4: int;
  var {:dopa} {:scalar} DirentByteOffset_5: int;
  var {:pointer} IrpContext_139: int;
  var {:pointer} Fcb_55: int;
  var {:pointer} Lfn_7: int;
  var vslice_dummy_var_616: int;
  var vslice_dummy_var_617: int;
  var vslice_dummy_var_1670: int;
  var vslice_dummy_var_1671: int;
  var vslice_dummy_var_1672: int;

  anon0:
    call {:si_unique_call 4290} Dirent_22 := __HAVOC_malloc(4);
    call {:si_unique_call 4291} DirentBcb_12 := __HAVOC_malloc(4);
    call {:si_unique_call 4292} ShortName_5 := __HAVOC_malloc(12);
    call {:si_unique_call 4293} LocalCcb_2 := __HAVOC_malloc(88);
    call {:si_unique_call 4294} vslice_dummy_var_616 := __HAVOC_malloc(4);
    call {:si_unique_call 4295} DirentByteOffset_5 := __HAVOC_malloc(4);
    IrpContext_139 := actual_IrpContext_139;
    Fcb_55 := actual_Fcb_55;
    Lfn_7 := actual_Lfn_7;
    call {:si_unique_call 4296} ShortNameBuffer_4 := __HAVOC_malloc(48);
    assume {:nonnull} DirentBcb_12 != 0;
    assume DirentBcb_12 > 0;
    assume {:nonnull} Fcb_55 != 0;
    assume Fcb_55 > 0;
    assume {:nonnull} LocalCcb_2 != 0;
    assume LocalCcb_2 > 0;
    havoc vslice_dummy_var_1670;
    call {:si_unique_call 4297} FatStringTo8dot3(IrpContext_139, vslice_dummy_var_1670, Constant_unnamed_tag_72(OemQueryTemplate__CCB(LocalCcb_2)));
    assume {:nonnull} LocalCcb_2 != 0;
    assume LocalCcb_2 > 0;
    assume {:nonnull} LocalCcb_2 != 0;
    assume LocalCcb_2 > 0;
    assume {:nonnull} LocalCcb_2 != 0;
    assume LocalCcb_2 > 0;
    assume {:nonnull} Fcb_55 != 0;
    assume Fcb_55 > 0;
    havoc vslice_dummy_var_1671;
    havoc vslice_dummy_var_1672;
    call {:si_unique_call 4298} FatLocateDirent#1(IrpContext_139, vslice_dummy_var_1671, LocalCcb_2, vslice_dummy_var_1672, Dirent_22, DirentBcb_12, DirentByteOffset_5, 0, Lfn_7);
    assume {:nonnull} DirentBcb_12 != 0;
    assume DirentBcb_12 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} DirentByteOffset_5 != 0;
    assume DirentByteOffset_5 > 0;
    assume {:nonnull} Fcb_55 != 0;
    assume Fcb_55 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L20;

  L20:
    assume {:nonnull} Lfn_7 != 0;
    assume Lfn_7 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Fcb_55 != 0;
    assume Fcb_55 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} IrpContext_139 != 0;
    assume IrpContext_139 > 0;
    call {:si_unique_call 4299} ExRaiseStatus(-1073741672);
    goto L30;

  L30:
    assume {:nonnull} ShortName_5 != 0;
    assume ShortName_5 > 0;
    assume {:nonnull} ShortName_5 != 0;
    assume ShortName_5 > 0;
    assume {:nonnull} ShortName_5 != 0;
    assume ShortName_5 > 0;
    assume {:nonnull} Dirent_22 != 0;
    assume Dirent_22 > 0;
    call {:si_unique_call 4300} Fat8dot3ToString(IrpContext_139, Mem_T.P_PACKED_DIRENT[Dirent_22], 1, ShortName_5);
    call {:si_unique_call 4301} vslice_dummy_var_617 := RtlOemStringToCountedUnicodeString(0, 0, 0);
    goto L22;

  L22:
    assume {:nonnull} DirentBcb_12 != 0;
    assume DirentBcb_12 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} DirentBcb_12 != 0;
    assume DirentBcb_12 > 0;
    goto L1;

  L1:
    return;

  anon14_Then:
    goto L1;

  anon15_Then:
    goto L30;

  anon13_Then:
    goto L22;

  anon12_Then:
    goto L18;

  L18:
    assume {:nonnull} IrpContext_139 != 0;
    assume IrpContext_139 > 0;
    call {:si_unique_call 4302} ExRaiseStatus(-1073741672);
    goto L20;

  anon11_Then:
    goto L18;
}



procedure {:origName "FatGetUnicodeNameFromFcb"} FatGetUnicodeNameFromFcb#1(actual_IrpContext_139: int, actual_Fcb_55: int, actual_Lfn_7: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLocateDirent"} FatLocateDirent#0(actual_IrpContext_153: int, actual_ParentDirectory: int, actual_Ccb_32: int, actual_OffsetToStartSearchFrom: int, actual_Dirent_29: int, actual_Bcb_17: int, actual_ByteOffset_3: int, actual_FileNameDos: int, actual_LongFileName: int)
{
  var {:scalar} LfnInProgress: int;
  var {:pointer} Tmp_2408: int;
  var {:scalar} Ordinal: int;
  var {:scalar} LfnByteOffset_4: int;
  var {:pointer} Tmp_2409: int;
  var {:pointer} Tmp_2410: int;
  var {:scalar} Tmp_2411: int;
  var {:pointer} Tmp_2412: int;
  var {:pointer} Tmp_2413: int;
  var {:pointer} Tmp_2415: int;
  var {:pointer} Tmp_2416: int;
  var {:scalar} LfnChecksum: int;
  var {:pointer} Tmp_2417: int;
  var {:pointer} Tmp_2420: int;
  var {:scalar} Tmp_2421: int;
  var {:scalar} Tmp_2422: int;
  var {:pointer} Tmp_2423: int;
  var {:pointer} Tmp_2424: int;
  var {:scalar} LfnIndex: int;
  var {:pointer} Tmp_2425: int;
  var {:pointer} Tmp_2426: int;
  var {:scalar} LfnSize: int;
  var {:pointer} Lfn_11: int;
  var {:scalar} sdv_1450: int;
  var {:pointer} Tmp_2427: int;
  var {:pointer} Tmp_2428: int;
  var {:scalar} Tmp_2430: int;
  var {:scalar} Tmp_2431: int;
  var {:dopa} {:scalar} Status_60: int;
  var {:pointer} Tmp_2432: int;
  var {:pointer} Tmp_2433: int;
  var {:scalar} Tmp_2434: int;
  var {:scalar} sdv_1451: int;
  var {:pointer} Tmp_2435: int;
  var {:pointer} Tmp_2436: int;
  var {:pointer} NameBuffer: int;
  var {:scalar} Tmp_2439: int;
  var {:pointer} Tmp_2441: int;
  var {:scalar} CheckTail: int;
  var {:scalar} Tmp_2442: int;
  var {:pointer} Tmp_2444: int;
  var {:scalar} UpcasedLfn: int;
  var {:pointer} Tmp_2445: int;
  var {:pointer} Tmp_2446: int;
  var {:scalar} sdv_1453: int;
  var {:pointer} Tmp_2447: int;
  var {:pointer} Tmp_2448: int;
  var {:pointer} Tmp_2449: int;
  var {:scalar} FoundValidLfn: int;
  var {:pointer} Tmp_2450: int;
  var {:scalar} sdv_1454: int;
  var {:scalar} sdv_1455: int;
  var {:pointer} Tmp_2451: int;
  var {:pointer} Tmp_2452: int;
  var {:pointer} Tmp_2453: int;
  var {:scalar} Tmp_2456: int;
  var {:scalar} Tmp_2458: int;
  var {:pointer} Tmp_2459: int;
  var {:pointer} Tmp_2460: int;
  var {:pointer} Tmp_2461: int;
  var {:pointer} LocalLfnBuffer: int;
  var {:scalar} Tmp_2462: int;
  var {:pointer} Tmp_2464: int;
  var {:pointer} Tmp_2466: int;
  var {:scalar} Name_3: int;
  var {:pointer} Tmp_2467: int;
  var {:scalar} Tmp_2468: int;
  var {:pointer} Tmp_2469: int;
  var {:pointer} Tmp_2470: int;
  var {:scalar} Tmp_2472: int;
  var {:pointer} Tmp_2473: int;
  var {:pointer} IrpContext_153: int;
  var {:pointer} ParentDirectory: int;
  var {:pointer} Ccb_32: int;
  var {:scalar} OffsetToStartSearchFrom: int;
  var {:pointer} Dirent_29: int;
  var {:pointer} Bcb_17: int;
  var {:pointer} ByteOffset_3: int;
  var {:pointer} FileNameDos: int;
  var {:pointer} LongFileName: int;
  var boogieTmp: int;
  var vslice_dummy_var_618: int;
  var vslice_dummy_var_1673: int;
  var vslice_dummy_var_1674: int;

  anon0:
    call {:si_unique_call 4303} Status_60 := __HAVOC_malloc(4);
    call {:si_unique_call 4304} UpcasedLfn := __HAVOC_malloc(12);
    call {:si_unique_call 4305} vslice_dummy_var_618 := __HAVOC_malloc(4);
    call {:si_unique_call 4306} Name_3 := __HAVOC_malloc(12);
    IrpContext_153 := actual_IrpContext_153;
    ParentDirectory := actual_ParentDirectory;
    Ccb_32 := actual_Ccb_32;
    OffsetToStartSearchFrom := actual_OffsetToStartSearchFrom;
    Dirent_29 := actual_Dirent_29;
    Bcb_17 := actual_Bcb_17;
    ByteOffset_3 := actual_ByteOffset_3;
    FileNameDos := actual_FileNameDos;
    LongFileName := actual_LongFileName;
    call {:si_unique_call 4307} Tmp_2410 := __HAVOC_malloc(44);
    call {:si_unique_call 4308} Tmp_2416 := __HAVOC_malloc(44);
    call {:si_unique_call 4309} Tmp_2426 := __HAVOC_malloc(24);
    call {:si_unique_call 4310} Tmp_2432 := __HAVOC_malloc(8);
    call {:si_unique_call 4311} Tmp_2433 := __HAVOC_malloc(40);
    call {:si_unique_call 4312} Tmp_2436 := __HAVOC_malloc(44);
    call {:si_unique_call 4313} NameBuffer := __HAVOC_malloc(48);
    call {:si_unique_call 4314} Tmp_2441 := __HAVOC_malloc(44);
    call {:si_unique_call 4315} Tmp_2444 := __HAVOC_malloc(44);
    call {:si_unique_call 4316} Tmp_2445 := __HAVOC_malloc(44);
    call {:si_unique_call 4317} Tmp_2446 := __HAVOC_malloc(40);
    call {:si_unique_call 4318} Tmp_2449 := __HAVOC_malloc(8);
    call {:si_unique_call 4319} Tmp_2453 := __HAVOC_malloc(44);
    call {:si_unique_call 4320} Tmp_2459 := __HAVOC_malloc(44);
    call {:si_unique_call 4321} Tmp_2460 := __HAVOC_malloc(44);
    call {:si_unique_call 4322} LocalLfnBuffer := __HAVOC_malloc(128);
    call {:si_unique_call 4323} Tmp_2469 := __HAVOC_malloc(44);
    call {:si_unique_call 4324} Tmp_2470 := __HAVOC_malloc(24);
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    LfnInProgress := 0;
    call {:si_unique_call 4325} sdv_do_paged_code_check();
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    assume {:nonnull} UpcasedLfn != 0;
    assume UpcasedLfn > 0;
    assume {:nonnull} UpcasedLfn != 0;
    assume UpcasedLfn > 0;
    assume {:nonnull} UpcasedLfn != 0;
    assume UpcasedLfn > 0;
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_29] := Mem_T.P_PACKED_DIRENT[Dirent_29];
    goto L25;

  L25:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} LongFileName != 0;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    goto L33;

  L33:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} FileNameDos != 0;
    assume {:nonnull} FileNameDos != 0;
    assume FileNameDos > 0;
    goto L35;

  L35:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    goto L42;

  L42:
    call {:si_unique_call 4326} LfnInProgress, Tmp_2408, Ordinal, LfnByteOffset_4, Tmp_2409, Tmp_2410, Tmp_2411, Tmp_2412, Tmp_2413, Tmp_2415, Tmp_2416, LfnChecksum, Tmp_2417, Tmp_2420, Tmp_2421, Tmp_2422, Tmp_2423, Tmp_2424, LfnIndex, Tmp_2425, Tmp_2426, LfnSize, Lfn_11, sdv_1450, Tmp_2427, Tmp_2428, Tmp_2430, Tmp_2431, Tmp_2432, Tmp_2433, Tmp_2434, sdv_1451, Tmp_2435, Tmp_2436, Tmp_2439, Tmp_2441, CheckTail, Tmp_2442, Tmp_2444, Tmp_2445, Tmp_2446, sdv_1453, Tmp_2447, Tmp_2448, Tmp_2449, FoundValidLfn, Tmp_2450, sdv_1454, sdv_1455, Tmp_2451, Tmp_2452, Tmp_2453, Tmp_2456, Tmp_2458, Tmp_2459, Tmp_2460, Tmp_2461, Tmp_2462, Tmp_2464, Tmp_2466, Tmp_2467, Tmp_2468, Tmp_2469, Tmp_2470, Tmp_2472, Tmp_2473, boogieTmp := FatLocateDirent#0_loop_L42(LfnInProgress, Tmp_2408, Ordinal, LfnByteOffset_4, Tmp_2409, Tmp_2410, Tmp_2411, Tmp_2412, Tmp_2413, Tmp_2415, Tmp_2416, LfnChecksum, Tmp_2417, Tmp_2420, Tmp_2421, Tmp_2422, Tmp_2423, Tmp_2424, LfnIndex, Tmp_2425, Tmp_2426, LfnSize, Lfn_11, sdv_1450, Tmp_2427, Tmp_2428, Tmp_2430, Tmp_2431, Status_60, Tmp_2432, Tmp_2433, Tmp_2434, sdv_1451, Tmp_2435, Tmp_2436, Tmp_2439, Tmp_2441, CheckTail, Tmp_2442, Tmp_2444, UpcasedLfn, Tmp_2445, Tmp_2446, sdv_1453, Tmp_2447, Tmp_2448, Tmp_2449, FoundValidLfn, Tmp_2450, sdv_1454, sdv_1455, Tmp_2451, Tmp_2452, Tmp_2453, Tmp_2456, Tmp_2458, Tmp_2459, Tmp_2460, Tmp_2461, Tmp_2462, Tmp_2464, Tmp_2466, Name_3, Tmp_2467, Tmp_2468, Tmp_2469, Tmp_2470, Tmp_2472, Tmp_2473, IrpContext_153, ParentDirectory, Ccb_32, Dirent_29, Bcb_17, ByteOffset_3, LongFileName, boogieTmp);
    goto L42_last;

  L42_last:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    assume {:nonnull} ParentDirectory != 0;
    assume ParentDirectory > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto L46;

  L46:
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    goto L55;

  L55:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto L56;

  L56:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_29] := 0;
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    goto L38;

  L38:
    call {:si_unique_call 4327} FatFreeStringBuffer(UpcasedLfn);
    return;

  anon136_Then:
    goto L56;

  anon135_Then:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2409 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2409 != 0;
    assume Tmp_2409 > 0;
    havoc Tmp_2460;
    assume {:nonnull} Tmp_2460 != 0;
    assume Tmp_2460 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2428 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2428 != 0;
    assume Tmp_2428 > 0;
    havoc Tmp_2444;
    assume {:nonnull} Tmp_2444 != 0;
    assume Tmp_2444 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    LfnInProgress := 0;
    goto L67;

  L67:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_29] := Mem_T.P_PACKED_DIRENT[Dirent_29];
    goto L67_dummy;

  L67_dummy:
    assume false;
    return;

  anon179_Then:
    goto anon137_Then, anon137_Else;

  anon137_Else:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} LongFileName != 0;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2451 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2451 != 0;
    assume Tmp_2451 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Lfn_11 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} LfnInProgress != 0;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L78;

  L78:
    LfnInProgress := 0;
    goto L75;

  L75:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} LfnInProgress == 0;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2411;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} 20 >= Tmp_2411;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    CheckTail := 0;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Ordinal;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Ordinal != 0;
    goto L112;

  L112:
    LfnIndex := (Ordinal - 1) * 13;
    call {:si_unique_call 4328} Tmp_2421 := corral_nondet();
    call {:si_unique_call 4329} FatEnsureStringBufferEnough(LongFileName, Tmp_2421);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2446;
    Tmp_2422 := LfnIndex + 0;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2450;
    call {:si_unique_call 4330} sdv_RtlCopyMemory(0, 0, 10);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2470;
    Tmp_2458 := LfnIndex + 5;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2413;
    call {:si_unique_call 4331} sdv_RtlCopyMemory(0, 0, 12);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2432;
    Tmp_2462 := LfnIndex + 11;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2467;
    call {:si_unique_call 4332} sdv_RtlCopyMemory(0, 0, 4);
    goto L132;

  L132:
    call {:si_unique_call 4333} LfnIndex, Tmp_2425, LfnSize, Tmp_2431, CheckTail, Tmp_2456, Tmp_2461 := FatLocateDirent#0_loop_L132(Ordinal, LfnIndex, Tmp_2425, LfnSize, Tmp_2431, CheckTail, Tmp_2456, Tmp_2461, LongFileName);
    goto L132_last;

  L132_last:
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} LfnIndex != Ordinal * 13;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} CheckTail != 0;
    Tmp_2456 := LfnIndex;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2461;
    assume {:nonnull} Tmp_2461 != 0;
    assume Tmp_2461 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L137;

  L137:
    LfnIndex := LfnIndex + 1;
    goto L137_dummy;

  L137_dummy:
    assume false;
    return;

  anon184_Then:
    goto L133;

  L133:
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} LfnIndex == Ordinal * 13;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} CheckTail != 0;
    goto L143;

  L143:
    LfnIndex := LfnIndex - 13;
    LfnInProgress := 1;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc LfnChecksum;
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    havoc LfnByteOffset_4;
    goto L67;

  anon150_Then:
    assume {:partition} CheckTail == 0;
    LfnSize := LfnIndex;
    goto L143;

  anon148_Then:
    assume {:partition} LfnIndex != Ordinal * 13;
    goto L67;

  anon149_Then:
    assume {:partition} CheckTail == 0;
    Tmp_2431 := LfnIndex;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2425;
    assume {:nonnull} Tmp_2425 != 0;
    assume Tmp_2425 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    LfnSize := LfnIndex;
    CheckTail := 1;
    goto L137;

  anon185_Then:
    goto L137;

  anon147_Then:
    assume {:partition} LfnIndex == Ordinal * 13;
    goto L133;

  anon183_Then:
    assume {:partition} Ordinal == 0;
    assume false;
    assume {:nonnull} IrpContext_153 != 0;
    assume IrpContext_153 > 0;
    call {:si_unique_call 4334} ExRaiseStatus(-1073741566);
    return;

  anon146_Then:
    goto L67;

  anon182_Then:
    assume {:partition} Tmp_2411 > 20;
    goto L67;

  anon145_Then:
    goto L67;

  anon139_Then:
    assume {:partition} LfnInProgress != 0;
    goto L67;

  anon140_Then:
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    LfnIndex := LfnIndex - 13;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2433;
    Tmp_2430 := LfnIndex + 0;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2412;
    call {:si_unique_call 4335} sdv_RtlCopyMemory(0, 0, 10);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2426;
    Tmp_2472 := LfnIndex + 5;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2435;
    call {:si_unique_call 4336} sdv_RtlCopyMemory(0, 0, 12);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2449;
    Tmp_2434 := LfnIndex + 11;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2417;
    call {:si_unique_call 4337} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Ordinal;
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    havoc LfnByteOffset_4;
    goto L75;

  anon144_Then:
    goto L78;

  anon143_Then:
    goto L78;

  anon142_Then:
    goto L78;

  anon141_Then:
    goto L78;

  anon181_Then:
    assume {:partition} LfnInProgress == 0;
    goto L75;

  anon180_Then:
    goto L69;

  L69:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2415 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2415 != 0;
    assume Tmp_2415 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto L67;

  anon152_Then:
    goto L38;

  anon186_Then:
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} LfnInProgress != 0;
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} LfnIndex == 0;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    call {:si_unique_call 4338} sdv_1450 := FatComputeLfnChecksum(Mem_T.P_PACKED_DIRENT[Dirent_29]);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} sdv_1450 == LfnChecksum;
    FoundValidLfn := 1;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    goto L164;

  L164:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    goto L168;

  L168:
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} FoundValidLfn != 0;
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    goto L172;

  L172:
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc vslice_dummy_var_1673;
    call {:si_unique_call 4339} FatEnsureStringBufferEnough(UpcasedLfn, vslice_dummy_var_1673);
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    call {:si_unique_call 4340} boogieTmp := RtlUpcaseUnicodeString(0, 0, 0);
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    goto L181;

  L181:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    call {:si_unique_call 4341} sdv_1453 := FsRtlIsNameInExpression(0, 0, 1, 0);
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} sdv_1453 == 0;
    goto L169;

  L169:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} FoundValidLfn != 0;
    FoundValidLfn := 0;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    goto L67;

  anon160_Then:
    assume {:partition} FoundValidLfn == 0;
    goto L67;

  anon165_Then:
    assume {:partition} sdv_1453 != 0;
    goto L38;

  anon164_Then:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc Tmp_2442;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} Tmp_2442 == 0;
    Tmp_2439 := 0;
    goto L387;

  L387:
    call {:si_unique_call 4342} sdv_1455 := FsRtlAreNamesEqual(0, 0, Tmp_2439, 0);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} sdv_1455 == 0;
    goto L169;

  anon166_Then:
    assume {:partition} sdv_1455 != 0;
    goto L38;

  anon187_Then:
    assume {:partition} Tmp_2442 != 0;
    Tmp_2439 := 1;
    goto L387;

  anon163_Then:
    assume {:nonnull} IrpContext_153 != 0;
    assume IrpContext_153 > 0;
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    call {:si_unique_call 4343} sdv_1454 := corral_nondet();
    call {:si_unique_call 4344} ExRaiseStatus(sdv_1454);
    goto L181;

  anon161_Then:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    FoundValidLfn := 0;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    goto L67;

  anon162_Then:
    goto L172;

  anon159_Then:
    assume {:partition} FoundValidLfn == 0;
    goto L169;

  anon157_Then:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    call {:si_unique_call 4345} Fat8dot3ToString(IrpContext_153, Mem_T.P_PACKED_DIRENT[Dirent_29], 0, Name_3);
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    goto L210;

  L210:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc vslice_dummy_var_1674;
    call {:si_unique_call 4346} sdv_1451 := FatIsNameInExpression(IrpContext_153, vslice_dummy_var_1674, Name_3);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} sdv_1451 != 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} FileNameDos != 0;
    assume {:nonnull} FileNameDos != 0;
    assume FileNameDos > 0;
    goto L38;

  anon172_Then:
    assume {:partition} FileNameDos == 0;
    goto L38;

  anon171_Then:
    assume {:partition} sdv_1451 == 0;
    goto L168;

  anon170_Then:
    goto L210;

  anon169_Then:
    goto L210;

  anon168_Then:
    goto L210;

  anon167_Then:
    goto L210;

  anon158_Then:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2448 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2448 != 0;
    assume Tmp_2448 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc Tmp_2453;
    Tmp_2424 := Tmp_2453;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2466 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2466 != 0;
    assume Tmp_2466 > 0;
    havoc Tmp_2469;
    Tmp_2423 := Tmp_2469;
    assume {:nonnull} Tmp_2423 != 0;
    assume Tmp_2423 > 0;
    assume {:nonnull} Tmp_2424 != 0;
    assume Tmp_2424 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc Tmp_2459;
    Tmp_2408 := Tmp_2459 + 4 * 4;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2427 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2427 != 0;
    assume Tmp_2427 > 0;
    havoc Tmp_2436;
    Tmp_2447 := Tmp_2436 + 4 * 4;
    assume {:nonnull} Tmp_2408 != 0;
    assume Tmp_2408 > 0;
    assume {:nonnull} Tmp_2447 != 0;
    assume Tmp_2447 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc Tmp_2441;
    Tmp_2452 := Tmp_2441 + 8 * 4;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2464 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2464 != 0;
    assume Tmp_2464 > 0;
    havoc Tmp_2416;
    Tmp_2420 := Tmp_2416 + 8 * 4;
    assume {:nonnull} Tmp_2420 != 0;
    assume Tmp_2420 > 0;
    assume {:nonnull} Tmp_2452 != 0;
    assume Tmp_2452 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc Tmp_2410;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2473 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2473 != 0;
    assume Tmp_2473 > 0;
    havoc Tmp_2445;
    assume {:nonnull} Tmp_2410 != 0;
    assume Tmp_2410 > 0;
    assume {:nonnull} Tmp_2445 != 0;
    assume Tmp_2445 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} FileNameDos != 0;
    assume {:nonnull} FileNameDos != 0;
    assume FileNameDos > 0;
    goto L38;

  anon173_Then:
    assume {:partition} FileNameDos == 0;
    goto L38;

  anon192_Then:
    goto L168;

  anon191_Then:
    goto L168;

  anon190_Then:
    goto L168;

  anon189_Then:
    goto L168;

  anon188_Then:
    goto L168;

  anon156_Then:
    goto L38;

  anon155_Then:
    assume {:partition} sdv_1450 != LfnChecksum;
    goto L155;

  L155:
    FoundValidLfn := 0;
    goto L164;

  anon154_Then:
    assume {:partition} LfnIndex != 0;
    goto L155;

  anon153_Then:
    goto L155;

  anon151_Then:
    assume {:partition} LfnInProgress == 0;
    goto L155;

  anon138_Then:
    assume {:partition} LongFileName == 0;
    goto L69;

  anon137_Then:
    goto L69;

  anon178_Then:
    goto L55;

  anon177_Then:
    goto L46;

  anon133_Then:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    goto L228;

  L228:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto L230;

  L230:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    havoc Tmp_2468;
    call {:si_unique_call 4347} FatReadDirectoryFile#0(IrpContext_153, ParentDirectory, Tmp_2468, 4096, 0, Bcb_17, Dirent_29, Status_60);
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_29] := Mem_T.P_PACKED_DIRENT[Dirent_29];
    goto L46;

  anon174_Then:
    goto L230;

  anon175_Then:
    goto L46;

  anon134_Then:
    goto L228;

  anon132_Then:
    assume {:partition} FileNameDos == 0;
    goto L35;

  anon129_Then:
    assume {:partition} LongFileName == 0;
    goto L33;

  anon130_Then:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto L25;

  anon131_Then:
    goto L25;

  anon176_Then:
    goto L25;
}



procedure {:origName "FatLocateDirent"} FatLocateDirent#0(actual_IrpContext_153: int, actual_ParentDirectory: int, actual_Ccb_32: int, actual_OffsetToStartSearchFrom: int, actual_Dirent_29: int, actual_Bcb_17: int, actual_ByteOffset_3: int, actual_FileNameDos: int, actual_LongFileName: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatLocateDirent"} FatLocateDirent#1(actual_IrpContext_153: int, actual_ParentDirectory: int, actual_Ccb_32: int, actual_OffsetToStartSearchFrom: int, actual_Dirent_29: int, actual_Bcb_17: int, actual_ByteOffset_3: int, actual_FileNameDos: int, actual_LongFileName: int)
{
  var {:scalar} LfnInProgress: int;
  var {:pointer} Tmp_2408: int;
  var {:scalar} Ordinal: int;
  var {:scalar} LfnByteOffset_4: int;
  var {:pointer} Tmp_2409: int;
  var {:pointer} Tmp_2410: int;
  var {:scalar} Tmp_2411: int;
  var {:pointer} Tmp_2412: int;
  var {:pointer} Tmp_2413: int;
  var {:pointer} Tmp_2415: int;
  var {:pointer} Tmp_2416: int;
  var {:scalar} LfnChecksum: int;
  var {:pointer} Tmp_2417: int;
  var {:pointer} Tmp_2420: int;
  var {:scalar} Tmp_2421: int;
  var {:scalar} Tmp_2422: int;
  var {:pointer} Tmp_2423: int;
  var {:pointer} Tmp_2424: int;
  var {:scalar} LfnIndex: int;
  var {:pointer} Tmp_2425: int;
  var {:pointer} Tmp_2426: int;
  var {:scalar} LfnSize: int;
  var {:pointer} Lfn_11: int;
  var {:scalar} sdv_1450: int;
  var {:pointer} Tmp_2427: int;
  var {:pointer} Tmp_2428: int;
  var {:scalar} Tmp_2430: int;
  var {:scalar} Tmp_2431: int;
  var {:dopa} {:scalar} Status_60: int;
  var {:pointer} Tmp_2432: int;
  var {:pointer} Tmp_2433: int;
  var {:scalar} Tmp_2434: int;
  var {:scalar} sdv_1451: int;
  var {:pointer} Tmp_2435: int;
  var {:pointer} Tmp_2436: int;
  var {:pointer} NameBuffer: int;
  var {:scalar} Tmp_2439: int;
  var {:pointer} Tmp_2441: int;
  var {:scalar} CheckTail: int;
  var {:scalar} Tmp_2442: int;
  var {:pointer} Tmp_2444: int;
  var {:scalar} UpcasedLfn: int;
  var {:pointer} Tmp_2445: int;
  var {:pointer} Tmp_2446: int;
  var {:scalar} sdv_1453: int;
  var {:pointer} Tmp_2447: int;
  var {:pointer} Tmp_2448: int;
  var {:pointer} Tmp_2449: int;
  var {:scalar} FoundValidLfn: int;
  var {:pointer} Tmp_2450: int;
  var {:scalar} sdv_1454: int;
  var {:scalar} sdv_1455: int;
  var {:pointer} Tmp_2451: int;
  var {:pointer} Tmp_2452: int;
  var {:pointer} Tmp_2453: int;
  var {:scalar} Tmp_2456: int;
  var {:scalar} Tmp_2458: int;
  var {:pointer} Tmp_2459: int;
  var {:pointer} Tmp_2460: int;
  var {:pointer} Tmp_2461: int;
  var {:pointer} LocalLfnBuffer: int;
  var {:scalar} Tmp_2462: int;
  var {:pointer} Tmp_2464: int;
  var {:pointer} Tmp_2466: int;
  var {:scalar} Name_3: int;
  var {:pointer} Tmp_2467: int;
  var {:scalar} Tmp_2468: int;
  var {:pointer} Tmp_2469: int;
  var {:pointer} Tmp_2470: int;
  var {:scalar} Tmp_2472: int;
  var {:pointer} Tmp_2473: int;
  var {:pointer} IrpContext_153: int;
  var {:pointer} ParentDirectory: int;
  var {:pointer} Ccb_32: int;
  var {:scalar} OffsetToStartSearchFrom: int;
  var {:pointer} Dirent_29: int;
  var {:pointer} Bcb_17: int;
  var {:pointer} ByteOffset_3: int;
  var {:pointer} FileNameDos: int;
  var {:pointer} LongFileName: int;
  var boogieTmp: int;
  var vslice_dummy_var_619: int;
  var vslice_dummy_var_1675: int;
  var vslice_dummy_var_1676: int;

  anon0:
    call {:si_unique_call 4348} Status_60 := __HAVOC_malloc(4);
    call {:si_unique_call 4349} UpcasedLfn := __HAVOC_malloc(12);
    call {:si_unique_call 4350} vslice_dummy_var_619 := __HAVOC_malloc(4);
    call {:si_unique_call 4351} Name_3 := __HAVOC_malloc(12);
    IrpContext_153 := actual_IrpContext_153;
    ParentDirectory := actual_ParentDirectory;
    Ccb_32 := actual_Ccb_32;
    OffsetToStartSearchFrom := actual_OffsetToStartSearchFrom;
    Dirent_29 := actual_Dirent_29;
    Bcb_17 := actual_Bcb_17;
    ByteOffset_3 := actual_ByteOffset_3;
    FileNameDos := actual_FileNameDos;
    LongFileName := actual_LongFileName;
    call {:si_unique_call 4352} Tmp_2410 := __HAVOC_malloc(44);
    call {:si_unique_call 4353} Tmp_2416 := __HAVOC_malloc(44);
    call {:si_unique_call 4354} Tmp_2426 := __HAVOC_malloc(24);
    call {:si_unique_call 4355} Tmp_2432 := __HAVOC_malloc(8);
    call {:si_unique_call 4356} Tmp_2433 := __HAVOC_malloc(40);
    call {:si_unique_call 4357} Tmp_2436 := __HAVOC_malloc(44);
    call {:si_unique_call 4358} NameBuffer := __HAVOC_malloc(48);
    call {:si_unique_call 4359} Tmp_2441 := __HAVOC_malloc(44);
    call {:si_unique_call 4360} Tmp_2444 := __HAVOC_malloc(44);
    call {:si_unique_call 4361} Tmp_2445 := __HAVOC_malloc(44);
    call {:si_unique_call 4362} Tmp_2446 := __HAVOC_malloc(40);
    call {:si_unique_call 4363} Tmp_2449 := __HAVOC_malloc(8);
    call {:si_unique_call 4364} Tmp_2453 := __HAVOC_malloc(44);
    call {:si_unique_call 4365} Tmp_2459 := __HAVOC_malloc(44);
    call {:si_unique_call 4366} Tmp_2460 := __HAVOC_malloc(44);
    call {:si_unique_call 4367} LocalLfnBuffer := __HAVOC_malloc(128);
    call {:si_unique_call 4368} Tmp_2469 := __HAVOC_malloc(44);
    call {:si_unique_call 4369} Tmp_2470 := __HAVOC_malloc(24);
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    LfnInProgress := 0;
    call {:si_unique_call 4370} sdv_do_paged_code_check();
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    assume {:nonnull} UpcasedLfn != 0;
    assume UpcasedLfn > 0;
    assume {:nonnull} UpcasedLfn != 0;
    assume UpcasedLfn > 0;
    assume {:nonnull} UpcasedLfn != 0;
    assume UpcasedLfn > 0;
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_29] := Mem_T.P_PACKED_DIRENT[Dirent_29];
    goto L25;

  L25:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} LongFileName != 0;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    goto L33;

  L33:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} FileNameDos != 0;
    assume {:nonnull} FileNameDos != 0;
    assume FileNameDos > 0;
    goto L35;

  L35:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    goto L42;

  L42:
    call {:si_unique_call 4371} LfnInProgress, Tmp_2408, Ordinal, LfnByteOffset_4, Tmp_2409, Tmp_2410, Tmp_2411, Tmp_2412, Tmp_2413, Tmp_2415, Tmp_2416, LfnChecksum, Tmp_2417, Tmp_2420, Tmp_2421, Tmp_2422, Tmp_2423, Tmp_2424, LfnIndex, Tmp_2425, Tmp_2426, LfnSize, Lfn_11, sdv_1450, Tmp_2427, Tmp_2428, Tmp_2430, Tmp_2431, Tmp_2432, Tmp_2433, Tmp_2434, sdv_1451, Tmp_2435, Tmp_2436, Tmp_2439, Tmp_2441, CheckTail, Tmp_2442, Tmp_2444, Tmp_2445, Tmp_2446, sdv_1453, Tmp_2447, Tmp_2448, Tmp_2449, FoundValidLfn, Tmp_2450, sdv_1454, sdv_1455, Tmp_2451, Tmp_2452, Tmp_2453, Tmp_2456, Tmp_2458, Tmp_2459, Tmp_2460, Tmp_2461, Tmp_2462, Tmp_2464, Tmp_2466, Tmp_2467, Tmp_2468, Tmp_2469, Tmp_2470, Tmp_2472, Tmp_2473, boogieTmp := FatLocateDirent#1_loop_L42(LfnInProgress, Tmp_2408, Ordinal, LfnByteOffset_4, Tmp_2409, Tmp_2410, Tmp_2411, Tmp_2412, Tmp_2413, Tmp_2415, Tmp_2416, LfnChecksum, Tmp_2417, Tmp_2420, Tmp_2421, Tmp_2422, Tmp_2423, Tmp_2424, LfnIndex, Tmp_2425, Tmp_2426, LfnSize, Lfn_11, sdv_1450, Tmp_2427, Tmp_2428, Tmp_2430, Tmp_2431, Status_60, Tmp_2432, Tmp_2433, Tmp_2434, sdv_1451, Tmp_2435, Tmp_2436, Tmp_2439, Tmp_2441, CheckTail, Tmp_2442, Tmp_2444, UpcasedLfn, Tmp_2445, Tmp_2446, sdv_1453, Tmp_2447, Tmp_2448, Tmp_2449, FoundValidLfn, Tmp_2450, sdv_1454, sdv_1455, Tmp_2451, Tmp_2452, Tmp_2453, Tmp_2456, Tmp_2458, Tmp_2459, Tmp_2460, Tmp_2461, Tmp_2462, Tmp_2464, Tmp_2466, Name_3, Tmp_2467, Tmp_2468, Tmp_2469, Tmp_2470, Tmp_2472, Tmp_2473, IrpContext_153, ParentDirectory, Ccb_32, Dirent_29, Bcb_17, ByteOffset_3, LongFileName, boogieTmp);
    goto L42_last;

  L42_last:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    assume {:nonnull} ParentDirectory != 0;
    assume ParentDirectory > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto L46;

  L46:
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    goto L55;

  L55:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto L56;

  L56:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_29] := 0;
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    goto L38;

  L38:
    call {:si_unique_call 4372} FatFreeStringBuffer(UpcasedLfn);
    return;

  anon136_Then:
    goto L56;

  anon135_Then:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2409 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2409 != 0;
    assume Tmp_2409 > 0;
    havoc Tmp_2460;
    assume {:nonnull} Tmp_2460 != 0;
    assume Tmp_2460 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2428 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2428 != 0;
    assume Tmp_2428 > 0;
    havoc Tmp_2444;
    assume {:nonnull} Tmp_2444 != 0;
    assume Tmp_2444 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    LfnInProgress := 0;
    goto L67;

  L67:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_29] := Mem_T.P_PACKED_DIRENT[Dirent_29];
    goto L67_dummy;

  L67_dummy:
    assume false;
    return;

  anon179_Then:
    goto anon137_Then, anon137_Else;

  anon137_Else:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} LongFileName != 0;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2451 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2451 != 0;
    assume Tmp_2451 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Lfn_11 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} LfnInProgress != 0;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L78;

  L78:
    LfnInProgress := 0;
    goto L75;

  L75:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} LfnInProgress == 0;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2411;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} 20 >= Tmp_2411;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    CheckTail := 0;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Ordinal;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Ordinal != 0;
    goto L112;

  L112:
    LfnIndex := (Ordinal - 1) * 13;
    call {:si_unique_call 4373} Tmp_2421 := corral_nondet();
    call {:si_unique_call 4374} FatEnsureStringBufferEnough(LongFileName, Tmp_2421);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2446;
    Tmp_2422 := LfnIndex + 0;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2450;
    call {:si_unique_call 4375} sdv_RtlCopyMemory(0, 0, 10);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2470;
    Tmp_2458 := LfnIndex + 5;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2413;
    call {:si_unique_call 4376} sdv_RtlCopyMemory(0, 0, 12);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2432;
    Tmp_2462 := LfnIndex + 11;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2467;
    call {:si_unique_call 4377} sdv_RtlCopyMemory(0, 0, 4);
    goto L132;

  L132:
    call {:si_unique_call 4378} LfnIndex, Tmp_2425, LfnSize, Tmp_2431, CheckTail, Tmp_2456, Tmp_2461 := FatLocateDirent#1_loop_L132(Ordinal, LfnIndex, Tmp_2425, LfnSize, Tmp_2431, CheckTail, Tmp_2456, Tmp_2461, LongFileName);
    goto L132_last;

  L132_last:
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} LfnIndex != Ordinal * 13;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} CheckTail != 0;
    Tmp_2456 := LfnIndex;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2461;
    assume {:nonnull} Tmp_2461 != 0;
    assume Tmp_2461 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L137;

  L137:
    LfnIndex := LfnIndex + 1;
    goto L137_dummy;

  L137_dummy:
    assume false;
    return;

  anon184_Then:
    goto L133;

  L133:
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} LfnIndex == Ordinal * 13;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} CheckTail != 0;
    goto L143;

  L143:
    LfnIndex := LfnIndex - 13;
    LfnInProgress := 1;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc LfnChecksum;
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    havoc LfnByteOffset_4;
    goto L67;

  anon150_Then:
    assume {:partition} CheckTail == 0;
    LfnSize := LfnIndex;
    goto L143;

  anon148_Then:
    assume {:partition} LfnIndex != Ordinal * 13;
    goto L67;

  anon149_Then:
    assume {:partition} CheckTail == 0;
    Tmp_2431 := LfnIndex;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2425;
    assume {:nonnull} Tmp_2425 != 0;
    assume Tmp_2425 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    LfnSize := LfnIndex;
    CheckTail := 1;
    goto L137;

  anon185_Then:
    goto L137;

  anon147_Then:
    assume {:partition} LfnIndex == Ordinal * 13;
    goto L133;

  anon183_Then:
    assume {:partition} Ordinal == 0;
    call {:si_unique_call 4379} FatPopUpFileCorrupt#0(IrpContext_153, ParentDirectory);
    assume {:nonnull} IrpContext_153 != 0;
    assume IrpContext_153 > 0;
    call {:si_unique_call 4380} ExRaiseStatus(-1073741566);
    goto L112;

  anon146_Then:
    goto L67;

  anon182_Then:
    assume {:partition} Tmp_2411 > 20;
    goto L67;

  anon145_Then:
    goto L67;

  anon139_Then:
    assume {:partition} LfnInProgress != 0;
    goto L67;

  anon140_Then:
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    LfnIndex := LfnIndex - 13;
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2433;
    Tmp_2430 := LfnIndex + 0;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2412;
    call {:si_unique_call 4381} sdv_RtlCopyMemory(0, 0, 10);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2426;
    Tmp_2472 := LfnIndex + 5;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2435;
    call {:si_unique_call 4382} sdv_RtlCopyMemory(0, 0, 12);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Tmp_2449;
    Tmp_2434 := LfnIndex + 11;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc Tmp_2417;
    call {:si_unique_call 4383} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} Lfn_11 != 0;
    assume Lfn_11 > 0;
    havoc Ordinal;
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    havoc LfnByteOffset_4;
    goto L75;

  anon144_Then:
    goto L78;

  anon143_Then:
    goto L78;

  anon142_Then:
    goto L78;

  anon141_Then:
    goto L78;

  anon181_Then:
    assume {:partition} LfnInProgress == 0;
    goto L75;

  anon180_Then:
    goto L69;

  L69:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2415 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2415 != 0;
    assume Tmp_2415 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto L67;

  anon152_Then:
    goto L38;

  anon186_Then:
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} LfnInProgress != 0;
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} LfnIndex == 0;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    call {:si_unique_call 4384} sdv_1450 := FatComputeLfnChecksum(Mem_T.P_PACKED_DIRENT[Dirent_29]);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} sdv_1450 == LfnChecksum;
    FoundValidLfn := 1;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    goto L164;

  L164:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    goto L168;

  L168:
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} FoundValidLfn != 0;
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    goto L172;

  L172:
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    havoc vslice_dummy_var_1675;
    call {:si_unique_call 4385} FatEnsureStringBufferEnough(UpcasedLfn, vslice_dummy_var_1675);
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    call {:si_unique_call 4386} boogieTmp := RtlUpcaseUnicodeString(0, 0, 0);
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    goto L181;

  L181:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    call {:si_unique_call 4387} sdv_1453 := FsRtlIsNameInExpression(0, 0, 1, 0);
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} sdv_1453 == 0;
    goto L169;

  L169:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} FoundValidLfn != 0;
    FoundValidLfn := 0;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    goto L67;

  anon160_Then:
    assume {:partition} FoundValidLfn == 0;
    goto L67;

  anon165_Then:
    assume {:partition} sdv_1453 != 0;
    goto L38;

  anon164_Then:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc Tmp_2442;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} Tmp_2442 == 0;
    Tmp_2439 := 0;
    goto L387;

  L387:
    call {:si_unique_call 4388} sdv_1455 := FsRtlAreNamesEqual(0, 0, Tmp_2439, 0);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} sdv_1455 == 0;
    goto L169;

  anon166_Then:
    assume {:partition} sdv_1455 != 0;
    goto L38;

  anon187_Then:
    assume {:partition} Tmp_2442 != 0;
    Tmp_2439 := 1;
    goto L387;

  anon163_Then:
    assume {:nonnull} IrpContext_153 != 0;
    assume IrpContext_153 > 0;
    assume {:nonnull} Status_60 != 0;
    assume Status_60 > 0;
    call {:si_unique_call 4389} sdv_1454 := corral_nondet();
    call {:si_unique_call 4390} ExRaiseStatus(sdv_1454);
    goto L181;

  anon161_Then:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    FoundValidLfn := 0;
    assume {:nonnull} LongFileName != 0;
    assume LongFileName > 0;
    goto L67;

  anon162_Then:
    goto L172;

  anon159_Then:
    assume {:partition} FoundValidLfn == 0;
    goto L169;

  anon157_Then:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    call {:si_unique_call 4391} Fat8dot3ToString(IrpContext_153, Mem_T.P_PACKED_DIRENT[Dirent_29], 0, Name_3);
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Name_3 != 0;
    assume Name_3 > 0;
    goto L210;

  L210:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc vslice_dummy_var_1676;
    call {:si_unique_call 4392} sdv_1451 := FatIsNameInExpression(IrpContext_153, vslice_dummy_var_1676, Name_3);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} sdv_1451 != 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} FileNameDos != 0;
    assume {:nonnull} FileNameDos != 0;
    assume FileNameDos > 0;
    goto L38;

  anon172_Then:
    assume {:partition} FileNameDos == 0;
    goto L38;

  anon171_Then:
    assume {:partition} sdv_1451 == 0;
    goto L168;

  anon170_Then:
    goto L210;

  anon169_Then:
    goto L210;

  anon168_Then:
    goto L210;

  anon167_Then:
    goto L210;

  anon158_Then:
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2448 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2448 != 0;
    assume Tmp_2448 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc Tmp_2453;
    Tmp_2424 := Tmp_2453;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2466 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2466 != 0;
    assume Tmp_2466 > 0;
    havoc Tmp_2469;
    Tmp_2423 := Tmp_2469;
    assume {:nonnull} Tmp_2423 != 0;
    assume Tmp_2423 > 0;
    assume {:nonnull} Tmp_2424 != 0;
    assume Tmp_2424 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc Tmp_2459;
    Tmp_2408 := Tmp_2459 + 4 * 4;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2427 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2427 != 0;
    assume Tmp_2427 > 0;
    havoc Tmp_2436;
    Tmp_2447 := Tmp_2436 + 4 * 4;
    assume {:nonnull} Tmp_2408 != 0;
    assume Tmp_2408 > 0;
    assume {:nonnull} Tmp_2447 != 0;
    assume Tmp_2447 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc Tmp_2441;
    Tmp_2452 := Tmp_2441 + 8 * 4;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2464 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2464 != 0;
    assume Tmp_2464 > 0;
    havoc Tmp_2416;
    Tmp_2420 := Tmp_2416 + 8 * 4;
    assume {:nonnull} Tmp_2420 != 0;
    assume Tmp_2420 > 0;
    assume {:nonnull} Tmp_2452 != 0;
    assume Tmp_2452 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} Ccb_32 != 0;
    assume Ccb_32 > 0;
    havoc Tmp_2410;
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Tmp_2473 := Mem_T.P_PACKED_DIRENT[Dirent_29];
    assume {:nonnull} Tmp_2473 != 0;
    assume Tmp_2473 > 0;
    havoc Tmp_2445;
    assume {:nonnull} Tmp_2410 != 0;
    assume Tmp_2410 > 0;
    assume {:nonnull} Tmp_2445 != 0;
    assume Tmp_2445 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} FileNameDos != 0;
    assume {:nonnull} FileNameDos != 0;
    assume FileNameDos > 0;
    goto L38;

  anon173_Then:
    assume {:partition} FileNameDos == 0;
    goto L38;

  anon192_Then:
    goto L168;

  anon191_Then:
    goto L168;

  anon190_Then:
    goto L168;

  anon189_Then:
    goto L168;

  anon188_Then:
    goto L168;

  anon156_Then:
    goto L38;

  anon155_Then:
    assume {:partition} sdv_1450 != LfnChecksum;
    goto L155;

  L155:
    FoundValidLfn := 0;
    goto L164;

  anon154_Then:
    assume {:partition} LfnIndex != 0;
    goto L155;

  anon153_Then:
    goto L155;

  anon151_Then:
    assume {:partition} LfnInProgress == 0;
    goto L155;

  anon138_Then:
    assume {:partition} LongFileName == 0;
    goto L69;

  anon137_Then:
    goto L69;

  anon178_Then:
    goto L55;

  anon177_Then:
    goto L46;

  anon133_Then:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    goto L228;

  L228:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto L230;

  L230:
    assume {:nonnull} ByteOffset_3 != 0;
    assume ByteOffset_3 > 0;
    havoc Tmp_2468;
    call {:si_unique_call 4393} FatReadDirectoryFile#1(IrpContext_153, ParentDirectory, Tmp_2468, 4096, 0, Bcb_17, Dirent_29, Status_60);
    assume {:nonnull} Dirent_29 != 0;
    assume Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_29] := Mem_T.P_PACKED_DIRENT[Dirent_29];
    goto L46;

  anon174_Then:
    goto L230;

  anon175_Then:
    goto L46;

  anon134_Then:
    goto L228;

  anon132_Then:
    assume {:partition} FileNameDos == 0;
    goto L35;

  anon129_Then:
    assume {:partition} LongFileName == 0;
    goto L33;

  anon130_Then:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Bcb_17 != 0;
    assume Bcb_17 > 0;
    goto L25;

  anon131_Then:
    goto L25;

  anon176_Then:
    goto L25;
}



procedure {:origName "FatLocateDirent"} FatLocateDirent#1(actual_IrpContext_153: int, actual_ParentDirectory: int, actual_Ccb_32: int, actual_OffsetToStartSearchFrom: int, actual_Dirent_29: int, actual_Bcb_17: int, actual_ByteOffset_3: int, actual_FileNameDos: int, actual_LongFileName: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatReadDirectoryFile"} FatReadDirectoryFile#0(actual_IrpContext_69: int, actual_Dcb_7: int, actual_StartingVbo_1: int, actual_ByteCount_7: int, actual_Pin: int, actual_Bcb_7: int, actual_Buffer_20: int, actual_Status_22: int)
{
  var {:scalar} Vbo_3: int;
  var {:scalar} sdv_897: int;
  var {:scalar} Tmp_1512: int;
  var {:scalar} Tmp_1513: int;
  var {:scalar} sdv_898: int;
  var {:scalar} Tmp_1514: int;
  var {:scalar} Tmp_1515: int;
  var {:pointer} IrpContext_69: int;
  var {:pointer} Dcb_7: int;
  var {:scalar} StartingVbo_1: int;
  var {:scalar} ByteCount_7: int;
  var {:scalar} Pin: int;
  var {:pointer} Bcb_7: int;
  var {:pointer} Buffer_20: int;
  var {:pointer} Status_22: int;
  var vslice_dummy_var_620: int;

  anon0:
    call {:si_unique_call 4394} Vbo_3 := __HAVOC_malloc(20);
    call {:si_unique_call 4395} vslice_dummy_var_620 := __HAVOC_malloc(4);
    IrpContext_69 := actual_IrpContext_69;
    Dcb_7 := actual_Dcb_7;
    StartingVbo_1 := actual_StartingVbo_1;
    ByteCount_7 := actual_ByteCount_7;
    Pin := actual_Pin;
    Bcb_7 := actual_Bcb_7;
    Buffer_20 := actual_Buffer_20;
    Status_22 := actual_Status_22;
    call {:si_unique_call 4396} sdv_do_paged_code_check();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ByteCount_7 != 0;
    assume false;
    assume {:nonnull} Dcb_7 != 0;
    assume Dcb_7 > 0;
    return;

  anon19_Then:
    assume {:partition} ByteCount_7 == 0;
    assume {:nonnull} Bcb_7 != 0;
    assume Bcb_7 > 0;
    assume {:nonnull} Buffer_20 != 0;
    assume Buffer_20 > 0;
    assume {:nonnull} Status_22 != 0;
    assume Status_22 > 0;
    goto L1;

  L1:
    return;
}



procedure {:origName "FatReadDirectoryFile"} FatReadDirectoryFile#0(actual_IrpContext_69: int, actual_Dcb_7: int, actual_StartingVbo_1: int, actual_ByteCount_7: int, actual_Pin: int, actual_Bcb_7: int, actual_Buffer_20: int, actual_Status_22: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatReadDirectoryFile"} FatReadDirectoryFile#1(actual_IrpContext_69: int, actual_Dcb_7: int, actual_StartingVbo_1: int, actual_ByteCount_7: int, actual_Pin: int, actual_Bcb_7: int, actual_Buffer_20: int, actual_Status_22: int)
{
  var {:scalar} Vbo_3: int;
  var {:scalar} sdv_897: int;
  var {:scalar} Tmp_1512: int;
  var {:scalar} Tmp_1513: int;
  var {:scalar} sdv_898: int;
  var {:scalar} Tmp_1514: int;
  var {:scalar} Tmp_1515: int;
  var {:pointer} IrpContext_69: int;
  var {:pointer} Dcb_7: int;
  var {:scalar} StartingVbo_1: int;
  var {:scalar} ByteCount_7: int;
  var {:scalar} Pin: int;
  var {:pointer} Bcb_7: int;
  var {:pointer} Buffer_20: int;
  var {:pointer} Status_22: int;
  var vslice_dummy_var_621: int;

  anon0:
    call {:si_unique_call 4397} Vbo_3 := __HAVOC_malloc(20);
    call {:si_unique_call 4398} vslice_dummy_var_621 := __HAVOC_malloc(4);
    IrpContext_69 := actual_IrpContext_69;
    Dcb_7 := actual_Dcb_7;
    StartingVbo_1 := actual_StartingVbo_1;
    ByteCount_7 := actual_ByteCount_7;
    Pin := actual_Pin;
    Bcb_7 := actual_Bcb_7;
    Buffer_20 := actual_Buffer_20;
    Status_22 := actual_Status_22;
    call {:si_unique_call 4399} sdv_do_paged_code_check();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ByteCount_7 != 0;
    call {:si_unique_call 4400} FatOpenDirectoryFile#0(IrpContext_69, Dcb_7);
    assume {:nonnull} Dcb_7 != 0;
    assume Dcb_7 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Bcb_7 != 0;
    assume Bcb_7 > 0;
    assume {:nonnull} Buffer_20 != 0;
    assume Buffer_20 > 0;
    assume {:nonnull} Status_22 != 0;
    assume Status_22 > 0;
    goto L1;

  L1:
    return;

  anon20_Then:
    assume {:nonnull} Dcb_7 != 0;
    assume Dcb_7 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Dcb_7 != 0;
    assume Dcb_7 > 0;
    havoc Tmp_1513;
    goto L20;

  L20:
    ByteCount_7 := Tmp_1513;
    assume {:nonnull} Vbo_3 != 0;
    assume Vbo_3 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Pin != 0;
    assume {:nonnull} IrpContext_69 != 0;
    assume IrpContext_69 > 0;
    havoc Tmp_1512;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Tmp_1512 == 0;
    goto L58;

  L58:
    call {:si_unique_call 4401} sdv_897 := corral_nondet();
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_897 != 0;
    Tmp_1515 := 0;
    goto L61;

  L61:
    goto L30;

  L30:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Tmp_1515 != 0;
    assume {:nonnull} Bcb_7 != 0;
    assume Bcb_7 > 0;
    assume {:nonnull} Buffer_20 != 0;
    assume Buffer_20 > 0;
    assume {:nonnull} IrpContext_69 != 0;
    assume IrpContext_69 > 0;
    call {:si_unique_call 4402} ExRaiseStatus(-1073741608);
    goto L31;

  L31:
    assume {:nonnull} Status_22 != 0;
    assume Status_22 > 0;
    goto L1;

  anon23_Then:
    assume {:partition} Tmp_1515 == 0;
    goto L31;

  anon22_Then:
    assume {:partition} sdv_897 == 0;
    Tmp_1515 := 1;
    goto L61;

  anon26_Then:
    assume {:partition} Tmp_1512 != 0;
    goto L58;

  anon25_Then:
    assume {:partition} Pin == 0;
    assume {:nonnull} IrpContext_69 != 0;
    assume IrpContext_69 > 0;
    havoc Tmp_1514;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Tmp_1514 == 0;
    goto L69;

  L69:
    call {:si_unique_call 4403} sdv_898 := corral_nondet();
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_898 != 0;
    Tmp_1515 := 0;
    goto L72;

  L72:
    goto L30;

  anon24_Then:
    assume {:partition} sdv_898 == 0;
    Tmp_1515 := 1;
    goto L72;

  anon27_Then:
    assume {:partition} Tmp_1514 != 0;
    goto L69;

  anon21_Then:
    Tmp_1513 := ByteCount_7;
    goto L20;

  anon19_Then:
    assume {:partition} ByteCount_7 == 0;
    assume {:nonnull} Bcb_7 != 0;
    assume Bcb_7 > 0;
    assume {:nonnull} Buffer_20 != 0;
    assume Buffer_20 > 0;
    assume {:nonnull} Status_22 != 0;
    assume Status_22 > 0;
    goto L1;
}



procedure {:origName "FatReadDirectoryFile"} FatReadDirectoryFile#1(actual_IrpContext_69: int, actual_Dcb_7: int, actual_StartingVbo_1: int, actual_ByteCount_7: int, actual_Pin: int, actual_Bcb_7: int, actual_Buffer_20: int, actual_Status_22: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetEaFile"} FatGetEaFile#0(actual_IrpContext_181: int, actual_Vcb_100: int, actual_EaDirent_2: int, actual_EaBcb_2: int, actual_CreateFile: int, actual_ExclusiveFcb: int)
{
  var {:pointer} Tmp_2702: int;
  var {:pointer} Tmp_2703: int;
  var {:pointer} EaStreamFile: int;
  var {:scalar} sdv_1594: int;
  var {:pointer} Tmp_2704: int;
  var {:pointer} Tmp_2705: int;
  var {:pointer} Tmp_2706: int;
  var {:pointer} Tmp_2707: int;
  var {:dopa} {:scalar} FirstLboOfFile_1: int;
  var {:pointer} CurrentIndex_2: int;
  var {:pointer} Tmp_2710: int;
  var {:pointer} Tmp_2711: int;
  var {:scalar} sdv_1595: int;
  var {:dopa} {:scalar} Status_77: int;
  var {:pointer} Tmp_2713: int;
  var {:scalar} EaFileRange: int;
  var {:pointer} Tmp_2715: int;
  var {:scalar} UnwindEaDirentCreated: int;
  var {:scalar} UnwindUpdatedSizes: int;
  var {:scalar} AllocatedClusters: int;
  var {:pointer} Tmp_2716: int;
  var {:scalar} UnwindLockedRootDcb: int;
  var {:pointer} Tmp_2717: int;
  var {:scalar} sdv_1599: int;
  var {:dopa} {:scalar} ByteOffset_8: int;
  var {:pointer} Tmp_2719: int;
  var {:scalar} sdv_1603: int;
  var {:pointer} Tmp_2720: int;
  var {:scalar} EaFileName: int;
  var {:scalar} sdv_1604: int;
  var {:pointer} Tmp_2721: int;
  var {:pointer} Tmp_2722: int;
  var {:pointer} Tmp_2723: int;
  var {:pointer} Tmp_2724: int;
  var {:pointer} FileHeader: int;
  var {:pointer} Tmp_2725: int;
  var {:pointer} Tmp_2726: int;
  var {:scalar} SectionSize: int;
  var {:pointer} Tmp_2727: int;
  var {:scalar} UnwindAllocatedDiskSpace: int;
  var {:dopa} {:scalar} AllocationSize_7: int;
  var {:pointer} Tmp_2728: int;
  var {:scalar} Index_7: int;
  var {:pointer} Tmp_2730: int;
  var {:scalar} UnwindLockedEaFcb: int;
  var {:scalar} BytesPerCluster_5: int;
  var {:pointer} Tmp_2731: int;
  var {:pointer} Tmp_2732: int;
  var {:scalar} sdv_1606: int;
  var {:pointer} Tmp_2733: int;
  var {:pointer} IrpContext_181: int;
  var {:pointer} Vcb_100: int;
  var {:pointer} EaDirent_2: int;
  var {:pointer} EaBcb_2: int;
  var {:scalar} CreateFile: int;
  var {:scalar} ExclusiveFcb: int;
  var boogieTmp: int;
  var vslice_dummy_var_622: int;
  var vslice_dummy_var_623: int;
  var vslice_dummy_var_624: int;
  var vslice_dummy_var_625: int;
  var vslice_dummy_var_626: int;
  var vslice_dummy_var_1677: int;
  var vslice_dummy_var_1678: int;
  var vslice_dummy_var_1679: int;
  var vslice_dummy_var_1680: int;
  var vslice_dummy_var_1681: int;
  var vslice_dummy_var_1682: int;
  var vslice_dummy_var_1683: int;
  var vslice_dummy_var_1684: int;
  var vslice_dummy_var_1685: int;
  var vslice_dummy_var_1686: int;
  var vslice_dummy_var_1687: int;
  var vslice_dummy_var_1688: int;
  var vslice_dummy_var_1689: int;
  var vslice_dummy_var_1690: int;
  var vslice_dummy_var_1691: int;
  var vslice_dummy_var_1692: int;
  var vslice_dummy_var_1693: int;
  var vslice_dummy_var_1694: int;
  var vslice_dummy_var_1695: int;

  anon0:
    call {:si_unique_call 4404} FirstLboOfFile_1 := __HAVOC_malloc(4);
    call {:si_unique_call 4405} vslice_dummy_var_622 := __HAVOC_malloc(4);
    call {:si_unique_call 4406} Status_77 := __HAVOC_malloc(4);
    call {:si_unique_call 4407} EaFileRange := __HAVOC_malloc(28);
    call {:si_unique_call 4408} ByteOffset_8 := __HAVOC_malloc(4);
    call {:si_unique_call 4409} EaFileName := __HAVOC_malloc(12);
    call {:si_unique_call 4410} SectionSize := __HAVOC_malloc(20);
    call {:si_unique_call 4411} AllocationSize_7 := __HAVOC_malloc(4);
    IrpContext_181 := actual_IrpContext_181;
    Vcb_100 := actual_Vcb_100;
    EaDirent_2 := actual_EaDirent_2;
    EaBcb_2 := actual_EaBcb_2;
    CreateFile := actual_CreateFile;
    ExclusiveFcb := actual_ExclusiveFcb;
    EaStreamFile := 0;
    UnwindLockedEaFcb := 0;
    UnwindLockedRootDcb := 0;
    UnwindAllocatedDiskSpace := 0;
    UnwindEaDirentCreated := 0;
    UnwindUpdatedSizes := 0;
    call {:si_unique_call 4412} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} ExclusiveFcb != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1677;
    call {:si_unique_call 4413} sdv_1599 := FatAcquireExclusiveFcb(IrpContext_181, vslice_dummy_var_1677);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_1599 == 0;
    goto L66;

  L66:
    assume {:nonnull} IrpContext_181 != 0;
    assume IrpContext_181 > 0;
    call {:si_unique_call 4414} ExRaiseStatus(-1073741608);
    goto L70;

  L70:
    UnwindLockedEaFcb := 1;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L73;

  L73:
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2711;
    assume {:nonnull} Tmp_2711 != 0;
    assume Tmp_2711 > 0;
    assume {:nonnull} EaFileName != 0;
    assume EaFileName > 0;
    assume {:nonnull} EaFileName != 0;
    assume EaFileName > 0;
    assume {:nonnull} EaFileName != 0;
    assume EaFileName > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} CreateFile != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    call {:si_unique_call 4415} vslice_dummy_var_624 := ExAcquireResourceExclusiveLite(0, 1);
    goto L129;

  L129:
    UnwindLockedRootDcb := 1;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2723;
    assume {:nonnull} Tmp_2723 != 0;
    assume Tmp_2723 > 0;
    havoc vslice_dummy_var_1678;
    call {:si_unique_call 4416} FatLocateSimpleOemDirent(IrpContext_181, vslice_dummy_var_1678, EaFileName, EaDirent_2, EaBcb_2, ByteOffset_8);
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[EaDirent_2] != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2703;
    assume {:nonnull} ByteOffset_8 != 0;
    assume ByteOffset_8 > 0;
    assume {:nonnull} Tmp_2703 != 0;
    assume Tmp_2703 > 0;
    havoc vslice_dummy_var_1679;
    havoc vslice_dummy_var_1680;
    call {:si_unique_call 4417} FatPinMappedData(IrpContext_181, vslice_dummy_var_1679, vslice_dummy_var_1680, 32, EaBcb_2);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2716;
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2732 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} Tmp_2716 != 0;
    assume Tmp_2716 > 0;
    assume {:nonnull} Tmp_2732 != 0;
    assume Tmp_2732 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2728;
    assume {:nonnull} ByteOffset_8 != 0;
    assume ByteOffset_8 > 0;
    assume {:nonnull} Tmp_2728 != 0;
    assume Tmp_2728 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2725;
    assume {:nonnull} Tmp_2725 != 0;
    assume Tmp_2725 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1681;
    call {:si_unique_call 4418} FatLookupFileAllocationSize#1(IrpContext_181, vslice_dummy_var_1681);
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2719 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2719 != 0;
    assume Tmp_2719 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2707;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2707 != 0;
    assume Tmp_2707 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2707 != 0;
    assume Tmp_2707 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2707 != 0;
    assume Tmp_2707 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2707 != 0;
    assume Tmp_2707 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2707 != 0;
    assume Tmp_2707 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2721;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1682;
    call {:si_unique_call 4419} EaStreamFile := FatOpenEaFile(IrpContext_181, vslice_dummy_var_1682);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    goto L82;

  L82:
    call {:si_unique_call 4420} sdv_1603 := sdv_AbnormalTermination();
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_1603 != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} UnwindAllocatedDiskSpace != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2722;
    assume {:nonnull} Tmp_2722 != 0;
    assume Tmp_2722 > 0;
    call {:si_unique_call 4421} FatDeallocateDiskSpace(IrpContext_181, Vcb_100, Mcb__FCB(Tmp_2722));
    goto L88;

  L88:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} UnwindEaDirentCreated != 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} UnwindUpdatedSizes != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2702;
    assume {:nonnull} Tmp_2702 != 0;
    assume Tmp_2702 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2717;
    assume {:nonnull} Tmp_2717 != 0;
    assume Tmp_2717 > 0;
    goto L94;

  L94:
    assume {:nonnull} EaBcb_2 != 0;
    assume EaBcb_2 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} EaBcb_2 != 0;
    assume EaBcb_2 > 0;
    goto L97;

  L97:
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1683;
    call {:si_unique_call 4422} FatDeleteDirent#0(IrpContext_181, vslice_dummy_var_1683, 0, 1);
    goto L92;

  L92:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} UnwindLockedEaFcb != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    call {:si_unique_call 4423} ExReleaseResourceLite(0);
    goto L104;

  L104:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} EaStreamFile != 0;
    call {:si_unique_call 4424} vslice_dummy_var_623 := sdv_ObDereferenceObject(0);
    goto L86;

  L86:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} UnwindLockedRootDcb != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    call {:si_unique_call 4425} ExReleaseResourceLite(0);
    goto L111;

  L111:
    call {:si_unique_call 4426} FatUnpinEaRange(IrpContext_181, EaFileRange);
    return;

  anon54_Then:
    assume {:partition} UnwindLockedRootDcb == 0;
    goto L111;

  anon60_Then:
    assume {:partition} EaStreamFile == 0;
    goto L86;

  anon57_Then:
    assume {:partition} UnwindLockedEaFcb == 0;
    goto L104;

  anon59_Then:
    goto L97;

  anon58_Then:
    assume {:partition} UnwindUpdatedSizes == 0;
    goto L94;

  anon56_Then:
    assume {:partition} UnwindEaDirentCreated == 0;
    goto L92;

  anon55_Then:
    assume {:partition} UnwindAllocatedDiskSpace == 0;
    goto L88;

  anon53_Then:
    assume {:partition} sdv_1603 == 0;
    goto L86;

  anon61_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[EaDirent_2] == 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} CreateFile != 0;
    call {:si_unique_call 4427} BytesPerCluster_5 := corral_nondet();
    assume {:nonnull} AllocationSize_7 != 0;
    assume AllocationSize_7 > 0;
    call {:si_unique_call 4428} AllocatedClusters := corral_nondet();
    assume {:nonnull} AllocationSize_7 != 0;
    assume AllocationSize_7 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2724;
    assume {:nonnull} Tmp_2724 != 0;
    assume Tmp_2724 > 0;
    call {:si_unique_call 4429} FatAllocateDiskSpace(IrpContext_181, Vcb_100, 0, AllocationSize_7, 0, Mcb__FCB(Tmp_2724));
    UnwindAllocatedDiskSpace := 1;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2726;
    assume {:nonnull} Tmp_2726 != 0;
    assume Tmp_2726 > 0;
    havoc vslice_dummy_var_1684;
    call {:si_unique_call 4430} sdv_1606 := FatCreateNewDirent(IrpContext_181, vslice_dummy_var_1684, 1);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2733;
    assume {:nonnull} Tmp_2733 != 0;
    assume Tmp_2733 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2706;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2720;
    assume {:nonnull} Tmp_2706 != 0;
    assume Tmp_2706 > 0;
    assume {:nonnull} Tmp_2720 != 0;
    assume Tmp_2720 > 0;
    havoc vslice_dummy_var_1685;
    havoc vslice_dummy_var_1686;
    call {:si_unique_call 4431} FatPrepareWriteDirectoryFile(IrpContext_181, vslice_dummy_var_1685, vslice_dummy_var_1686, 32, EaBcb_2, EaDirent_2, 0, 1, Status_77);
    UnwindEaDirentCreated := 1;
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    call {:si_unique_call 4432} FatConstructDirent(IrpContext_181, Mem_T.P_PACKED_DIRENT[EaDirent_2], EaFileName, 0, 0, 0, 39, 1, 0);
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2713 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} AllocationSize_7 != 0;
    assume AllocationSize_7 > 0;
    assume {:nonnull} Tmp_2713 != 0;
    assume Tmp_2713 > 0;
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2710 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2710 != 0;
    assume Tmp_2710 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2704;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2727;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    UnwindUpdatedSizes := 1;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1687;
    call {:si_unique_call 4433} EaStreamFile := FatOpenEaFile(IrpContext_181, vslice_dummy_var_1687);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2715;
    assume {:nonnull} Tmp_2715 != 0;
    assume Tmp_2715 > 0;
    call {:si_unique_call 4434} vslice_dummy_var_625 := FatLookupMcbEntry(Vcb_100, Mcb__FCB(Tmp_2715), 0, FirstLboOfFile_1, 0, 0);
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2705 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} Tmp_2705 != 0;
    assume Tmp_2705 > 0;
    call {:si_unique_call 4435} boogieTmp := corral_nondet();
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2730;
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2731 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} Tmp_2730 != 0;
    assume Tmp_2730 > 0;
    assume {:nonnull} Tmp_2731 != 0;
    assume Tmp_2731 > 0;
    assume {:nonnull} AllocationSize_7 != 0;
    assume AllocationSize_7 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1688;
    havoc vslice_dummy_var_1689;
    call {:si_unique_call 4436} FatPinEaRange(IrpContext_181, EaStreamFile, vslice_dummy_var_1688, EaFileRange, 0, vslice_dummy_var_1689, -1073741762);
    assume {:nonnull} EaFileRange != 0;
    assume EaFileRange > 0;
    havoc FileHeader;
    assume {:nonnull} AllocationSize_7 != 0;
    assume AllocationSize_7 > 0;
    havoc vslice_dummy_var_1690;
    call {:si_unique_call 4437} sdv_RtlZeroMemory(0, vslice_dummy_var_1690);
    assume {:nonnull} FileHeader != 0;
    assume FileHeader > 0;
    Index_7 := 240;
    assume {:nonnull} FileHeader != 0;
    assume FileHeader > 0;
    havoc CurrentIndex_2;
    goto L204;

  L204:
    call {:si_unique_call 4438} Index_7 := FatGetEaFile#0_loop_L204(CurrentIndex_2, AllocatedClusters, Index_7);
    goto L204_last;

  L204_last:
    assume {:CounterLoop 240} {:Counter "Index_7"} true;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Index_7 != 0;
    assume {:nonnull} CurrentIndex_2 != 0;
    assume CurrentIndex_2 > 0;
    Index_7 := Index_7 - 1;
    goto anon63_Else_dummy;

  anon63_Else_dummy:
    assume false;
    return;

  anon63_Then:
    assume {:partition} Index_7 == 0;
    call {:si_unique_call 4439} Index_7 := corral_nondet();
    CurrentIndex_2 := FileHeader;
    goto L210;

  L210:
    call {:si_unique_call 4440} Index_7 := FatGetEaFile#0_loop_L210(CurrentIndex_2, Index_7);
    goto L210_last;

  L210_last:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Index_7 != 0;
    assume {:nonnull} CurrentIndex_2 != 0;
    assume CurrentIndex_2 > 0;
    Index_7 := Index_7 - 1;
    goto anon64_Else_dummy;

  anon64_Else_dummy:
    assume false;
    return;

  anon64_Then:
    assume {:partition} Index_7 == 0;
    call {:si_unique_call 4441} FatMarkEaRangeDirty(IrpContext_181, EaStreamFile, EaFileRange);
    call {:si_unique_call 4442} FatUnpinEaRange(IrpContext_181, EaFileRange);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    goto L82;

  anon62_Then:
    assume {:partition} CreateFile == 0;
    goto L82;

  anon69_Then:
    assume {:partition} CreateFile == 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    call {:si_unique_call 4443} vslice_dummy_var_626 := ExAcquireResourceSharedLite(0, 1);
    goto L129;

  anon52_Then:
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1691;
    call {:si_unique_call 4444} FatVerifyFcb(IrpContext_181, vslice_dummy_var_1691);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1692;
    call {:si_unique_call 4445} FatGetDirentFromFcbOrDcb(IrpContext_181, vslice_dummy_var_1692, EaDirent_2, EaBcb_2);
    goto L82;

  anon68_Then:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} ExclusiveFcb == 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    call {:si_unique_call 4446} ExReleaseResourceLite(0);
    UnwindLockedEaFcb := 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1693;
    call {:si_unique_call 4447} sdv_1594 := FatAcquireExclusiveFcb(IrpContext_181, vslice_dummy_var_1693);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_1594 != 0;
    goto L233;

  L233:
    UnwindLockedEaFcb := 1;
    goto L73;

  anon65_Then:
    assume {:partition} sdv_1594 == 0;
    assume {:nonnull} IrpContext_181 != 0;
    assume IrpContext_181 > 0;
    call {:si_unique_call 4448} ExRaiseStatus(-1073741608);
    goto L233;

  anon51_Then:
    assume {:partition} ExclusiveFcb != 0;
    goto L73;

  anon50_Then:
    assume {:partition} sdv_1599 != 0;
    goto L26;

  L26:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} ExclusiveFcb == 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1694;
    call {:si_unique_call 4449} sdv_1604 := FatAcquireSharedFcb(IrpContext_181, vslice_dummy_var_1694);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_1604 != 0;
    goto L70;

  anon66_Then:
    assume {:partition} sdv_1604 == 0;
    goto L66;

  anon49_Then:
    assume {:partition} ExclusiveFcb != 0;
    goto L70;

  anon48_Then:
    assume {:partition} ExclusiveFcb == 0;
    goto L26;

  anon47_Then:
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1695;
    call {:si_unique_call 4450} sdv_1595 := FatAcquireExclusiveFcb(IrpContext_181, vslice_dummy_var_1695);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} sdv_1595 != 0;
    goto L243;

  L243:
    UnwindLockedEaFcb := 1;
    goto L73;

  anon67_Then:
    assume {:partition} sdv_1595 == 0;
    assume {:nonnull} IrpContext_181 != 0;
    assume IrpContext_181 > 0;
    call {:si_unique_call 4451} ExRaiseStatus(-1073741608);
    goto L243;
}



procedure {:origName "FatGetEaFile"} FatGetEaFile#0(actual_IrpContext_181: int, actual_Vcb_100: int, actual_EaDirent_2: int, actual_EaBcb_2: int, actual_CreateFile: int, actual_ExclusiveFcb: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatGetEaFile"} FatGetEaFile#1(actual_IrpContext_181: int, actual_Vcb_100: int, actual_EaDirent_2: int, actual_EaBcb_2: int, actual_CreateFile: int, actual_ExclusiveFcb: int)
{
  var {:pointer} Tmp_2702: int;
  var {:pointer} Tmp_2703: int;
  var {:pointer} EaStreamFile: int;
  var {:scalar} sdv_1594: int;
  var {:pointer} Tmp_2704: int;
  var {:pointer} Tmp_2705: int;
  var {:pointer} Tmp_2706: int;
  var {:pointer} Tmp_2707: int;
  var {:dopa} {:scalar} FirstLboOfFile_1: int;
  var {:pointer} CurrentIndex_2: int;
  var {:pointer} Tmp_2710: int;
  var {:pointer} Tmp_2711: int;
  var {:scalar} sdv_1595: int;
  var {:dopa} {:scalar} Status_77: int;
  var {:pointer} Tmp_2713: int;
  var {:scalar} EaFileRange: int;
  var {:pointer} Tmp_2715: int;
  var {:scalar} UnwindEaDirentCreated: int;
  var {:scalar} UnwindUpdatedSizes: int;
  var {:scalar} AllocatedClusters: int;
  var {:pointer} Tmp_2716: int;
  var {:scalar} UnwindLockedRootDcb: int;
  var {:pointer} Tmp_2717: int;
  var {:scalar} sdv_1599: int;
  var {:dopa} {:scalar} ByteOffset_8: int;
  var {:pointer} Tmp_2719: int;
  var {:scalar} sdv_1603: int;
  var {:pointer} Tmp_2720: int;
  var {:scalar} EaFileName: int;
  var {:scalar} sdv_1604: int;
  var {:pointer} Tmp_2721: int;
  var {:pointer} Tmp_2722: int;
  var {:pointer} Tmp_2723: int;
  var {:pointer} Tmp_2724: int;
  var {:pointer} FileHeader: int;
  var {:pointer} Tmp_2725: int;
  var {:pointer} Tmp_2726: int;
  var {:scalar} SectionSize: int;
  var {:pointer} Tmp_2727: int;
  var {:scalar} UnwindAllocatedDiskSpace: int;
  var {:dopa} {:scalar} AllocationSize_7: int;
  var {:pointer} Tmp_2728: int;
  var {:scalar} Index_7: int;
  var {:pointer} Tmp_2730: int;
  var {:scalar} UnwindLockedEaFcb: int;
  var {:scalar} BytesPerCluster_5: int;
  var {:pointer} Tmp_2731: int;
  var {:pointer} Tmp_2732: int;
  var {:scalar} sdv_1606: int;
  var {:pointer} Tmp_2733: int;
  var {:pointer} IrpContext_181: int;
  var {:pointer} Vcb_100: int;
  var {:pointer} EaDirent_2: int;
  var {:pointer} EaBcb_2: int;
  var {:scalar} CreateFile: int;
  var {:scalar} ExclusiveFcb: int;
  var boogieTmp: int;
  var vslice_dummy_var_627: int;
  var vslice_dummy_var_628: int;
  var vslice_dummy_var_629: int;
  var vslice_dummy_var_630: int;
  var vslice_dummy_var_631: int;
  var vslice_dummy_var_1696: int;
  var vslice_dummy_var_1697: int;
  var vslice_dummy_var_1698: int;
  var vslice_dummy_var_1699: int;
  var vslice_dummy_var_1700: int;
  var vslice_dummy_var_1701: int;
  var vslice_dummy_var_1702: int;
  var vslice_dummy_var_1703: int;
  var vslice_dummy_var_1704: int;
  var vslice_dummy_var_1705: int;
  var vslice_dummy_var_1706: int;
  var vslice_dummy_var_1707: int;
  var vslice_dummy_var_1708: int;
  var vslice_dummy_var_1709: int;
  var vslice_dummy_var_1710: int;
  var vslice_dummy_var_1711: int;
  var vslice_dummy_var_1712: int;
  var vslice_dummy_var_1713: int;
  var vslice_dummy_var_1714: int;

  anon0:
    call {:si_unique_call 4452} FirstLboOfFile_1 := __HAVOC_malloc(4);
    call {:si_unique_call 4453} vslice_dummy_var_627 := __HAVOC_malloc(4);
    call {:si_unique_call 4454} Status_77 := __HAVOC_malloc(4);
    call {:si_unique_call 4455} EaFileRange := __HAVOC_malloc(28);
    call {:si_unique_call 4456} ByteOffset_8 := __HAVOC_malloc(4);
    call {:si_unique_call 4457} EaFileName := __HAVOC_malloc(12);
    call {:si_unique_call 4458} SectionSize := __HAVOC_malloc(20);
    call {:si_unique_call 4459} AllocationSize_7 := __HAVOC_malloc(4);
    IrpContext_181 := actual_IrpContext_181;
    Vcb_100 := actual_Vcb_100;
    EaDirent_2 := actual_EaDirent_2;
    EaBcb_2 := actual_EaBcb_2;
    CreateFile := actual_CreateFile;
    ExclusiveFcb := actual_ExclusiveFcb;
    EaStreamFile := 0;
    UnwindLockedEaFcb := 0;
    UnwindLockedRootDcb := 0;
    UnwindAllocatedDiskSpace := 0;
    UnwindEaDirentCreated := 0;
    UnwindUpdatedSizes := 0;
    call {:si_unique_call 4460} sdv_RtlZeroMemory(0, 52);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} ExclusiveFcb != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1696;
    call {:si_unique_call 4461} sdv_1599 := FatAcquireExclusiveFcb(IrpContext_181, vslice_dummy_var_1696);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_1599 == 0;
    goto L66;

  L66:
    assume {:nonnull} IrpContext_181 != 0;
    assume IrpContext_181 > 0;
    call {:si_unique_call 4462} ExRaiseStatus(-1073741608);
    goto L70;

  L70:
    UnwindLockedEaFcb := 1;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L73;

  L73:
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2711;
    assume {:nonnull} Tmp_2711 != 0;
    assume Tmp_2711 > 0;
    assume {:nonnull} EaFileName != 0;
    assume EaFileName > 0;
    assume {:nonnull} EaFileName != 0;
    assume EaFileName > 0;
    assume {:nonnull} EaFileName != 0;
    assume EaFileName > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} CreateFile != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    call {:si_unique_call 4463} vslice_dummy_var_629 := ExAcquireResourceExclusiveLite(0, 1);
    goto L129;

  L129:
    UnwindLockedRootDcb := 1;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2723;
    assume {:nonnull} Tmp_2723 != 0;
    assume Tmp_2723 > 0;
    havoc vslice_dummy_var_1697;
    call {:si_unique_call 4464} FatLocateSimpleOemDirent(IrpContext_181, vslice_dummy_var_1697, EaFileName, EaDirent_2, EaBcb_2, ByteOffset_8);
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[EaDirent_2] != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2703;
    assume {:nonnull} ByteOffset_8 != 0;
    assume ByteOffset_8 > 0;
    assume {:nonnull} Tmp_2703 != 0;
    assume Tmp_2703 > 0;
    havoc vslice_dummy_var_1698;
    havoc vslice_dummy_var_1699;
    call {:si_unique_call 4465} FatPinMappedData(IrpContext_181, vslice_dummy_var_1698, vslice_dummy_var_1699, 32, EaBcb_2);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2716;
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2732 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} Tmp_2716 != 0;
    assume Tmp_2716 > 0;
    assume {:nonnull} Tmp_2732 != 0;
    assume Tmp_2732 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2728;
    assume {:nonnull} ByteOffset_8 != 0;
    assume ByteOffset_8 > 0;
    assume {:nonnull} Tmp_2728 != 0;
    assume Tmp_2728 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2725;
    assume {:nonnull} Tmp_2725 != 0;
    assume Tmp_2725 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1700;
    call {:si_unique_call 4466} FatLookupFileAllocationSize#1(IrpContext_181, vslice_dummy_var_1700);
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2719 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2719 != 0;
    assume Tmp_2719 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2707;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2707 != 0;
    assume Tmp_2707 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2707 != 0;
    assume Tmp_2707 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2707 != 0;
    assume Tmp_2707 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2707 != 0;
    assume Tmp_2707 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2707 != 0;
    assume Tmp_2707 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2721;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2721 != 0;
    assume Tmp_2721 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1701;
    call {:si_unique_call 4467} EaStreamFile := FatOpenEaFile(IrpContext_181, vslice_dummy_var_1701);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    goto L82;

  L82:
    call {:si_unique_call 4468} sdv_1603 := sdv_AbnormalTermination();
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_1603 != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} UnwindAllocatedDiskSpace != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2722;
    assume {:nonnull} Tmp_2722 != 0;
    assume Tmp_2722 > 0;
    call {:si_unique_call 4469} FatDeallocateDiskSpace(IrpContext_181, Vcb_100, Mcb__FCB(Tmp_2722));
    goto L88;

  L88:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} UnwindEaDirentCreated != 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} UnwindUpdatedSizes != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2702;
    assume {:nonnull} Tmp_2702 != 0;
    assume Tmp_2702 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2717;
    assume {:nonnull} Tmp_2717 != 0;
    assume Tmp_2717 > 0;
    goto L94;

  L94:
    assume {:nonnull} EaBcb_2 != 0;
    assume EaBcb_2 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} EaBcb_2 != 0;
    assume EaBcb_2 > 0;
    goto L97;

  L97:
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1702;
    call {:si_unique_call 4470} FatDeleteDirent#1(IrpContext_181, vslice_dummy_var_1702, 0, 1);
    goto L92;

  L92:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} UnwindLockedEaFcb != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    call {:si_unique_call 4471} ExReleaseResourceLite(0);
    goto L104;

  L104:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} EaStreamFile != 0;
    call {:si_unique_call 4472} vslice_dummy_var_628 := sdv_ObDereferenceObject(0);
    goto L86;

  L86:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} UnwindLockedRootDcb != 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    call {:si_unique_call 4473} ExReleaseResourceLite(0);
    goto L111;

  L111:
    call {:si_unique_call 4474} FatUnpinEaRange(IrpContext_181, EaFileRange);
    return;

  anon54_Then:
    assume {:partition} UnwindLockedRootDcb == 0;
    goto L111;

  anon60_Then:
    assume {:partition} EaStreamFile == 0;
    goto L86;

  anon57_Then:
    assume {:partition} UnwindLockedEaFcb == 0;
    goto L104;

  anon59_Then:
    goto L97;

  anon58_Then:
    assume {:partition} UnwindUpdatedSizes == 0;
    goto L94;

  anon56_Then:
    assume {:partition} UnwindEaDirentCreated == 0;
    goto L92;

  anon55_Then:
    assume {:partition} UnwindAllocatedDiskSpace == 0;
    goto L88;

  anon53_Then:
    assume {:partition} sdv_1603 == 0;
    goto L86;

  anon61_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[EaDirent_2] == 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} CreateFile != 0;
    call {:si_unique_call 4475} BytesPerCluster_5 := corral_nondet();
    assume {:nonnull} AllocationSize_7 != 0;
    assume AllocationSize_7 > 0;
    call {:si_unique_call 4476} AllocatedClusters := corral_nondet();
    assume {:nonnull} AllocationSize_7 != 0;
    assume AllocationSize_7 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2724;
    assume {:nonnull} Tmp_2724 != 0;
    assume Tmp_2724 > 0;
    call {:si_unique_call 4477} FatAllocateDiskSpace(IrpContext_181, Vcb_100, 0, AllocationSize_7, 0, Mcb__FCB(Tmp_2724));
    UnwindAllocatedDiskSpace := 1;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2726;
    assume {:nonnull} Tmp_2726 != 0;
    assume Tmp_2726 > 0;
    havoc vslice_dummy_var_1703;
    call {:si_unique_call 4478} sdv_1606 := FatCreateNewDirent(IrpContext_181, vslice_dummy_var_1703, 1);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2733;
    assume {:nonnull} Tmp_2733 != 0;
    assume Tmp_2733 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2706;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2720;
    assume {:nonnull} Tmp_2706 != 0;
    assume Tmp_2706 > 0;
    assume {:nonnull} Tmp_2720 != 0;
    assume Tmp_2720 > 0;
    havoc vslice_dummy_var_1704;
    havoc vslice_dummy_var_1705;
    call {:si_unique_call 4479} FatPrepareWriteDirectoryFile(IrpContext_181, vslice_dummy_var_1704, vslice_dummy_var_1705, 32, EaBcb_2, EaDirent_2, 0, 1, Status_77);
    UnwindEaDirentCreated := 1;
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    call {:si_unique_call 4480} FatConstructDirent(IrpContext_181, Mem_T.P_PACKED_DIRENT[EaDirent_2], EaFileName, 0, 0, 0, 39, 1, 0);
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2713 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} AllocationSize_7 != 0;
    assume AllocationSize_7 > 0;
    assume {:nonnull} Tmp_2713 != 0;
    assume Tmp_2713 > 0;
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2710 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2710 != 0;
    assume Tmp_2710 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2704;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2704 != 0;
    assume Tmp_2704 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2727;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    assume {:nonnull} SectionSize != 0;
    assume SectionSize > 0;
    assume {:nonnull} Tmp_2727 != 0;
    assume Tmp_2727 > 0;
    UnwindUpdatedSizes := 1;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1706;
    call {:si_unique_call 4481} EaStreamFile := FatOpenEaFile(IrpContext_181, vslice_dummy_var_1706);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2715;
    assume {:nonnull} Tmp_2715 != 0;
    assume Tmp_2715 > 0;
    call {:si_unique_call 4482} vslice_dummy_var_630 := FatLookupMcbEntry(Vcb_100, Mcb__FCB(Tmp_2715), 0, FirstLboOfFile_1, 0, 0);
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2705 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} Tmp_2705 != 0;
    assume Tmp_2705 > 0;
    call {:si_unique_call 4483} boogieTmp := corral_nondet();
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc Tmp_2730;
    assume {:nonnull} EaDirent_2 != 0;
    assume EaDirent_2 > 0;
    Tmp_2731 := Mem_T.P_PACKED_DIRENT[EaDirent_2];
    assume {:nonnull} Tmp_2730 != 0;
    assume Tmp_2730 > 0;
    assume {:nonnull} Tmp_2731 != 0;
    assume Tmp_2731 > 0;
    assume {:nonnull} AllocationSize_7 != 0;
    assume AllocationSize_7 > 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1707;
    havoc vslice_dummy_var_1708;
    call {:si_unique_call 4484} FatPinEaRange(IrpContext_181, EaStreamFile, vslice_dummy_var_1707, EaFileRange, 0, vslice_dummy_var_1708, -1073741762);
    assume {:nonnull} EaFileRange != 0;
    assume EaFileRange > 0;
    havoc FileHeader;
    assume {:nonnull} AllocationSize_7 != 0;
    assume AllocationSize_7 > 0;
    havoc vslice_dummy_var_1709;
    call {:si_unique_call 4485} sdv_RtlZeroMemory(0, vslice_dummy_var_1709);
    assume {:nonnull} FileHeader != 0;
    assume FileHeader > 0;
    Index_7 := 240;
    assume {:nonnull} FileHeader != 0;
    assume FileHeader > 0;
    havoc CurrentIndex_2;
    goto L204;

  L204:
    call {:si_unique_call 4486} Index_7 := FatGetEaFile#1_loop_L204(CurrentIndex_2, AllocatedClusters, Index_7);
    goto L204_last;

  L204_last:
    assume {:CounterLoop 240} {:Counter "Index_7"} true;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Index_7 != 0;
    assume {:nonnull} CurrentIndex_2 != 0;
    assume CurrentIndex_2 > 0;
    Index_7 := Index_7 - 1;
    goto anon63_Else_dummy;

  anon63_Else_dummy:
    assume false;
    return;

  anon63_Then:
    assume {:partition} Index_7 == 0;
    call {:si_unique_call 4487} Index_7 := corral_nondet();
    CurrentIndex_2 := FileHeader;
    goto L210;

  L210:
    call {:si_unique_call 4488} Index_7 := FatGetEaFile#1_loop_L210(CurrentIndex_2, Index_7);
    goto L210_last;

  L210_last:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Index_7 != 0;
    assume {:nonnull} CurrentIndex_2 != 0;
    assume CurrentIndex_2 > 0;
    Index_7 := Index_7 - 1;
    goto anon64_Else_dummy;

  anon64_Else_dummy:
    assume false;
    return;

  anon64_Then:
    assume {:partition} Index_7 == 0;
    call {:si_unique_call 4489} FatMarkEaRangeDirty(IrpContext_181, EaStreamFile, EaFileRange);
    call {:si_unique_call 4490} FatUnpinEaRange(IrpContext_181, EaFileRange);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    goto L82;

  anon62_Then:
    assume {:partition} CreateFile == 0;
    goto L82;

  anon69_Then:
    assume {:partition} CreateFile == 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    call {:si_unique_call 4491} vslice_dummy_var_631 := ExAcquireResourceSharedLite(0, 1);
    goto L129;

  anon52_Then:
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1710;
    call {:si_unique_call 4492} FatVerifyFcb(IrpContext_181, vslice_dummy_var_1710);
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1711;
    call {:si_unique_call 4493} FatGetDirentFromFcbOrDcb(IrpContext_181, vslice_dummy_var_1711, EaDirent_2, EaBcb_2);
    goto L82;

  anon68_Then:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} ExclusiveFcb == 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    call {:si_unique_call 4494} ExReleaseResourceLite(0);
    UnwindLockedEaFcb := 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1712;
    call {:si_unique_call 4495} sdv_1594 := FatAcquireExclusiveFcb(IrpContext_181, vslice_dummy_var_1712);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_1594 != 0;
    goto L233;

  L233:
    UnwindLockedEaFcb := 1;
    goto L73;

  anon65_Then:
    assume {:partition} sdv_1594 == 0;
    assume {:nonnull} IrpContext_181 != 0;
    assume IrpContext_181 > 0;
    call {:si_unique_call 4496} ExRaiseStatus(-1073741608);
    goto L233;

  anon51_Then:
    assume {:partition} ExclusiveFcb != 0;
    goto L73;

  anon50_Then:
    assume {:partition} sdv_1599 != 0;
    goto L26;

  L26:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} ExclusiveFcb == 0;
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1713;
    call {:si_unique_call 4497} sdv_1604 := FatAcquireSharedFcb(IrpContext_181, vslice_dummy_var_1713);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_1604 != 0;
    goto L70;

  anon66_Then:
    assume {:partition} sdv_1604 == 0;
    goto L66;

  anon49_Then:
    assume {:partition} ExclusiveFcb != 0;
    goto L70;

  anon48_Then:
    assume {:partition} ExclusiveFcb == 0;
    goto L26;

  anon47_Then:
    assume {:nonnull} Vcb_100 != 0;
    assume Vcb_100 > 0;
    havoc vslice_dummy_var_1714;
    call {:si_unique_call 4498} sdv_1595 := FatAcquireExclusiveFcb(IrpContext_181, vslice_dummy_var_1714);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} sdv_1595 != 0;
    goto L243;

  L243:
    UnwindLockedEaFcb := 1;
    goto L73;

  anon67_Then:
    assume {:partition} sdv_1595 == 0;
    assume {:nonnull} IrpContext_181 != 0;
    assume IrpContext_181 > 0;
    call {:si_unique_call 4499} ExRaiseStatus(-1073741608);
    goto L243;
}



procedure {:origName "FatGetEaFile"} FatGetEaFile#1(actual_IrpContext_181: int, actual_Vcb_100: int, actual_EaDirent_2: int, actual_EaBcb_2: int, actual_CreateFile: int, actual_ExclusiveFcb: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeleteDirent"} FatDeleteDirent#0(actual_IrpContext_163: int, actual_FcbOrDcb_15: int, actual_DeleteContext: int, actual_DeleteEa: int)
{
  var {:scalar} Offset_4: int;
  var {:pointer} Dirent_38: int;
  var {:pointer} Bcb_24: int;
  var {:dopa} {:scalar} DontCare_7: int;
  var {:pointer} Tmp_2579: int;
  var {:pointer} Tmp_2580: int;
  var {:pointer} Tmp_2581: int;
  var {:pointer} Tmp_2582: int;
  var {:pointer} Tmp_2584: int;
  var {:pointer} IrpContext_163: int;
  var {:pointer} FcbOrDcb_15: int;
  var {:pointer} DeleteContext: int;
  var {:scalar} DeleteEa: int;
  var vslice_dummy_var_632: int;
  var vslice_dummy_var_633: int;
  var vslice_dummy_var_1715: int;
  var vslice_dummy_var_1716: int;
  var vslice_dummy_var_1717: int;

  anon0:
    call {:si_unique_call 4500} vslice_dummy_var_632 := __HAVOC_malloc(4);
    call {:si_unique_call 4501} Dirent_38 := __HAVOC_malloc(4);
    call {:si_unique_call 4502} Bcb_24 := __HAVOC_malloc(4);
    call {:si_unique_call 4503} DontCare_7 := __HAVOC_malloc(4);
    IrpContext_163 := actual_IrpContext_163;
    FcbOrDcb_15 := actual_FcbOrDcb_15;
    DeleteContext := actual_DeleteContext;
    DeleteEa := actual_DeleteEa;
    call {:si_unique_call 4504} Tmp_2582 := __HAVOC_malloc(44);
    assume {:nonnull} Bcb_24 != 0;
    assume Bcb_24 > 0;
    call {:si_unique_call 4505} sdv_do_paged_code_check();
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} DeleteEa != 0;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L18;

  L18:
    call {:si_unique_call 4506} KeBugCheckEx(35, 656216, 0, 0, 0);
    goto L13;

  L13:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    call {:si_unique_call 4507} vslice_dummy_var_633 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    havoc Offset_4;
    goto L31;

  L31:
    call {:si_unique_call 4508} Offset_4, Tmp_2582 := FatDeleteDirent#0_loop_L31(Offset_4, Dirent_38, Bcb_24, DontCare_7, Tmp_2582, IrpContext_163, FcbOrDcb_15);
    goto L31_last;

  L31_last:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L35;

  L35:
    assume {:nonnull} Bcb_24 != 0;
    assume Bcb_24 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Bcb_24 != 0;
    assume Bcb_24 > 0;
    goto L36;

  L36:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    havoc vslice_dummy_var_1715;
    call {:si_unique_call 4509} FatPrepareWriteDirectoryFile(IrpContext_163, vslice_dummy_var_1715, Offset_4, 32, Bcb_24, Dirent_38, 0, 1, DontCare_7);
    goto L43;

  L43:
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_38] > 0;
    havoc Tmp_2582;
    assume {:nonnull} Tmp_2582 != 0;
    assume Tmp_2582 > 0;
    Offset_4 := Offset_4 + 32;
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_38] := Mem_T.P_PACKED_DIRENT[Dirent_38];
    goto L43_dummy;

  L43_dummy:
    assume false;
    return;

  anon35_Then:
    goto L36;

  anon33_Then:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} BAND(Offset_4, 4095) != 0;
    goto L43;

  anon34_Then:
    assume {:partition} BAND(Offset_4, 4095) == 0;
    goto L35;

  anon32_Then:
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_38] := Mem_T.P_PACKED_DIRENT[Dirent_38];
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    havoc Tmp_2579;
    assume {:nonnull} Tmp_2579 != 0;
    assume Tmp_2579 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L48;

  L48:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} DeleteContext != 0;
    assume {:nonnull} DeleteContext != 0;
    assume DeleteContext > 0;
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_38] > 0;
    assume {:nonnull} DeleteContext != 0;
    assume DeleteContext > 0;
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_38] > 0;
    goto L54;

  L54:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    havoc Tmp_2584;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    assume {:nonnull} Tmp_2584 != 0;
    assume Tmp_2584 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    havoc Tmp_2580;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    assume {:nonnull} Tmp_2580 != 0;
    assume Tmp_2580 > 0;
    goto L57;

  L57:
    assume {:nonnull} Bcb_24 != 0;
    assume Bcb_24 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Bcb_24 != 0;
    assume Bcb_24 > 0;
    goto L59;

  L59:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    call {:si_unique_call 4510} ExReleaseResourceLite(0);
    return;

  anon38_Then:
    goto L59;

  anon41_Then:
    goto L57;

  anon37_Then:
    assume {:partition} DeleteContext == 0;
    goto L54;

  anon40_Then:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} DeleteEa != 0;
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_38] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_38] > 0;
    havoc vslice_dummy_var_1716;
    havoc vslice_dummy_var_1717;
    call {:si_unique_call 4511} FatDeleteEa#0(IrpContext_163, vslice_dummy_var_1716, vslice_dummy_var_1717, Oem_unnamed_tag_70(Name__FILE_NAME_NODE(ShortName__FCB(FcbOrDcb_15))));
    goto L48;

  anon39_Then:
    goto L48;

  anon36_Then:
    assume {:partition} DeleteEa == 0;
    goto L48;

  anon30_Then:
    Tmp_2581 := FcbOrDcb_15;
    assume {:nonnull} Tmp_2581 != 0;
    assume Tmp_2581 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L18;

  anon31_Then:
    goto L13;

  anon42_Then:
    goto L13;

  anon29_Then:
    assume {:partition} DeleteEa == 0;
    goto L13;
}



procedure {:origName "FatDeleteDirent"} FatDeleteDirent#0(actual_IrpContext_163: int, actual_FcbOrDcb_15: int, actual_DeleteContext: int, actual_DeleteEa: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeleteDirent"} FatDeleteDirent#1(actual_IrpContext_163: int, actual_FcbOrDcb_15: int, actual_DeleteContext: int, actual_DeleteEa: int)
{
  var {:scalar} Offset_4: int;
  var {:pointer} Dirent_38: int;
  var {:pointer} Bcb_24: int;
  var {:dopa} {:scalar} DontCare_7: int;
  var {:pointer} Tmp_2579: int;
  var {:pointer} Tmp_2580: int;
  var {:pointer} Tmp_2581: int;
  var {:pointer} Tmp_2582: int;
  var {:pointer} Tmp_2584: int;
  var {:pointer} IrpContext_163: int;
  var {:pointer} FcbOrDcb_15: int;
  var {:pointer} DeleteContext: int;
  var {:scalar} DeleteEa: int;
  var vslice_dummy_var_634: int;
  var vslice_dummy_var_635: int;
  var vslice_dummy_var_1718: int;
  var vslice_dummy_var_1719: int;
  var vslice_dummy_var_1720: int;

  anon0:
    call {:si_unique_call 4512} vslice_dummy_var_634 := __HAVOC_malloc(4);
    call {:si_unique_call 4513} Dirent_38 := __HAVOC_malloc(4);
    call {:si_unique_call 4514} Bcb_24 := __HAVOC_malloc(4);
    call {:si_unique_call 4515} DontCare_7 := __HAVOC_malloc(4);
    IrpContext_163 := actual_IrpContext_163;
    FcbOrDcb_15 := actual_FcbOrDcb_15;
    DeleteContext := actual_DeleteContext;
    DeleteEa := actual_DeleteEa;
    call {:si_unique_call 4516} Tmp_2582 := __HAVOC_malloc(44);
    assume {:nonnull} Bcb_24 != 0;
    assume Bcb_24 > 0;
    call {:si_unique_call 4517} sdv_do_paged_code_check();
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} DeleteEa != 0;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L18;

  L18:
    call {:si_unique_call 4518} KeBugCheckEx(35, 656216, 0, 0, 0);
    goto L13;

  L13:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    call {:si_unique_call 4519} vslice_dummy_var_635 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    havoc Offset_4;
    goto L31;

  L31:
    call {:si_unique_call 4520} Offset_4, Tmp_2582 := FatDeleteDirent#1_loop_L31(Offset_4, Dirent_38, Bcb_24, DontCare_7, Tmp_2582, IrpContext_163, FcbOrDcb_15);
    goto L31_last;

  L31_last:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L35;

  L35:
    assume {:nonnull} Bcb_24 != 0;
    assume Bcb_24 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Bcb_24 != 0;
    assume Bcb_24 > 0;
    goto L36;

  L36:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    havoc vslice_dummy_var_1718;
    call {:si_unique_call 4521} FatPrepareWriteDirectoryFile(IrpContext_163, vslice_dummy_var_1718, Offset_4, 32, Bcb_24, Dirent_38, 0, 1, DontCare_7);
    goto L43;

  L43:
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_38] > 0;
    havoc Tmp_2582;
    assume {:nonnull} Tmp_2582 != 0;
    assume Tmp_2582 > 0;
    Offset_4 := Offset_4 + 32;
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_38] := Mem_T.P_PACKED_DIRENT[Dirent_38];
    goto L43_dummy;

  L43_dummy:
    assume false;
    return;

  anon35_Then:
    goto L36;

  anon33_Then:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} BAND(Offset_4, 4095) != 0;
    goto L43;

  anon34_Then:
    assume {:partition} BAND(Offset_4, 4095) == 0;
    goto L35;

  anon32_Then:
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    Mem_T.P_PACKED_DIRENT[Dirent_38] := Mem_T.P_PACKED_DIRENT[Dirent_38];
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    havoc Tmp_2579;
    assume {:nonnull} Tmp_2579 != 0;
    assume Tmp_2579 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L48;

  L48:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} DeleteContext != 0;
    assume {:nonnull} DeleteContext != 0;
    assume DeleteContext > 0;
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_38] > 0;
    assume {:nonnull} DeleteContext != 0;
    assume DeleteContext > 0;
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_38] > 0;
    goto L54;

  L54:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    havoc Tmp_2584;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    assume {:nonnull} Tmp_2584 != 0;
    assume Tmp_2584 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    havoc Tmp_2580;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    assume {:nonnull} Tmp_2580 != 0;
    assume Tmp_2580 > 0;
    goto L57;

  L57:
    assume {:nonnull} Bcb_24 != 0;
    assume Bcb_24 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Bcb_24 != 0;
    assume Bcb_24 > 0;
    goto L59;

  L59:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    call {:si_unique_call 4522} ExReleaseResourceLite(0);
    return;

  anon38_Then:
    goto L59;

  anon41_Then:
    goto L57;

  anon37_Then:
    assume {:partition} DeleteContext == 0;
    goto L54;

  anon40_Then:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} DeleteEa != 0;
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_38] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Dirent_38 != 0;
    assume Dirent_38 > 0;
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[Dirent_38] > 0;
    havoc vslice_dummy_var_1719;
    havoc vslice_dummy_var_1720;
    call {:si_unique_call 4523} FatDeleteEa#1(IrpContext_163, vslice_dummy_var_1719, vslice_dummy_var_1720, Oem_unnamed_tag_70(Name__FILE_NAME_NODE(ShortName__FCB(FcbOrDcb_15))));
    goto L48;

  anon39_Then:
    goto L48;

  anon36_Then:
    assume {:partition} DeleteEa == 0;
    goto L48;

  anon30_Then:
    Tmp_2581 := FcbOrDcb_15;
    assume {:nonnull} Tmp_2581 != 0;
    assume Tmp_2581 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} FcbOrDcb_15 != 0;
    assume FcbOrDcb_15 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L18;

  anon31_Then:
    goto L13;

  anon42_Then:
    goto L13;

  anon29_Then:
    assume {:partition} DeleteEa == 0;
    goto L13;
}



procedure {:origName "FatDeleteDirent"} FatDeleteDirent#1(actual_IrpContext_163: int, actual_FcbOrDcb_15: int, actual_DeleteContext: int, actual_DeleteEa: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeleteEa"} FatDeleteEa#0(actual_IrpContext_185: int, actual_Vcb_104: int, actual_EaHandle_5: int, actual_FileName_5: int)
{
  var {:pointer} EaDirent_5: int;
  var {:scalar} LockedEaFcb_4: int;
  var {:pointer} EaBcb_5: int;
  var {:pointer} IrpContext_185: int;
  var {:pointer} Vcb_104: int;
  var {:scalar} EaHandle_5: int;
  var {:pointer} FileName_5: int;
  var vslice_dummy_var_636: int;

  anon0:
    call {:si_unique_call 4524} EaDirent_5 := __HAVOC_malloc(4);
    call {:si_unique_call 4525} EaBcb_5 := __HAVOC_malloc(4);
    call {:si_unique_call 4526} vslice_dummy_var_636 := __HAVOC_malloc(4);
    IrpContext_185 := actual_IrpContext_185;
    Vcb_104 := actual_Vcb_104;
    EaHandle_5 := actual_EaHandle_5;
    FileName_5 := actual_FileName_5;
    assume {:nonnull} EaBcb_5 != 0;
    assume EaBcb_5 > 0;
    LockedEaFcb_4 := 0;
    assume false;
    LockedEaFcb_4 := 1;
    assume {:nonnull} EaBcb_5 != 0;
    assume EaBcb_5 > 0;
    return;
}



procedure {:origName "FatDeleteEa"} FatDeleteEa#0(actual_IrpContext_185: int, actual_Vcb_104: int, actual_EaHandle_5: int, actual_FileName_5: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatDeleteEa"} FatDeleteEa#1(actual_IrpContext_185: int, actual_Vcb_104: int, actual_EaHandle_5: int, actual_FileName_5: int)
{
  var {:pointer} EaDirent_5: int;
  var {:scalar} LockedEaFcb_4: int;
  var {:pointer} EaBcb_5: int;
  var {:pointer} IrpContext_185: int;
  var {:pointer} Vcb_104: int;
  var {:scalar} EaHandle_5: int;
  var {:pointer} FileName_5: int;
  var vslice_dummy_var_637: int;
  var vslice_dummy_var_1721: int;

  anon0:
    call {:si_unique_call 4527} EaDirent_5 := __HAVOC_malloc(4);
    call {:si_unique_call 4528} EaBcb_5 := __HAVOC_malloc(4);
    call {:si_unique_call 4529} vslice_dummy_var_637 := __HAVOC_malloc(4);
    IrpContext_185 := actual_IrpContext_185;
    Vcb_104 := actual_Vcb_104;
    EaHandle_5 := actual_EaHandle_5;
    FileName_5 := actual_FileName_5;
    assume {:nonnull} EaBcb_5 != 0;
    assume EaBcb_5 > 0;
    LockedEaFcb_4 := 0;
    call {:si_unique_call 4530} FatGetEaFile#0(IrpContext_185, Vcb_104, EaDirent_5, EaBcb_5, 0, 1);
    LockedEaFcb_4 := 1;
    assume {:nonnull} EaBcb_5 != 0;
    assume EaBcb_5 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L23;

  L23:
    assume {:nonnull} EaBcb_5 != 0;
    assume EaBcb_5 > 0;
    assume {:nonnull} EaDirent_5 != 0;
    assume EaDirent_5 > 0;
    havoc vslice_dummy_var_1721;
    call {:si_unique_call 4531} FatDeleteEaSet(IrpContext_185, Vcb_104, vslice_dummy_var_1721, Mem_T.P_PACKED_DIRENT[EaDirent_5], EaHandle_5, FileName_5);
    assume {:nonnull} Vcb_104 != 0;
    assume Vcb_104 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} LockedEaFcb_4 != 0;
    assume {:nonnull} Vcb_104 != 0;
    assume Vcb_104 > 0;
    call {:si_unique_call 4532} ExReleaseResourceLite(0);
    goto L30;

  L30:
    assume {:nonnull} EaBcb_5 != 0;
    assume EaBcb_5 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} EaBcb_5 != 0;
    assume EaBcb_5 > 0;
    goto L1;

  L1:
    return;

  anon8_Then:
    goto L1;

  anon7_Then:
    assume {:partition} LockedEaFcb_4 == 0;
    goto L30;

  anon9_Then:
    assume {:nonnull} IrpContext_185 != 0;
    assume IrpContext_185 > 0;
    call {:si_unique_call 4533} ExRaiseStatus(-1073741742);
    goto L23;
}



procedure {:origName "FatDeleteEa"} FatDeleteEa#1(actual_IrpContext_185: int, actual_Vcb_104: int, actual_EaHandle_5: int, actual_FileName_5: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCheckForDismount"} FatCheckForDismount#0(actual_IrpContext_15: int, actual_Vcb_7: int, actual_Force: int) returns (Tmp_170: int)
{
  var {:scalar} SavedIrql: int;
  var {:pointer} Vpb_1: int;
  var {:pointer} Tmp_171: int;
  var {:pointer} sdv_95: int;
  var {:pointer} Tmp_172: int;
  var {:pointer} Tmp_174: int;
  var {:scalar} VcbDeleted: int;
  var {:pointer} IrpContext_15: int;
  var {:pointer} Vcb_7: int;
  var {:scalar} Force: int;
  var vslice_dummy_var_638: int;
  var vslice_dummy_var_639: int;

  anon0:
    IrpContext_15 := actual_IrpContext_15;
    Vcb_7 := actual_Vcb_7;
    Force := actual_Force;
    VcbDeleted := 0;
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Force == 0;
    Tmp_170 := 0;
    goto L1;

  L1:
    return;

  anon15_Then:
    assume {:partition} Force != 0;
    goto L8;

  L8:
    call {:si_unique_call 4534} Tmp_172 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    call {:si_unique_call 4535} IoAcquireVpbSpinLock(Tmp_172);
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    havoc SavedIrql;
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    havoc Tmp_174;
    assume {:nonnull} Tmp_174 != 0;
    assume Tmp_174 > 0;
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    havoc Vpb_1;
    call {:si_unique_call 4536} vslice_dummy_var_639 := FatSwapVpb(IrpContext_15, Vcb_7);
    assume {:nonnull} Vpb_1 != 0;
    assume Vpb_1 > 0;
    assume {:nonnull} Vpb_1 != 0;
    assume Vpb_1 > 0;
    call {:si_unique_call 4537} IoReleaseVpbSpinLock(SavedIrql);
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    call {:si_unique_call 4538} FatTearDownVcb(IrpContext_15, Vcb_7);
    call {:si_unique_call 4539} FatFspClose#0(Vcb_7);
    call {:si_unique_call 4540} Tmp_172 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    call {:si_unique_call 4541} IoAcquireVpbSpinLock(Tmp_172);
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    havoc SavedIrql;
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    havoc Tmp_171;
    assume {:nonnull} Tmp_171 != 0;
    assume Tmp_171 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L38;

  L38:
    call {:si_unique_call 4542} IoReleaseVpbSpinLock(SavedIrql);
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    goto L42;

  L42:
    Tmp_170 := VcbDeleted;
    goto L1;

  anon21_Then:
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Vpb_1 != 0;
    assume Vpb_1 > 0;
    call {:si_unique_call 4543} IoReleaseVpbSpinLock(SavedIrql);
    call {:si_unique_call 4544} FatDeleteVcb(IrpContext_15, Vcb_7);
    call {:si_unique_call 4545} sdv_95 := sdv_containing_record(Vcb_7, 248);
    call {:si_unique_call 4546} IoDeleteDevice(0);
    VcbDeleted := 1;
    goto L42;

  anon18_Then:
    goto L38;

  anon17_Then:
    goto L14;

  L14:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Force != 0;
    call {:si_unique_call 4547} vslice_dummy_var_638 := FatSwapVpb(IrpContext_15, Vcb_7);
    call {:si_unique_call 4548} IoReleaseVpbSpinLock(SavedIrql);
    goto L42;

  anon16_Then:
    assume {:partition} Force == 0;
    call {:si_unique_call 4549} IoReleaseVpbSpinLock(SavedIrql);
    goto L42;

  anon20_Then:
    goto L14;

  anon19_Then:
    goto L8;
}



procedure {:origName "FatCheckForDismount"} FatCheckForDismount#0(actual_IrpContext_15: int, actual_Vcb_7: int, actual_Force: int) returns (Tmp_170: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_170 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCheckForDismount"} FatCheckForDismount#1(actual_IrpContext_15: int, actual_Vcb_7: int, actual_Force: int) returns (Tmp_170: int)
{
  var {:scalar} SavedIrql: int;
  var {:pointer} Vpb_1: int;
  var {:pointer} Tmp_171: int;
  var {:pointer} sdv_95: int;
  var {:pointer} Tmp_172: int;
  var {:pointer} Tmp_174: int;
  var {:scalar} VcbDeleted: int;
  var {:pointer} IrpContext_15: int;
  var {:pointer} Vcb_7: int;
  var {:scalar} Force: int;
  var vslice_dummy_var_640: int;
  var vslice_dummy_var_641: int;

  anon0:
    IrpContext_15 := actual_IrpContext_15;
    Vcb_7 := actual_Vcb_7;
    Force := actual_Force;
    VcbDeleted := 0;
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Force == 0;
    Tmp_170 := 0;
    goto L1;

  L1:
    return;

  anon15_Then:
    assume {:partition} Force != 0;
    goto L8;

  L8:
    call {:si_unique_call 4550} Tmp_172 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    call {:si_unique_call 4551} IoAcquireVpbSpinLock(Tmp_172);
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    havoc SavedIrql;
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    havoc Tmp_174;
    assume {:nonnull} Tmp_174 != 0;
    assume Tmp_174 > 0;
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    havoc Vpb_1;
    call {:si_unique_call 4552} vslice_dummy_var_641 := FatSwapVpb(IrpContext_15, Vcb_7);
    assume {:nonnull} Vpb_1 != 0;
    assume Vpb_1 > 0;
    assume {:nonnull} Vpb_1 != 0;
    assume Vpb_1 > 0;
    call {:si_unique_call 4553} IoReleaseVpbSpinLock(SavedIrql);
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    call {:si_unique_call 4554} FatTearDownVcb(IrpContext_15, Vcb_7);
    call {:si_unique_call 4555} FatFspClose#1(Vcb_7);
    call {:si_unique_call 4556} Tmp_172 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    call {:si_unique_call 4557} IoAcquireVpbSpinLock(Tmp_172);
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    havoc SavedIrql;
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    havoc Tmp_171;
    assume {:nonnull} Tmp_171 != 0;
    assume Tmp_171 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L38;

  L38:
    call {:si_unique_call 4558} IoReleaseVpbSpinLock(SavedIrql);
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    goto L42;

  L42:
    Tmp_170 := VcbDeleted;
    goto L1;

  anon21_Then:
    assume {:nonnull} Vcb_7 != 0;
    assume Vcb_7 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Vpb_1 != 0;
    assume Vpb_1 > 0;
    call {:si_unique_call 4559} IoReleaseVpbSpinLock(SavedIrql);
    call {:si_unique_call 4560} FatDeleteVcb(IrpContext_15, Vcb_7);
    call {:si_unique_call 4561} sdv_95 := sdv_containing_record(Vcb_7, 248);
    call {:si_unique_call 4562} IoDeleteDevice(0);
    VcbDeleted := 1;
    goto L42;

  anon18_Then:
    goto L38;

  anon17_Then:
    goto L14;

  L14:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Force != 0;
    call {:si_unique_call 4563} vslice_dummy_var_640 := FatSwapVpb(IrpContext_15, Vcb_7);
    call {:si_unique_call 4564} IoReleaseVpbSpinLock(SavedIrql);
    goto L42;

  anon16_Then:
    assume {:partition} Force == 0;
    call {:si_unique_call 4565} IoReleaseVpbSpinLock(SavedIrql);
    goto L42;

  anon20_Then:
    goto L14;

  anon19_Then:
    goto L8;
}



procedure {:origName "FatCheckForDismount"} FatCheckForDismount#1(actual_IrpContext_15: int, actual_Vcb_7: int, actual_Force: int) returns (Tmp_170: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_170 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFspClose"} FatFspClose#0(actual_Vcb_112: int)
{
  var {:scalar} sdv_1648: int;
  var {:pointer} sdv_1649: int;
  var {:pointer} LastVcb: int;
  var {:scalar} FreeContext: int;
  var {:pointer} CurrentVcb: int;
  var {:pointer} Tmp_2948: int;
  var {:scalar} sdv_1653: int;
  var {:scalar} LoopsWithVcbHeld: int;
  var {:pointer} CloseContext_1: int;
  var {:pointer} Vcb_112: int;
  var vslice_dummy_var_642: int;
  var vslice_dummy_var_643: int;
  var vslice_dummy_var_644: int;
  var vslice_dummy_var_645: int;
  var vslice_dummy_var_1722: int;
  var vslice_dummy_var_1723: int;
  var vslice_dummy_var_1724: int;

  anon0:
    call {:si_unique_call 4566} vslice_dummy_var_642 := __HAVOC_malloc(4);
    Vcb_112 := actual_Vcb_112;
    CurrentVcb := 0;
    LastVcb := 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Vcb_112 != 0;
    goto L14;

  L14:
    call {:si_unique_call 4567} sdv_1648, sdv_1649, LastVcb, FreeContext, CurrentVcb, Tmp_2948, sdv_1653, LoopsWithVcbHeld, CloseContext_1, vslice_dummy_var_643, vslice_dummy_var_644, vslice_dummy_var_645 := FatFspClose#0_loop_L14(sdv_1648, sdv_1649, LastVcb, FreeContext, CurrentVcb, Tmp_2948, sdv_1653, LoopsWithVcbHeld, CloseContext_1, Vcb_112, vslice_dummy_var_643, vslice_dummy_var_644, vslice_dummy_var_645);
    goto L14_last;

  L14_last:
    call {:si_unique_call 4580} CloseContext_1 := FatRemoveClose(Vcb_112, LastVcb);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} CloseContext_1 != 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Vcb_112 != 0;
    goto L22;

  L22:
    LastVcb := CurrentVcb;
    assume {:nonnull} CloseContext_1 != 0;
    assume CloseContext_1 > 0;
    havoc FreeContext;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} FreeContext != 0;
    Tmp_2948 := 0;
    goto L29;

  L29:
    assume {:nonnull} CloseContext_1 != 0;
    assume CloseContext_1 > 0;
    havoc vslice_dummy_var_1722;
    havoc vslice_dummy_var_1723;
    havoc vslice_dummy_var_1724;
    call {:si_unique_call 4568} vslice_dummy_var_643 := FatCommonClose#0(vslice_dummy_var_1722, vslice_dummy_var_1723, Tmp_2948, vslice_dummy_var_1724, 1, 0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} FreeContext != 0;
    call {:si_unique_call 4569} sdv_ExFreePool(0);
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    assume false;
    return;

  anon33_Then:
    assume {:partition} FreeContext == 0;
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon40_Then:
    assume {:partition} FreeContext == 0;
    call {:si_unique_call 4570} sdv_1649 := sdv_containing_record(CloseContext_1, 12);
    Tmp_2948 := sdv_1649;
    goto L29;

  anon31_Then:
    assume {:partition} Vcb_112 == 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} CurrentVcb != 0;
    call {:si_unique_call 4571} ExReleaseResourceLite(0);
    CurrentVcb := 0;
    goto L22;

  anon35_Then:
    assume {:partition} CurrentVcb == 0;
    goto L22;

  anon32_Then:
    assume {:nonnull} CloseContext_1 != 0;
    assume CloseContext_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    LoopsWithVcbHeld := 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} CurrentVcb != 0;
    call {:si_unique_call 4572} ExReleaseResourceLite(0);
    goto L53;

  L53:
    assume {:nonnull} CloseContext_1 != 0;
    assume CloseContext_1 > 0;
    havoc CurrentVcb;
    call {:si_unique_call 4573} vslice_dummy_var_645 := ExAcquireResourceExclusiveLite(0, 1);
    goto L60;

  L60:
    assume {:nonnull} CurrentVcb != 0;
    assume CurrentVcb > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 4574} ExReleaseResourceLite(0);
    CurrentVcb := 0;
    goto L22;

  anon36_Then:
    goto L22;

  anon41_Then:
    assume {:partition} CurrentVcb == 0;
    goto L53;

  anon34_Then:
    LoopsWithVcbHeld := LoopsWithVcbHeld + 1;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} LoopsWithVcbHeld >= 20;
    call {:si_unique_call 4575} sdv_1653 := ExGetSharedWaiterCount(0);
    call {:si_unique_call 4576} sdv_1648 := ExGetExclusiveWaiterCount(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_1653 + sdv_1648 != 0;
    call {:si_unique_call 4577} ExReleaseResourceLite(0);
    call {:si_unique_call 4578} vslice_dummy_var_644 := ExAcquireResourceExclusiveLite(0, 1);
    goto L72;

  L72:
    LoopsWithVcbHeld := 0;
    goto L60;

  anon37_Then:
    assume {:partition} sdv_1653 + sdv_1648 == 0;
    goto L72;

  anon42_Then:
    assume {:partition} 20 > LoopsWithVcbHeld;
    goto L60;

  anon29_Then:
    assume {:partition} CloseContext_1 == 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} CurrentVcb != 0;
    call {:si_unique_call 4579} ExReleaseResourceLite(0);
    goto L79;

  L79:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Vcb_112 == 0;
    goto L1;

  L1:
    return;

  anon38_Then:
    assume {:partition} Vcb_112 != 0;
    goto L1;

  anon30_Then:
    assume {:partition} CurrentVcb == 0;
    goto L79;

  anon39_Then:
    assume {:partition} Vcb_112 == 0;
    goto L14;
}



procedure {:origName "FatFspClose"} FatFspClose#0(actual_Vcb_112: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatFspClose"} FatFspClose#1(actual_Vcb_112: int)
{
  var {:scalar} sdv_1648: int;
  var {:pointer} sdv_1649: int;
  var {:pointer} LastVcb: int;
  var {:scalar} FreeContext: int;
  var {:pointer} CurrentVcb: int;
  var {:pointer} Tmp_2948: int;
  var {:scalar} sdv_1653: int;
  var {:scalar} LoopsWithVcbHeld: int;
  var {:pointer} CloseContext_1: int;
  var {:pointer} Vcb_112: int;
  var vslice_dummy_var_646: int;
  var vslice_dummy_var_647: int;
  var vslice_dummy_var_648: int;
  var vslice_dummy_var_649: int;
  var vslice_dummy_var_1725: int;
  var vslice_dummy_var_1726: int;
  var vslice_dummy_var_1727: int;

  anon0:
    call {:si_unique_call 4581} vslice_dummy_var_646 := __HAVOC_malloc(4);
    Vcb_112 := actual_Vcb_112;
    CurrentVcb := 0;
    LastVcb := 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Vcb_112 != 0;
    goto L14;

  L14:
    call {:si_unique_call 4582} sdv_1648, sdv_1649, LastVcb, FreeContext, CurrentVcb, Tmp_2948, sdv_1653, LoopsWithVcbHeld, CloseContext_1, vslice_dummy_var_647, vslice_dummy_var_648, vslice_dummy_var_649 := FatFspClose#1_loop_L14(sdv_1648, sdv_1649, LastVcb, FreeContext, CurrentVcb, Tmp_2948, sdv_1653, LoopsWithVcbHeld, CloseContext_1, Vcb_112, vslice_dummy_var_647, vslice_dummy_var_648, vslice_dummy_var_649);
    goto L14_last;

  L14_last:
    call {:si_unique_call 4595} CloseContext_1 := FatRemoveClose(Vcb_112, LastVcb);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} CloseContext_1 != 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Vcb_112 != 0;
    goto L22;

  L22:
    LastVcb := CurrentVcb;
    assume {:nonnull} CloseContext_1 != 0;
    assume CloseContext_1 > 0;
    havoc FreeContext;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} FreeContext != 0;
    Tmp_2948 := 0;
    goto L29;

  L29:
    assume {:nonnull} CloseContext_1 != 0;
    assume CloseContext_1 > 0;
    havoc vslice_dummy_var_1725;
    havoc vslice_dummy_var_1726;
    havoc vslice_dummy_var_1727;
    call {:si_unique_call 4583} vslice_dummy_var_647 := FatCommonClose#1(vslice_dummy_var_1725, vslice_dummy_var_1726, Tmp_2948, vslice_dummy_var_1727, 1, 0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} FreeContext != 0;
    call {:si_unique_call 4584} sdv_ExFreePool(0);
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    assume false;
    return;

  anon33_Then:
    assume {:partition} FreeContext == 0;
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon40_Then:
    assume {:partition} FreeContext == 0;
    call {:si_unique_call 4585} sdv_1649 := sdv_containing_record(CloseContext_1, 12);
    Tmp_2948 := sdv_1649;
    goto L29;

  anon31_Then:
    assume {:partition} Vcb_112 == 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} CurrentVcb != 0;
    call {:si_unique_call 4586} ExReleaseResourceLite(0);
    CurrentVcb := 0;
    goto L22;

  anon35_Then:
    assume {:partition} CurrentVcb == 0;
    goto L22;

  anon32_Then:
    assume {:nonnull} CloseContext_1 != 0;
    assume CloseContext_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    LoopsWithVcbHeld := 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} CurrentVcb != 0;
    call {:si_unique_call 4587} ExReleaseResourceLite(0);
    goto L53;

  L53:
    assume {:nonnull} CloseContext_1 != 0;
    assume CloseContext_1 > 0;
    havoc CurrentVcb;
    call {:si_unique_call 4588} vslice_dummy_var_649 := ExAcquireResourceExclusiveLite(0, 1);
    goto L60;

  L60:
    assume {:nonnull} CurrentVcb != 0;
    assume CurrentVcb > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 4589} ExReleaseResourceLite(0);
    CurrentVcb := 0;
    goto L22;

  anon36_Then:
    goto L22;

  anon41_Then:
    assume {:partition} CurrentVcb == 0;
    goto L53;

  anon34_Then:
    LoopsWithVcbHeld := LoopsWithVcbHeld + 1;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} LoopsWithVcbHeld >= 20;
    call {:si_unique_call 4590} sdv_1653 := ExGetSharedWaiterCount(0);
    call {:si_unique_call 4591} sdv_1648 := ExGetExclusiveWaiterCount(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_1653 + sdv_1648 != 0;
    call {:si_unique_call 4592} ExReleaseResourceLite(0);
    call {:si_unique_call 4593} vslice_dummy_var_648 := ExAcquireResourceExclusiveLite(0, 1);
    goto L72;

  L72:
    LoopsWithVcbHeld := 0;
    goto L60;

  anon37_Then:
    assume {:partition} sdv_1653 + sdv_1648 == 0;
    goto L72;

  anon42_Then:
    assume {:partition} 20 > LoopsWithVcbHeld;
    goto L60;

  anon29_Then:
    assume {:partition} CloseContext_1 == 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} CurrentVcb != 0;
    call {:si_unique_call 4594} ExReleaseResourceLite(0);
    goto L79;

  L79:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Vcb_112 == 0;
    goto L1;

  L1:
    return;

  anon38_Then:
    assume {:partition} Vcb_112 != 0;
    goto L1;

  anon30_Then:
    assume {:partition} CurrentVcb == 0;
    goto L79;

  anon39_Then:
    assume {:partition} Vcb_112 == 0;
    goto L14;
}



procedure {:origName "FatFspClose"} FatFspClose#1(actual_Vcb_112: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonClose"} FatCommonClose#0(actual_Vcb_113: int, actual_Fcb_70: int, actual_Ccb_39: int, actual_TypeOfOpen_12: int, actual_Wait_12: int, actual_VcbDeleted_5: int) returns (Tmp_2953: int)
{
  var {:pointer} ParentDcb_7: int;
  var {:pointer} CurrentDcb: int;
  var {:scalar} Tmp_2954: int;
  var {:scalar} sdv_1654: int;
  var {:pointer} Tmp_2955: int;
  var {:pointer} Tmp_2956: int;
  var {:scalar} sdv_1658: int;
  var {:scalar} Status_80: int;
  var {:pointer} Tmp_2957: int;
  var {:pointer} Tmp_2958: int;
  var {:pointer} Tmp_2959: int;
  var {:scalar} sdv_1666: int;
  var {:scalar} Tmp_2960: int;
  var {:scalar} IrpContext_205: int;
  var {:scalar} sdv_1670: int;
  var {:scalar} LocalVcbDeleted: int;
  var {:scalar} RecursiveClose: int;
  var {:pointer} Tmp_2961: int;
  var {:pointer} Vcb_113: int;
  var {:pointer} Fcb_70: int;
  var {:pointer} Ccb_39: int;
  var {:scalar} TypeOfOpen_12: int;
  var {:scalar} Wait_12: int;
  var {:pointer} VcbDeleted_5: int;
  var vslice_dummy_var_650: int;
  var vslice_dummy_var_651: int;
  var vslice_dummy_var_652: int;
  var vslice_dummy_var_653: int;
  var vslice_dummy_var_654: int;
  var vslice_dummy_var_655: int;
  var vslice_dummy_var_656: int;
  var vslice_dummy_var_657: int;
  var vslice_dummy_var_658: int;
  var vslice_dummy_var_659: int;
  var vslice_dummy_var_660: int;
  var vslice_dummy_var_661: int;
  var vslice_dummy_var_662: int;

  anon0:
    call {:si_unique_call 4596} IrpContext_205 := __HAVOC_malloc(68);
    Vcb_113 := actual_Vcb_113;
    Fcb_70 := actual_Fcb_70;
    Ccb_39 := actual_Ccb_39;
    TypeOfOpen_12 := actual_TypeOfOpen_12;
    Wait_12 := actual_Wait_12;
    VcbDeleted_5 := actual_VcbDeleted_5;
    LocalVcbDeleted := 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} VcbDeleted_5 != 0;
    assume {:nonnull} VcbDeleted_5 != 0;
    assume VcbDeleted_5 > 0;
    goto L10;

  L10:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} TypeOfOpen_12 == 1;
    Status_80 := 0;
    Tmp_2953 := Status_80;
    goto L1;

  L1:
    return;

  anon81_Then:
    assume {:partition} TypeOfOpen_12 != 1;
    call {:si_unique_call 4597} sdv_RtlZeroMemory(0, 68);
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} Wait_12 != 0;
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    goto L21;

  L21:
    call {:si_unique_call 4598} sdv_1658 := ExAcquireResourceExclusiveLite(0, Wait_12);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} sdv_1658 != 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 4599} ExReleaseResourceLite(0);
    Tmp_2953 := 259;
    goto L1;

  anon85_Then:
    goto L28;

  L28:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    RecursiveClose := 1;
    goto L36;

  L36:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} TypeOfOpen_12 != 2;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} TypeOfOpen_12 != 3;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} TypeOfOpen_12 != 4;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} TypeOfOpen_12 != 5;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} TypeOfOpen_12 != 6;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} TypeOfOpen_12 == 7;
    call {:si_unique_call 4600} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4601} vslice_dummy_var_661 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4602} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4603} vslice_dummy_var_662 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    Status_80 := 0;
    goto L89;

  L89:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} RecursiveClose != 0;
    goto L91;

  L91:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} LocalVcbDeleted != 0;
    goto L95;

  L95:
    Tmp_2953 := Status_80;
    goto L1;

  anon89_Then:
    assume {:partition} LocalVcbDeleted == 0;
    call {:si_unique_call 4604} ExReleaseResourceLite(0);
    goto L95;

  anon87_Then:
    assume {:partition} RecursiveClose == 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} VcbDeleted_5 != 0;
    call {:si_unique_call 4605} ExReleaseResourceLite(0);
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    havoc Tmp_2954;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Tmp_2954 == 0;
    Tmp_2960 := 0;
    goto L293;

  L293:
    call {:si_unique_call 4606} vslice_dummy_var_653 := ExAcquireResourceExclusiveLite(0, Tmp_2960);
    call {:si_unique_call 4607} vslice_dummy_var_650 := FatAcquireExclusiveVcb(IrpContext_205, Vcb_113);
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    assume false;
    call {:si_unique_call 4608} ExReleaseResourceLite(0);
    return;

  anon117_Then:
    assume {:partition} Tmp_2954 != 0;
    Tmp_2960 := 1;
    goto L293;

  anon91_Then:
    assume {:partition} VcbDeleted_5 == 0;
    goto L96;

  L96:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L120;

  L120:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} LocalVcbDeleted == 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L91;

  anon93_Then:
    assume {:partition} LocalVcbDeleted != 0;
    goto L91;

  anon90_Then:
    goto L96;

  anon88_Then:
    goto L96;

  anon106_Then:
    assume {:partition} TypeOfOpen_12 != 7;
    call {:si_unique_call 4609} KeBugCheckEx(35, 328752, TypeOfOpen_12, 0, 0);
    goto L134;

  L134:
    Tmp_2958 := Fcb_70;
    assume {:nonnull} Tmp_2958 != 0;
    assume Tmp_2958 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto L137;

  L137:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    havoc ParentDcb_7;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4610} FatDeleteFcb_Real(IrpContext_205, Fcb_70);
    goto L142;

  L142:
    call {:si_unique_call 4611} ParentDcb_7, CurrentDcb, Tmp_2959, sdv_1670, vslice_dummy_var_654, vslice_dummy_var_655 := FatCommonClose#0_loop_L142(ParentDcb_7, CurrentDcb, Tmp_2959, IrpContext_205, sdv_1670, Vcb_113, vslice_dummy_var_654, vslice_dummy_var_655);
    goto L142_last;

  L142_last:
    Tmp_2959 := ParentDcb_7;
    assume {:nonnull} Tmp_2959 != 0;
    assume Tmp_2959 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    call {:si_unique_call 4612} sdv_1670 := sdv_IsListEmpty(0);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} sdv_1670 != 0;
    assume {:nonnull} ParentDcb_7 != 0;
    assume ParentDcb_7 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} ParentDcb_7 != 0;
    assume ParentDcb_7 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} ParentDcb_7 != 0;
    assume ParentDcb_7 > 0;
    call {:si_unique_call 4613} vslice_dummy_var_654 := corral_nondet();
    assume {:nonnull} ParentDcb_7 != 0;
    assume ParentDcb_7 > 0;
    call {:si_unique_call 4614} vslice_dummy_var_655 := sdv_ObDereferenceObject(0);
    assume {:nonnull} ParentDcb_7 != 0;
    assume ParentDcb_7 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    CurrentDcb := ParentDcb_7;
    assume {:nonnull} CurrentDcb != 0;
    assume CurrentDcb > 0;
    havoc ParentDcb_7;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4615} FatDeleteFcb_Real(IrpContext_205, CurrentDcb);
    goto anon99_Else_dummy;

  anon99_Else_dummy:
    assume false;
    return;

  anon99_Then:
    goto L143;

  L143:
    Status_80 := 0;
    goto L89;

  anon98_Then:
    goto L143;

  anon97_Then:
    goto L143;

  anon96_Then:
    assume {:partition} sdv_1670 == 0;
    goto L143;

  anon118_Then:
    goto L143;

  anon95_Then:
    goto L135;

  L135:
    Tmp_2956 := Fcb_70;
    assume {:nonnull} Tmp_2956 != 0;
    assume Tmp_2956 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    call {:si_unique_call 4616} sdv_1654 := sdv_IsListEmpty(0);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} sdv_1654 != 0;
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto L143;

  anon102_Then:
    goto L137;

  anon101_Then:
    goto L143;

  anon100_Then:
    assume {:partition} sdv_1654 == 0;
    goto L143;

  anon116_Then:
    goto L143;

  anon115_Then:
    goto L135;

  anon107_Then:
    assume {:partition} TypeOfOpen_12 == 6;
    call {:si_unique_call 4617} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    call {:si_unique_call 4618} vslice_dummy_var_658 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    call {:si_unique_call 4619} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4620} vslice_dummy_var_659 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    Tmp_2957 := Fcb_70;
    assume {:nonnull} Tmp_2957 != 0;
    assume Tmp_2957 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    call {:si_unique_call 4621} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4622} vslice_dummy_var_660 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L127;

  L127:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} RecursiveClose == 0;
    goto L134;

  anon94_Then:
    assume {:partition} RecursiveClose != 0;
    Status_80 := 0;
    goto L89;

  anon120_Then:
    goto L127;

  anon108_Then:
    assume {:partition} TypeOfOpen_12 == 5;
    call {:si_unique_call 4623} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4624} vslice_dummy_var_656 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4625} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4626} vslice_dummy_var_657 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    Status_80 := 0;
    goto L89;

  anon109_Then:
    assume {:partition} TypeOfOpen_12 == 4;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    assume {:nonnull} Ccb_39 != 0;
    assume Ccb_39 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L181;

  L181:
    call {:si_unique_call 4627} FatDeleteCcb_Real(IrpContext_205, Ccb_39);
    Status_80 := 0;
    goto L89;

  anon119_Then:
    goto L181;

  anon110_Then:
    assume {:partition} TypeOfOpen_12 == 3;
    goto L40;

  L40:
    Tmp_2961 := Fcb_70;
    assume {:nonnull} Tmp_2961 != 0;
    assume Tmp_2961 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    call {:si_unique_call 4628} sdv_1666 := sdv_IsListEmpty(0);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_1666 != 0;
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    call {:si_unique_call 4629} vslice_dummy_var_651 := corral_nondet();
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    call {:si_unique_call 4630} vslice_dummy_var_652 := sdv_ObDereferenceObject(0);
    goto L187;

  L187:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    assume {:nonnull} Ccb_39 != 0;
    assume Ccb_39 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L205;

  L205:
    call {:si_unique_call 4631} FatDeleteCcb_Real(IrpContext_205, Ccb_39);
    goto L134;

  anon114_Then:
    goto L205;

  anon105_Then:
    goto L187;

  anon104_Then:
    goto L187;

  anon103_Then:
    assume {:partition} sdv_1666 == 0;
    goto L187;

  anon113_Then:
    goto L187;

  anon86_Then:
    assume {:partition} TypeOfOpen_12 == 2;
    goto L40;

  anon84_Then:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    RecursiveClose := 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L36;

  anon83_Then:
    goto L28;

  anon82_Then:
    assume {:partition} sdv_1658 == 0;
    Tmp_2953 := 259;
    goto L1;

  anon112_Then:
    assume {:partition} Wait_12 == 0;
    goto L21;

  anon111_Then:
    assume {:partition} VcbDeleted_5 == 0;
    goto L10;
}



procedure {:origName "FatCommonClose"} FatCommonClose#0(actual_Vcb_113: int, actual_Fcb_70: int, actual_Ccb_39: int, actual_TypeOfOpen_12: int, actual_Wait_12: int, actual_VcbDeleted_5: int) returns (Tmp_2953: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2953 == 0 || Tmp_2953 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:origName "FatCommonClose"} FatCommonClose#1(actual_Vcb_113: int, actual_Fcb_70: int, actual_Ccb_39: int, actual_TypeOfOpen_12: int, actual_Wait_12: int, actual_VcbDeleted_5: int) returns (Tmp_2953: int)
{
  var {:pointer} ParentDcb_7: int;
  var {:pointer} CurrentDcb: int;
  var {:scalar} Tmp_2954: int;
  var {:scalar} sdv_1654: int;
  var {:pointer} Tmp_2955: int;
  var {:pointer} Tmp_2956: int;
  var {:scalar} sdv_1658: int;
  var {:scalar} Status_80: int;
  var {:pointer} Tmp_2957: int;
  var {:pointer} Tmp_2958: int;
  var {:pointer} Tmp_2959: int;
  var {:scalar} sdv_1666: int;
  var {:scalar} Tmp_2960: int;
  var {:scalar} IrpContext_205: int;
  var {:scalar} sdv_1670: int;
  var {:scalar} LocalVcbDeleted: int;
  var {:scalar} RecursiveClose: int;
  var {:pointer} Tmp_2961: int;
  var {:pointer} Vcb_113: int;
  var {:pointer} Fcb_70: int;
  var {:pointer} Ccb_39: int;
  var {:scalar} TypeOfOpen_12: int;
  var {:scalar} Wait_12: int;
  var {:pointer} VcbDeleted_5: int;
  var vslice_dummy_var_663: int;
  var vslice_dummy_var_664: int;
  var vslice_dummy_var_665: int;
  var vslice_dummy_var_666: int;
  var vslice_dummy_var_667: int;
  var vslice_dummy_var_668: int;
  var vslice_dummy_var_669: int;
  var vslice_dummy_var_670: int;
  var vslice_dummy_var_671: int;
  var vslice_dummy_var_672: int;
  var vslice_dummy_var_673: int;
  var vslice_dummy_var_674: int;
  var vslice_dummy_var_675: int;

  anon0:
    call {:si_unique_call 4632} IrpContext_205 := __HAVOC_malloc(68);
    Vcb_113 := actual_Vcb_113;
    Fcb_70 := actual_Fcb_70;
    Ccb_39 := actual_Ccb_39;
    TypeOfOpen_12 := actual_TypeOfOpen_12;
    Wait_12 := actual_Wait_12;
    VcbDeleted_5 := actual_VcbDeleted_5;
    LocalVcbDeleted := 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} VcbDeleted_5 != 0;
    assume {:nonnull} VcbDeleted_5 != 0;
    assume VcbDeleted_5 > 0;
    goto L10;

  L10:
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} TypeOfOpen_12 == 1;
    Status_80 := 0;
    Tmp_2953 := Status_80;
    goto L1;

  L1:
    return;

  anon81_Then:
    assume {:partition} TypeOfOpen_12 != 1;
    call {:si_unique_call 4633} sdv_RtlZeroMemory(0, 68);
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} Wait_12 != 0;
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    goto L21;

  L21:
    call {:si_unique_call 4634} sdv_1658 := ExAcquireResourceExclusiveLite(0, Wait_12);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} sdv_1658 != 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 4635} ExReleaseResourceLite(0);
    Tmp_2953 := 259;
    goto L1;

  anon85_Then:
    goto L28;

  L28:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    RecursiveClose := 1;
    goto L36;

  L36:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} TypeOfOpen_12 != 2;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} TypeOfOpen_12 != 3;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} TypeOfOpen_12 != 4;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} TypeOfOpen_12 != 5;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} TypeOfOpen_12 != 6;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} TypeOfOpen_12 == 7;
    call {:si_unique_call 4636} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4637} vslice_dummy_var_674 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4638} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4639} vslice_dummy_var_675 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    Status_80 := 0;
    goto L89;

  L89:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} RecursiveClose != 0;
    goto L91;

  L91:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} LocalVcbDeleted != 0;
    goto L95;

  L95:
    Tmp_2953 := Status_80;
    goto L1;

  anon89_Then:
    assume {:partition} LocalVcbDeleted == 0;
    call {:si_unique_call 4640} ExReleaseResourceLite(0);
    goto L95;

  anon87_Then:
    assume {:partition} RecursiveClose == 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} VcbDeleted_5 != 0;
    call {:si_unique_call 4641} ExReleaseResourceLite(0);
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    assume {:nonnull} IrpContext_205 != 0;
    assume IrpContext_205 > 0;
    havoc Tmp_2954;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Tmp_2954 == 0;
    Tmp_2960 := 0;
    goto L293;

  L293:
    call {:si_unique_call 4642} vslice_dummy_var_666 := ExAcquireResourceExclusiveLite(0, Tmp_2960);
    call {:si_unique_call 4643} vslice_dummy_var_663 := FatAcquireExclusiveVcb(IrpContext_205, Vcb_113);
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4644} LocalVcbDeleted := FatCheckForDismount#0(IrpContext_205, Vcb_113, 0);
    call {:si_unique_call 4645} ExReleaseResourceLite(0);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} VcbDeleted_5 != 0;
    assume {:nonnull} VcbDeleted_5 != 0;
    assume VcbDeleted_5 > 0;
    goto L120;

  L120:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} LocalVcbDeleted == 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L91;

  anon93_Then:
    assume {:partition} LocalVcbDeleted != 0;
    goto L91;

  anon92_Then:
    assume {:partition} VcbDeleted_5 == 0;
    goto L120;

  anon117_Then:
    assume {:partition} Tmp_2954 != 0;
    Tmp_2960 := 1;
    goto L293;

  anon91_Then:
    assume {:partition} VcbDeleted_5 == 0;
    goto L96;

  L96:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L120;

  anon90_Then:
    goto L96;

  anon88_Then:
    goto L96;

  anon106_Then:
    assume {:partition} TypeOfOpen_12 != 7;
    call {:si_unique_call 4646} KeBugCheckEx(35, 328752, TypeOfOpen_12, 0, 0);
    goto L134;

  L134:
    Tmp_2958 := Fcb_70;
    assume {:nonnull} Tmp_2958 != 0;
    assume Tmp_2958 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto L137;

  L137:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    havoc ParentDcb_7;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4647} FatDeleteFcb_Real(IrpContext_205, Fcb_70);
    goto L142;

  L142:
    call {:si_unique_call 4648} ParentDcb_7, CurrentDcb, Tmp_2959, sdv_1670, vslice_dummy_var_667, vslice_dummy_var_668 := FatCommonClose#1_loop_L142(ParentDcb_7, CurrentDcb, Tmp_2959, IrpContext_205, sdv_1670, Vcb_113, vslice_dummy_var_667, vslice_dummy_var_668);
    goto L142_last;

  L142_last:
    Tmp_2959 := ParentDcb_7;
    assume {:nonnull} Tmp_2959 != 0;
    assume Tmp_2959 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    call {:si_unique_call 4649} sdv_1670 := sdv_IsListEmpty(0);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} sdv_1670 != 0;
    assume {:nonnull} ParentDcb_7 != 0;
    assume ParentDcb_7 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} ParentDcb_7 != 0;
    assume ParentDcb_7 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} ParentDcb_7 != 0;
    assume ParentDcb_7 > 0;
    call {:si_unique_call 4650} vslice_dummy_var_667 := corral_nondet();
    assume {:nonnull} ParentDcb_7 != 0;
    assume ParentDcb_7 > 0;
    call {:si_unique_call 4651} vslice_dummy_var_668 := sdv_ObDereferenceObject(0);
    assume {:nonnull} ParentDcb_7 != 0;
    assume ParentDcb_7 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    CurrentDcb := ParentDcb_7;
    assume {:nonnull} CurrentDcb != 0;
    assume CurrentDcb > 0;
    havoc ParentDcb_7;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4652} FatDeleteFcb_Real(IrpContext_205, CurrentDcb);
    goto anon99_Else_dummy;

  anon99_Else_dummy:
    assume false;
    return;

  anon99_Then:
    goto L143;

  L143:
    Status_80 := 0;
    goto L89;

  anon98_Then:
    goto L143;

  anon97_Then:
    goto L143;

  anon96_Then:
    assume {:partition} sdv_1670 == 0;
    goto L143;

  anon118_Then:
    goto L143;

  anon95_Then:
    goto L135;

  L135:
    Tmp_2956 := Fcb_70;
    assume {:nonnull} Tmp_2956 != 0;
    assume Tmp_2956 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    call {:si_unique_call 4653} sdv_1654 := sdv_IsListEmpty(0);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} sdv_1654 != 0;
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto L143;

  anon102_Then:
    goto L137;

  anon101_Then:
    goto L143;

  anon100_Then:
    assume {:partition} sdv_1654 == 0;
    goto L143;

  anon116_Then:
    goto L143;

  anon115_Then:
    goto L135;

  anon107_Then:
    assume {:partition} TypeOfOpen_12 == 6;
    call {:si_unique_call 4654} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    call {:si_unique_call 4655} vslice_dummy_var_671 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    call {:si_unique_call 4656} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4657} vslice_dummy_var_672 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    Tmp_2957 := Fcb_70;
    assume {:nonnull} Tmp_2957 != 0;
    assume Tmp_2957 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    call {:si_unique_call 4658} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4659} vslice_dummy_var_673 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L127;

  L127:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} RecursiveClose == 0;
    goto L134;

  anon94_Then:
    assume {:partition} RecursiveClose != 0;
    Status_80 := 0;
    goto L89;

  anon120_Then:
    goto L127;

  anon108_Then:
    assume {:partition} TypeOfOpen_12 == 5;
    call {:si_unique_call 4660} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4661} vslice_dummy_var_669 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4662} Tmp_2955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    call {:si_unique_call 4663} vslice_dummy_var_670 := sdv_InterlockedDecrement(Tmp_2955);
    assume {:nonnull} Tmp_2955 != 0;
    assume Tmp_2955 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    Status_80 := 0;
    goto L89;

  anon109_Then:
    assume {:partition} TypeOfOpen_12 == 4;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    assume {:nonnull} Ccb_39 != 0;
    assume Ccb_39 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L181;

  L181:
    call {:si_unique_call 4664} FatDeleteCcb_Real(IrpContext_205, Ccb_39);
    Status_80 := 0;
    goto L89;

  anon119_Then:
    goto L181;

  anon110_Then:
    assume {:partition} TypeOfOpen_12 == 3;
    goto L40;

  L40:
    Tmp_2961 := Fcb_70;
    assume {:nonnull} Tmp_2961 != 0;
    assume Tmp_2961 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    call {:si_unique_call 4665} sdv_1666 := sdv_IsListEmpty(0);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_1666 != 0;
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    call {:si_unique_call 4666} vslice_dummy_var_664 := corral_nondet();
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    call {:si_unique_call 4667} vslice_dummy_var_665 := sdv_ObDereferenceObject(0);
    goto L187;

  L187:
    assume {:nonnull} Fcb_70 != 0;
    assume Fcb_70 > 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    assume {:nonnull} Ccb_39 != 0;
    assume Ccb_39 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L205;

  L205:
    call {:si_unique_call 4668} FatDeleteCcb_Real(IrpContext_205, Ccb_39);
    goto L134;

  anon114_Then:
    goto L205;

  anon105_Then:
    goto L187;

  anon104_Then:
    goto L187;

  anon103_Then:
    assume {:partition} sdv_1666 == 0;
    goto L187;

  anon113_Then:
    goto L187;

  anon86_Then:
    assume {:partition} TypeOfOpen_12 == 2;
    goto L40;

  anon84_Then:
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    RecursiveClose := 0;
    assume {:nonnull} Vcb_113 != 0;
    assume Vcb_113 > 0;
    goto L36;

  anon83_Then:
    goto L28;

  anon82_Then:
    assume {:partition} sdv_1658 == 0;
    Tmp_2953 := 259;
    goto L1;

  anon112_Then:
    assume {:partition} Wait_12 == 0;
    goto L21;

  anon111_Then:
    assume {:partition} VcbDeleted_5 == 0;
    goto L10;
}



procedure {:origName "FatCommonClose"} FatCommonClose#1(actual_Vcb_113: int, actual_Fcb_70: int, actual_Ccb_39: int, actual_TypeOfOpen_12: int, actual_Wait_12: int, actual_VcbDeleted_5: int) returns (Tmp_2953: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2953 == 0 || Tmp_2953 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation FatDeleteVcb_loop_L36(in_Fcb: int, in_IrpContext: int, in_Vcb: int) returns (out_Fcb: int)
{
  var vslice_dummy_var_1728: int;

  entry:
    out_Fcb := in_Fcb;
    goto L36, exit;

  exit:
    return;

  L36:
    assume {:nonnull} in_Vcb != 0;
    assume in_Vcb > 0;
    havoc vslice_dummy_var_1728;
    call {:si_unique_call 4669} out_Fcb := FatGetNextFcbBottomUp(in_IrpContext, 0, vslice_dummy_var_1728);
    assume {:nonnull} in_Vcb != 0;
    assume in_Vcb > 0;
    goto anon31_Else;

  anon31_Else:
    call {:si_unique_call 4670} FatDeleteFcb_Real(in_IrpContext, out_Fcb);
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    call {:si_unique_call 4671} {:si_old_unique_call 1} out_Fcb := FatDeleteVcb_loop_L36(out_Fcb, in_IrpContext, in_Vcb);
    return;
}



procedure {:LoopProcedure} FatDeleteVcb_loop_L36(in_Fcb: int, in_IrpContext: int, in_Vcb: int) returns (out_Fcb: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatConstructNamesInFcb_loop_L81(in_i: int, in_LongOemName: int, in_Tmp_27: int, in_Tmp_32: int, in_Tmp_33: int, in_c: int, in_Tmp_41: int, in_Tmp_42: int, in_Tmp_44: int, in_Lfn: int) returns (out_i: int, out_Tmp_27: int, out_Tmp_32: int, out_Tmp_33: int, out_c: int, out_Tmp_41: int, out_Tmp_42: int, out_Tmp_44: int)
{

  entry:
    out_i, out_Tmp_27, out_Tmp_32, out_Tmp_33, out_c, out_Tmp_41, out_Tmp_42, out_Tmp_44 := in_i, in_Tmp_27, in_Tmp_32, in_Tmp_33, in_c, in_Tmp_41, in_Tmp_42, in_Tmp_44;
    goto L81, exit;

  exit:
    return;

  L81:
    assume {:nonnull} in_Lfn != 0;
    assume in_Lfn > 0;
    goto anon43_Else;

  anon43_Else:
    out_Tmp_33 := out_i;
    assume {:nonnull} in_Lfn != 0;
    assume in_Lfn > 0;
    havoc out_Tmp_32;
    assume {:nonnull} out_Tmp_32 != 0;
    assume out_Tmp_32 > 0;
    havoc out_c;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} 97 > out_c;
    out_Tmp_41 := out_c;
    goto L88;

  L88:
    out_Tmp_42 := out_i;
    assume {:nonnull} in_LongOemName != 0;
    assume in_LongOemName > 0;
    havoc out_Tmp_44;
    assume {:nonnull} out_Tmp_44 != 0;
    assume out_Tmp_44 > 0;
    out_i := out_i + 1;
    goto L88_dummy;

  L88_dummy:
    call {:si_unique_call 4672} {:si_old_unique_call 1} out_i, out_Tmp_27, out_Tmp_32, out_Tmp_33, out_c, out_Tmp_41, out_Tmp_42, out_Tmp_44 := FatConstructNamesInFcb_loop_L81(out_i, in_LongOemName, out_Tmp_27, out_Tmp_32, out_Tmp_33, out_c, out_Tmp_41, out_Tmp_42, out_Tmp_44, in_Lfn);
    return;

  anon52_Then:
    assume {:partition} out_c >= 97;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} 122 >= out_c;
    out_Tmp_27 := out_c - 32;
    goto L92;

  L92:
    out_Tmp_41 := out_Tmp_27;
    goto L88;

  anon45_Then:
    assume {:partition} out_c > 122;
    out_Tmp_27 := out_c;
    goto L92;
}



procedure {:LoopProcedure} FatConstructNamesInFcb_loop_L81(in_i: int, in_LongOemName: int, in_Tmp_27: int, in_Tmp_32: int, in_Tmp_33: int, in_c: int, in_Tmp_41: int, in_Tmp_42: int, in_Tmp_44: int, in_Lfn: int) returns (out_i: int, out_Tmp_27: int, out_Tmp_32: int, out_Tmp_33: int, out_c: int, out_Tmp_41: int, out_Tmp_42: int, out_Tmp_44: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatConstructNamesInFcb_loop_L66(in_i: int, in_Tmp_31: int, in_Tmp_38: int, in_Lfn: int) returns (out_i: int, out_Tmp_31: int, out_Tmp_38: int)
{

  entry:
    out_i, out_Tmp_31, out_Tmp_38 := in_i, in_Tmp_31, in_Tmp_38;
    goto L66, exit;

  exit:
    return;

  L66:
    assume {:nonnull} in_Lfn != 0;
    assume in_Lfn > 0;
    goto anon41_Else;

  anon41_Else:
    out_Tmp_31 := out_i;
    assume {:nonnull} in_Lfn != 0;
    assume in_Lfn > 0;
    havoc out_Tmp_38;
    assume {:nonnull} out_Tmp_38 != 0;
    assume out_Tmp_38 > 0;
    goto anon51_Else;

  anon51_Else:
    out_i := out_i + 1;
    goto anon51_Else_dummy;

  anon51_Else_dummy:
    havoc out_i;
    return;
}



procedure {:LoopProcedure} FatConstructNamesInFcb_loop_L66(in_i: int, in_Tmp_31: int, in_Tmp_38: int, in_Lfn: int) returns (out_i: int, out_Tmp_31: int, out_Tmp_38: int);
  free ensures {:va_keep} out_Tmp_31 == in_i || out_Tmp_31 == in_Tmp_31;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatGetNextFcbBottomUp_loop_L16(in_Tmp_70: int, in_NextFcb: int, in_Tmp_72: int, in_sdv_26: int, in_Tmp_74: int, in_sdv_27: int, in_sdv_28: int, in_sdv_29: int) returns (out_Tmp_70: int, out_NextFcb: int, out_Tmp_72: int, out_sdv_26: int, out_Tmp_74: int, out_sdv_27: int, out_sdv_28: int, out_sdv_29: int)
{
  var vslice_dummy_var_1729: int;
  var vslice_dummy_var_1730: int;

  entry:
    out_Tmp_70, out_NextFcb, out_Tmp_72, out_sdv_26, out_Tmp_74, out_sdv_27, out_sdv_28, out_sdv_29 := in_Tmp_70, in_NextFcb, in_Tmp_72, in_sdv_26, in_Tmp_74, in_sdv_27, in_sdv_28, in_sdv_29;
    goto L16, exit;

  exit:
    return;

  L16:
    out_Tmp_70 := out_NextFcb;
    assume {:nonnull} out_Tmp_70 != 0;
    assume out_Tmp_70 > 0;
    goto anon24_Else;

  anon24_Else:
    call {:si_unique_call 4676} out_sdv_26 := sdv_IsListEmpty(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} out_sdv_26 != 0;
    out_Tmp_74 := 0;
    goto L26;

  L26:
    goto anon20_Else;

  anon20_Else:
    assume {:partition} out_Tmp_74 != 0;
    call {:si_unique_call 4674} out_sdv_28 := sdv_IsListEmpty(0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} out_sdv_28 != 0;
    out_Tmp_72 := 0;
    goto L35;

  L35:
    out_NextFcb := out_Tmp_72;
    goto L35_dummy;

  L35_dummy:
    call {:si_unique_call 4677} {:si_old_unique_call 1} out_Tmp_70, out_NextFcb, out_Tmp_72, out_sdv_26, out_Tmp_74, out_sdv_27, out_sdv_28, out_sdv_29 := FatGetNextFcbBottomUp_loop_L16(out_Tmp_70, out_NextFcb, out_Tmp_72, out_sdv_26, out_Tmp_74, out_sdv_27, out_sdv_28, out_sdv_29);
    return;

  anon21_Then:
    assume {:partition} out_sdv_28 == 0;
    assume {:nonnull} out_NextFcb != 0;
    assume out_NextFcb > 0;
    havoc vslice_dummy_var_1729;
    call {:si_unique_call 4673} out_sdv_29 := sdv_containing_record(vslice_dummy_var_1729, 72);
    out_Tmp_72 := out_sdv_29;
    goto L35;

  anon19_Then:
    assume {:partition} out_sdv_26 == 0;
    assume {:nonnull} out_NextFcb != 0;
    assume out_NextFcb > 0;
    havoc vslice_dummy_var_1730;
    call {:si_unique_call 4675} out_sdv_27 := sdv_containing_record(vslice_dummy_var_1730, 72);
    out_Tmp_74 := out_sdv_27;
    goto L26;
}



procedure {:LoopProcedure} FatGetNextFcbBottomUp_loop_L16(in_Tmp_70: int, in_NextFcb: int, in_Tmp_72: int, in_sdv_26: int, in_Tmp_74: int, in_sdv_27: int, in_sdv_28: int, in_sdv_29: int) returns (out_Tmp_70: int, out_NextFcb: int, out_Tmp_72: int, out_sdv_26: int, out_Tmp_74: int, out_sdv_27: int, out_sdv_28: int, out_sdv_29: int);
  free ensures {:va_keep} out_Tmp_70 == 0 || out_Tmp_70 == in_Tmp_70 || out_Tmp_70 == in_NextFcb;
  free ensures {:va_keep} out_NextFcb == 0 || out_NextFcb == in_NextFcb;
  free ensures {:va_keep} out_Tmp_72 == 0 || out_Tmp_72 == in_Tmp_72;
  free ensures {:va_keep} out_sdv_26 == 1 || out_sdv_26 == 0 || out_sdv_26 == in_sdv_26;
  free ensures {:va_keep} out_Tmp_74 == 0 || out_Tmp_74 == in_Tmp_74;
  free ensures {:va_keep} out_sdv_27 == in_sdv_27;
  free ensures {:va_keep} out_sdv_28 == 1 || out_sdv_28 == 0 || out_sdv_28 == in_sdv_28;
  free ensures {:va_keep} out_sdv_29 == in_sdv_29;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatGetNextFcbTopDown_loop_L22(in_Tmp_84: int, in_sdv_35: int, in_Sibling: int, in_Fcb_4: int, in_TerminationFcb_1: int) returns (out_Tmp_84: int, out_sdv_35: int, out_Sibling: int, out_Fcb_4: int)
{
  var vslice_dummy_var_1731: int;

  entry:
    out_Tmp_84, out_sdv_35, out_Sibling, out_Fcb_4 := in_Tmp_84, in_sdv_35, in_Sibling, in_Fcb_4;
    goto L22, exit;

  exit:
    return;

  L22:
    goto anon23_Then;

  anon23_Then:
    assume {:partition} out_Sibling == 0;
    assume {:nonnull} out_Fcb_4 != 0;
    assume out_Fcb_4 > 0;
    goto anon24_Then;

  anon24_Then:
    assume {:nonnull} out_Fcb_4 != 0;
    assume out_Fcb_4 > 0;
    havoc out_Fcb_4;
    assume {:nonnull} out_Fcb_4 != 0;
    assume out_Fcb_4 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    out_Tmp_84 := 0;
    goto L35;

  L35:
    out_Sibling := out_Tmp_84;
    goto L35_dummy;

  L35_dummy:
    havoc out_Fcb_4;
    return;

  anon29_Then:
    assume {:nonnull} out_Fcb_4 != 0;
    assume out_Fcb_4 > 0;
    havoc vslice_dummy_var_1731;
    call {:si_unique_call 4678} out_sdv_35 := sdv_containing_record(vslice_dummy_var_1731, 72);
    out_Tmp_84 := out_sdv_35;
    goto L35;
}



procedure {:LoopProcedure} FatGetNextFcbTopDown_loop_L22(in_Tmp_84: int, in_sdv_35: int, in_Sibling: int, in_Fcb_4: int, in_TerminationFcb_1: int) returns (out_Tmp_84: int, out_sdv_35: int, out_Sibling: int, out_Fcb_4: int);
  free ensures {:va_keep} out_Tmp_84 == 0 || out_Tmp_84 == in_Tmp_84;
  free ensures {:va_keep} out_sdv_35 == in_sdv_35;
  free ensures {:va_keep} out_Sibling == 0 || out_Sibling == in_Sibling;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatInitializeVcb_loop_L193(in_i_1: int, in_Tmp_101: int, in_Tmp_108: int, in_Tmp_109: int, in_Tmp_113: int, in_Tmp_115: int, in_Tmp_119: int, in_Vcb_3: int) returns (out_i_1: int, out_Tmp_101: int, out_Tmp_108: int, out_Tmp_109: int, out_Tmp_113: int, out_Tmp_115: int, out_Tmp_119: int)
{

  entry:
    out_i_1, out_Tmp_101, out_Tmp_108, out_Tmp_109, out_Tmp_113, out_Tmp_115, out_Tmp_119 := in_i_1, in_Tmp_101, in_Tmp_108, in_Tmp_109, in_Tmp_113, in_Tmp_115, in_Tmp_119;
    goto L193, exit;

  exit:
    return;

  L193:
    goto anon55_Else;

  anon55_Else:
    out_Tmp_119 := out_i_1;
    assume {:nonnull} in_Vcb_3 != 0;
    assume in_Vcb_3 > 0;
    havoc out_Tmp_108;
    assume {:nonnull} out_Tmp_108 != 0;
    assume out_Tmp_108 > 0;
    out_Tmp_113 := out_i_1;
    assume {:nonnull} in_Vcb_3 != 0;
    assume in_Vcb_3 > 0;
    havoc out_Tmp_115;
    assume {:nonnull} out_Tmp_115 != 0;
    assume out_Tmp_115 > 0;
    out_Tmp_101 := out_i_1;
    assume {:nonnull} in_Vcb_3 != 0;
    assume in_Vcb_3 > 0;
    havoc out_Tmp_109;
    assume {:nonnull} out_Tmp_109 != 0;
    assume out_Tmp_109 > 0;
    out_i_1 := out_i_1 + 1;
    goto anon55_Else_dummy;

  anon55_Else_dummy:
    havoc out_i_1;
    return;
}



procedure {:LoopProcedure} FatInitializeVcb_loop_L193(in_i_1: int, in_Tmp_101: int, in_Tmp_108: int, in_Tmp_109: int, in_Tmp_113: int, in_Tmp_115: int, in_Tmp_119: int, in_Vcb_3: int) returns (out_i_1: int, out_Tmp_101: int, out_Tmp_108: int, out_Tmp_109: int, out_Tmp_113: int, out_Tmp_115: int, out_Tmp_119: int);
  free ensures {:va_keep} out_Tmp_101 == in_i_1 || out_Tmp_101 == in_Tmp_101;
  free ensures {:va_keep} out_Tmp_113 == in_i_1 || out_Tmp_113 == in_Tmp_113;
  free ensures {:va_keep} out_Tmp_119 == in_i_1 || out_Tmp_119 == in_Tmp_119;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCreateDcb_loop_L153(in_i_2: int, in_UnwindStorage: int, in_Tmp_146: int, in_Tmp_147: int) returns (out_i_2: int, out_Tmp_146: int, out_Tmp_147: int)
{

  entry:
    out_i_2, out_Tmp_146, out_Tmp_147 := in_i_2, in_Tmp_146, in_Tmp_147;
    goto L153, exit;

  exit:
    return;

  L153:
    assume {:CounterLoop 2} {:Counter "i_2"} true;
    goto anon38_Else;

  anon38_Else:
    assume {:partition} 2 > out_i_2;
    out_Tmp_147 := out_i_2;
    assume {:nonnull} in_UnwindStorage != 0;
    assume in_UnwindStorage > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    out_Tmp_146 := out_i_2;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume out_Tmp_146 != 1;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume out_Tmp_146 != 0;
    goto L171;

  L171:
    call {:si_unique_call 4679} sdv_ExFreePool(0);
    goto L155;

  L155:
    out_i_2 := out_i_2 + 1;
    goto L155_dummy;

  L155_dummy:
    havoc out_i_2;
    return;

  anon45_Then:
    assume out_Tmp_146 == 0;
    out_Tmp_146 := 0;
    assume {:nonnull} in_UnwindStorage != 0;
    assume in_UnwindStorage > 0;
    goto L171;

  anon44_Then:
    assume out_Tmp_146 == 1;
    out_Tmp_146 := 1;
    assume {:nonnull} in_UnwindStorage != 0;
    assume in_UnwindStorage > 0;
    goto L171;

  anon43_Then:
    goto L155;
}



procedure {:LoopProcedure} FatCreateDcb_loop_L153(in_i_2: int, in_UnwindStorage: int, in_Tmp_146: int, in_Tmp_147: int) returns (out_i_2: int, out_Tmp_146: int, out_Tmp_147: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_146 == 0 || out_Tmp_146 == 1 || out_Tmp_146 == in_i_2 || out_Tmp_146 == in_Tmp_146;
  free ensures {:va_keep} out_Tmp_147 == in_i_2 || out_Tmp_147 == in_Tmp_147;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCreateFcb_loop_L185(in_i_3: int, in_UnwindStorage_1: int, in_Tmp_155: int, in_Tmp_163: int) returns (out_i_3: int, out_Tmp_155: int, out_Tmp_163: int)
{

  entry:
    out_i_3, out_Tmp_155, out_Tmp_163 := in_i_3, in_Tmp_155, in_Tmp_163;
    goto L185, exit;

  exit:
    return;

  L185:
    assume {:CounterLoop 2} {:Counter "i_3"} true;
    goto anon53_Else;

  anon53_Else:
    assume {:partition} 2 > out_i_3;
    out_Tmp_155 := out_i_3;
    assume {:nonnull} in_UnwindStorage_1 != 0;
    assume in_UnwindStorage_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    out_Tmp_163 := out_i_3;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume out_Tmp_163 != 1;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume out_Tmp_163 != 0;
    goto L213;

  L213:
    call {:si_unique_call 4680} sdv_ExFreePool(0);
    goto L187;

  L187:
    out_i_3 := out_i_3 + 1;
    goto L187_dummy;

  L187_dummy:
    havoc out_i_3;
    return;

  anon63_Then:
    assume out_Tmp_163 == 0;
    out_Tmp_163 := 0;
    assume {:nonnull} in_UnwindStorage_1 != 0;
    assume in_UnwindStorage_1 > 0;
    goto L213;

  anon62_Then:
    assume out_Tmp_163 == 1;
    out_Tmp_163 := 1;
    assume {:nonnull} in_UnwindStorage_1 != 0;
    assume in_UnwindStorage_1 > 0;
    goto L213;

  anon61_Then:
    goto L187;
}



procedure {:LoopProcedure} FatCreateFcb_loop_L185(in_i_3: int, in_UnwindStorage_1: int, in_Tmp_155: int, in_Tmp_163: int) returns (out_i_3: int, out_Tmp_155: int, out_Tmp_163: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_155 == in_i_3 || out_Tmp_155 == in_Tmp_155;
  free ensures {:va_keep} out_Tmp_163 == 0 || out_Tmp_163 == 1 || out_Tmp_163 == in_i_3 || out_Tmp_163 == in_Tmp_163;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCreateRootDcb_loop_L143(in_i_4: int, in_UnwindStorage_2: int, in_Tmp_185: int, in_Tmp_195: int) returns (out_i_4: int, out_Tmp_185: int, out_Tmp_195: int)
{

  entry:
    out_i_4, out_Tmp_185, out_Tmp_195 := in_i_4, in_Tmp_185, in_Tmp_195;
    goto L143, exit;

  exit:
    return;

  L143:
    assume {:CounterLoop 2} {:Counter "i_4"} true;
    goto anon33_Else;

  anon33_Else:
    assume {:partition} 2 > out_i_4;
    out_Tmp_195 := out_i_4;
    assume {:nonnull} in_UnwindStorage_2 != 0;
    assume in_UnwindStorage_2 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    out_Tmp_185 := out_i_4;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume out_Tmp_185 != 1;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume out_Tmp_185 != 0;
    goto L167;

  L167:
    call {:si_unique_call 4681} sdv_ExFreePool(0);
    goto L146;

  L146:
    out_i_4 := out_i_4 + 1;
    goto L146_dummy;

  L146_dummy:
    havoc out_i_4;
    return;

  anon38_Then:
    assume out_Tmp_185 == 0;
    out_Tmp_185 := 0;
    assume {:nonnull} in_UnwindStorage_2 != 0;
    assume in_UnwindStorage_2 > 0;
    goto L167;

  anon37_Then:
    assume out_Tmp_185 == 1;
    out_Tmp_185 := 1;
    assume {:nonnull} in_UnwindStorage_2 != 0;
    assume in_UnwindStorage_2 > 0;
    goto L167;

  anon36_Then:
    goto L146;
}



procedure {:LoopProcedure} FatCreateRootDcb_loop_L143(in_i_4: int, in_UnwindStorage_2: int, in_Tmp_185: int, in_Tmp_195: int) returns (out_i_4: int, out_Tmp_185: int, out_Tmp_195: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_185 == 0 || out_Tmp_185 == 1 || out_Tmp_185 == in_i_4 || out_Tmp_185 == in_Tmp_185;
  free ensures {:va_keep} out_Tmp_195 == in_i_4 || out_Tmp_195 == in_Tmp_195;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatIsHandleCountZero_loop_L5(in_Fcb_7: int, in_IrpContext_19: int, in_Vcb_11: int) returns (out_Fcb_7: int)
{
  var vslice_dummy_var_1732: int;

  entry:
    out_Fcb_7 := in_Fcb_7;
    goto L5, exit;

  exit:
    return;

  L5:
    goto anon5_Else;

  anon5_Else:
    assume {:partition} out_Fcb_7 != 0;
    assume {:nonnull} out_Fcb_7 != 0;
    assume out_Fcb_7 > 0;
    goto anon6_Then;

  anon6_Then:
    assume {:nonnull} in_Vcb_11 != 0;
    assume in_Vcb_11 > 0;
    havoc vslice_dummy_var_1732;
    call {:si_unique_call 4682} out_Fcb_7 := FatGetNextFcbTopDown(in_IrpContext_19, out_Fcb_7, vslice_dummy_var_1732);
    goto anon6_Then_dummy;

  anon6_Then_dummy:
    call {:si_unique_call 4683} {:si_old_unique_call 1} out_Fcb_7 := FatIsHandleCountZero_loop_L5(out_Fcb_7, in_IrpContext_19, in_Vcb_11);
    return;
}



procedure {:LoopProcedure} FatIsHandleCountZero_loop_L5(in_Fcb_7: int, in_IrpContext_19: int, in_Vcb_11: int) returns (out_Fcb_7: int);
  free ensures {:va_keep} out_Fcb_7 == 0 || out_Fcb_7 == in_Fcb_7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSplitAllocation_loop_L62(in_Lbo: int, in_SourceVbo: int, in_sdv_115: int, in_TargetVbo: int, in_ByteCount: int, in_Vcb_12: int, in_Mcb: int, in_RemainingMcb: int, in_vslice_dummy_var_61: int) returns (out_SourceVbo: int, out_sdv_115: int, out_TargetVbo: int, out_vslice_dummy_var_61: int)
{
  var vslice_dummy_var_1733: int;
  var vslice_dummy_var_1734: int;
  var vslice_dummy_var_1735: int;

  entry:
    out_SourceVbo, out_sdv_115, out_TargetVbo, out_vslice_dummy_var_61 := in_SourceVbo, in_sdv_115, in_TargetVbo, in_vslice_dummy_var_61;
    goto L62, exit;

  exit:
    return;

  L62:
    call {:si_unique_call 4684} out_sdv_115 := FatLookupMcbEntry(in_Vcb_12, in_RemainingMcb, out_SourceVbo, in_Lbo, in_ByteCount, 0);
    goto anon14_Else;

  anon14_Else:
    assume {:partition} out_sdv_115 != 0;
    assume {:nonnull} in_ByteCount != 0;
    assume in_ByteCount > 0;
    assume {:nonnull} in_Lbo != 0;
    assume in_Lbo > 0;
    havoc vslice_dummy_var_1733;
    havoc vslice_dummy_var_1734;
    call {:si_unique_call 4685} out_vslice_dummy_var_61 := FatAddMcbEntry(in_Vcb_12, in_Mcb, out_TargetVbo, vslice_dummy_var_1733, vslice_dummy_var_1734);
    assume {:nonnull} in_ByteCount != 0;
    assume in_ByteCount > 0;
    havoc vslice_dummy_var_1735;
    call {:si_unique_call 4686} FatRemoveMcbEntry(in_Vcb_12, in_RemainingMcb, out_SourceVbo, vslice_dummy_var_1735);
    assume {:nonnull} in_ByteCount != 0;
    assume in_ByteCount > 0;
    havoc out_TargetVbo;
    assume {:nonnull} in_ByteCount != 0;
    assume in_ByteCount > 0;
    havoc out_SourceVbo;
    goto anon14_Else_dummy;

  anon14_Else_dummy:
    call {:si_unique_call 4687} {:si_old_unique_call 1} out_SourceVbo, out_sdv_115, out_TargetVbo, out_vslice_dummy_var_61 := FatSplitAllocation_loop_L62(in_Lbo, out_SourceVbo, out_sdv_115, out_TargetVbo, in_ByteCount, in_Vcb_12, in_Mcb, in_RemainingMcb, out_vslice_dummy_var_61);
    return;
}



procedure {:LoopProcedure} FatSplitAllocation_loop_L62(in_Lbo: int, in_SourceVbo: int, in_sdv_115: int, in_TargetVbo: int, in_ByteCount: int, in_Vcb_12: int, in_Mcb: int, in_RemainingMcb: int, in_vslice_dummy_var_61: int) returns (out_SourceVbo: int, out_sdv_115: int, out_TargetVbo: int, out_vslice_dummy_var_61: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSplitAllocation_loop_L15(in_Lbo: int, in_sdv_112: int, in_SourceVbo: int, in_TargetVbo: int, in_ByteCount: int, in_Vcb_12: int, in_Mcb: int, in_RemainingMcb: int, in_vslice_dummy_var_59: int) returns (out_sdv_112: int, out_SourceVbo: int, out_TargetVbo: int, out_vslice_dummy_var_59: int)
{
  var vslice_dummy_var_1736: int;
  var vslice_dummy_var_1737: int;
  var vslice_dummy_var_1738: int;

  entry:
    out_sdv_112, out_SourceVbo, out_TargetVbo, out_vslice_dummy_var_59 := in_sdv_112, in_SourceVbo, in_TargetVbo, in_vslice_dummy_var_59;
    goto L15, exit;

  exit:
    return;

  L15:
    call {:si_unique_call 4688} out_sdv_112 := FatLookupMcbEntry(in_Vcb_12, in_Mcb, out_SourceVbo, in_Lbo, in_ByteCount, 0);
    goto anon11_Else;

  anon11_Else:
    assume {:partition} out_sdv_112 != 0;
    assume {:nonnull} in_ByteCount != 0;
    assume in_ByteCount > 0;
    assume {:nonnull} in_Lbo != 0;
    assume in_Lbo > 0;
    havoc vslice_dummy_var_1736;
    havoc vslice_dummy_var_1737;
    call {:si_unique_call 4689} out_vslice_dummy_var_59 := FatAddMcbEntry(in_Vcb_12, in_RemainingMcb, out_TargetVbo, vslice_dummy_var_1736, vslice_dummy_var_1737);
    assume {:nonnull} in_ByteCount != 0;
    assume in_ByteCount > 0;
    havoc vslice_dummy_var_1738;
    call {:si_unique_call 4690} FatRemoveMcbEntry(in_Vcb_12, in_Mcb, out_SourceVbo, vslice_dummy_var_1738);
    assume {:nonnull} in_ByteCount != 0;
    assume in_ByteCount > 0;
    havoc out_TargetVbo;
    assume {:nonnull} in_ByteCount != 0;
    assume in_ByteCount > 0;
    havoc out_SourceVbo;
    goto anon15_Then;

  anon15_Then:
    assume {:partition} out_SourceVbo != 0;
    goto anon15_Then_dummy;

  anon15_Then_dummy:
    call {:si_unique_call 4691} {:si_old_unique_call 1} out_sdv_112, out_SourceVbo, out_TargetVbo, out_vslice_dummy_var_59 := FatSplitAllocation_loop_L15(in_Lbo, out_sdv_112, out_SourceVbo, out_TargetVbo, in_ByteCount, in_Vcb_12, in_Mcb, in_RemainingMcb, out_vslice_dummy_var_59);
    return;
}



procedure {:LoopProcedure} FatSplitAllocation_loop_L15(in_Lbo: int, in_sdv_112: int, in_SourceVbo: int, in_TargetVbo: int, in_ByteCount: int, in_Vcb_12: int, in_Mcb: int, in_RemainingMcb: int, in_vslice_dummy_var_59: int) returns (out_sdv_112: int, out_SourceVbo: int, out_TargetVbo: int, out_vslice_dummy_var_59: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatLogOf_loop_L8(in_Log: int, in_Value: int) returns (out_Log: int, out_Value: int)
{

  entry:
    out_Log, out_Value := in_Log, in_Value;
    goto L8, exit;

  exit:
    return;

  L8:
    goto anon5_Else;

  anon5_Else:
    assume {:partition} BAND(out_Value, -2) != 0;
    out_Log := out_Log + 1;
    call {:si_unique_call 4692} out_Value := corral_nondet();
    goto anon5_Else_dummy;

  anon5_Else_dummy:
    havoc out_Log;
    return;
}



procedure {:LoopProcedure} FatLogOf_loop_L8(in_Log: int, in_Value: int) returns (out_Log: int, out_Value: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatExamineFatEntries_loop_L62(in_FatBuffer: int, in_Offset: int, in_Tmp_219: int, in_StartIndexOfThisRun: int, in_CurrentWindow: int, in_EntriesPerWindow: int, in_FatIndexBitSize: int, in_Bcb: int, in_Tmp_233: int, in_FatIndex: int, in_Tmp_237: int, in_FreeClusterCount: int, in_CurrentRun: int, in_Page: int, in_pv: int, in_FatEntry: int, in_BitMap: int, in_ClustersThisRun: int, in_Tmp_251: int, in_IrpContext_21: int, in_Vcb_13: int, in_StartIndex: int, in_EndIndex: int, in_SetupWindows: int) returns (out_Offset: int, out_Tmp_219: int, out_StartIndexOfThisRun: int, out_Tmp_233: int, out_FatIndex: int, out_Tmp_237: int, out_CurrentRun: int, out_Page: int, out_FatEntry: int, out_ClustersThisRun: int, out_Tmp_251: int)
{

  entry:
    out_Offset, out_Tmp_219, out_StartIndexOfThisRun, out_Tmp_233, out_FatIndex, out_Tmp_237, out_CurrentRun, out_Page, out_FatEntry, out_ClustersThisRun, out_Tmp_251 := in_Offset, in_Tmp_219, in_StartIndexOfThisRun, in_Tmp_233, in_FatIndex, in_Tmp_237, in_CurrentRun, in_Page, in_FatEntry, in_ClustersThisRun, in_Tmp_251;
    goto L62, exit;

  exit:
    return;

  L62:
    goto anon80_Else;

  anon80_Else:
    assume {:partition} in_EndIndex >= out_FatIndex;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} in_FatIndexBitSize == 12;
    assume {:nonnull} in_FatBuffer != 0;
    assume in_FatBuffer > 0;
    havoc out_Tmp_251;
    assume {:nonnull} out_Tmp_251 != 0;
    assume out_Tmp_251 > 0;
    havoc out_FatEntry;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} BAND(out_FatIndex, 1) != 0;
    call {:si_unique_call 4694} out_Tmp_219 := corral_nondet();
    goto L70;

  L70:
    out_FatEntry := BAND(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048), out_Tmp_219);
    goto L71;

  L71:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} out_CurrentRun == 2;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} out_FatEntry != 0;
    out_Tmp_237 := 1;
    goto L76;

  L76:
    out_CurrentRun := out_Tmp_237;
    goto L72;

  L72:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} out_CurrentRun != 0;
    goto L78;

  L78:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} out_CurrentRun == 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} out_FatEntry == 0;
    out_ClustersThisRun := out_FatIndex - out_StartIndexOfThisRun;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} in_BitMap != 0;
    goto L83;

  L83:
    out_CurrentRun := 0;
    out_StartIndexOfThisRun := out_FatIndex;
    goto L79;

  L79:
    out_FatIndex := out_FatIndex + 1;
    goto L79_dummy;

  L79_dummy:
    call {:si_unique_call 4695} {:si_old_unique_call 1} out_Offset, out_Tmp_219, out_StartIndexOfThisRun, out_Tmp_233, out_FatIndex, out_Tmp_237, out_CurrentRun, out_Page, out_FatEntry, out_ClustersThisRun, out_Tmp_251 := FatExamineFatEntries_loop_L62(in_FatBuffer, out_Offset, out_Tmp_219, out_StartIndexOfThisRun, in_CurrentWindow, in_EntriesPerWindow, in_FatIndexBitSize, in_Bcb, out_Tmp_233, out_FatIndex, out_Tmp_237, in_FreeClusterCount, out_CurrentRun, out_Page, in_pv, out_FatEntry, in_BitMap, out_ClustersThisRun, out_Tmp_251, in_IrpContext_21, in_Vcb_13, in_StartIndex, in_EndIndex, in_SetupWindows);
    return;

  anon109_Then:
    assume {:partition} in_BitMap == 0;
    goto L83;

  anon88_Then:
    assume {:partition} out_FatEntry != 0;
    goto L79;

  anon87_Then:
    assume {:partition} out_CurrentRun != 1;
    goto L79;

  anon84_Then:
    assume {:partition} out_CurrentRun == 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} out_FatEntry != 0;
    out_ClustersThisRun := out_FatIndex - out_StartIndexOfThisRun;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} in_FreeClusterCount != 0;
    assume {:nonnull} in_FreeClusterCount != 0;
    assume in_FreeClusterCount > 0;
    assume {:nonnull} in_CurrentWindow != 0;
    assume in_CurrentWindow > 0;
    goto L100;

  L100:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} in_BitMap != 0;
    goto L103;

  L103:
    out_CurrentRun := 1;
    out_StartIndexOfThisRun := out_FatIndex;
    goto L78;

  anon89_Then:
    assume {:partition} in_BitMap == 0;
    goto L103;

  anon110_Then:
    assume {:partition} in_FreeClusterCount == 0;
    goto L100;

  anon86_Then:
    assume {:partition} out_FatEntry == 0;
    goto L78;

  anon85_Then:
    assume {:partition} out_FatEntry == 0;
    out_Tmp_237 := 0;
    goto L76;

  anon83_Then:
    assume {:partition} out_CurrentRun != 2;
    goto L72;

  anon108_Then:
    assume {:partition} BAND(out_FatIndex, 1) == 0;
    out_Tmp_219 := out_FatEntry;
    goto L70;

  anon81_Then:
    assume {:partition} in_FatIndexBitSize != 12;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} in_SetupWindows != 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} out_FatIndex > in_StartIndex;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} INTMOD(out_FatIndex - 2, in_EntriesPerWindow) == 0;
    assume {:nonnull} in_CurrentWindow != 0;
    assume in_CurrentWindow > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} out_CurrentRun != 0;
    out_ClustersThisRun := out_FatIndex - out_StartIndexOfThisRun;
    goto L116;

  L116:
    out_StartIndexOfThisRun := out_FatIndex;
    out_CurrentRun := 2;
    assume {:nonnull} in_CurrentWindow != 0;
    assume in_CurrentWindow > 0;
    assume {:nonnull} in_CurrentWindow != 0;
    assume in_CurrentWindow > 0;
    goto L109;

  L109:
    assume {:nonnull} in_FatBuffer != 0;
    assume in_FatBuffer > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto L125;

  L125:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} in_FatIndexBitSize == 32;
    assume {:nonnull} in_FatBuffer != 0;
    assume in_FatBuffer > 0;
    havoc out_Tmp_233;
    assume {:nonnull} out_Tmp_233 != 0;
    assume out_Tmp_233 > 0;
    havoc out_FatEntry;
    out_FatEntry := BAND(out_FatEntry, BNOT(BOR(BOR(BOR(268435456, 536870912), 1073741824), -2147483648)));
    goto L71;

  anon94_Then:
    assume {:partition} in_FatIndexBitSize != 32;
    assume {:nonnull} in_FatBuffer != 0;
    assume in_FatBuffer > 0;
    havoc out_FatEntry;
    assume {:nonnull} in_FatBuffer != 0;
    assume in_FatBuffer > 0;
    goto L71;

  anon90_Then:
    assume {:nonnull} in_Bcb != 0;
    assume in_Bcb > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} in_Bcb != 0;
    assume in_Bcb > 0;
    goto L130;

  L130:
    out_Page := out_Page + 1;
    out_Offset := out_Offset + 4096;
    call {:si_unique_call 4693} FatReadVolumeFile(in_IrpContext_21, in_Vcb_13, out_Offset, 4096, in_Bcb, in_pv);
    assume {:nonnull} in_FatBuffer != 0;
    assume in_FatBuffer > 0;
    assume {:nonnull} in_pv != 0;
    assume in_pv > 0;
    goto L125;

  anon93_Then:
    goto L130;

  anon111_Then:
    assume {:partition} out_CurrentRun == 0;
    out_ClustersThisRun := out_FatIndex - out_StartIndexOfThisRun;
    assume {:nonnull} in_CurrentWindow != 0;
    assume in_CurrentWindow > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} in_FreeClusterCount != 0;
    assume {:nonnull} in_FreeClusterCount != 0;
    assume in_FreeClusterCount > 0;
    goto L116;

  anon112_Then:
    assume {:partition} in_FreeClusterCount == 0;
    goto L116;

  anon92_Then:
    assume {:partition} INTMOD(out_FatIndex - 2, in_EntriesPerWindow) != 0;
    goto L109;

  anon91_Then:
    assume {:partition} in_StartIndex >= out_FatIndex;
    goto L109;

  anon82_Then:
    assume {:partition} in_SetupWindows == 0;
    goto L109;
}



procedure {:LoopProcedure} FatExamineFatEntries_loop_L62(in_FatBuffer: int, in_Offset: int, in_Tmp_219: int, in_StartIndexOfThisRun: int, in_CurrentWindow: int, in_EntriesPerWindow: int, in_FatIndexBitSize: int, in_Bcb: int, in_Tmp_233: int, in_FatIndex: int, in_Tmp_237: int, in_FreeClusterCount: int, in_CurrentRun: int, in_Page: int, in_pv: int, in_FatEntry: int, in_BitMap: int, in_ClustersThisRun: int, in_Tmp_251: int, in_IrpContext_21: int, in_Vcb_13: int, in_StartIndex: int, in_EndIndex: int, in_SetupWindows: int) returns (out_Offset: int, out_Tmp_219: int, out_StartIndexOfThisRun: int, out_Tmp_233: int, out_FatIndex: int, out_Tmp_237: int, out_CurrentRun: int, out_Page: int, out_FatEntry: int, out_ClustersThisRun: int, out_Tmp_251: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_237 == 1 || out_Tmp_237 == 0 || out_Tmp_237 == in_Tmp_237;
  free ensures {:va_keep} out_CurrentRun == 0 || out_CurrentRun == 1 || out_CurrentRun == 2 || out_CurrentRun == in_CurrentRun;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSelectBestWindow_loop_L13(in_MaxFree: int, in_i_5: int, in_Tmp_261: int, in_Tmp_263: int, in_FirstEmpty: int, in_Tmp_264: int, in_Fave: int, in_Tmp_265: int, in_ClustersPerWindow: int, in_Tmp_266: int, in_Tmp_267: int, in_Vcb_16: int) returns (out_MaxFree: int, out_i_5: int, out_Tmp_261: int, out_Tmp_263: int, out_FirstEmpty: int, out_Tmp_264: int, out_Fave: int, out_Tmp_265: int, out_Tmp_266: int, out_Tmp_267: int)
{

  entry:
    out_MaxFree, out_i_5, out_Tmp_261, out_Tmp_263, out_FirstEmpty, out_Tmp_264, out_Fave, out_Tmp_265, out_Tmp_266, out_Tmp_267 := in_MaxFree, in_i_5, in_Tmp_261, in_Tmp_263, in_FirstEmpty, in_Tmp_264, in_Fave, in_Tmp_265, in_Tmp_266, in_Tmp_267;
    goto L13, exit;

  exit:
    return;

  L13:
    assume {:nonnull} in_Vcb_16 != 0;
    assume in_Vcb_16 > 0;
    goto anon15_Else;

  anon15_Else:
    out_Tmp_267 := out_i_5;
    assume {:nonnull} in_Vcb_16 != 0;
    assume in_Vcb_16 > 0;
    havoc out_Tmp_264;
    assume {:nonnull} out_Tmp_264 != 0;
    assume out_Tmp_264 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} -1 == out_FirstEmpty;
    out_FirstEmpty := out_i_5;
    goto L18;

  L18:
    out_i_5 := out_i_5 + 1;
    goto L18_dummy;

  L18_dummy:
    call {:si_unique_call 4696} {:si_old_unique_call 1} out_MaxFree, out_i_5, out_Tmp_261, out_Tmp_263, out_FirstEmpty, out_Tmp_264, out_Fave, out_Tmp_265, out_Tmp_266, out_Tmp_267 := FatSelectBestWindow_loop_L13(out_MaxFree, out_i_5, out_Tmp_261, out_Tmp_263, out_FirstEmpty, out_Tmp_264, out_Fave, out_Tmp_265, in_ClustersPerWindow, out_Tmp_266, out_Tmp_267, in_Vcb_16);
    return;

  anon17_Then:
    assume {:partition} -1 != out_FirstEmpty;
    goto L18;

  anon19_Then:
    out_Tmp_266 := out_i_5;
    assume {:nonnull} in_Vcb_16 != 0;
    assume in_Vcb_16 > 0;
    havoc out_Tmp_261;
    assume {:nonnull} out_Tmp_261 != 0;
    assume out_Tmp_261 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    out_Tmp_263 := out_i_5;
    assume {:nonnull} in_Vcb_16 != 0;
    assume in_Vcb_16 > 0;
    havoc out_Tmp_265;
    assume {:nonnull} out_Tmp_265 != 0;
    assume out_Tmp_265 > 0;
    havoc out_MaxFree;
    out_Fave := out_i_5;
    goto anon21_Else;

  anon21_Else:
    goto L18;

  anon20_Then:
    goto L18;
}



procedure {:LoopProcedure} FatSelectBestWindow_loop_L13(in_MaxFree: int, in_i_5: int, in_Tmp_261: int, in_Tmp_263: int, in_FirstEmpty: int, in_Tmp_264: int, in_Fave: int, in_Tmp_265: int, in_ClustersPerWindow: int, in_Tmp_266: int, in_Tmp_267: int, in_Vcb_16: int) returns (out_MaxFree: int, out_i_5: int, out_Tmp_261: int, out_Tmp_263: int, out_FirstEmpty: int, out_Tmp_264: int, out_Fave: int, out_Tmp_265: int, out_Tmp_266: int, out_Tmp_267: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMergeAllocation_loop_L28(in_Lbo_4: int, in_SourceVbo_1: int, in_sdv_140: int, in_TargetVbo_1: int, in_ByteCount_3: int, in_Vcb_21: int, in_Mcb_1: int, in_SecondMcb: int, in_vslice_dummy_var_71: int) returns (out_SourceVbo_1: int, out_sdv_140: int, out_TargetVbo_1: int, out_vslice_dummy_var_71: int)
{
  var vslice_dummy_var_1739: int;
  var vslice_dummy_var_1740: int;

  entry:
    out_SourceVbo_1, out_sdv_140, out_TargetVbo_1, out_vslice_dummy_var_71 := in_SourceVbo_1, in_sdv_140, in_TargetVbo_1, in_vslice_dummy_var_71;
    goto L28, exit;

  exit:
    return;

  L28:
    call {:si_unique_call 4697} out_sdv_140 := FatLookupMcbEntry(in_Vcb_21, in_SecondMcb, out_SourceVbo_1, in_Lbo_4, in_ByteCount_3, 0);
    goto anon7_Else;

  anon7_Else:
    assume {:partition} out_sdv_140 != 0;
    assume {:nonnull} in_ByteCount_3 != 0;
    assume in_ByteCount_3 > 0;
    assume {:nonnull} in_Lbo_4 != 0;
    assume in_Lbo_4 > 0;
    havoc vslice_dummy_var_1739;
    havoc vslice_dummy_var_1740;
    call {:si_unique_call 4698} out_vslice_dummy_var_71 := FatAddMcbEntry(in_Vcb_21, in_Mcb_1, out_TargetVbo_1, vslice_dummy_var_1739, vslice_dummy_var_1740);
    assume {:nonnull} in_ByteCount_3 != 0;
    assume in_ByteCount_3 > 0;
    havoc out_SourceVbo_1;
    assume {:nonnull} in_ByteCount_3 != 0;
    assume in_ByteCount_3 > 0;
    havoc out_TargetVbo_1;
    goto anon7_Else_dummy;

  anon7_Else_dummy:
    call {:si_unique_call 4699} {:si_old_unique_call 1} out_SourceVbo_1, out_sdv_140, out_TargetVbo_1, out_vslice_dummy_var_71 := FatMergeAllocation_loop_L28(in_Lbo_4, out_SourceVbo_1, out_sdv_140, out_TargetVbo_1, in_ByteCount_3, in_Vcb_21, in_Mcb_1, in_SecondMcb, out_vslice_dummy_var_71);
    return;
}



procedure {:LoopProcedure} FatMergeAllocation_loop_L28(in_Lbo_4: int, in_SourceVbo_1: int, in_sdv_140: int, in_TargetVbo_1: int, in_ByteCount_3: int, in_Vcb_21: int, in_Mcb_1: int, in_SecondMcb: int, in_vslice_dummy_var_71: int) returns (out_SourceVbo_1: int, out_sdv_140: int, out_TargetVbo_1: int, out_vslice_dummy_var_71: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L141(in_SavedStartingFatIndex: int, in_Tmp_507: int, in_IrpContext_30: int, in_Vcb_23: int, in_StartingFatIndex: int, in_ChainTogether: int) returns (out_Tmp_507: int, out_StartingFatIndex: int)
{

  entry:
    out_Tmp_507, out_StartingFatIndex := in_Tmp_507, in_StartingFatIndex;
    goto L141, exit;

  exit:
    return;

  L141:
    goto anon223_Else;

  anon223_Else:
    assume {:partition} out_StartingFatIndex > in_SavedStartingFatIndex;
    out_StartingFatIndex := out_StartingFatIndex - 1;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:partition} in_ChainTogether != 0;
    out_Tmp_507 := out_StartingFatIndex + 1;
    goto L146;

  L146:
    call {:si_unique_call 4700} FatSetFatEntry#1(in_IrpContext_30, in_Vcb_23, out_StartingFatIndex, out_Tmp_507);
    goto L146_dummy;

  L146_dummy:
    call {:si_unique_call 4701} {:si_old_unique_call 1} out_Tmp_507, out_StartingFatIndex := FatSetFatRun_loop_L141(in_SavedStartingFatIndex, out_Tmp_507, in_IrpContext_30, in_Vcb_23, out_StartingFatIndex, in_ChainTogether);
    return;

  anon264_Then:
    assume {:partition} in_ChainTogether == 0;
    out_Tmp_507 := 0;
    goto L146;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L141(in_SavedStartingFatIndex: int, in_Tmp_507: int, in_IrpContext_30: int, in_Vcb_23: int, in_StartingFatIndex: int, in_ChainTogether: int) returns (out_Tmp_507: int, out_StartingFatIndex: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L124(in_Tmp_424: int, in_Tmp_429: int, in_Tmp_431: int, in_Tmp_432: int, in_Tmp_439: int, in_i_6: int, in_Tmp_469: int, in_Tmp_470: int, in_Tmp_486: int, in_SavedBcbs: int) returns (out_Tmp_424: int, out_Tmp_429: int, out_Tmp_431: int, out_Tmp_432: int, out_Tmp_439: int, out_i_6: int, out_Tmp_469: int, out_Tmp_470: int, out_Tmp_486: int)
{

  entry:
    out_Tmp_424, out_Tmp_429, out_Tmp_431, out_Tmp_432, out_Tmp_439, out_i_6, out_Tmp_469, out_Tmp_470, out_Tmp_486 := in_Tmp_424, in_Tmp_429, in_Tmp_431, in_Tmp_432, in_Tmp_439, in_i_6, in_Tmp_469, in_Tmp_470, in_Tmp_486;
    goto L124, exit;

  exit:
    return;

  L124:
    out_Tmp_470 := out_i_6;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume out_Tmp_470 <= 2;
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume out_Tmp_470 != 2;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume out_Tmp_470 != 1;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume out_Tmp_470 != 0;
    goto L308;

  L308:
    assume {:nonnull} out_Tmp_424 != 0;
    assume out_Tmp_424 > 0;
    goto anon242_Else;

  anon242_Else:
    out_Tmp_431 := out_i_6;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume out_Tmp_431 <= 2;
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume out_Tmp_431 != 2;
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume out_Tmp_431 != 1;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume out_Tmp_431 != 0;
    goto L318;

  L318:
    assume {:nonnull} out_Tmp_429 != 0;
    assume out_Tmp_429 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    out_Tmp_439 := out_i_6;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume out_Tmp_439 <= 2;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume out_Tmp_439 != 2;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume out_Tmp_439 != 1;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume out_Tmp_439 != 0;
    goto L328;

  L328:
    assume {:nonnull} out_Tmp_469 != 0;
    assume out_Tmp_469 > 0;
    out_Tmp_432 := out_i_6;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume out_Tmp_432 <= 2;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume out_Tmp_432 != 2;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume out_Tmp_432 != 1;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume out_Tmp_432 != 0;
    goto L338;

  L338:
    assume {:nonnull} out_Tmp_486 != 0;
    assume out_Tmp_486 > 0;
    goto L132;

  L132:
    out_i_6 := out_i_6 + 1;
    goto L132_dummy;

  L132_dummy:
    call {:si_unique_call 4702} {:si_old_unique_call 1} out_Tmp_424, out_Tmp_429, out_Tmp_431, out_Tmp_432, out_Tmp_439, out_i_6, out_Tmp_469, out_Tmp_470, out_Tmp_486 := FatSetFatRun_loop_L124(out_Tmp_424, out_Tmp_429, out_Tmp_431, out_Tmp_432, out_Tmp_439, out_i_6, out_Tmp_469, out_Tmp_470, out_Tmp_486, in_SavedBcbs);
    return;

  anon257_Then:
    assume out_Tmp_432 == 0;
    out_Tmp_432 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_486;
    goto L338;

  anon256_Then:
    assume out_Tmp_432 == 1;
    out_Tmp_432 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_486;
    goto L338;

  anon255_Then:
    assume out_Tmp_432 == 2;
    out_Tmp_432 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_486;
    goto L338;

  anon254_Then:
    assume out_Tmp_432 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_486;
    goto L338;

  anon260_Then:
    assume out_Tmp_439 == 0;
    out_Tmp_439 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_469;
    goto L328;

  anon259_Then:
    assume out_Tmp_439 == 1;
    out_Tmp_439 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_469;
    goto L328;

  anon258_Then:
    assume out_Tmp_439 == 2;
    out_Tmp_439 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_469;
    goto L328;

  anon253_Then:
    assume out_Tmp_439 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_469;
    goto L328;

  anon243_Then:
    goto L132;

  anon263_Then:
    assume out_Tmp_431 == 0;
    out_Tmp_431 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_429;
    goto L318;

  anon262_Then:
    assume out_Tmp_431 == 1;
    out_Tmp_431 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_429;
    goto L318;

  anon261_Then:
    assume out_Tmp_431 == 2;
    out_Tmp_431 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_429;
    goto L318;

  anon252_Then:
    assume out_Tmp_431 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_429;
    goto L318;

  anon267_Then:
    assume out_Tmp_470 == 0;
    out_Tmp_470 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_424;
    goto L308;

  anon266_Then:
    assume out_Tmp_470 == 1;
    out_Tmp_470 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_424;
    goto L308;

  anon265_Then:
    assume out_Tmp_470 == 2;
    out_Tmp_470 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_424;
    goto L308;

  anon251_Then:
    assume out_Tmp_470 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_424;
    goto L308;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L124(in_Tmp_424: int, in_Tmp_429: int, in_Tmp_431: int, in_Tmp_432: int, in_Tmp_439: int, in_i_6: int, in_Tmp_469: int, in_Tmp_470: int, in_Tmp_486: int, in_SavedBcbs: int) returns (out_Tmp_424: int, out_Tmp_429: int, out_Tmp_431: int, out_Tmp_432: int, out_Tmp_439: int, out_i_6: int, out_Tmp_469: int, out_Tmp_470: int, out_Tmp_486: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L89(in_Tmp_426: int, in_Cluster: int, in_Tmp_466: int, in_Tmp_479: int, in_Tmp_481: int, in_PinnedFat_1: int, in_Tmp_492: int, in_Tmp_494: int, in_TmpFatEntry_2: int, in_StartingFatIndex: int, in_ClusterCount: int, in_ChainTogether: int) returns (out_Tmp_426: int, out_Cluster: int, out_Tmp_466: int, out_Tmp_479: int, out_Tmp_481: int, out_Tmp_492: int, out_Tmp_494: int)
{

  entry:
    out_Tmp_426, out_Cluster, out_Tmp_466, out_Tmp_479, out_Tmp_481, out_Tmp_492, out_Tmp_494 := in_Tmp_426, in_Cluster, in_Tmp_466, in_Tmp_479, in_Tmp_481, in_Tmp_492, in_Tmp_494;
    goto L89, exit;

  exit:
    return;

  L89:
    goto anon216_Then;

  anon216_Then:
    assume {:partition} out_Cluster < in_StartingFatIndex + in_ClusterCount - 1;
    assume {:nonnull} in_PinnedFat_1 != 0;
    assume in_PinnedFat_1 > 0;
    havoc out_Tmp_466;
    assume {:nonnull} in_TmpFatEntry_2 != 0;
    assume in_TmpFatEntry_2 > 0;
    assume {:nonnull} out_Tmp_466 != 0;
    assume out_Tmp_466 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:partition} BAND(out_Cluster, 1) != 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} in_ChainTogether != 0;
    goto L98;

  L98:
    assume {:nonnull} in_TmpFatEntry_2 != 0;
    assume in_TmpFatEntry_2 > 0;
    call {:si_unique_call 4703} out_Tmp_479 := corral_nondet();
    goto L100;

  L100:
    assume {:nonnull} in_TmpFatEntry_2 != 0;
    assume in_TmpFatEntry_2 > 0;
    assume {:nonnull} in_PinnedFat_1 != 0;
    assume in_PinnedFat_1 > 0;
    havoc out_Tmp_494;
    out_Tmp_481 := in_TmpFatEntry_2;
    assume {:nonnull} out_Tmp_481 != 0;
    assume out_Tmp_481 > 0;
    assume {:nonnull} out_Tmp_494 != 0;
    assume out_Tmp_494 > 0;
    assume {:nonnull} out_Tmp_481 != 0;
    assume out_Tmp_481 > 0;
    assume {:nonnull} out_Tmp_494 != 0;
    assume out_Tmp_494 > 0;
    out_Cluster := out_Cluster + 1;
    goto L100_dummy;

  L100_dummy:
    call {:si_unique_call 4704} {:si_old_unique_call 1} out_Tmp_426, out_Cluster, out_Tmp_466, out_Tmp_479, out_Tmp_481, out_Tmp_492, out_Tmp_494 := FatSetFatRun_loop_L89(out_Tmp_426, out_Cluster, out_Tmp_466, out_Tmp_479, out_Tmp_481, in_PinnedFat_1, out_Tmp_492, out_Tmp_494, in_TmpFatEntry_2, in_StartingFatIndex, in_ClusterCount, in_ChainTogether);
    return;

  anon218_Then:
    assume {:partition} in_ChainTogether == 0;
    goto L98;

  anon248_Then:
    assume {:partition} BAND(out_Cluster, 1) == 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} in_ChainTogether != 0;
    out_Tmp_426 := out_Cluster + 1;
    goto L105;

  L105:
    assume {:nonnull} in_TmpFatEntry_2 != 0;
    assume in_TmpFatEntry_2 > 0;
    havoc out_Tmp_492;
    out_Tmp_479 := BOR(out_Tmp_426, out_Tmp_492);
    goto L100;

  anon217_Then:
    assume {:partition} in_ChainTogether == 0;
    out_Tmp_426 := 0;
    goto L105;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L89(in_Tmp_426: int, in_Cluster: int, in_Tmp_466: int, in_Tmp_479: int, in_Tmp_481: int, in_PinnedFat_1: int, in_Tmp_492: int, in_Tmp_494: int, in_TmpFatEntry_2: int, in_StartingFatIndex: int, in_ClusterCount: int, in_ChainTogether: int) returns (out_Tmp_426: int, out_Cluster: int, out_Tmp_466: int, out_Tmp_479: int, out_Tmp_481: int, out_Tmp_492: int, out_Tmp_494: int);
  free ensures {:va_keep} out_Tmp_481 == in_Tmp_481 || out_Tmp_481 == in_TmpFatEntry_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L78(in_Lbo_5: int, in_FinalSectorLbo: int, in_Tmp_463: int, in_SectorSize_1: int, in_Vcb_23: int, in_vslice_dummy_var_74: int) returns (out_Lbo_5: int, out_Tmp_463: int, out_vslice_dummy_var_74: int)
{

  entry:
    out_Lbo_5, out_Tmp_463, out_vslice_dummy_var_74 := in_Lbo_5, in_Tmp_463, in_vslice_dummy_var_74;
    goto L78, exit;

  exit:
    return;

  L78:
    goto anon215_Else;

  anon215_Else:
    assume {:partition} in_FinalSectorLbo >= out_Lbo_5;
    out_Tmp_463 := out_Lbo_5;
    assume {:nonnull} in_Vcb_23 != 0;
    assume in_Vcb_23 > 0;
    call {:si_unique_call 4705} out_vslice_dummy_var_74 := FatAddMcbEntry(in_Vcb_23, DirtyFatMcb__VCB(in_Vcb_23), out_Tmp_463, out_Lbo_5, in_SectorSize_1);
    out_Lbo_5 := out_Lbo_5 + in_SectorSize_1;
    goto anon215_Else_dummy;

  anon215_Else_dummy:
    havoc out_Lbo_5;
    return;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L78(in_Lbo_5: int, in_FinalSectorLbo: int, in_Tmp_463: int, in_SectorSize_1: int, in_Vcb_23: int, in_vslice_dummy_var_74: int) returns (out_Lbo_5: int, out_Tmp_463: int, out_vslice_dummy_var_74: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_463 == in_Lbo_5 || out_Tmp_463 == in_Tmp_463;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L269(in_Cluster: int, in_FatEntry_3: int, in_Tmp_457: int, in_Tmp_467: int, in_Page_1: int, in_SavedBcbs: int, in_Tmp_508: int, in_FinalCluster_1: int, in_StartingFatIndex: int, in_ChainTogether: int) returns (out_Cluster: int, out_FatEntry_3: int, out_Tmp_457: int, out_Tmp_467: int, out_Page_1: int, out_Tmp_508: int)
{

  entry:
    out_Cluster, out_FatEntry_3, out_Tmp_457, out_Tmp_467, out_Page_1, out_Tmp_508 := in_Cluster, in_FatEntry_3, in_Tmp_457, in_Tmp_467, in_Page_1, in_Tmp_508;
    goto L269, exit;

  exit:
    return;

  L269:
    goto anon237_Else;

  anon237_Else:
    assume {:partition} in_FinalCluster_1 >= out_Cluster;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} BAND(out_FatEntry_3, 4095) != 0;
    goto L273;

  L273:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} in_ChainTogether != 0;
    out_Tmp_467 := out_Cluster + 1;
    goto L276;

  L276:
    assume {:nonnull} out_FatEntry_3 != 0;
    assume out_FatEntry_3 > 0;
    out_Cluster := out_Cluster + 1;
    goto L276_dummy;

  L276_dummy:
    call {:si_unique_call 4706} {:si_old_unique_call 1} out_Cluster, out_FatEntry_3, out_Tmp_457, out_Tmp_467, out_Page_1, out_Tmp_508 := FatSetFatRun_loop_L269(out_Cluster, out_FatEntry_3, out_Tmp_457, out_Tmp_467, out_Page_1, in_SavedBcbs, out_Tmp_508, in_FinalCluster_1, in_StartingFatIndex, in_ChainTogether);
    return;

  anon241_Then:
    assume {:partition} in_ChainTogether == 0;
    out_Tmp_467 := 0;
    goto L276;

  anon239_Then:
    assume {:partition} BAND(out_FatEntry_3, 4095) == 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} out_Cluster != in_StartingFatIndex;
    out_Page_1 := out_Page_1 + 1;
    out_Tmp_508 := out_Page_1;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume out_Tmp_508 <= 2;
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume out_Tmp_508 != 2;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume out_Tmp_508 != 1;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume out_Tmp_508 != 0;
    goto L448;

  L448:
    assume {:nonnull} out_Tmp_457 != 0;
    assume out_Tmp_457 > 0;
    havoc out_FatEntry_3;
    goto L273;

  anon312_Then:
    assume out_Tmp_508 == 0;
    out_Tmp_508 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_457;
    goto L448;

  anon311_Then:
    assume out_Tmp_508 == 1;
    out_Tmp_508 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_457;
    goto L448;

  anon310_Then:
    assume out_Tmp_508 == 2;
    out_Tmp_508 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_457;
    goto L448;

  anon309_Then:
    assume out_Tmp_508 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_457;
    goto L448;

  anon240_Then:
    assume {:partition} out_Cluster == in_StartingFatIndex;
    goto L273;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L269(in_Cluster: int, in_FatEntry_3: int, in_Tmp_457: int, in_Tmp_467: int, in_Page_1: int, in_SavedBcbs: int, in_Tmp_508: int, in_FinalCluster_1: int, in_StartingFatIndex: int, in_ChainTogether: int) returns (out_Cluster: int, out_FatEntry_3: int, out_Tmp_457: int, out_Tmp_467: int, out_Page_1: int, out_Tmp_508: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L260(in_Lbo_5: int, in_FinalSectorLbo: int, in_Tmp_487: int, in_SectorSize_1: int, in_Vcb_23: int, in_vslice_dummy_var_76: int) returns (out_Lbo_5: int, out_Tmp_487: int, out_vslice_dummy_var_76: int)
{

  entry:
    out_Lbo_5, out_Tmp_487, out_vslice_dummy_var_76 := in_Lbo_5, in_Tmp_487, in_vslice_dummy_var_76;
    goto L260, exit;

  exit:
    return;

  L260:
    goto anon236_Else;

  anon236_Else:
    assume {:partition} in_FinalSectorLbo >= out_Lbo_5;
    out_Tmp_487 := out_Lbo_5;
    assume {:nonnull} in_Vcb_23 != 0;
    assume in_Vcb_23 > 0;
    call {:si_unique_call 4707} out_vslice_dummy_var_76 := FatAddMcbEntry(in_Vcb_23, DirtyFatMcb__VCB(in_Vcb_23), out_Tmp_487, out_Lbo_5, in_SectorSize_1);
    out_Lbo_5 := out_Lbo_5 + in_SectorSize_1;
    goto anon236_Else_dummy;

  anon236_Else_dummy:
    havoc out_Lbo_5;
    return;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L260(in_Lbo_5: int, in_FinalSectorLbo: int, in_Tmp_487: int, in_SectorSize_1: int, in_Vcb_23: int, in_vslice_dummy_var_76: int) returns (out_Lbo_5: int, out_Tmp_487: int, out_vslice_dummy_var_76: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_487 == in_Lbo_5 || out_Tmp_487 == in_Tmp_487;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L246(in_NumberOfPages: int, in_Tmp_445: int, in_Tmp_450: int, in_FatEntry_3: int, in_Tmp_459: int, in_Tmp_464: int, in_Offset_2: int, in_Tmp_480: int, in_Tmp_482: int, in_Tmp_489: int, in_Page_1: int, in_SavedBcbs: int, in_IrpContext_30: int, in_Vcb_23: int) returns (out_Tmp_445: int, out_Tmp_450: int, out_FatEntry_3: int, out_Tmp_459: int, out_Tmp_464: int, out_Offset_2: int, out_Tmp_480: int, out_Tmp_482: int, out_Tmp_489: int, out_Page_1: int)
{

  entry:
    out_Tmp_445, out_Tmp_450, out_FatEntry_3, out_Tmp_459, out_Tmp_464, out_Offset_2, out_Tmp_480, out_Tmp_482, out_Tmp_489, out_Page_1 := in_Tmp_445, in_Tmp_450, in_FatEntry_3, in_Tmp_459, in_Tmp_464, in_Offset_2, in_Tmp_480, in_Tmp_482, in_Tmp_489, in_Page_1;
    goto L246, exit;

  exit:
    return;

  L246:
    goto anon234_Else;

  anon234_Else:
    assume {:partition} in_NumberOfPages > out_Page_1;
    out_Tmp_459 := out_Page_1;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume out_Tmp_459 <= 2;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    assume out_Tmp_459 != 2;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    assume out_Tmp_459 != 1;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume out_Tmp_459 != 0;
    goto L428;

  L428:
    out_Tmp_445 := out_Tmp_464 + 1 * 4;
    out_Tmp_482 := out_Page_1;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume out_Tmp_482 <= 2;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    assume out_Tmp_482 != 2;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    assume out_Tmp_482 != 1;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume out_Tmp_482 != 0;
    goto L438;

  L438:
    out_Tmp_480 := out_Tmp_450;
    call {:si_unique_call 4708} FatPrepareWriteVolumeFile#1(in_IrpContext_30, in_Vcb_23, out_Offset_2, 4096, out_Tmp_480, out_Tmp_445, 1, 0);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} out_Page_1 == 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_489;
    assume {:nonnull} out_Tmp_489 != 0;
    assume out_Tmp_489 > 0;
    havoc out_FatEntry_3;
    goto L255;

  L255:
    out_Page_1 := out_Page_1 + 1;
    out_Offset_2 := out_Offset_2 + 4096;
    goto L255_dummy;

  L255_dummy:
    call {:si_unique_call 4709} {:si_old_unique_call 1} out_Tmp_445, out_Tmp_450, out_FatEntry_3, out_Tmp_459, out_Tmp_464, out_Offset_2, out_Tmp_480, out_Tmp_482, out_Tmp_489, out_Page_1 := FatSetFatRun_loop_L246(in_NumberOfPages, out_Tmp_445, out_Tmp_450, out_FatEntry_3, out_Tmp_459, out_Tmp_464, out_Offset_2, out_Tmp_480, out_Tmp_482, out_Tmp_489, out_Page_1, in_SavedBcbs, in_IrpContext_30, in_Vcb_23);
    return;

  anon235_Then:
    assume {:partition} out_Page_1 != 0;
    goto L255;

  anon305_Then:
    assume out_Tmp_482 == 0;
    out_Tmp_482 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_450;
    goto L438;

  anon304_Then:
    assume out_Tmp_482 == 1;
    out_Tmp_482 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_450;
    goto L438;

  anon303_Then:
    assume out_Tmp_482 == 2;
    out_Tmp_482 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_450;
    goto L438;

  anon302_Then:
    assume out_Tmp_482 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_450;
    goto L438;

  anon308_Then:
    assume out_Tmp_459 == 0;
    out_Tmp_459 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_464;
    goto L428;

  anon307_Then:
    assume out_Tmp_459 == 1;
    out_Tmp_459 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_464;
    goto L428;

  anon306_Then:
    assume out_Tmp_459 == 2;
    out_Tmp_459 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_464;
    goto L428;

  anon301_Then:
    assume out_Tmp_459 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_464;
    goto L428;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L246(in_NumberOfPages: int, in_Tmp_445: int, in_Tmp_450: int, in_FatEntry_3: int, in_Tmp_459: int, in_Tmp_464: int, in_Offset_2: int, in_Tmp_480: int, in_Tmp_482: int, in_Tmp_489: int, in_Page_1: int, in_SavedBcbs: int, in_IrpContext_30: int, in_Vcb_23: int) returns (out_Tmp_445: int, out_Tmp_450: int, out_FatEntry_3: int, out_Tmp_459: int, out_Tmp_464: int, out_Offset_2: int, out_Tmp_480: int, out_Tmp_482: int, out_Tmp_489: int, out_Page_1: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L216(in_Tmp_437: int, in_Tmp_442: int, in_Tmp_444: int, in_Tmp_454: int, in_Tmp_456: int, in_i_7: int, in_Tmp_476: int, in_Tmp_477: int, in_Tmp_478: int, in_Tmp_484: int, in_SavedBcbs: int, in_Tmp_503: int) returns (out_Tmp_437: int, out_Tmp_442: int, out_Tmp_444: int, out_Tmp_454: int, out_Tmp_456: int, out_i_7: int, out_Tmp_476: int, out_Tmp_477: int, out_Tmp_478: int, out_Tmp_484: int, out_Tmp_503: int)
{

  entry:
    out_Tmp_437, out_Tmp_442, out_Tmp_444, out_Tmp_454, out_Tmp_456, out_i_7, out_Tmp_476, out_Tmp_477, out_Tmp_478, out_Tmp_484, out_Tmp_503 := in_Tmp_437, in_Tmp_442, in_Tmp_444, in_Tmp_454, in_Tmp_456, in_i_7, in_Tmp_476, in_Tmp_477, in_Tmp_478, in_Tmp_484, in_Tmp_503;
    goto L216, exit;

  exit:
    return;

  L216:
    out_Tmp_484 := out_i_7;
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume out_Tmp_484 <= 2;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume out_Tmp_484 != 2;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume out_Tmp_484 != 1;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume out_Tmp_484 != 0;
    goto L378;

  L378:
    assume {:nonnull} out_Tmp_442 != 0;
    assume out_Tmp_442 > 0;
    goto anon244_Else;

  anon244_Else:
    out_Tmp_444 := out_i_7;
    goto anon282_Then, anon282_Else;

  anon282_Else:
    assume out_Tmp_444 <= 2;
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume out_Tmp_444 != 2;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume out_Tmp_444 != 1;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume out_Tmp_444 != 0;
    goto L388;

  L388:
    assume {:nonnull} out_Tmp_437 != 0;
    assume out_Tmp_437 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    out_Tmp_477 := out_i_7;
    goto anon283_Then, anon283_Else;

  anon283_Else:
    assume out_Tmp_477 <= 2;
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume out_Tmp_477 != 2;
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume out_Tmp_477 != 1;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume out_Tmp_477 != 0;
    goto L398;

  L398:
    assume {:nonnull} out_Tmp_503 != 0;
    assume out_Tmp_503 > 0;
    out_Tmp_478 := out_i_7;
    goto anon284_Then, anon284_Else;

  anon284_Else:
    assume out_Tmp_478 <= 2;
    goto anon289_Then, anon289_Else;

  anon289_Else:
    assume out_Tmp_478 != 2;
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume out_Tmp_478 != 1;
    goto anon291_Then, anon291_Else;

  anon291_Else:
    assume out_Tmp_478 != 0;
    goto L408;

  L408:
    assume {:nonnull} out_Tmp_476 != 0;
    assume out_Tmp_476 > 0;
    goto L219;

  L219:
    out_Tmp_454 := out_i_7;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    assume out_Tmp_454 <= 2;
    goto anon286_Then, anon286_Else;

  anon286_Else:
    assume out_Tmp_454 != 2;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    assume out_Tmp_454 != 1;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    assume out_Tmp_454 != 0;
    goto L418;

  L418:
    assume {:nonnull} out_Tmp_456 != 0;
    assume out_Tmp_456 > 0;
    out_i_7 := out_i_7 + 1;
    goto L418_dummy;

  L418_dummy:
    call {:si_unique_call 4710} {:si_old_unique_call 1} out_Tmp_437, out_Tmp_442, out_Tmp_444, out_Tmp_454, out_Tmp_456, out_i_7, out_Tmp_476, out_Tmp_477, out_Tmp_478, out_Tmp_484, out_Tmp_503 := FatSetFatRun_loop_L216(out_Tmp_437, out_Tmp_442, out_Tmp_444, out_Tmp_454, out_Tmp_456, out_i_7, out_Tmp_476, out_Tmp_477, out_Tmp_478, out_Tmp_484, in_SavedBcbs, out_Tmp_503);
    return;

  anon288_Then:
    assume out_Tmp_454 == 0;
    out_Tmp_454 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_456;
    goto L418;

  anon287_Then:
    assume out_Tmp_454 == 1;
    out_Tmp_454 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_456;
    goto L418;

  anon286_Then:
    assume out_Tmp_454 == 2;
    out_Tmp_454 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_456;
    goto L418;

  anon285_Then:
    assume out_Tmp_454 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_456;
    goto L418;

  anon291_Then:
    assume out_Tmp_478 == 0;
    out_Tmp_478 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_476;
    goto L408;

  anon290_Then:
    assume out_Tmp_478 == 1;
    out_Tmp_478 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_476;
    goto L408;

  anon289_Then:
    assume out_Tmp_478 == 2;
    out_Tmp_478 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_476;
    goto L408;

  anon284_Then:
    assume out_Tmp_478 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_476;
    goto L408;

  anon294_Then:
    assume out_Tmp_477 == 0;
    out_Tmp_477 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_503;
    goto L398;

  anon293_Then:
    assume out_Tmp_477 == 1;
    out_Tmp_477 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_503;
    goto L398;

  anon292_Then:
    assume out_Tmp_477 == 2;
    out_Tmp_477 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_503;
    goto L398;

  anon283_Then:
    assume out_Tmp_477 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_503;
    goto L398;

  anon245_Then:
    goto L219;

  anon297_Then:
    assume out_Tmp_444 == 0;
    out_Tmp_444 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_437;
    goto L388;

  anon296_Then:
    assume out_Tmp_444 == 1;
    out_Tmp_444 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_437;
    goto L388;

  anon295_Then:
    assume out_Tmp_444 == 2;
    out_Tmp_444 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_437;
    goto L388;

  anon282_Then:
    assume out_Tmp_444 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_437;
    goto L388;

  anon300_Then:
    assume out_Tmp_484 == 0;
    out_Tmp_484 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_442;
    goto L378;

  anon299_Then:
    assume out_Tmp_484 == 1;
    out_Tmp_484 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_442;
    goto L378;

  anon298_Then:
    assume out_Tmp_484 == 2;
    out_Tmp_484 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_442;
    goto L378;

  anon281_Then:
    assume out_Tmp_484 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_442;
    goto L378;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L216(in_Tmp_437: int, in_Tmp_442: int, in_Tmp_444: int, in_Tmp_454: int, in_Tmp_456: int, in_i_7: int, in_Tmp_476: int, in_Tmp_477: int, in_Tmp_478: int, in_Tmp_484: int, in_SavedBcbs: int, in_Tmp_503: int) returns (out_Tmp_437: int, out_Tmp_442: int, out_Tmp_444: int, out_Tmp_454: int, out_Tmp_456: int, out_i_7: int, out_Tmp_476: int, out_Tmp_477: int, out_Tmp_478: int, out_Tmp_484: int, out_Tmp_503: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L200(in_FinalCluster: int, in_Tmp_428: int, in_Cluster: int, in_FatEntry_4: int, in_Tmp_471: int, in_Tmp_474: int, in_SavedBcbs: int, in_Page_2: int, in_StartingFatIndex: int, in_ChainTogether: int) returns (out_Tmp_428: int, out_Cluster: int, out_FatEntry_4: int, out_Tmp_471: int, out_Tmp_474: int, out_Page_2: int)
{

  entry:
    out_Tmp_428, out_Cluster, out_FatEntry_4, out_Tmp_471, out_Tmp_474, out_Page_2 := in_Tmp_428, in_Cluster, in_FatEntry_4, in_Tmp_471, in_Tmp_474, in_Page_2;
    goto L200, exit;

  exit:
    return;

  L200:
    goto anon227_Else;

  anon227_Else:
    assume {:partition} in_FinalCluster >= out_Cluster;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} BAND(out_FatEntry_4, 4095) != 0;
    goto L204;

  L204:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} in_ChainTogether != 0;
    out_Tmp_428 := out_Cluster + 1;
    goto L207;

  L207:
    assume {:nonnull} out_FatEntry_4 != 0;
    assume out_FatEntry_4 > 0;
    out_Cluster := out_Cluster + 1;
    goto L207_dummy;

  L207_dummy:
    call {:si_unique_call 4711} {:si_old_unique_call 1} out_Tmp_428, out_Cluster, out_FatEntry_4, out_Tmp_471, out_Tmp_474, out_Page_2 := FatSetFatRun_loop_L200(in_FinalCluster, out_Tmp_428, out_Cluster, out_FatEntry_4, out_Tmp_471, out_Tmp_474, in_SavedBcbs, out_Page_2, in_StartingFatIndex, in_ChainTogether);
    return;

  anon231_Then:
    assume {:partition} in_ChainTogether == 0;
    out_Tmp_428 := 0;
    goto L207;

  anon229_Then:
    assume {:partition} BAND(out_FatEntry_4, 4095) == 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} out_Cluster != in_StartingFatIndex;
    out_Page_2 := out_Page_2 + 1;
    out_Tmp_474 := out_Page_2;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume out_Tmp_474 <= 2;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume out_Tmp_474 != 2;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume out_Tmp_474 != 1;
    goto anon280_Then, anon280_Else;

  anon280_Else:
    assume out_Tmp_474 != 0;
    goto L368;

  L368:
    assume {:nonnull} out_Tmp_471 != 0;
    assume out_Tmp_471 > 0;
    havoc out_FatEntry_4;
    goto L204;

  anon280_Then:
    assume out_Tmp_474 == 0;
    out_Tmp_474 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_471;
    goto L368;

  anon279_Then:
    assume out_Tmp_474 == 1;
    out_Tmp_474 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_471;
    goto L368;

  anon278_Then:
    assume out_Tmp_474 == 2;
    out_Tmp_474 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_471;
    goto L368;

  anon277_Then:
    assume out_Tmp_474 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_471;
    goto L368;

  anon230_Then:
    assume {:partition} out_Cluster == in_StartingFatIndex;
    goto L204;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L200(in_FinalCluster: int, in_Tmp_428: int, in_Cluster: int, in_FatEntry_4: int, in_Tmp_471: int, in_Tmp_474: int, in_SavedBcbs: int, in_Page_2: int, in_StartingFatIndex: int, in_ChainTogether: int) returns (out_Tmp_428: int, out_Cluster: int, out_FatEntry_4: int, out_Tmp_471: int, out_Tmp_474: int, out_Page_2: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L191(in_Lbo_5: int, in_Tmp_446: int, in_FinalSectorLbo: int, in_SectorSize_1: int, in_Vcb_23: int, in_vslice_dummy_var_75: int) returns (out_Lbo_5: int, out_Tmp_446: int, out_vslice_dummy_var_75: int)
{

  entry:
    out_Lbo_5, out_Tmp_446, out_vslice_dummy_var_75 := in_Lbo_5, in_Tmp_446, in_vslice_dummy_var_75;
    goto L191, exit;

  exit:
    return;

  L191:
    goto anon226_Else;

  anon226_Else:
    assume {:partition} in_FinalSectorLbo >= out_Lbo_5;
    out_Tmp_446 := out_Lbo_5;
    assume {:nonnull} in_Vcb_23 != 0;
    assume in_Vcb_23 > 0;
    call {:si_unique_call 4712} out_vslice_dummy_var_75 := FatAddMcbEntry(in_Vcb_23, DirtyFatMcb__VCB(in_Vcb_23), out_Tmp_446, out_Lbo_5, in_SectorSize_1);
    out_Lbo_5 := out_Lbo_5 + in_SectorSize_1;
    goto anon226_Else_dummy;

  anon226_Else_dummy:
    call {:si_unique_call 4713} {:si_old_unique_call 1} out_Lbo_5, out_Tmp_446, out_vslice_dummy_var_75 := FatSetFatRun_loop_L191(out_Lbo_5, out_Tmp_446, in_FinalSectorLbo, in_SectorSize_1, in_Vcb_23, out_vslice_dummy_var_75);
    return;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L191(in_Lbo_5: int, in_Tmp_446: int, in_FinalSectorLbo: int, in_SectorSize_1: int, in_Vcb_23: int, in_vslice_dummy_var_75: int) returns (out_Lbo_5: int, out_Tmp_446: int, out_vslice_dummy_var_75: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L177(in_Tmp_430: int, in_Tmp_434: int, in_FatEntry_4: int, in_Tmp_465: int, in_Offset_1: int, in_Tmp_472: int, in_SavedBcbs: int, in_Page_2: int, in_Tmp_495: int, in_Tmp_497: int, in_Tmp_504: int, in_NumberOfPages_1: int, in_IrpContext_30: int, in_Vcb_23: int) returns (out_Tmp_430: int, out_Tmp_434: int, out_FatEntry_4: int, out_Tmp_465: int, out_Offset_1: int, out_Tmp_472: int, out_Page_2: int, out_Tmp_495: int, out_Tmp_497: int, out_Tmp_504: int)
{

  entry:
    out_Tmp_430, out_Tmp_434, out_FatEntry_4, out_Tmp_465, out_Offset_1, out_Tmp_472, out_Page_2, out_Tmp_495, out_Tmp_497, out_Tmp_504 := in_Tmp_430, in_Tmp_434, in_FatEntry_4, in_Tmp_465, in_Offset_1, in_Tmp_472, in_Page_2, in_Tmp_495, in_Tmp_497, in_Tmp_504;
    goto L177, exit;

  exit:
    return;

  L177:
    goto anon224_Else;

  anon224_Else:
    assume {:partition} in_NumberOfPages_1 > out_Page_2;
    out_Tmp_430 := out_Page_2;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume out_Tmp_430 <= 2;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume out_Tmp_430 != 2;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume out_Tmp_430 != 1;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume out_Tmp_430 != 0;
    goto L348;

  L348:
    out_Tmp_465 := out_Tmp_434 + 1 * 4;
    out_Tmp_495 := out_Page_2;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume out_Tmp_495 <= 2;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume out_Tmp_495 != 2;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume out_Tmp_495 != 1;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume out_Tmp_495 != 0;
    goto L358;

  L358:
    out_Tmp_504 := out_Tmp_472;
    call {:si_unique_call 4714} FatPrepareWriteVolumeFile#1(in_IrpContext_30, in_Vcb_23, out_Offset_1, 4096, out_Tmp_504, out_Tmp_465, 1, 0);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} out_Page_2 == 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_497;
    assume {:nonnull} out_Tmp_497 != 0;
    assume out_Tmp_497 > 0;
    havoc out_FatEntry_4;
    goto L186;

  L186:
    out_Page_2 := out_Page_2 + 1;
    out_Offset_1 := out_Offset_1 + 4096;
    goto L186_dummy;

  L186_dummy:
    call {:si_unique_call 4715} {:si_old_unique_call 1} out_Tmp_430, out_Tmp_434, out_FatEntry_4, out_Tmp_465, out_Offset_1, out_Tmp_472, out_Page_2, out_Tmp_495, out_Tmp_497, out_Tmp_504 := FatSetFatRun_loop_L177(out_Tmp_430, out_Tmp_434, out_FatEntry_4, out_Tmp_465, out_Offset_1, out_Tmp_472, in_SavedBcbs, out_Page_2, out_Tmp_495, out_Tmp_497, out_Tmp_504, in_NumberOfPages_1, in_IrpContext_30, in_Vcb_23);
    return;

  anon225_Then:
    assume {:partition} out_Page_2 != 0;
    goto L186;

  anon273_Then:
    assume out_Tmp_495 == 0;
    out_Tmp_495 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_472;
    goto L358;

  anon272_Then:
    assume out_Tmp_495 == 1;
    out_Tmp_495 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_472;
    goto L358;

  anon271_Then:
    assume out_Tmp_495 == 2;
    out_Tmp_495 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_472;
    goto L358;

  anon270_Then:
    assume out_Tmp_495 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_472;
    goto L358;

  anon276_Then:
    assume out_Tmp_430 == 0;
    out_Tmp_430 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_434;
    goto L348;

  anon275_Then:
    assume out_Tmp_430 == 1;
    out_Tmp_430 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_434;
    goto L348;

  anon274_Then:
    assume out_Tmp_430 == 2;
    out_Tmp_430 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_434;
    goto L348;

  anon269_Then:
    assume out_Tmp_430 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_434;
    goto L348;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L177(in_Tmp_430: int, in_Tmp_434: int, in_FatEntry_4: int, in_Tmp_465: int, in_Offset_1: int, in_Tmp_472: int, in_SavedBcbs: int, in_Page_2: int, in_Tmp_495: int, in_Tmp_497: int, in_Tmp_504: int, in_NumberOfPages_1: int, in_IrpContext_30: int, in_Vcb_23: int) returns (out_Tmp_430: int, out_Tmp_434: int, out_FatEntry_4: int, out_Tmp_465: int, out_Offset_1: int, out_Tmp_472: int, out_Page_2: int, out_Tmp_495: int, out_Tmp_497: int, out_Tmp_504: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFatRun_loop_L161(in_Lbo_5: int, in_FinalCluster: int, in_Tmp_428: int, in_StartSectorLbo: int, in_Tmp_430: int, in_Tmp_434: int, in_Tmp_437: int, in_Cluster: int, in_Tmp_442: int, in_FinalOffsetInVolume: int, in_Tmp_444: int, in_Tmp_446: int, in_Tmp_454: int, in_Tmp_456: int, in_FatEntry_4: int, in_FinalSectorLbo: int, in_Tmp_465: int, in_i_7: int, in_Offset_1: int, in_Tmp_471: int, in_Tmp_472: int, in_Tmp_474: int, in_Tmp_475: int, in_Tmp_476: int, in_Tmp_477: int, in_Tmp_478: int, in_StartOffsetInVolume_1: int, in_Tmp_484: int, in_SavedBcbs: int, in_Page_2: int, in_Tmp_495: int, in_Tmp_497: int, in_Tmp_500: int, in_SectorSize_1: int, in_Tmp_503: int, in_Tmp_504: int, in_NumberOfPages_1: int, in_ClusterCountThisRun: int, in_Tmp_509: int, in_Tmp_510: int, in_IrpContext_30: int, in_Vcb_23: int, in_StartingFatIndex: int, in_ClusterCount: int, in_ChainTogether: int, in_vslice_dummy_var_75: int) returns (out_Lbo_5: int, out_FinalCluster: int, out_Tmp_428: int, out_StartSectorLbo: int, out_Tmp_430: int, out_Tmp_434: int, out_Tmp_437: int, out_Cluster: int, out_Tmp_442: int, out_FinalOffsetInVolume: int, out_Tmp_444: int, out_Tmp_446: int, out_Tmp_454: int, out_Tmp_456: int, out_FatEntry_4: int, out_FinalSectorLbo: int, out_Tmp_465: int, out_i_7: int, out_Offset_1: int, out_Tmp_471: int, out_Tmp_472: int, out_Tmp_474: int, out_Tmp_475: int, out_Tmp_476: int, out_Tmp_477: int, out_Tmp_478: int, out_StartOffsetInVolume_1: int, out_Tmp_484: int, out_Page_2: int, out_Tmp_495: int, out_Tmp_497: int, out_Tmp_500: int, out_Tmp_503: int, out_Tmp_504: int, out_NumberOfPages_1: int, out_ClusterCountThisRun: int, out_Tmp_509: int, out_Tmp_510: int, out_StartingFatIndex: int, out_ClusterCount: int, out_vslice_dummy_var_75: int)
{

  entry:
    out_Lbo_5, out_FinalCluster, out_Tmp_428, out_StartSectorLbo, out_Tmp_430, out_Tmp_434, out_Tmp_437, out_Cluster, out_Tmp_442, out_FinalOffsetInVolume, out_Tmp_444, out_Tmp_446, out_Tmp_454, out_Tmp_456, out_FatEntry_4, out_FinalSectorLbo, out_Tmp_465, out_i_7, out_Offset_1, out_Tmp_471, out_Tmp_472, out_Tmp_474, out_Tmp_475, out_Tmp_476, out_Tmp_477, out_Tmp_478, out_StartOffsetInVolume_1, out_Tmp_484, out_Page_2, out_Tmp_495, out_Tmp_497, out_Tmp_500, out_Tmp_503, out_Tmp_504, out_NumberOfPages_1, out_ClusterCountThisRun, out_Tmp_509, out_Tmp_510, out_StartingFatIndex, out_ClusterCount, out_vslice_dummy_var_75 := in_Lbo_5, in_FinalCluster, in_Tmp_428, in_StartSectorLbo, in_Tmp_430, in_Tmp_434, in_Tmp_437, in_Cluster, in_Tmp_442, in_FinalOffsetInVolume, in_Tmp_444, in_Tmp_446, in_Tmp_454, in_Tmp_456, in_FatEntry_4, in_FinalSectorLbo, in_Tmp_465, in_i_7, in_Offset_1, in_Tmp_471, in_Tmp_472, in_Tmp_474, in_Tmp_475, in_Tmp_476, in_Tmp_477, in_Tmp_478, in_StartOffsetInVolume_1, in_Tmp_484, in_Page_2, in_Tmp_495, in_Tmp_497, in_Tmp_500, in_Tmp_503, in_Tmp_504, in_NumberOfPages_1, in_ClusterCountThisRun, in_Tmp_509, in_Tmp_510, in_StartingFatIndex, in_ClusterCount, in_vslice_dummy_var_75;
    goto L161, exit;

  exit:
    return;

  L161:
    assume {:nonnull} in_Vcb_23 != 0;
    assume in_Vcb_23 > 0;
    out_Tmp_509 := Bpb__VCB(in_Vcb_23);
    assume {:nonnull} in_Vcb_23 != 0;
    assume in_Vcb_23 > 0;
    out_Tmp_510 := Bpb__VCB(in_Vcb_23);
    assume {:nonnull} out_Tmp_509 != 0;
    assume out_Tmp_509 > 0;
    assume {:nonnull} out_Tmp_510 != 0;
    assume out_Tmp_510 > 0;
    havoc out_StartOffsetInVolume_1;
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:partition} out_ClusterCount > 65536;
    out_ClusterCountThisRun := 65536;
    goto L165;

  L165:
    out_FinalOffsetInVolume := out_StartOffsetInVolume_1 + (out_ClusterCountThisRun - 1) * 4;
    out_NumberOfPages_1 := INTDIV(out_FinalOffsetInVolume, 4096) - INTDIV(out_StartOffsetInVolume_1, 4096) + 1;
    out_Tmp_500 := (out_NumberOfPages_1 + 1) * 4 * 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_475;
    call {:si_unique_call 4721} sdv_RtlZeroMemory(0, out_Tmp_500);
    out_Page_2 := 0;
    out_Offset_1 := BAND(out_StartOffsetInVolume_1, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    goto L177;

  L177:
    call {:si_unique_call 4720} out_Tmp_430, out_Tmp_434, out_FatEntry_4, out_Tmp_465, out_Offset_1, out_Tmp_472, out_Page_2, out_Tmp_495, out_Tmp_497, out_Tmp_504 := FatSetFatRun_loop_L177(out_Tmp_430, out_Tmp_434, out_FatEntry_4, out_Tmp_465, out_Offset_1, out_Tmp_472, in_SavedBcbs, out_Page_2, out_Tmp_495, out_Tmp_497, out_Tmp_504, out_NumberOfPages_1, in_IrpContext_30, in_Vcb_23);
    goto L177_last;

  L177_last:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} out_NumberOfPages_1 > out_Page_2;
    out_Tmp_430 := out_Page_2;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume out_Tmp_430 <= 2;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume out_Tmp_430 != 2;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume out_Tmp_430 != 1;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume out_Tmp_430 != 0;
    goto L348;

  L348:
    out_Tmp_465 := out_Tmp_434 + 1 * 4;
    out_Tmp_495 := out_Page_2;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    assume out_Tmp_495 <= 2;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume out_Tmp_495 != 2;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume out_Tmp_495 != 1;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume out_Tmp_495 != 0;
    goto L358;

  L358:
    out_Tmp_504 := out_Tmp_472;
    call {:si_unique_call 4722} FatPrepareWriteVolumeFile#1(in_IrpContext_30, in_Vcb_23, out_Offset_1, 4096, out_Tmp_504, out_Tmp_465, 1, 0);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} out_Page_2 == 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_497;
    assume {:nonnull} out_Tmp_497 != 0;
    assume out_Tmp_497 > 0;
    havoc out_FatEntry_4;
    goto L186;

  L186:
    out_Page_2 := out_Page_2 + 1;
    out_Offset_1 := out_Offset_1 + 4096;
    assume false;
    return;

  anon225_Then:
    assume {:partition} out_Page_2 != 0;
    goto L186;

  anon273_Then:
    assume out_Tmp_495 == 0;
    out_Tmp_495 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_472;
    goto L358;

  anon272_Then:
    assume out_Tmp_495 == 1;
    out_Tmp_495 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_472;
    goto L358;

  anon271_Then:
    assume out_Tmp_495 == 2;
    out_Tmp_495 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_472;
    goto L358;

  anon270_Then:
    assume out_Tmp_495 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_472;
    goto L358;

  anon276_Then:
    assume out_Tmp_430 == 0;
    out_Tmp_430 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_434;
    goto L348;

  anon275_Then:
    assume out_Tmp_430 == 1;
    out_Tmp_430 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_434;
    goto L348;

  anon274_Then:
    assume out_Tmp_430 == 2;
    out_Tmp_430 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_434;
    goto L348;

  anon269_Then:
    assume out_Tmp_430 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_434;
    goto L348;

  anon224_Then:
    assume {:partition} out_Page_2 >= out_NumberOfPages_1;
    out_StartSectorLbo := BAND(out_StartOffsetInVolume_1, BNOT(in_SectorSize_1 - 1));
    out_FinalSectorLbo := BAND(out_FinalOffsetInVolume, BNOT(in_SectorSize_1 - 1));
    out_Lbo_5 := out_StartSectorLbo;
    goto L191;

  L191:
    call {:si_unique_call 4718} out_Lbo_5, out_Tmp_446, out_vslice_dummy_var_75 := FatSetFatRun_loop_L191(out_Lbo_5, out_Tmp_446, out_FinalSectorLbo, in_SectorSize_1, in_Vcb_23, out_vslice_dummy_var_75);
    goto L191_last;

  L191_last:
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} out_FinalSectorLbo >= out_Lbo_5;
    out_Tmp_446 := out_Lbo_5;
    assume {:nonnull} in_Vcb_23 != 0;
    assume in_Vcb_23 > 0;
    call {:si_unique_call 4719} out_vslice_dummy_var_75 := FatAddMcbEntry(in_Vcb_23, DirtyFatMcb__VCB(in_Vcb_23), out_Tmp_446, out_Lbo_5, in_SectorSize_1);
    out_Lbo_5 := out_Lbo_5 + in_SectorSize_1;
    assume false;
    return;

  anon226_Then:
    assume {:partition} out_Lbo_5 > out_FinalSectorLbo;
    out_FinalCluster := out_StartingFatIndex + out_ClusterCountThisRun - 1;
    out_Page_2 := 0;
    out_Cluster := out_StartingFatIndex;
    goto L200;

  L200:
    call {:si_unique_call 4717} out_Tmp_428, out_Cluster, out_FatEntry_4, out_Tmp_471, out_Tmp_474, out_Page_2 := FatSetFatRun_loop_L200(out_FinalCluster, out_Tmp_428, out_Cluster, out_FatEntry_4, out_Tmp_471, out_Tmp_474, in_SavedBcbs, out_Page_2, out_StartingFatIndex, in_ChainTogether);
    goto L200_last;

  L200_last:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} out_FinalCluster >= out_Cluster;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} BAND(out_FatEntry_4, 4095) != 0;
    goto L204;

  L204:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} in_ChainTogether != 0;
    out_Tmp_428 := out_Cluster + 1;
    goto L207;

  L207:
    assume {:nonnull} out_FatEntry_4 != 0;
    assume out_FatEntry_4 > 0;
    out_Cluster := out_Cluster + 1;
    assume false;
    return;

  anon231_Then:
    assume {:partition} in_ChainTogether == 0;
    out_Tmp_428 := 0;
    goto L207;

  anon229_Then:
    assume {:partition} BAND(out_FatEntry_4, 4095) == 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:partition} out_Cluster != out_StartingFatIndex;
    out_Page_2 := out_Page_2 + 1;
    out_Tmp_474 := out_Page_2;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume out_Tmp_474 <= 2;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume out_Tmp_474 != 2;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume out_Tmp_474 != 1;
    goto anon280_Then, anon280_Else;

  anon280_Else:
    assume out_Tmp_474 != 0;
    goto L368;

  L368:
    assume {:nonnull} out_Tmp_471 != 0;
    assume out_Tmp_471 > 0;
    havoc out_FatEntry_4;
    goto L204;

  anon280_Then:
    assume out_Tmp_474 == 0;
    out_Tmp_474 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_471;
    goto L368;

  anon279_Then:
    assume out_Tmp_474 == 1;
    out_Tmp_474 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_471;
    goto L368;

  anon278_Then:
    assume out_Tmp_474 == 2;
    out_Tmp_474 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_471;
    goto L368;

  anon277_Then:
    assume out_Tmp_474 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_471;
    goto L368;

  anon230_Then:
    assume {:partition} out_Cluster == out_StartingFatIndex;
    goto L204;

  anon227_Then:
    assume {:partition} out_Cluster > out_FinalCluster;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} 65536 < out_ClusterCount;
    goto L215;

  L215:
    out_i_7 := 0;
    goto L216;

  L216:
    call {:si_unique_call 4716} out_Tmp_437, out_Tmp_442, out_Tmp_444, out_Tmp_454, out_Tmp_456, out_i_7, out_Tmp_476, out_Tmp_477, out_Tmp_478, out_Tmp_484, out_Tmp_503 := FatSetFatRun_loop_L216(out_Tmp_437, out_Tmp_442, out_Tmp_444, out_Tmp_454, out_Tmp_456, out_i_7, out_Tmp_476, out_Tmp_477, out_Tmp_478, out_Tmp_484, in_SavedBcbs, out_Tmp_503);
    goto L216_last;

  L216_last:
    out_Tmp_484 := out_i_7;
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume out_Tmp_484 <= 2;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume out_Tmp_484 != 2;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume out_Tmp_484 != 1;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume out_Tmp_484 != 0;
    goto L378;

  L378:
    assume {:nonnull} out_Tmp_442 != 0;
    assume out_Tmp_442 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    out_Tmp_444 := out_i_7;
    goto anon282_Then, anon282_Else;

  anon282_Else:
    assume out_Tmp_444 <= 2;
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume out_Tmp_444 != 2;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume out_Tmp_444 != 1;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume out_Tmp_444 != 0;
    goto L388;

  L388:
    assume {:nonnull} out_Tmp_437 != 0;
    assume out_Tmp_437 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    out_Tmp_477 := out_i_7;
    goto anon283_Then, anon283_Else;

  anon283_Else:
    assume out_Tmp_477 <= 2;
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume out_Tmp_477 != 2;
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume out_Tmp_477 != 1;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume out_Tmp_477 != 0;
    goto L398;

  L398:
    assume {:nonnull} out_Tmp_503 != 0;
    assume out_Tmp_503 > 0;
    out_Tmp_478 := out_i_7;
    goto anon284_Then, anon284_Else;

  anon284_Else:
    assume out_Tmp_478 <= 2;
    goto anon289_Then, anon289_Else;

  anon289_Else:
    assume out_Tmp_478 != 2;
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume out_Tmp_478 != 1;
    goto anon291_Then, anon291_Else;

  anon291_Else:
    assume out_Tmp_478 != 0;
    goto L408;

  L408:
    assume {:nonnull} out_Tmp_476 != 0;
    assume out_Tmp_476 > 0;
    goto L219;

  L219:
    out_Tmp_454 := out_i_7;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    assume out_Tmp_454 <= 2;
    goto anon286_Then, anon286_Else;

  anon286_Else:
    assume out_Tmp_454 != 2;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    assume out_Tmp_454 != 1;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    assume out_Tmp_454 != 0;
    goto L418;

  L418:
    assume {:nonnull} out_Tmp_456 != 0;
    assume out_Tmp_456 > 0;
    out_i_7 := out_i_7 + 1;
    assume false;
    return;

  anon288_Then:
    assume out_Tmp_454 == 0;
    out_Tmp_454 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_456;
    goto L418;

  anon287_Then:
    assume out_Tmp_454 == 1;
    out_Tmp_454 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_456;
    goto L418;

  anon286_Then:
    assume out_Tmp_454 == 2;
    out_Tmp_454 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_456;
    goto L418;

  anon285_Then:
    assume out_Tmp_454 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_456;
    goto L418;

  anon291_Then:
    assume out_Tmp_478 == 0;
    out_Tmp_478 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_476;
    goto L408;

  anon290_Then:
    assume out_Tmp_478 == 1;
    out_Tmp_478 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_476;
    goto L408;

  anon289_Then:
    assume out_Tmp_478 == 2;
    out_Tmp_478 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_476;
    goto L408;

  anon284_Then:
    assume out_Tmp_478 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_476;
    goto L408;

  anon294_Then:
    assume out_Tmp_477 == 0;
    out_Tmp_477 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_503;
    goto L398;

  anon293_Then:
    assume out_Tmp_477 == 1;
    out_Tmp_477 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_503;
    goto L398;

  anon292_Then:
    assume out_Tmp_477 == 2;
    out_Tmp_477 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_503;
    goto L398;

  anon283_Then:
    assume out_Tmp_477 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_503;
    goto L398;

  anon245_Then:
    goto L219;

  anon297_Then:
    assume out_Tmp_444 == 0;
    out_Tmp_444 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_437;
    goto L388;

  anon296_Then:
    assume out_Tmp_444 == 1;
    out_Tmp_444 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_437;
    goto L388;

  anon295_Then:
    assume out_Tmp_444 == 2;
    out_Tmp_444 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_437;
    goto L388;

  anon282_Then:
    assume out_Tmp_444 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_437;
    goto L388;

  anon244_Then:
    goto anon233_Else;

  anon233_Else:
    assume {:partition} 65536 < out_ClusterCount;
    out_StartingFatIndex := out_StartingFatIndex + 65536;
    out_ClusterCount := out_ClusterCount - 65536;
    goto anon233_Else_dummy;

  anon233_Else_dummy:
    call {:si_unique_call 4723} {:si_old_unique_call 1} out_Lbo_5, out_FinalCluster, out_Tmp_428, out_StartSectorLbo, out_Tmp_430, out_Tmp_434, out_Tmp_437, out_Cluster, out_Tmp_442, out_FinalOffsetInVolume, out_Tmp_444, out_Tmp_446, out_Tmp_454, out_Tmp_456, out_FatEntry_4, out_FinalSectorLbo, out_Tmp_465, out_i_7, out_Offset_1, out_Tmp_471, out_Tmp_472, out_Tmp_474, out_Tmp_475, out_Tmp_476, out_Tmp_477, out_Tmp_478, out_StartOffsetInVolume_1, out_Tmp_484, out_Page_2, out_Tmp_495, out_Tmp_497, out_Tmp_500, out_Tmp_503, out_Tmp_504, out_NumberOfPages_1, out_ClusterCountThisRun, out_Tmp_509, out_Tmp_510, out_StartingFatIndex, out_ClusterCount, out_vslice_dummy_var_75 := FatSetFatRun_loop_L161(out_Lbo_5, out_FinalCluster, out_Tmp_428, out_StartSectorLbo, out_Tmp_430, out_Tmp_434, out_Tmp_437, out_Cluster, out_Tmp_442, out_FinalOffsetInVolume, out_Tmp_444, out_Tmp_446, out_Tmp_454, out_Tmp_456, out_FatEntry_4, out_FinalSectorLbo, out_Tmp_465, out_i_7, out_Offset_1, out_Tmp_471, out_Tmp_472, out_Tmp_474, out_Tmp_475, out_Tmp_476, out_Tmp_477, out_Tmp_478, out_StartOffsetInVolume_1, out_Tmp_484, in_SavedBcbs, out_Page_2, out_Tmp_495, out_Tmp_497, out_Tmp_500, in_SectorSize_1, out_Tmp_503, out_Tmp_504, out_NumberOfPages_1, out_ClusterCountThisRun, out_Tmp_509, out_Tmp_510, in_IrpContext_30, in_Vcb_23, out_StartingFatIndex, out_ClusterCount, in_ChainTogether, out_vslice_dummy_var_75);
    return;

  anon300_Then:
    assume out_Tmp_484 == 0;
    out_Tmp_484 := 0;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_442;
    goto L378;

  anon299_Then:
    assume out_Tmp_484 == 1;
    out_Tmp_484 := 1;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_442;
    goto L378;

  anon298_Then:
    assume out_Tmp_484 == 2;
    out_Tmp_484 := 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_442;
    goto L378;

  anon281_Then:
    assume out_Tmp_484 > 2;
    assume {:nonnull} in_SavedBcbs != 0;
    assume in_SavedBcbs > 0;
    havoc out_Tmp_442;
    goto L378;

  anon228_Then:
    assume {:partition} out_ClusterCount <= 65536;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} in_ChainTogether == 0;
    goto L215;

  anon232_Then:
    assume {:partition} in_ChainTogether != 0;
    assume {:nonnull} out_FatEntry_4 != 0;
    assume out_FatEntry_4 > 0;
    goto L215;

  anon268_Then:
    assume {:partition} 65536 >= out_ClusterCount;
    out_ClusterCountThisRun := out_ClusterCount;
    goto L165;
}



procedure {:LoopProcedure} FatSetFatRun_loop_L161(in_Lbo_5: int, in_FinalCluster: int, in_Tmp_428: int, in_StartSectorLbo: int, in_Tmp_430: int, in_Tmp_434: int, in_Tmp_437: int, in_Cluster: int, in_Tmp_442: int, in_FinalOffsetInVolume: int, in_Tmp_444: int, in_Tmp_446: int, in_Tmp_454: int, in_Tmp_456: int, in_FatEntry_4: int, in_FinalSectorLbo: int, in_Tmp_465: int, in_i_7: int, in_Offset_1: int, in_Tmp_471: int, in_Tmp_472: int, in_Tmp_474: int, in_Tmp_475: int, in_Tmp_476: int, in_Tmp_477: int, in_Tmp_478: int, in_StartOffsetInVolume_1: int, in_Tmp_484: int, in_SavedBcbs: int, in_Page_2: int, in_Tmp_495: int, in_Tmp_497: int, in_Tmp_500: int, in_SectorSize_1: int, in_Tmp_503: int, in_Tmp_504: int, in_NumberOfPages_1: int, in_ClusterCountThisRun: int, in_Tmp_509: int, in_Tmp_510: int, in_IrpContext_30: int, in_Vcb_23: int, in_StartingFatIndex: int, in_ClusterCount: int, in_ChainTogether: int, in_vslice_dummy_var_75: int) returns (out_Lbo_5: int, out_FinalCluster: int, out_Tmp_428: int, out_StartSectorLbo: int, out_Tmp_430: int, out_Tmp_434: int, out_Tmp_437: int, out_Cluster: int, out_Tmp_442: int, out_FinalOffsetInVolume: int, out_Tmp_444: int, out_Tmp_446: int, out_Tmp_454: int, out_Tmp_456: int, out_FatEntry_4: int, out_FinalSectorLbo: int, out_Tmp_465: int, out_i_7: int, out_Offset_1: int, out_Tmp_471: int, out_Tmp_472: int, out_Tmp_474: int, out_Tmp_475: int, out_Tmp_476: int, out_Tmp_477: int, out_Tmp_478: int, out_StartOffsetInVolume_1: int, out_Tmp_484: int, out_Page_2: int, out_Tmp_495: int, out_Tmp_497: int, out_Tmp_500: int, out_Tmp_503: int, out_Tmp_504: int, out_NumberOfPages_1: int, out_ClusterCountThisRun: int, out_Tmp_509: int, out_Tmp_510: int, out_StartingFatIndex: int, out_ClusterCount: int, out_vslice_dummy_var_75: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_Tmp_509 == in_Tmp_509 || out_Tmp_509 == Bpb__VCB(in_Vcb_23);
  free ensures {:va_keep} out_Tmp_510 == in_Tmp_510 || out_Tmp_510 == Bpb__VCB(in_Vcb_23);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAllocateDiskSpace_loop_L258(in_SelectNextContigWindow: int, in_sdv_156: int, in_Window: int, in_Tmp_544: int, in_Tmp_545: int, in_Desired: int, in_ClustersRemaining: int, in_NextWindow: int, in_LockedBitMap: int, in_s_p_e_c_i_a_l_2: int, in_Tmp_553: int, in_Cluster_1: int, in_Tmp_555: int, in_Tmp_556: int, in_Wait_1: int, in_FaveWindow: int, in_Tmp_559: int, in_ClustersFound: int, in_BytesFound: int, in_Tmp_562: int, in_Tmp_564: int, in_SelectedWindow: int, in_sdv_169: int, in_WindowRelativeHint: int, in_Tmp_569: int, in_Tmp_571: int, in_Tmp_573: int, in_PriorLastCluster: int, in_CurrentVbo_1: int, in_Index_1: int, in_IrpContext_32: int, in_Vcb_25: int, in_ExactMatchRequired: int, in_Mcb_2: int, in_vslice_dummy_var_83: int) returns (out_SelectNextContigWindow: int, out_sdv_156: int, out_Window: int, out_Tmp_544: int, out_Tmp_545: int, out_Desired: int, out_ClustersRemaining: int, out_NextWindow: int, out_LockedBitMap: int, out_s_p_e_c_i_a_l_2: int, out_Tmp_553: int, out_Cluster_1: int, out_Tmp_555: int, out_Tmp_556: int, out_Wait_1: int, out_FaveWindow: int, out_Tmp_559: int, out_ClustersFound: int, out_BytesFound: int, out_Tmp_562: int, out_Tmp_564: int, out_SelectedWindow: int, out_sdv_169: int, out_WindowRelativeHint: int, out_Tmp_569: int, out_Tmp_571: int, out_Tmp_573: int, out_PriorLastCluster: int, out_CurrentVbo_1: int, out_Index_1: int, out_vslice_dummy_var_83: int)
{

  entry:
    out_SelectNextContigWindow, out_sdv_156, out_Window, out_Tmp_544, out_Tmp_545, out_Desired, out_ClustersRemaining, out_NextWindow, out_LockedBitMap, out_s_p_e_c_i_a_l_2, out_Tmp_553, out_Cluster_1, out_Tmp_555, out_Tmp_556, out_Wait_1, out_FaveWindow, out_Tmp_559, out_ClustersFound, out_BytesFound, out_Tmp_562, out_Tmp_564, out_SelectedWindow, out_sdv_169, out_WindowRelativeHint, out_Tmp_569, out_Tmp_571, out_Tmp_573, out_PriorLastCluster, out_CurrentVbo_1, out_Index_1, out_vslice_dummy_var_83 := in_SelectNextContigWindow, in_sdv_156, in_Window, in_Tmp_544, in_Tmp_545, in_Desired, in_ClustersRemaining, in_NextWindow, in_LockedBitMap, in_s_p_e_c_i_a_l_2, in_Tmp_553, in_Cluster_1, in_Tmp_555, in_Tmp_556, in_Wait_1, in_FaveWindow, in_Tmp_559, in_ClustersFound, in_BytesFound, in_Tmp_562, in_Tmp_564, in_SelectedWindow, in_sdv_169, in_WindowRelativeHint, in_Tmp_569, in_Tmp_571, in_Tmp_573, in_PriorLastCluster, in_CurrentVbo_1, in_Index_1, in_vslice_dummy_var_83;
    goto L258, exit;

  exit:
    return;

  L258:
    goto anon146_Else;

  anon146_Else:
    assume {:partition} out_ClustersRemaining != 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} out_LockedBitMap != 0;
    goto L263;

  L263:
    out_ClustersFound := 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} out_SelectNextContigWindow != 0;
    goto L266;

  L266:
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} out_ClustersFound == 0;
    out_FaveWindow := 0;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    call {:si_unique_call 4727} KeBugCheckEx(35, 133472, 0, 5, 0);
    goto L355;

  L355:
    out_SelectedWindow := 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} out_SelectNextContigWindow != 0;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    havoc out_NextWindow;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    out_Tmp_555 := out_NextWindow;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    havoc out_Tmp_569;
    assume {:nonnull} out_Tmp_569 != 0;
    assume out_Tmp_569 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    out_FaveWindow := out_NextWindow;
    out_SelectedWindow := 1;
    goto L368;

  L368:
    out_SelectNextContigWindow := 0;
    goto L360;

  L360:
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} out_SelectedWindow != 0;
    goto L375;

  L375:
    out_Tmp_544 := out_FaveWindow;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    havoc out_Tmp_571;
    assume {:nonnull} out_Tmp_571 != 0;
    assume out_Tmp_571 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L379;

  L379:
    assume {:nonnull} in_IrpContext_32 != 0;
    assume in_IrpContext_32 > 0;
    havoc out_Tmp_545;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} out_Tmp_545 == 0;
    out_Wait_1 := 0;
    goto L588;

  L588:
    assume {:nonnull} in_IrpContext_32 != 0;
    assume in_IrpContext_32 > 0;
    out_Tmp_573 := out_FaveWindow;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    havoc out_Tmp_562;
    out_Tmp_556 := out_Tmp_562 + out_Tmp_573 * 12;
    call {:si_unique_call 4724} FatExamineFatEntries(in_IrpContext_32, in_Vcb_25, 0, 0, 0, out_Tmp_556, 0);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} out_Wait_1 == 0;
    assume {:nonnull} in_IrpContext_32 != 0;
    assume in_IrpContext_32 > 0;
    goto anon155_Else_dummy;

  anon155_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 4740} {:si_old_unique_call 1} out_SelectNextContigWindow, out_sdv_156, out_Window, out_Tmp_544, out_Tmp_545, out_Desired, out_ClustersRemaining, out_NextWindow, out_LockedBitMap, out_s_p_e_c_i_a_l_2, out_Tmp_553, out_Cluster_1, out_Tmp_555, out_Tmp_556, out_Wait_1, out_FaveWindow, out_Tmp_559, out_ClustersFound, out_BytesFound, out_Tmp_562, out_Tmp_564, out_SelectedWindow, out_sdv_169, out_WindowRelativeHint, out_Tmp_569, out_Tmp_571, out_Tmp_573, out_PriorLastCluster, out_CurrentVbo_1, out_Index_1, out_vslice_dummy_var_83 := FatAllocateDiskSpace_loop_L258(out_SelectNextContigWindow, out_sdv_156, out_Window, out_Tmp_544, out_Tmp_545, out_Desired, out_ClustersRemaining, out_NextWindow, out_LockedBitMap, out_s_p_e_c_i_a_l_2, out_Tmp_553, out_Cluster_1, out_Tmp_555, out_Tmp_556, out_Wait_1, out_FaveWindow, out_Tmp_559, out_ClustersFound, out_BytesFound, out_Tmp_562, out_Tmp_564, out_SelectedWindow, out_sdv_169, out_WindowRelativeHint, out_Tmp_569, out_Tmp_571, out_Tmp_573, out_PriorLastCluster, out_CurrentVbo_1, out_Index_1, in_IrpContext_32, in_Vcb_25, in_ExactMatchRequired, in_Mcb_2, out_vslice_dummy_var_83);
    return;

  anon155_Then:
    assume {:partition} out_Wait_1 != 0;
    goto anon155_Then_dummy;

  anon155_Then_dummy:
    goto L_BAF_0;

  anon184_Then:
    assume {:partition} out_Tmp_545 != 0;
    out_Wait_1 := 1;
    goto L588;

  anon183_Then:
    call {:si_unique_call 4725} KeBugCheckEx(35, 133531, 0, 5, 1);
    goto L379;

  anon153_Then:
    assume {:partition} out_SelectedWindow == 0;
    call {:si_unique_call 4726} out_FaveWindow := FatSelectBestWindow(in_Vcb_25);
    goto L375;

  anon182_Then:
    goto L364;

  L364:
    goto anon154_Then;

  anon154_Then:
    assume {:partition} in_ExactMatchRequired == 0;
    out_WindowRelativeHint := 0;
    goto L368;

  anon181_Then:
    goto L364;

  anon180_Then:
    assume {:partition} out_SelectNextContigWindow == 0;
    goto L360;

  anon179_Then:
    goto L355;

  anon149_Then:
    assume {:partition} out_ClustersFound != 0;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    havoc out_Window;
    out_s_p_e_c_i_a_l_2 := out_Index_1 + 2 + out_ClustersFound;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    out_s_p_e_c_i_a_l_2 := 2;
    goto L316;

  L316:
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    out_Tmp_559 := FreeClusterBitMap__VCB(in_Vcb_25);
    assume {:nonnull} out_Tmp_559 != 0;
    assume out_Tmp_559 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    call {:si_unique_call 4739} out_sdv_156 := corral_nondet();
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    goto L326;

  L326:
    assume {:nonnull} out_Window != 0;
    assume out_Window > 0;
    havoc out_Cluster_1;
    assume {:nonnull} out_Window != 0;
    assume out_Window > 0;
    call {:si_unique_call 4735} ExReleaseFastMutexUnsafe(0);
    out_LockedBitMap := 0;
    call {:si_unique_call 4736} out_BytesFound := corral_nondet();
    call {:si_unique_call 4737} out_Tmp_553 := corral_nondet();
    call {:si_unique_call 4738} out_vslice_dummy_var_83 := FatAddMcbEntry(in_Vcb_25, in_Mcb_2, out_CurrentVbo_1, out_Tmp_553, out_BytesFound);
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} out_PriorLastCluster != 0;
    call {:si_unique_call 4734} FatSetFatEntry#1(in_IrpContext_32, in_Vcb_25, out_PriorLastCluster, out_Cluster_1);
    goto L339;

  L339:
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} out_ClustersFound == 1;
    call {:si_unique_call 4732} FatSetFatEntry#1(in_IrpContext_32, in_Vcb_25, out_Cluster_1, 268435455);
    goto L349;

  L349:
    out_CurrentVbo_1 := out_CurrentVbo_1 + out_BytesFound;
    out_ClustersRemaining := out_ClustersRemaining - out_ClustersFound;
    out_PriorLastCluster := out_Cluster_1 + out_ClustersFound - 1;
    goto L349_dummy;

  L349_dummy:
    goto L_BAF_0;

  anon152_Then:
    assume {:partition} out_ClustersFound != 1;
    call {:si_unique_call 4733} FatSetFatRun(in_IrpContext_32, in_Vcb_25, out_Cluster_1, out_ClustersFound, 1);
    goto L349;

  anon151_Then:
    assume {:partition} out_PriorLastCluster == 0;
    goto L339;

  anon178_Then:
    goto L326;

  anon177_Then:
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    goto L326;

  anon150_Then:
    goto L316;

  anon176_Then:
    assume {:partition} out_SelectNextContigWindow == 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} out_WindowRelativeHint != 0;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    havoc out_Desired;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} out_Desired > out_ClustersRemaining;
    out_Desired := out_ClustersRemaining;
    goto L393;

  L393:
    call {:si_unique_call 4729} out_sdv_169 := corral_nondet();
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} out_sdv_169 != 0;
    out_Index_1 := out_WindowRelativeHint - 2;
    out_ClustersFound := out_Desired;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    out_SelectNextContigWindow := 1;
    out_WindowRelativeHint := 2;
    goto L389;

  L389:
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} out_WindowRelativeHint == 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} out_ClustersFound == 0;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    havoc out_Tmp_564;
    assume {:nonnull} out_Tmp_564 != 0;
    assume out_Tmp_564 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    call {:si_unique_call 4731} out_Index_1 := corral_nondet();
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} -1 != out_Index_1;
    out_ClustersFound := out_ClustersRemaining;
    goto L411;

  L411:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} out_ClustersFound != 0;
    goto L421;

  L421:
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} out_ClustersFound >= out_ClustersRemaining;
    out_ClustersFound := out_ClustersRemaining;
    goto L266;

  anon162_Then:
    assume {:partition} out_ClustersRemaining > out_ClustersFound;
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} in_Vcb_25 != 0;
    assume in_Vcb_25 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    out_SelectNextContigWindow := 1;
    out_WindowRelativeHint := 2;
    goto L266;

  anon164_Then:
    goto L266;

  anon163_Then:
    goto L266;

  anon160_Then:
    assume {:partition} out_ClustersFound == 0;
    call {:si_unique_call 4730} out_ClustersFound := corral_nondet();
    goto L421;

  anon161_Then:
    assume {:partition} -1 == out_Index_1;
    goto L411;

  anon187_Then:
    goto L411;

  anon159_Then:
    assume {:partition} out_ClustersFound != 0;
    goto L266;

  anon156_Then:
    assume {:partition} out_WindowRelativeHint != 0;
    goto L266;

  anon186_Then:
    out_WindowRelativeHint := 0;
    goto L389;

  anon157_Then:
    assume {:partition} out_sdv_169 == 0;
    goto anon158_Then;

  anon158_Then:
    assume {:partition} in_ExactMatchRequired == 0;
    out_WindowRelativeHint := 0;
    goto L389;

  anon185_Then:
    assume {:partition} out_ClustersRemaining >= out_Desired;
    goto L393;

  anon148_Then:
    assume {:partition} out_WindowRelativeHint == 0;
    goto L389;

  anon147_Then:
    assume {:partition} out_LockedBitMap == 0;
    call {:si_unique_call 4728} ExAcquireFastMutexUnsafe(0);
    out_LockedBitMap := 1;
    goto L263;
}



procedure {:LoopProcedure} FatAllocateDiskSpace_loop_L258(in_SelectNextContigWindow: int, in_sdv_156: int, in_Window: int, in_Tmp_544: int, in_Tmp_545: int, in_Desired: int, in_ClustersRemaining: int, in_NextWindow: int, in_LockedBitMap: int, in_s_p_e_c_i_a_l_2: int, in_Tmp_553: int, in_Cluster_1: int, in_Tmp_555: int, in_Tmp_556: int, in_Wait_1: int, in_FaveWindow: int, in_Tmp_559: int, in_ClustersFound: int, in_BytesFound: int, in_Tmp_562: int, in_Tmp_564: int, in_SelectedWindow: int, in_sdv_169: int, in_WindowRelativeHint: int, in_Tmp_569: int, in_Tmp_571: int, in_Tmp_573: int, in_PriorLastCluster: int, in_CurrentVbo_1: int, in_Index_1: int, in_IrpContext_32: int, in_Vcb_25: int, in_ExactMatchRequired: int, in_Mcb_2: int, in_vslice_dummy_var_83: int) returns (out_SelectNextContigWindow: int, out_sdv_156: int, out_Window: int, out_Tmp_544: int, out_Tmp_545: int, out_Desired: int, out_ClustersRemaining: int, out_NextWindow: int, out_LockedBitMap: int, out_s_p_e_c_i_a_l_2: int, out_Tmp_553: int, out_Cluster_1: int, out_Tmp_555: int, out_Tmp_556: int, out_Wait_1: int, out_FaveWindow: int, out_Tmp_559: int, out_ClustersFound: int, out_BytesFound: int, out_Tmp_562: int, out_Tmp_564: int, out_SelectedWindow: int, out_sdv_169: int, out_WindowRelativeHint: int, out_Tmp_569: int, out_Tmp_571: int, out_Tmp_573: int, out_PriorLastCluster: int, out_CurrentVbo_1: int, out_Index_1: int, out_vslice_dummy_var_83: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_SelectNextContigWindow == 0 || out_SelectNextContigWindow == 1 || out_SelectNextContigWindow == in_SelectNextContigWindow;
  free ensures {:va_keep} out_LockedBitMap == 1 || out_LockedBitMap == 0 || out_LockedBitMap == in_LockedBitMap;
  free ensures {:va_keep} out_Wait_1 == 0 || out_Wait_1 == 1 || out_Wait_1 == in_Wait_1;
  free ensures {:va_keep} out_Tmp_559 == in_Tmp_559 || out_Tmp_559 == FreeClusterBitMap__VCB(in_Vcb_25);
  free ensures {:va_keep} out_SelectedWindow == 1 || out_SelectedWindow == 0 || out_SelectedWindow == in_SelectedWindow;
  free ensures {:va_keep} out_WindowRelativeHint == 2 || out_WindowRelativeHint == 0 || out_WindowRelativeHint == in_WindowRelativeHint;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDeallocateDiskSpace_loop_L107(in_count: int, in_Window_1: int, in_Tmp_582: int, in_MyLength: int, in_MyStart: int) returns (out_count: int, out_Tmp_582: int, out_MyLength: int, out_MyStart: int)
{

  entry:
    out_count, out_Tmp_582, out_MyLength, out_MyStart := in_count, in_Tmp_582, in_MyLength, in_MyStart;
    goto L107, exit;

  exit:
    return;

  L107:
    goto anon48_Else;

  anon48_Else:
    assume {:partition} out_MyLength > 0;
    assume {:nonnull} in_Window_1 != 0;
    assume in_Window_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} in_Window_1 != 0;
    assume in_Window_1 > 0;
    havoc out_Tmp_582;
    goto L112;

  L112:
    out_count := out_Tmp_582;
    assume {:nonnull} in_Window_1 != 0;
    assume in_Window_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} out_MyLength != out_count;
    assume {:nonnull} in_Window_1 != 0;
    assume in_Window_1 > 0;
    havoc out_MyStart;
    goto L115;

  L115:
    out_MyLength := out_MyLength - out_count;
    goto L115_dummy;

  L115_dummy:
    call {:si_unique_call 4741} {:si_old_unique_call 1} out_count, out_Tmp_582, out_MyLength, out_MyStart := FatDeallocateDiskSpace_loop_L107(out_count, in_Window_1, out_Tmp_582, out_MyLength, out_MyStart);
    return;

  anon61_Then:
    assume {:partition} out_MyLength == out_count;
    goto L115;

  anon49_Then:
    out_Tmp_582 := out_MyLength;
    goto L112;
}



procedure {:LoopProcedure} FatDeallocateDiskSpace_loop_L107(in_count: int, in_Window_1: int, in_Tmp_582: int, in_MyLength: int, in_MyStart: int) returns (out_count: int, out_Tmp_582: int, out_MyLength: int, out_MyStart: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDeallocateDiskSpace_loop_L154(in_McbIndex: int, in_LocalLbo: int, in_Clusters: int, in_FatIndex_3: int, in_PriorLastIndex: int, in_Index_2: int, in_LocalVbo: int, in_ByteCount_5: int, in_IrpContext_33: int, in_Vcb_26: int, in_Mcb_3: int, in_vslice_dummy_var_88: int) returns (out_Clusters: int, out_FatIndex_3: int, out_PriorLastIndex: int, out_Index_2: int, out_vslice_dummy_var_88: int)
{

  entry:
    out_Clusters, out_FatIndex_3, out_PriorLastIndex, out_Index_2, out_vslice_dummy_var_88 := in_Clusters, in_FatIndex_3, in_PriorLastIndex, in_Index_2, in_vslice_dummy_var_88;
    goto L154, exit;

  exit:
    return;

  L154:
    goto anon56_Else;

  anon56_Else:
    assume {:partition} in_McbIndex >= out_Index_2;
    call {:si_unique_call 4743} out_vslice_dummy_var_88 := FatGetNextMcbEntry(in_Vcb_26, in_Mcb_3, out_Index_2, in_LocalVbo, in_LocalLbo, in_ByteCount_5);
    call {:si_unique_call 4744} out_FatIndex_3 := corral_nondet();
    call {:si_unique_call 4745} out_Clusters := corral_nondet();
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} out_PriorLastIndex != 0;
    call {:si_unique_call 4742} FatSetFatEntry#1(in_IrpContext_33, in_Vcb_26, out_PriorLastIndex, out_FatIndex_3);
    goto L161;

  L161:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} in_McbIndex > out_Index_2;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} out_Clusters == 1;
    call {:si_unique_call 4746} FatSetFatEntry#1(in_IrpContext_33, in_Vcb_26, out_FatIndex_3, 268435455);
    goto L173;

  L173:
    out_PriorLastIndex := out_FatIndex_3 + out_Clusters - 1;
    goto L165;

  L165:
    out_Index_2 := out_Index_2 + 1;
    goto L165_dummy;

  L165_dummy:
    call {:si_unique_call 4748} {:si_old_unique_call 1} out_Clusters, out_FatIndex_3, out_PriorLastIndex, out_Index_2, out_vslice_dummy_var_88 := FatDeallocateDiskSpace_loop_L154(in_McbIndex, in_LocalLbo, out_Clusters, out_FatIndex_3, out_PriorLastIndex, out_Index_2, in_LocalVbo, in_ByteCount_5, in_IrpContext_33, in_Vcb_26, in_Mcb_3, out_vslice_dummy_var_88);
    return;

  anon58_Then:
    assume {:partition} out_Clusters != 1;
    call {:si_unique_call 4747} FatSetFatRun(in_IrpContext_33, in_Vcb_26, out_FatIndex_3, out_Clusters, 1);
    goto L173;

  anon57_Then:
    assume {:partition} out_Index_2 >= in_McbIndex;
    goto L165;

  anon63_Then:
    assume {:partition} out_PriorLastIndex == 0;
    goto L161;
}



procedure {:LoopProcedure} FatDeallocateDiskSpace_loop_L154(in_McbIndex: int, in_LocalLbo: int, in_Clusters: int, in_FatIndex_3: int, in_PriorLastIndex: int, in_Index_2: int, in_LocalVbo: int, in_ByteCount_5: int, in_IrpContext_33: int, in_Vcb_26: int, in_Mcb_3: int, in_vslice_dummy_var_88: int) returns (out_Clusters: int, out_FatIndex_3: int, out_PriorLastIndex: int, out_Index_2: int, out_vslice_dummy_var_88: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDeallocateDiskSpace_loop_L85(in_count: int, in_McbIndex: int, in_Lbo_6: int, in_Vbo_1: int, in_Tmp_579: int, in_Window_1: int, in_RunsInMcb: int, in_ClusterEnd: int, in_Tmp_580: int, in_Tmp_582: int, in_Tmp_583: int, in_MyLength: int, in_MyStart: int, in_ClusterIndex: int, in_ClusterCount_2: int, in_ByteCount_5: int, in_Vcb_26: int, in_Mcb_3: int, in_vslice_dummy_var_87: int) returns (out_count: int, out_McbIndex: int, out_Tmp_579: int, out_Window_1: int, out_ClusterEnd: int, out_Tmp_580: int, out_Tmp_582: int, out_Tmp_583: int, out_MyLength: int, out_MyStart: int, out_ClusterIndex: int, out_ClusterCount_2: int, out_vslice_dummy_var_87: int)
{

  entry:
    out_count, out_McbIndex, out_Tmp_579, out_Window_1, out_ClusterEnd, out_Tmp_580, out_Tmp_582, out_Tmp_583, out_MyLength, out_MyStart, out_ClusterIndex, out_ClusterCount_2, out_vslice_dummy_var_87 := in_count, in_McbIndex, in_Tmp_579, in_Window_1, in_ClusterEnd, in_Tmp_580, in_Tmp_582, in_Tmp_583, in_MyLength, in_MyStart, in_ClusterIndex, in_ClusterCount_2, in_vslice_dummy_var_87;
    goto L85, exit;

  exit:
    return;

  L85:
    goto anon45_Else;

  anon45_Else:
    assume {:partition} in_RunsInMcb > out_McbIndex;
    call {:si_unique_call 4749} out_vslice_dummy_var_87 := FatGetNextMcbEntry(in_Vcb_26, in_Mcb_3, out_McbIndex, in_Vbo_1, in_Lbo_6, in_ByteCount_5);
    call {:si_unique_call 4750} out_ClusterCount_2 := corral_nondet();
    call {:si_unique_call 4751} out_ClusterIndex := corral_nondet();
    assume {:nonnull} in_Vcb_26 != 0;
    assume in_Vcb_26 > 0;
    havoc out_Window_1;
    out_ClusterEnd := out_ClusterIndex + out_ClusterCount_2 - 1;
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L102;

  L102:
    assume {:nonnull} in_Vcb_26 != 0;
    assume in_Vcb_26 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    out_Tmp_580 := INTDIV(out_ClusterIndex - 2, 65536);
    assume {:nonnull} in_Vcb_26 != 0;
    assume in_Vcb_26 > 0;
    havoc out_Tmp_583;
    out_Window_1 := out_Tmp_583 + out_Tmp_580 * 12;
    goto L105;

  L105:
    out_MyStart := out_ClusterIndex;
    out_MyLength := out_ClusterCount_2;
    goto L107;

  L107:
    call {:si_unique_call 4752} out_count, out_Tmp_582, out_MyLength, out_MyStart := FatDeallocateDiskSpace_loop_L107(out_count, out_Window_1, out_Tmp_582, out_MyLength, out_MyStart);
    goto L107_last;

  L107_last:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} out_MyLength > 0;
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    havoc out_Tmp_582;
    goto L112;

  L112:
    out_count := out_Tmp_582;
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} out_MyLength != out_count;
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    havoc out_MyStart;
    goto L115;

  L115:
    out_MyLength := out_MyLength - out_count;
    assume false;
    return;

  anon61_Then:
    assume {:partition} out_MyLength == out_count;
    goto L115;

  anon49_Then:
    out_Tmp_582 := out_MyLength;
    goto L112;

  anon48_Then:
    assume {:partition} 0 >= out_MyLength;
    assume {:nonnull} in_Vcb_26 != 0;
    assume in_Vcb_26 > 0;
    goto L118;

  L118:
    out_McbIndex := out_McbIndex + 1;
    goto L118_dummy;

  L118_dummy:
    call {:si_unique_call 4753} {:si_old_unique_call 1} out_count, out_McbIndex, out_Tmp_579, out_Window_1, out_ClusterEnd, out_Tmp_580, out_Tmp_582, out_Tmp_583, out_MyLength, out_MyStart, out_ClusterIndex, out_ClusterCount_2, out_vslice_dummy_var_87 := FatDeallocateDiskSpace_loop_L85(out_count, out_McbIndex, in_Lbo_6, in_Vbo_1, out_Tmp_579, out_Window_1, in_RunsInMcb, out_ClusterEnd, out_Tmp_580, out_Tmp_582, out_Tmp_583, out_MyLength, out_MyStart, out_ClusterIndex, out_ClusterCount_2, in_ByteCount_5, in_Vcb_26, in_Mcb_3, out_vslice_dummy_var_87);
    return;

  anon47_Then:
    assume {:nonnull} in_Vcb_26 != 0;
    assume in_Vcb_26 > 0;
    havoc out_Tmp_579;
    out_Window_1 := out_Tmp_579;
    goto L105;

  anon60_Then:
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    havoc out_MyStart;
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    havoc out_MyLength;
    goto L124;

  L124:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} out_MyLength != 0;
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    assume {:nonnull} in_Vcb_26 != 0;
    assume in_Vcb_26 > 0;
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} in_Vcb_26 != 0;
    assume in_Vcb_26 > 0;
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    goto L102;

  anon54_Then:
    goto L102;

  anon53_Then:
    assume {:partition} out_MyLength == 0;
    goto L118;

  anon52_Then:
    goto L120;

  L120:
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    havoc out_MyStart;
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    havoc out_MyLength;
    goto L124;

  anon51_Then:
    out_MyStart := out_ClusterIndex;
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    out_MyLength := out_ClusterCount_2;
    goto L124;

  anon62_Then:
    assume {:nonnull} out_Window_1 != 0;
    assume out_Window_1 > 0;
    havoc out_MyLength;
    goto L124;

  anon50_Then:
    goto L120;

  anon46_Then:
    goto L102;
}



procedure {:LoopProcedure} FatDeallocateDiskSpace_loop_L85(in_count: int, in_McbIndex: int, in_Lbo_6: int, in_Vbo_1: int, in_Tmp_579: int, in_Window_1: int, in_RunsInMcb: int, in_ClusterEnd: int, in_Tmp_580: int, in_Tmp_582: int, in_Tmp_583: int, in_MyLength: int, in_MyStart: int, in_ClusterIndex: int, in_ClusterCount_2: int, in_ByteCount_5: int, in_Vcb_26: int, in_Mcb_3: int, in_vslice_dummy_var_87: int) returns (out_count: int, out_McbIndex: int, out_Tmp_579: int, out_Window_1: int, out_ClusterEnd: int, out_Tmp_580: int, out_Tmp_582: int, out_Tmp_583: int, out_MyLength: int, out_MyStart: int, out_ClusterIndex: int, out_ClusterCount_2: int, out_vslice_dummy_var_87: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDeallocateDiskSpace_loop_L67(in_McbIndex: int, in_Lbo_6: int, in_Vbo_1: int, in_RunsInMcb: int, in_ClusterIndex: int, in_ClusterCount_2: int, in_ByteCount_5: int, in_IrpContext_33: int, in_Vcb_26: int, in_Mcb_3: int, in_vslice_dummy_var_86: int) returns (out_McbIndex: int, out_ClusterIndex: int, out_ClusterCount_2: int, out_vslice_dummy_var_86: int)
{

  entry:
    out_McbIndex, out_ClusterIndex, out_ClusterCount_2, out_vslice_dummy_var_86 := in_McbIndex, in_ClusterIndex, in_ClusterCount_2, in_vslice_dummy_var_86;
    goto L67, exit;

  exit:
    return;

  L67:
    goto anon44_Else;

  anon44_Else:
    assume {:partition} in_RunsInMcb > out_McbIndex;
    call {:si_unique_call 4756} out_vslice_dummy_var_86 := FatGetNextMcbEntry(in_Vcb_26, in_Mcb_3, out_McbIndex, in_Vbo_1, in_Lbo_6, in_ByteCount_5);
    call {:si_unique_call 4757} out_ClusterCount_2 := corral_nondet();
    call {:si_unique_call 4758} out_ClusterIndex := corral_nondet();
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} out_ClusterCount_2 == 1;
    call {:si_unique_call 4754} FatSetFatEntry#1(in_IrpContext_33, in_Vcb_26, out_ClusterIndex, 0);
    goto L83;

  L83:
    out_McbIndex := out_McbIndex + 1;
    goto L83_dummy;

  L83_dummy:
    call {:si_unique_call 4759} {:si_old_unique_call 1} out_McbIndex, out_ClusterIndex, out_ClusterCount_2, out_vslice_dummy_var_86 := FatDeallocateDiskSpace_loop_L67(out_McbIndex, in_Lbo_6, in_Vbo_1, in_RunsInMcb, out_ClusterIndex, out_ClusterCount_2, in_ByteCount_5, in_IrpContext_33, in_Vcb_26, in_Mcb_3, out_vslice_dummy_var_86);
    return;

  anon59_Then:
    assume {:partition} out_ClusterCount_2 != 1;
    call {:si_unique_call 4755} FatSetFatRun(in_IrpContext_33, in_Vcb_26, out_ClusterIndex, out_ClusterCount_2, 0);
    goto L83;
}



procedure {:LoopProcedure} FatDeallocateDiskSpace_loop_L67(in_McbIndex: int, in_Lbo_6: int, in_Vbo_1: int, in_RunsInMcb: int, in_ClusterIndex: int, in_ClusterCount_2: int, in_ByteCount_5: int, in_IrpContext_33: int, in_Vcb_26: int, in_Mcb_3: int, in_vslice_dummy_var_86: int) returns (out_McbIndex: int, out_ClusterIndex: int, out_ClusterCount_2: int, out_vslice_dummy_var_86: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonCreate_loop_L596(in_sdv_209: int, in_FirstLoop: int, in_LfnByteOffset_1: int, in_Tmp_640: int, in_OemFinalName: int, in_Lfn_4: int, in_Dirent_7: int, in_Status_4: int, in_Tmp_655: int, in_Vcb_28: int, in_RemainingPart: int, in_DirentByteOffset_1: int, in_ParentDcb_3: int, in_UpcasedFinalName: int, in_FileNameOpenedDos_1: int, in_FinalDcb: int, in_NextRemainingPart: int, in_DirentBcb_1: int, in_sdv_258: int, in_LocalCcb: int, in_FinalName_1: int, in_IrpContext_39: int) returns (out_sdv_209: int, out_FirstLoop: int, out_LfnByteOffset_1: int, out_Tmp_640: int, out_Status_4: int, out_ParentDcb_3: int, out_FinalDcb: int, out_sdv_258: int)
{
  var vslice_dummy_var_1741: int;
  var vslice_dummy_var_1742: int;
  var vslice_dummy_var_1743: int;

  entry:
    out_sdv_209, out_FirstLoop, out_LfnByteOffset_1, out_Tmp_640, out_Status_4, out_ParentDcb_3, out_FinalDcb, out_sdv_258 := in_sdv_209, in_FirstLoop, in_LfnByteOffset_1, in_Tmp_640, in_Status_4, in_ParentDcb_3, in_FinalDcb, in_sdv_258;
    goto L596, exit;

  exit:
    return;

  L596:
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:partition} out_FirstLoop != 0;
    out_FirstLoop := 0;
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    assume {:nonnull} in_OemFinalName != 0;
    assume in_OemFinalName > 0;
    goto anon464_Then, anon464_Else;

  anon464_Else:
    out_Tmp_640 := 0;
    goto L605;

  L605:
    out_Status_4 := out_Tmp_640;
    goto L606;

  L606:
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:partition} out_Status_4 >= 0;
    assume {:nonnull} in_OemFinalName != 0;
    assume in_OemFinalName > 0;
    assume {:nonnull} in_Tmp_655 != 0;
    assume in_Tmp_655 > 0;
    assume {:nonnull} in_OemFinalName != 0;
    assume in_OemFinalName > 0;
    assume {:nonnull} in_Tmp_655 != 0;
    assume in_Tmp_655 > 0;
    assume {:nonnull} in_OemFinalName != 0;
    assume in_OemFinalName > 0;
    assume {:nonnull} in_Tmp_655 != 0;
    assume in_Tmp_655 > 0;
    call {:si_unique_call 4769} out_sdv_258 := corral_nondet();
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:partition} out_sdv_258 != 0;
    assume {:nonnull} in_LocalCcb != 0;
    assume in_LocalCcb > 0;
    call {:si_unique_call 4765} FatStringTo8dot3(in_IrpContext_39, in_OemFinalName, Constant_unnamed_tag_72(OemQueryTemplate__CCB(in_LocalCcb)));
    assume {:nonnull} in_LocalCcb != 0;
    assume in_LocalCcb > 0;
    goto L618;

  L618:
    goto anon387_Then, anon387_Else;

  anon387_Else:
    call {:si_unique_call 4770} out_sdv_209 := FatIsNameLongUnicodeValid(in_IrpContext_39, in_FinalName_1, 0, 0, 0);
    goto anon389_Else;

  anon389_Else:
    assume {:partition} out_sdv_209 != 0;
    goto L625;

  L625:
    assume {:nonnull} in_FinalName_1 != 0;
    assume in_FinalName_1 > 0;
    havoc vslice_dummy_var_1742;
    call {:si_unique_call 4763} FatEnsureStringBufferEnough(in_UpcasedFinalName, vslice_dummy_var_1742);
    call {:si_unique_call 4764} out_Status_4 := RtlUpcaseUnicodeString(0, 0, 0);
    goto anon390_Else;

  anon390_Else:
    assume {:partition} out_Status_4 >= 0;
    assume {:nonnull} in_LocalCcb != 0;
    assume in_LocalCcb > 0;
    assume {:nonnull} in_UpcasedFinalName != 0;
    assume in_UpcasedFinalName > 0;
    assume {:nonnull} in_LocalCcb != 0;
    assume in_LocalCcb > 0;
    assume {:nonnull} in_UpcasedFinalName != 0;
    assume in_UpcasedFinalName > 0;
    assume {:nonnull} in_LocalCcb != 0;
    assume in_LocalCcb > 0;
    assume {:nonnull} in_UpcasedFinalName != 0;
    assume in_UpcasedFinalName > 0;
    assume {:nonnull} in_LocalCcb != 0;
    assume in_LocalCcb > 0;
    assume {:nonnull} in_Lfn_4 != 0;
    assume in_Lfn_4 > 0;
    call {:si_unique_call 4762} FatLocateDirent#1(in_IrpContext_39, out_ParentDcb_3, in_LocalCcb, 0, in_Dirent_7, in_DirentBcb_1, in_DirentByteOffset_1, in_FileNameOpenedDos_1, in_Lfn_4);
    out_FinalDcb := out_ParentDcb_3;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto anon465_Else;

  anon465_Else:
    assume {:nonnull} in_Dirent_7 != 0;
    assume in_Dirent_7 > 0;
    goto anon391_Else;

  anon391_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[in_Dirent_7] != 0;
    assume {:nonnull} in_Dirent_7 != 0;
    assume in_Dirent_7 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_7] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_7] > 0;
    goto anon392_Else;

  anon392_Else:
    assume {:nonnull} in_DirentByteOffset_1 != 0;
    assume in_DirentByteOffset_1 > 0;
    assume {:nonnull} in_Lfn_4 != 0;
    assume in_Lfn_4 > 0;
    havoc out_LfnByteOffset_1;
    assume {:nonnull} in_DirentByteOffset_1 != 0;
    assume in_DirentByteOffset_1 > 0;
    assume {:nonnull} in_Dirent_7 != 0;
    assume in_Dirent_7 > 0;
    havoc vslice_dummy_var_1741;
    call {:si_unique_call 4760} out_ParentDcb_3 := FatCreateDcb(in_IrpContext_39, in_Vcb_28, out_ParentDcb_3, out_LfnByteOffset_1, vslice_dummy_var_1741, Mem_T.P_PACKED_DIRENT[in_Dirent_7], in_Lfn_4);
    out_FinalDcb := out_ParentDcb_3;
    call {:si_unique_call 4761} FatSetFullNameInFcb(in_IrpContext_39, out_ParentDcb_3, in_FinalName_1);
    goto anon392_Else_dummy;

  anon392_Else_dummy:
    call {:si_unique_call 4771} {:si_old_unique_call 1} out_sdv_209, out_FirstLoop, out_LfnByteOffset_1, out_Tmp_640, out_Status_4, out_ParentDcb_3, out_FinalDcb, out_sdv_258 := FatCommonCreate_loop_L596(out_sdv_209, out_FirstLoop, out_LfnByteOffset_1, out_Tmp_640, in_OemFinalName, in_Lfn_4, in_Dirent_7, out_Status_4, in_Tmp_655, in_Vcb_28, in_RemainingPart, in_DirentByteOffset_1, out_ParentDcb_3, in_UpcasedFinalName, in_FileNameOpenedDos_1, out_FinalDcb, in_NextRemainingPart, in_DirentBcb_1, out_sdv_258, in_LocalCcb, in_FinalName_1, in_IrpContext_39);
    return;

  anon387_Then:
    assume {:nonnull} in_LocalCcb != 0;
    assume in_LocalCcb > 0;
    goto anon388_Then;

  anon388_Then:
    goto L625;

  anon386_Then:
    assume {:partition} out_sdv_258 == 0;
    assume {:nonnull} in_LocalCcb != 0;
    assume in_LocalCcb > 0;
    goto L618;

  anon385_Then:
    assume {:partition} 0 > out_Status_4;
    assume {:nonnull} in_LocalCcb != 0;
    assume in_LocalCcb > 0;
    goto anon467_Then;

  anon467_Then:
    assume {:partition} out_Status_4 == -1073741470;
    goto L618;

  anon464_Then:
    out_Tmp_640 := -1073741470;
    goto L605;

  anon384_Then:
    assume {:partition} out_FirstLoop == 0;
    call {:si_unique_call 4768} FsRtlDissectName(in_RemainingPart, 0, 0);
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto anon395_Then;

  anon395_Then:
    goto L668;

  L668:
    assume {:nonnull} in_FinalName_1 != 0;
    assume in_FinalName_1 > 0;
    goto anon394_Else;

  anon394_Else:
    assume {:nonnull} in_FinalName_1 != 0;
    assume in_FinalName_1 > 0;
    havoc vslice_dummy_var_1743;
    call {:si_unique_call 4766} FatEnsureStringBufferEnough(in_OemFinalName, vslice_dummy_var_1743);
    call {:si_unique_call 4767} out_Status_4 := RtlUpcaseUnicodeStringToCountedOemString(0, 0, 0);
    goto L606;

  anon393_Then:
    goto L668;
}



procedure {:LoopProcedure} FatCommonCreate_loop_L596(in_sdv_209: int, in_FirstLoop: int, in_LfnByteOffset_1: int, in_Tmp_640: int, in_OemFinalName: int, in_Lfn_4: int, in_Dirent_7: int, in_Status_4: int, in_Tmp_655: int, in_Vcb_28: int, in_RemainingPart: int, in_DirentByteOffset_1: int, in_ParentDcb_3: int, in_UpcasedFinalName: int, in_FileNameOpenedDos_1: int, in_FinalDcb: int, in_NextRemainingPart: int, in_DirentBcb_1: int, in_sdv_258: int, in_LocalCcb: int, in_FinalName_1: int, in_IrpContext_39: int) returns (out_sdv_209: int, out_FirstLoop: int, out_LfnByteOffset_1: int, out_Tmp_640: int, out_Status_4: int, out_ParentDcb_3: int, out_FinalDcb: int, out_sdv_258: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} out_sdv_209 == 0 || out_sdv_209 == 1 || out_sdv_209 == in_sdv_209;
  free ensures {:va_keep} out_FirstLoop == 0 || out_FirstLoop == in_FirstLoop;
  free ensures {:va_keep} out_Tmp_640 == 0 || out_Tmp_640 == -1073741470 || out_Tmp_640 == in_Tmp_640;
  free ensures {:va_keep} out_Status_4 == -1073741675 || out_Status_4 == 0 || out_Status_4 == in_Status_4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonCreate_loop_L491(in_OemFinalName: int, in_Status_4: int, in_Tmp_658: int, in_RemainingPart: int, in_UpcasedFinalName: int, in_NextFcb_1: int, in_FileNameOpenedDos_1: int, in_Fcb_11: int, in_NextRemainingPart: int, in_FinalName_1: int, in_IrpContext_39: int) returns (out_Status_4: int, out_Tmp_658: int, out_NextFcb_1: int)
{
  var vslice_dummy_var_1744: int;
  var vslice_dummy_var_1745: int;
  var vslice_dummy_var_1746: int;
  var vslice_dummy_var_1747: int;

  entry:
    out_Status_4, out_Tmp_658, out_NextFcb_1 := in_Status_4, in_Tmp_658, in_NextFcb_1;
    goto L491, exit;

  exit:
    return;

  L491:
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto anon361_Else;

  anon361_Else:
    call {:si_unique_call 4779} FsRtlDissectName(in_RemainingPart, 0, 0);
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    goto anon365_Then;

  anon365_Then:
    goto L498;

  L498:
    assume {:nonnull} in_FinalName_1 != 0;
    assume in_FinalName_1 > 0;
    goto anon364_Else;

  anon364_Else:
    assume {:nonnull} in_FinalName_1 != 0;
    assume in_FinalName_1 > 0;
    havoc vslice_dummy_var_1747;
    call {:si_unique_call 4777} FatEnsureStringBufferEnough(in_OemFinalName, vslice_dummy_var_1747);
    call {:si_unique_call 4778} out_Status_4 := RtlUpcaseUnicodeStringToCountedOemString(0, 0, 0);
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} out_Status_4 >= 0;
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    havoc vslice_dummy_var_1746;
    call {:si_unique_call 4776} out_NextFcb_1 := FatFindFcb(in_IrpContext_39, vslice_dummy_var_1746, in_OemFinalName, in_FileNameOpenedDos_1);
    goto L515;

  L515:
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:partition} out_NextFcb_1 != 0;
    goto L517;

  L517:
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} out_NextFcb_1 != 0;
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto L518;

  L518:
    goto anon370_Else;

  anon370_Else:
    assume {:partition} out_NextFcb_1 != 0;
    out_Tmp_658 := out_NextFcb_1;
    assume {:nonnull} out_Tmp_658 != 0;
    assume out_Tmp_658 > 0;
    goto anon459_Else;

  anon459_Else:
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    goto anon371_Then;

  anon371_Then:
    goto anon371_Then_dummy;

  anon371_Then_dummy:
    call {:si_unique_call 4780} {:si_old_unique_call 1} out_Status_4, out_Tmp_658, out_NextFcb_1 := FatCommonCreate_loop_L491(in_OemFinalName, out_Status_4, out_Tmp_658, in_RemainingPart, in_UpcasedFinalName, out_NextFcb_1, in_FileNameOpenedDos_1, in_Fcb_11, in_NextRemainingPart, in_FinalName_1, in_IrpContext_39);
    return;

  anon369_Then:
    assume {:partition} out_NextFcb_1 == 0;
    goto L518;

  anon367_Then:
    assume {:partition} out_NextFcb_1 == 0;
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} in_FinalName_1 != 0;
    assume in_FinalName_1 > 0;
    havoc vslice_dummy_var_1744;
    call {:si_unique_call 4772} FatEnsureStringBufferEnough(in_UpcasedFinalName, vslice_dummy_var_1744);
    call {:si_unique_call 4773} out_Status_4 := RtlDowncaseUnicodeString(0, 0, 0);
    call {:si_unique_call 4774} out_Status_4 := RtlUpcaseUnicodeString(0, 0, 0);
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    havoc vslice_dummy_var_1745;
    call {:si_unique_call 4775} out_NextFcb_1 := FatFindFcb(in_IrpContext_39, vslice_dummy_var_1745, in_UpcasedFinalName, in_FileNameOpenedDos_1);
    goto L517;

  anon368_Then:
    goto L517;

  anon366_Then:
    assume {:partition} 0 > out_Status_4;
    out_NextFcb_1 := 0;
    assume {:nonnull} in_OemFinalName != 0;
    assume in_OemFinalName > 0;
    goto anon471_Then;

  anon471_Then:
    assume {:partition} out_Status_4 == -1073741470;
    goto L515;

  anon363_Then:
    goto L498;
}



procedure {:LoopProcedure} FatCommonCreate_loop_L491(in_OemFinalName: int, in_Status_4: int, in_Tmp_658: int, in_RemainingPart: int, in_UpcasedFinalName: int, in_NextFcb_1: int, in_FileNameOpenedDos_1: int, in_Fcb_11: int, in_NextRemainingPart: int, in_FinalName_1: int, in_IrpContext_39: int) returns (out_Status_4: int, out_Tmp_658: int, out_NextFcb_1: int);
  modifies alloc;
  free ensures {:va_keep} out_Status_4 == -1073741675 || out_Status_4 == 0 || out_Status_4 == in_Status_4;
  free ensures {:va_keep} out_Tmp_658 == 0 || out_Tmp_658 == in_Tmp_658;
  free ensures {:va_keep} out_NextFcb_1 == 0 || out_NextFcb_1 == in_NextFcb_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonCreate_loop_L489(in_FirstLoop: int, in_sdv_214: int, in_OemFinalName: int, in_Status_4: int, in_IsPagingFile_2: int, in_Tmp_658: int, in_Vcb_28: int, in_RemainingPart: int, in_ParentDcb_3: int, in_UpcasedFinalName: int, in_NextFcb_1: int, in_FileNameOpenedDos_1: int, in_Fcb_11: int, in_sdv_244: int, in_FileName: int, in_NextRemainingPart: int, in_Tmp_710: int, in_FinalName_1: int, in_IrpContext_39: int) returns (out_FirstLoop: int, out_sdv_214: int, out_Status_4: int, out_Tmp_658: int, out_NextFcb_1: int, out_sdv_244: int, out_Tmp_710: int)
{
  var vslice_dummy_var_1748: int;
  var vslice_dummy_var_1749: int;
  var vslice_dummy_var_1750: int;
  var vslice_dummy_var_1751: int;
  var vslice_dummy_var_1752: int;
  var vslice_dummy_var_1753: int;

  entry:
    out_FirstLoop, out_sdv_214, out_Status_4, out_Tmp_658, out_NextFcb_1, out_sdv_244, out_Tmp_710 := in_FirstLoop, in_sdv_214, in_Status_4, in_Tmp_658, in_NextFcb_1, in_sdv_244, in_Tmp_710;
    goto L489, exit;

  exit:
    return;

  L489:
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    assume {:nonnull} in_FileName != 0;
    assume in_FileName > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    assume {:nonnull} in_FileName != 0;
    assume in_FileName > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    assume {:nonnull} in_FileName != 0;
    assume in_FileName > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto L491;

  L491:
    call {:si_unique_call 4784} out_Status_4, out_Tmp_658, out_NextFcb_1 := FatCommonCreate_loop_L491(in_OemFinalName, out_Status_4, out_Tmp_658, in_RemainingPart, in_UpcasedFinalName, out_NextFcb_1, in_FileNameOpenedDos_1, in_Fcb_11, in_NextRemainingPart, in_FinalName_1, in_IrpContext_39);
    goto L491_last;

  L491_last:
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    call {:si_unique_call 4792} FsRtlDissectName(in_RemainingPart, 0, 0);
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    goto anon365_Then;

  anon365_Then:
    goto L498;

  L498:
    assume {:nonnull} in_FinalName_1 != 0;
    assume in_FinalName_1 > 0;
    goto anon364_Else;

  anon364_Else:
    assume {:nonnull} in_FinalName_1 != 0;
    assume in_FinalName_1 > 0;
    havoc vslice_dummy_var_1752;
    call {:si_unique_call 4790} FatEnsureStringBufferEnough(in_OemFinalName, vslice_dummy_var_1752);
    call {:si_unique_call 4791} out_Status_4 := RtlUpcaseUnicodeStringToCountedOemString(0, 0, 0);
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} out_Status_4 >= 0;
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    havoc vslice_dummy_var_1751;
    call {:si_unique_call 4789} out_NextFcb_1 := FatFindFcb(in_IrpContext_39, vslice_dummy_var_1751, in_OemFinalName, in_FileNameOpenedDos_1);
    goto L515;

  L515:
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:partition} out_NextFcb_1 != 0;
    goto L517;

  L517:
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} out_NextFcb_1 != 0;
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto L518;

  L518:
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:partition} out_NextFcb_1 != 0;
    out_Tmp_658 := out_NextFcb_1;
    assume {:nonnull} out_Tmp_658 != 0;
    assume out_Tmp_658 > 0;
    goto anon459_Then, anon459_Else;

  anon459_Else:
    assume {:nonnull} in_NextRemainingPart != 0;
    assume in_NextRemainingPart > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    goto L492;

  L492:
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    assume {:nonnull} in_RemainingPart != 0;
    assume in_RemainingPart > 0;
    goto L543;

  L543:
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    havoc vslice_dummy_var_1748;
    call {:si_unique_call 4783} FatVerifyFcb(in_IrpContext_39, vslice_dummy_var_1748);
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    goto anon374_Else;

  anon374_Else:
    assume {:partition} in_IsPagingFile_2 != 0;
    goto anon375_Else;

  anon375_Else:
    assume {:partition} out_FirstLoop != 0;
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    havoc out_Tmp_710;
    assume {:nonnull} out_Tmp_710 != 0;
    assume out_Tmp_710 > 0;
    goto anon460_Else;

  anon460_Else:
    call {:si_unique_call 4782} out_sdv_244 := sdv_IsListEmpty(0);
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:partition} out_sdv_244 != 0;
    call {:si_unique_call 4793} out_sdv_214 := sdv_IsListEmpty(0);
    goto anon377_Else;

  anon377_Else:
    assume {:partition} out_sdv_214 == 0;
    goto L569;

  L569:
    call {:si_unique_call 4781} FatFspClose#1(in_Vcb_28);
    out_FirstLoop := 0;
    goto L569_dummy;

  L569_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 4795} {:si_old_unique_call 1} out_FirstLoop, out_sdv_214, out_Status_4, out_Tmp_658, out_NextFcb_1, out_sdv_244, out_Tmp_710 := FatCommonCreate_loop_L489(out_FirstLoop, out_sdv_214, in_OemFinalName, out_Status_4, in_IsPagingFile_2, out_Tmp_658, in_Vcb_28, in_RemainingPart, in_ParentDcb_3, in_UpcasedFinalName, out_NextFcb_1, in_FileNameOpenedDos_1, in_Fcb_11, out_sdv_244, in_FileName, in_NextRemainingPart, out_Tmp_710, in_FinalName_1, in_IrpContext_39);
    return;

  anon376_Then:
    assume {:partition} out_sdv_244 == 0;
    goto L569;

  anon373_Then:
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    havoc vslice_dummy_var_1753;
    call {:si_unique_call 4794} FatRemoveNames(in_IrpContext_39, vslice_dummy_var_1753);
    goto anon373_Then_dummy;

  anon373_Then_dummy:
    goto L_BAF_1;

  anon372_Then:
    goto L543;

  anon362_Then:
    goto L543;

  anon371_Then:
    assume false;
    return;

  anon459_Then:
    goto L492;

  anon370_Then:
    assume {:partition} out_NextFcb_1 == 0;
    goto L492;

  anon369_Then:
    assume {:partition} out_NextFcb_1 == 0;
    goto L518;

  anon367_Then:
    assume {:partition} out_NextFcb_1 == 0;
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} in_FinalName_1 != 0;
    assume in_FinalName_1 > 0;
    havoc vslice_dummy_var_1749;
    call {:si_unique_call 4785} FatEnsureStringBufferEnough(in_UpcasedFinalName, vslice_dummy_var_1749);
    call {:si_unique_call 4786} out_Status_4 := RtlDowncaseUnicodeString(0, 0, 0);
    call {:si_unique_call 4787} out_Status_4 := RtlUpcaseUnicodeString(0, 0, 0);
    assume {:nonnull} in_Fcb_11 != 0;
    assume in_Fcb_11 > 0;
    havoc vslice_dummy_var_1750;
    call {:si_unique_call 4788} out_NextFcb_1 := FatFindFcb(in_IrpContext_39, vslice_dummy_var_1750, in_UpcasedFinalName, in_FileNameOpenedDos_1);
    goto L517;

  anon368_Then:
    goto L517;

  anon366_Then:
    assume {:partition} 0 > out_Status_4;
    out_NextFcb_1 := 0;
    assume {:nonnull} in_OemFinalName != 0;
    assume in_OemFinalName > 0;
    goto anon471_Then;

  anon471_Then:
    assume {:partition} out_Status_4 == -1073741470;
    goto L515;

  anon363_Then:
    goto L498;

  anon361_Then:
    goto L492;
}



procedure {:LoopProcedure} FatCommonCreate_loop_L489(in_FirstLoop: int, in_sdv_214: int, in_OemFinalName: int, in_Status_4: int, in_IsPagingFile_2: int, in_Tmp_658: int, in_Vcb_28: int, in_RemainingPart: int, in_ParentDcb_3: int, in_UpcasedFinalName: int, in_NextFcb_1: int, in_FileNameOpenedDos_1: int, in_Fcb_11: int, in_sdv_244: int, in_FileName: int, in_NextRemainingPart: int, in_Tmp_710: int, in_FinalName_1: int, in_IrpContext_39: int) returns (out_FirstLoop: int, out_sdv_214: int, out_Status_4: int, out_Tmp_658: int, out_NextFcb_1: int, out_sdv_244: int, out_Tmp_710: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} out_FirstLoop == 0 || out_FirstLoop == in_FirstLoop;
  free ensures {:va_keep} out_sdv_214 == 1 || out_sdv_214 == 0 || out_sdv_214 == in_sdv_214;
  free ensures {:va_keep} out_Status_4 == -1073741675 || out_Status_4 == 0 || out_Status_4 == in_Status_4;
  free ensures {:va_keep} out_Tmp_658 == 0 || out_Tmp_658 == in_Tmp_658;
  free ensures {:va_keep} out_NextFcb_1 == 0 || out_NextFcb_1 == in_NextFcb_1;
  free ensures {:va_keep} out_sdv_244 == 1 || out_sdv_244 == 0 || out_sdv_244 == in_sdv_244;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatOpenTargetDirectory_loop_L59(in_i_8: int, in_Tmp_720: int, in_Tmp_733: int, in_FileObject_5: int) returns (out_i_8: int, out_Tmp_720: int, out_Tmp_733: int)
{

  entry:
    out_i_8, out_Tmp_720, out_Tmp_733 := in_i_8, in_Tmp_720, in_Tmp_733;
    goto L59, exit;

  exit:
    return;

  L59:
    out_Tmp_720 := out_i_8;
    assume {:nonnull} in_FileObject_5 != 0;
    assume in_FileObject_5 > 0;
    havoc out_Tmp_733;
    assume {:nonnull} out_Tmp_733 != 0;
    assume out_Tmp_733 > 0;
    goto anon35_Then;

  anon35_Then:
    goto anon27_Else;

  anon27_Else:
    assume {:partition} out_i_8 != 0;
    out_i_8 := out_i_8 - 1;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    havoc out_i_8;
    return;
}



procedure {:LoopProcedure} FatOpenTargetDirectory_loop_L59(in_i_8: int, in_Tmp_720: int, in_Tmp_733: int, in_FileObject_5: int) returns (out_i_8: int, out_Tmp_720: int, out_Tmp_733: int);
  free ensures {:va_keep} out_Tmp_720 == in_i_8 || out_Tmp_720 == in_Tmp_720;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCreateNewFile_loop_L341(in_i_9: int, in_Tmp_741: int, in_Tmp_744: int, in_Tmp_745: int, in_Tmp_747: int, in_Tmp_750: int, in_DirentsInFirstPage: int, in_Dirent_8: int, in_SecondPageDirent: int, in_Tmp_756: int, in_DirentsNeeded: int, in_DirentFromPool: int, in_SecondPageBcb: int, in_FirstPageDirent: int) returns (out_i_9: int, out_Tmp_741: int, out_Tmp_744: int, out_Tmp_745: int, out_Tmp_747: int, out_Tmp_750: int, out_Tmp_756: int)
{

  entry:
    out_i_9, out_Tmp_741, out_Tmp_744, out_Tmp_745, out_Tmp_747, out_Tmp_750, out_Tmp_756 := in_i_9, in_Tmp_741, in_Tmp_744, in_Tmp_745, in_Tmp_747, in_Tmp_750, in_Tmp_756;
    goto L341, exit;

  exit:
    return;

  L341:
    goto anon105_Else;

  anon105_Else:
    assume {:partition} in_DirentsNeeded > out_i_9;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} in_DirentFromPool != 0;
    assume {:nonnull} in_SecondPageBcb != 0;
    assume in_SecondPageBcb > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    goto L346;

  L346:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} in_DirentsInFirstPage > out_i_9;
    out_Tmp_744 := out_i_9;
    assume {:nonnull} in_FirstPageDirent != 0;
    assume in_FirstPageDirent > 0;
    havoc out_Tmp_750;
    assume {:nonnull} out_Tmp_750 != 0;
    assume out_Tmp_750 > 0;
    goto L349;

  L349:
    out_i_9 := out_i_9 + 1;
    goto L349_dummy;

  L349_dummy:
    call {:si_unique_call 4796} {:si_old_unique_call 1} out_i_9, out_Tmp_741, out_Tmp_744, out_Tmp_745, out_Tmp_747, out_Tmp_750, out_Tmp_756 := FatCreateNewFile_loop_L341(out_i_9, out_Tmp_741, out_Tmp_744, out_Tmp_745, out_Tmp_747, out_Tmp_750, in_DirentsInFirstPage, in_Dirent_8, in_SecondPageDirent, out_Tmp_756, in_DirentsNeeded, in_DirentFromPool, in_SecondPageBcb, in_FirstPageDirent);
    return;

  anon109_Then:
    assume {:partition} out_i_9 >= in_DirentsInFirstPage;
    out_Tmp_745 := out_i_9 - in_DirentsInFirstPage;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_SecondPageDirent] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_SecondPageDirent] > 0;
    assume {:nonnull} in_SecondPageDirent != 0;
    assume in_SecondPageDirent > 0;
    havoc out_Tmp_756;
    assume {:nonnull} out_Tmp_756 != 0;
    assume out_Tmp_756 > 0;
    goto L349;

  anon107_Then:
    goto anon108_Else;

  anon108_Else:
    assume {:partition} out_i_9 != in_DirentsInFirstPage;
    goto L346;

  anon106_Then:
    assume {:partition} in_DirentFromPool == 0;
    out_Tmp_741 := out_i_9;
    assume {:nonnull} in_Dirent_8 != 0;
    assume in_Dirent_8 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_8] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_8] > 0;
    havoc out_Tmp_747;
    assume {:nonnull} out_Tmp_747 != 0;
    assume out_Tmp_747 > 0;
    goto L349;
}



procedure {:LoopProcedure} FatCreateNewFile_loop_L341(in_i_9: int, in_Tmp_741: int, in_Tmp_744: int, in_Tmp_745: int, in_Tmp_747: int, in_Tmp_750: int, in_DirentsInFirstPage: int, in_Dirent_8: int, in_SecondPageDirent: int, in_Tmp_756: int, in_DirentsNeeded: int, in_DirentFromPool: int, in_SecondPageBcb: int, in_FirstPageDirent: int) returns (out_i_9: int, out_Tmp_741: int, out_Tmp_744: int, out_Tmp_745: int, out_Tmp_747: int, out_Tmp_750: int, out_Tmp_756: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCreateNewDirectory_loop_L256(in_i_10: int, in_Tmp_798: int, in_DirentsInFirstPage_1: int, in_Tmp_799: int, in_Dirent_10: int, in_Tmp_801: int, in_SecondPageDirent_1: int, in_DirentsNeeded_1: int, in_SecondPageBcb_1: int, in_DirentFromPool_1: int, in_Tmp_805: int, in_FirstPageDirent_1: int, in_Tmp_808: int, in_Tmp_810: int) returns (out_i_10: int, out_Tmp_798: int, out_Tmp_799: int, out_Tmp_801: int, out_Tmp_805: int, out_Tmp_808: int, out_Tmp_810: int)
{

  entry:
    out_i_10, out_Tmp_798, out_Tmp_799, out_Tmp_801, out_Tmp_805, out_Tmp_808, out_Tmp_810 := in_i_10, in_Tmp_798, in_Tmp_799, in_Tmp_801, in_Tmp_805, in_Tmp_808, in_Tmp_810;
    goto L256, exit;

  exit:
    return;

  L256:
    goto anon81_Else;

  anon81_Else:
    assume {:partition} in_DirentsNeeded_1 > out_i_10;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} in_DirentFromPool_1 != 0;
    assume {:nonnull} in_SecondPageBcb_1 != 0;
    assume in_SecondPageBcb_1 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    goto L261;

  L261:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} in_DirentsInFirstPage_1 > out_i_10;
    out_Tmp_798 := out_i_10;
    assume {:nonnull} in_FirstPageDirent_1 != 0;
    assume in_FirstPageDirent_1 > 0;
    havoc out_Tmp_808;
    assume {:nonnull} out_Tmp_808 != 0;
    assume out_Tmp_808 > 0;
    goto L264;

  L264:
    out_i_10 := out_i_10 + 1;
    goto L264_dummy;

  L264_dummy:
    call {:si_unique_call 4797} {:si_old_unique_call 1} out_i_10, out_Tmp_798, out_Tmp_799, out_Tmp_801, out_Tmp_805, out_Tmp_808, out_Tmp_810 := FatCreateNewDirectory_loop_L256(out_i_10, out_Tmp_798, in_DirentsInFirstPage_1, out_Tmp_799, in_Dirent_10, out_Tmp_801, in_SecondPageDirent_1, in_DirentsNeeded_1, in_SecondPageBcb_1, in_DirentFromPool_1, out_Tmp_805, in_FirstPageDirent_1, out_Tmp_808, out_Tmp_810);
    return;

  anon85_Then:
    assume {:partition} out_i_10 >= in_DirentsInFirstPage_1;
    out_Tmp_799 := out_i_10 - in_DirentsInFirstPage_1;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_SecondPageDirent_1] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_SecondPageDirent_1] > 0;
    assume {:nonnull} in_SecondPageDirent_1 != 0;
    assume in_SecondPageDirent_1 > 0;
    havoc out_Tmp_805;
    assume {:nonnull} out_Tmp_805 != 0;
    assume out_Tmp_805 > 0;
    goto L264;

  anon83_Then:
    goto anon84_Else;

  anon84_Else:
    assume {:partition} out_i_10 != in_DirentsInFirstPage_1;
    goto L261;

  anon82_Then:
    assume {:partition} in_DirentFromPool_1 == 0;
    out_Tmp_801 := out_i_10;
    assume {:nonnull} in_Dirent_10 != 0;
    assume in_Dirent_10 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_10] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_10] > 0;
    havoc out_Tmp_810;
    assume {:nonnull} out_Tmp_810 != 0;
    assume out_Tmp_810 > 0;
    goto L264;
}



procedure {:LoopProcedure} FatCreateNewDirectory_loop_L256(in_i_10: int, in_Tmp_798: int, in_DirentsInFirstPage_1: int, in_Tmp_799: int, in_Dirent_10: int, in_Tmp_801: int, in_SecondPageDirent_1: int, in_DirentsNeeded_1: int, in_SecondPageBcb_1: int, in_DirentFromPool_1: int, in_Tmp_805: int, in_FirstPageDirent_1: int, in_Tmp_808: int, in_Tmp_810: int) returns (out_i_10: int, out_Tmp_798: int, out_Tmp_799: int, out_Tmp_801: int, out_Tmp_805: int, out_Tmp_808: int, out_Tmp_810: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetRenameInfo_loop_L488(in_TempFcb: int, in_IrpContext_49: int, in_Fcb_15: int) returns (out_TempFcb: int)
{

  entry:
    out_TempFcb := in_TempFcb;
    goto L488, exit;

  exit:
    return;

  L488:
    goto anon229_Else;

  anon229_Else:
    assume {:partition} out_TempFcb != in_Fcb_15;
    call {:si_unique_call 4798} FatRemoveNames(in_IrpContext_49, out_TempFcb);
    assume {:nonnull} out_TempFcb != 0;
    assume out_TempFcb > 0;
    call {:si_unique_call 4799} out_TempFcb := FatGetNextFcbBottomUp(in_IrpContext_49, out_TempFcb, in_Fcb_15);
    goto anon229_Else_dummy;

  anon229_Else_dummy:
    call {:si_unique_call 4800} {:si_old_unique_call 1} out_TempFcb := FatSetRenameInfo_loop_L488(out_TempFcb, in_IrpContext_49, in_Fcb_15);
    return;
}



procedure {:LoopProcedure} FatSetRenameInfo_loop_L488(in_TempFcb: int, in_IrpContext_49: int, in_Fcb_15: int) returns (out_TempFcb: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetRenameInfo_loop_L453(in_BatchOplockFcb: int, in_sdv_688: int, in_TempFcb: int, in_Tmp_1049: int, in_BatchOplockCount: int, in_IrpContext_49: int, in_Fcb_15: int) returns (out_BatchOplockFcb: int, out_sdv_688: int, out_TempFcb: int, out_Tmp_1049: int, out_BatchOplockCount: int)
{

  entry:
    out_BatchOplockFcb, out_sdv_688, out_TempFcb, out_Tmp_1049, out_BatchOplockCount := in_BatchOplockFcb, in_sdv_688, in_TempFcb, in_Tmp_1049, in_BatchOplockCount;
    goto L453, exit;

  exit:
    return;

  L453:
    goto anon222_Else;

  anon222_Else:
    assume {:partition} out_TempFcb != in_Fcb_15;
    assume {:nonnull} out_TempFcb != 0;
    assume out_TempFcb > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    out_Tmp_1049 := out_TempFcb;
    assume {:nonnull} out_Tmp_1049 != 0;
    assume out_Tmp_1049 > 0;
    goto anon275_Else;

  anon275_Else:
    assume {:nonnull} out_TempFcb != 0;
    assume out_TempFcb > 0;
    call {:si_unique_call 4802} out_sdv_688 := corral_nondet();
    goto anon225_Else;

  anon225_Else:
    assume {:partition} out_sdv_688 != 0;
    out_BatchOplockCount := out_BatchOplockCount + 1;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} out_BatchOplockFcb == 0;
    out_BatchOplockFcb := out_TempFcb;
    goto L456;

  L456:
    call {:si_unique_call 4801} out_TempFcb := FatGetNextFcbBottomUp(in_IrpContext_49, out_TempFcb, in_Fcb_15);
    goto L456_dummy;

  L456_dummy:
    call {:si_unique_call 4803} {:si_old_unique_call 1} out_BatchOplockFcb, out_sdv_688, out_TempFcb, out_Tmp_1049, out_BatchOplockCount := FatSetRenameInfo_loop_L453(out_BatchOplockFcb, out_sdv_688, out_TempFcb, out_Tmp_1049, out_BatchOplockCount, in_IrpContext_49, in_Fcb_15);
    return;

  anon276_Then:
    assume {:partition} out_BatchOplockFcb != 0;
    goto L456;

  anon224_Then:
    goto L456;
}



procedure {:LoopProcedure} FatSetRenameInfo_loop_L453(in_BatchOplockFcb: int, in_sdv_688: int, in_TempFcb: int, in_Tmp_1049: int, in_BatchOplockCount: int, in_IrpContext_49: int, in_Fcb_15: int) returns (out_BatchOplockFcb: int, out_sdv_688: int, out_TempFcb: int, out_Tmp_1049: int, out_BatchOplockCount: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetRenameInfo_loop_L438(in_BatchOplockFcb: int, in_Status_8: int, in_sdv_688: int, in_TempFcb: int, in_Tmp_1049: int, in_BatchOplockCount: int, in_IrpContext_49: int, in_Irp_4: int, in_Fcb_15: int, in_boogieTmp: int) returns (out_BatchOplockFcb: int, out_sdv_688: int, out_TempFcb: int, out_Tmp_1049: int, out_BatchOplockCount: int, out_boogieTmp: int)
{

  entry:
    out_BatchOplockFcb, out_sdv_688, out_TempFcb, out_Tmp_1049, out_BatchOplockCount, out_boogieTmp := in_BatchOplockFcb, in_sdv_688, in_TempFcb, in_Tmp_1049, in_BatchOplockCount, in_boogieTmp;
    goto L438, exit;

  exit:
    return;

  L438:
    out_BatchOplockFcb := 0;
    out_BatchOplockCount := 0;
    call {:si_unique_call 4804} out_TempFcb := FatGetNextFcbBottomUp(in_IrpContext_49, 0, in_Fcb_15);
    goto L453;

  L453:
    call {:si_unique_call 4806} out_BatchOplockFcb, out_sdv_688, out_TempFcb, out_Tmp_1049, out_BatchOplockCount := FatSetRenameInfo_loop_L453(out_BatchOplockFcb, out_sdv_688, out_TempFcb, out_Tmp_1049, out_BatchOplockCount, in_IrpContext_49, in_Fcb_15);
    goto L453_last;

  L453_last:
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} out_TempFcb != in_Fcb_15;
    assume {:nonnull} out_TempFcb != 0;
    assume out_TempFcb > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    out_Tmp_1049 := out_TempFcb;
    assume {:nonnull} out_Tmp_1049 != 0;
    assume out_Tmp_1049 > 0;
    goto anon275_Else;

  anon275_Else:
    assume {:nonnull} out_TempFcb != 0;
    assume out_TempFcb > 0;
    call {:si_unique_call 4808} out_sdv_688 := corral_nondet();
    goto anon225_Else;

  anon225_Else:
    assume {:partition} out_sdv_688 != 0;
    out_BatchOplockCount := out_BatchOplockCount + 1;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} out_BatchOplockFcb == 0;
    out_BatchOplockFcb := out_TempFcb;
    goto L456;

  L456:
    call {:si_unique_call 4807} out_TempFcb := FatGetNextFcbBottomUp(in_IrpContext_49, out_TempFcb, in_Fcb_15);
    assume false;
    return;

  anon276_Then:
    assume {:partition} out_BatchOplockFcb != 0;
    goto L456;

  anon224_Then:
    goto L456;

  anon222_Then:
    assume {:partition} out_TempFcb == in_Fcb_15;
    goto anon223_Else;

  anon223_Else:
    assume {:partition} out_BatchOplockFcb != 0;
    assume {:nonnull} in_Irp_4 != 0;
    assume in_Irp_4 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:nonnull} in_Irp_4 != 0;
    assume in_Irp_4 > 0;
    goto anon227_Then;

  anon227_Then:
    goto L472;

  L472:
    assume {:nonnull} in_Irp_4 != 0;
    assume in_Irp_4 > 0;
    assume {:nonnull} out_BatchOplockFcb != 0;
    assume out_BatchOplockFcb > 0;
    assume {:nonnull} in_Status_8 != 0;
    assume in_Status_8 > 0;
    call {:si_unique_call 4805} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_Status_8 != 0;
    assume in_Status_8 > 0;
    goto anon228_Then;

  anon228_Then:
    goto anon228_Then_dummy;

  anon228_Then_dummy:
    call {:si_unique_call 4809} {:si_old_unique_call 1} out_BatchOplockFcb, out_sdv_688, out_TempFcb, out_Tmp_1049, out_BatchOplockCount, out_boogieTmp := FatSetRenameInfo_loop_L438(out_BatchOplockFcb, in_Status_8, out_sdv_688, out_TempFcb, out_Tmp_1049, out_BatchOplockCount, in_IrpContext_49, in_Irp_4, in_Fcb_15, out_boogieTmp);
    return;

  anon226_Then:
    goto L472;
}



procedure {:LoopProcedure} FatSetRenameInfo_loop_L438(in_BatchOplockFcb: int, in_Status_8: int, in_sdv_688: int, in_TempFcb: int, in_Tmp_1049: int, in_BatchOplockCount: int, in_IrpContext_49: int, in_Irp_4: int, in_Fcb_15: int, in_boogieTmp: int) returns (out_BatchOplockFcb: int, out_sdv_688: int, out_TempFcb: int, out_Tmp_1049: int, out_BatchOplockCount: int, out_boogieTmp: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetRenameInfo_loop_L596(in_Links: int, in_sdv_675: int, in_TargetDirentOffset: int, in_TempFcb: int, in_sdv_696: int) returns (out_Links: int, out_sdv_675: int, out_TempFcb: int, out_sdv_696: int)
{

  entry:
    out_Links, out_sdv_675, out_TempFcb, out_sdv_696 := in_Links, in_sdv_675, in_TempFcb, in_sdv_696;
    goto L596, exit;

  exit:
    return;

  L596:
    goto anon253_Else;

  anon253_Else:
    call {:si_unique_call 4811} out_sdv_675 := sdv_containing_record(out_Links, 72);
    out_TempFcb := out_sdv_675;
    assume {:nonnull} out_Links != 0;
    assume out_Links > 0;
    havoc out_Links;
    assume {:nonnull} in_TargetDirentOffset != 0;
    assume in_TargetDirentOffset > 0;
    assume {:nonnull} out_TempFcb != 0;
    assume out_TempFcb > 0;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume {:nonnull} out_TempFcb != 0;
    assume out_TempFcb > 0;
    goto anon254_Then;

  anon254_Then:
    assume {:nonnull} out_TempFcb != 0;
    assume out_TempFcb > 0;
    call {:si_unique_call 4810} out_sdv_696 := corral_nondet();
    goto anon258_Then;

  anon258_Then:
    assume {:partition} out_sdv_696 != 0;
    goto anon258_Then_dummy;

  anon258_Then_dummy:
    goto L_BAF_2;

  L_BAF_2:
    havoc out_Links;
    return;

  anon277_Then:
    goto anon277_Then_dummy;

  anon277_Then_dummy:
    goto L_BAF_2;
}



procedure {:LoopProcedure} FatSetRenameInfo_loop_L596(in_Links: int, in_sdv_675: int, in_TargetDirentOffset: int, in_TempFcb: int, in_sdv_696: int) returns (out_Links: int, out_sdv_675: int, out_TempFcb: int, out_sdv_696: int);
  free ensures {:va_keep} out_Links == in_Links;
  free ensures {:va_keep} out_sdv_675 == in_sdv_675;
  free ensures {:va_keep} out_TempFcb == in_TempFcb;
  free ensures {:va_keep} out_sdv_696 == in_sdv_696;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDeleteFile_loop_L6(in_Links_1: int, in_Fcb_25: int, in_sdv_768: int, in_IrpContext_61: int, in_DirentOffset: int, in_vslice_dummy_var_144: int) returns (out_Links_1: int, out_Fcb_25: int, out_sdv_768: int, out_vslice_dummy_var_144: int)
{

  entry:
    out_Links_1, out_Fcb_25, out_sdv_768, out_vslice_dummy_var_144 := in_Links_1, in_Fcb_25, in_sdv_768, in_vslice_dummy_var_144;
    goto L6, exit;

  exit:
    return;

  L6:
    goto anon9_Else;

  anon9_Else:
    call {:si_unique_call 4816} out_sdv_768 := sdv_containing_record(out_Links_1, 72);
    out_Fcb_25 := out_sdv_768;
    assume {:nonnull} out_Fcb_25 != 0;
    assume out_Fcb_25 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} out_Fcb_25 != 0;
    assume out_Fcb_25 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} out_Fcb_25 != 0;
    assume out_Fcb_25 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 4812} FatRemoveNames(in_IrpContext_61, out_Fcb_25);
    assume {:nonnull} out_Fcb_25 != 0;
    assume out_Fcb_25 > 0;
    call {:si_unique_call 4813} out_vslice_dummy_var_144 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} out_Fcb_25 != 0;
    assume out_Fcb_25 > 0;
    assume {:nonnull} out_Fcb_25 != 0;
    assume out_Fcb_25 > 0;
    assume {:nonnull} out_Fcb_25 != 0;
    assume out_Fcb_25 > 0;
    assume {:nonnull} out_Fcb_25 != 0;
    assume out_Fcb_25 > 0;
    assume {:nonnull} out_Fcb_25 != 0;
    assume out_Fcb_25 > 0;
    call {:si_unique_call 4814} ExReleaseResourceLite(0);
    goto L15;

  L15:
    assume {:nonnull} out_Links_1 != 0;
    assume out_Links_1 > 0;
    havoc out_Links_1;
    goto L15_dummy;

  L15_dummy:
    havoc out_Links_1;
    return;

  anon11_Then:
    call {:si_unique_call 4815} KeBugCheckEx(35, 1053056, 0, 0, 0);
    goto L15;

  anon10_Then:
    goto L15;

  anon12_Then:
    goto L15;
}



procedure {:LoopProcedure} FatDeleteFile_loop_L6(in_Links_1: int, in_Fcb_25: int, in_sdv_768: int, in_IrpContext_61: int, in_DirentOffset: int, in_vslice_dummy_var_144: int) returns (out_Links_1: int, out_Fcb_25: int, out_sdv_768: int, out_vslice_dummy_var_144: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Links_1 == in_Links_1;
  free ensures {:va_keep} out_Fcb_25 == in_Fcb_25;
  free ensures {:va_keep} out_sdv_768 == in_sdv_768;
  free ensures {:va_keep} out_vslice_dummy_var_144 == in_vslice_dummy_var_144;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatGetCompatibilityModeValue_loop_L29(in_ResultLength_1: int, in_Status_19: int, in_Buffer_17: int, in_sdv_874: int, in_Tmp_1476: int, in_RequestLength: int, in_KeyValueInformation_1: int) returns (out_ResultLength_1: int, out_Status_19: int, out_sdv_874: int, out_Tmp_1476: int, out_RequestLength: int, out_KeyValueInformation_1: int)
{

  entry:
    out_ResultLength_1, out_Status_19, out_sdv_874, out_Tmp_1476, out_RequestLength, out_KeyValueInformation_1 := in_ResultLength_1, in_Status_19, in_sdv_874, in_Tmp_1476, in_RequestLength, in_KeyValueInformation_1;
    goto L29, exit;

  exit:
    return;

  L29:
    call {:si_unique_call 4817} out_Tmp_1476 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1476 != 0;
    assume out_Tmp_1476 > 0;
    call {:si_unique_call 4818} out_Status_19 := ZwQueryValueKey(0, 0, 1, 0, out_RequestLength, out_Tmp_1476);
    assume {:nonnull} out_Tmp_1476 != 0;
    assume out_Tmp_1476 > 0;
    havoc out_ResultLength_1;
    goto anon16_Else;

  anon16_Else:
    assume {:partition} out_Status_19 == 5;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} out_KeyValueInformation_1 != in_Buffer_17;
    call {:si_unique_call 4820} sdv_ExFreePool(0);
    goto L36;

  L36:
    out_RequestLength := out_RequestLength + 256;
    call {:si_unique_call 4819} out_sdv_874 := ExAllocatePoolWithTag(1, out_RequestLength, 544497990);
    out_KeyValueInformation_1 := out_sdv_874;
    goto anon21_Then;

  anon21_Then:
    assume {:partition} out_KeyValueInformation_1 != 0;
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    call {:si_unique_call 4821} {:si_old_unique_call 1} out_ResultLength_1, out_Status_19, out_sdv_874, out_Tmp_1476, out_RequestLength, out_KeyValueInformation_1 := FatGetCompatibilityModeValue_loop_L29(out_ResultLength_1, out_Status_19, in_Buffer_17, out_sdv_874, out_Tmp_1476, out_RequestLength, out_KeyValueInformation_1);
    return;

  anon17_Then:
    assume {:partition} out_KeyValueInformation_1 == in_Buffer_17;
    goto L36;
}



procedure {:LoopProcedure} FatGetCompatibilityModeValue_loop_L29(in_ResultLength_1: int, in_Status_19: int, in_Buffer_17: int, in_sdv_874: int, in_Tmp_1476: int, in_RequestLength: int, in_KeyValueInformation_1: int) returns (out_ResultLength_1: int, out_Status_19: int, out_sdv_874: int, out_Tmp_1476: int, out_RequestLength: int, out_KeyValueInformation_1: int);
  modifies alloc;
  free ensures {:va_keep} out_Status_19 == -1073741811 || out_Status_19 == -1073741823 || out_Status_19 == 0 || out_Status_19 == 5 || out_Status_19 == -1073741789 || out_Status_19 == in_Status_19;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatIsFujitsuFMR_loop_L35(in_ResultLength_2: int, in_Status_21: int, in_Buffer_18: int, in_sdv_893: int, in_RequestLength_1: int, in_KeyValueInformation_2: int, in_Tmp_1506: int) returns (out_ResultLength_2: int, out_Status_21: int, out_sdv_893: int, out_RequestLength_1: int, out_KeyValueInformation_2: int, out_Tmp_1506: int)
{

  entry:
    out_ResultLength_2, out_Status_21, out_sdv_893, out_RequestLength_1, out_KeyValueInformation_2, out_Tmp_1506 := in_ResultLength_2, in_Status_21, in_sdv_893, in_RequestLength_1, in_KeyValueInformation_2, in_Tmp_1506;
    goto L35, exit;

  exit:
    return;

  L35:
    call {:si_unique_call 4822} out_Tmp_1506 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1506 != 0;
    assume out_Tmp_1506 > 0;
    call {:si_unique_call 4823} out_Status_21 := ZwQueryValueKey(0, 0, 1, 0, out_RequestLength_1, out_Tmp_1506);
    assume {:nonnull} out_Tmp_1506 != 0;
    assume out_Tmp_1506 > 0;
    havoc out_ResultLength_2;
    goto anon18_Else;

  anon18_Else:
    assume {:partition} out_Status_21 == 5;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} out_KeyValueInformation_2 != in_Buffer_18;
    call {:si_unique_call 4825} sdv_ExFreePool(0);
    goto L42;

  L42:
    out_RequestLength_1 := out_RequestLength_1 + 256;
    call {:si_unique_call 4824} out_sdv_893 := ExAllocatePoolWithTag(1, out_RequestLength_1, 544497990);
    out_KeyValueInformation_2 := out_sdv_893;
    goto anon24_Then;

  anon24_Then:
    assume {:partition} out_KeyValueInformation_2 != 0;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    call {:si_unique_call 4826} {:si_old_unique_call 1} out_ResultLength_2, out_Status_21, out_sdv_893, out_RequestLength_1, out_KeyValueInformation_2, out_Tmp_1506 := FatIsFujitsuFMR_loop_L35(out_ResultLength_2, out_Status_21, in_Buffer_18, out_sdv_893, out_RequestLength_1, out_KeyValueInformation_2, out_Tmp_1506);
    return;

  anon19_Then:
    assume {:partition} out_KeyValueInformation_2 == in_Buffer_18;
    goto L42;
}



procedure {:LoopProcedure} FatIsFujitsuFMR_loop_L35(in_ResultLength_2: int, in_Status_21: int, in_Buffer_18: int, in_sdv_893: int, in_RequestLength_1: int, in_KeyValueInformation_2: int, in_Tmp_1506: int) returns (out_ResultLength_2: int, out_Status_21: int, out_sdv_893: int, out_RequestLength_1: int, out_KeyValueInformation_2: int, out_Tmp_1506: int);
  modifies alloc;
  free ensures {:va_keep} out_Status_21 == -1073741811 || out_Status_21 == -1073741823 || out_Status_21 == 0 || out_Status_21 == 5 || out_Status_21 == -1073741789 || out_Status_21 == in_Status_21;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatUnpinRepinnedBcbs_loop_L49(in_Tmp_1525: int, in_Tmp_1526: int, in_Tmp_1530: int, in_j: int, in_FileObject_28: int, in_Tmp_1534: int, in_Tmp_1535: int, in_sdv_902: int, in_Tmp_1543: int, in_Repinned: int, in_Tmp_1547: int, in_Tmp_1551: int) returns (out_Tmp_1525: int, out_Tmp_1526: int, out_Tmp_1530: int, out_j: int, out_Tmp_1534: int, out_Tmp_1535: int, out_sdv_902: int, out_Tmp_1543: int, out_Tmp_1547: int, out_Tmp_1551: int)
{

  entry:
    out_Tmp_1525, out_Tmp_1526, out_Tmp_1530, out_j, out_Tmp_1534, out_Tmp_1535, out_sdv_902, out_Tmp_1543, out_Tmp_1547, out_Tmp_1551 := in_Tmp_1525, in_Tmp_1526, in_Tmp_1530, in_j, in_Tmp_1534, in_Tmp_1535, in_sdv_902, in_Tmp_1543, in_Tmp_1547, in_Tmp_1551;
    goto L49, exit;

  exit:
    return;

  L49:
    goto anon111_Else;

  anon111_Else:
    assume {:partition} 4 > out_j;
    out_Tmp_1543 := out_j;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1530;
    assume {:nonnull} out_Tmp_1530 != 0;
    assume out_Tmp_1530 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    out_Tmp_1535 := out_j;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1551;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume out_Tmp_1535 <= 2;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume out_Tmp_1535 != 2;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume out_Tmp_1535 != 1;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume out_Tmp_1535 != 0;
    goto L144;

  L144:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    out_sdv_902 := 0;
    goto L59;

  L59:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} out_sdv_902 == in_FileObject_28;
    out_Tmp_1525 := out_j;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1526;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume out_Tmp_1525 <= 2;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume out_Tmp_1525 != 2;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume out_Tmp_1525 != 1;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume out_Tmp_1525 != 0;
    goto L154;

  L154:
    out_Tmp_1547 := out_j;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1534;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume out_Tmp_1547 <= 2;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume out_Tmp_1547 != 2;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume out_Tmp_1547 != 1;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume out_Tmp_1547 != 0;
    goto L54;

  L54:
    out_j := out_j + 1;
    goto L54_dummy;

  L54_dummy:
    call {:si_unique_call 4828} {:si_old_unique_call 1} out_Tmp_1525, out_Tmp_1526, out_Tmp_1530, out_j, out_Tmp_1534, out_Tmp_1535, out_sdv_902, out_Tmp_1543, out_Tmp_1547, out_Tmp_1551 := FatUnpinRepinnedBcbs_loop_L49(out_Tmp_1525, out_Tmp_1526, out_Tmp_1530, out_j, in_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_sdv_902, out_Tmp_1543, in_Repinned, out_Tmp_1547, out_Tmp_1551);
    return;

  anon134_Then:
    assume out_Tmp_1547 == 0;
    out_Tmp_1547 := 0;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon133_Then:
    assume out_Tmp_1547 == 1;
    out_Tmp_1547 := 1;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon132_Then:
    assume out_Tmp_1547 == 2;
    out_Tmp_1547 := 2;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon131_Then:
    assume out_Tmp_1547 > 2;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon137_Then:
    assume out_Tmp_1525 == 0;
    out_Tmp_1525 := 0;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon136_Then:
    assume out_Tmp_1525 == 1;
    out_Tmp_1525 := 1;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon135_Then:
    assume out_Tmp_1525 == 2;
    out_Tmp_1525 := 2;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon130_Then:
    assume out_Tmp_1525 > 2;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon112_Then:
    assume {:partition} out_sdv_902 != in_FileObject_28;
    goto L54;

  anon118_Then:
    call {:si_unique_call 4827} out_sdv_902 := __HAVOC_malloc(1);
    goto L59;

  anon140_Then:
    assume out_Tmp_1535 == 0;
    out_Tmp_1535 := 0;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon139_Then:
    assume out_Tmp_1535 == 1;
    out_Tmp_1535 := 1;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon138_Then:
    assume out_Tmp_1535 == 2;
    out_Tmp_1535 := 2;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon129_Then:
    assume out_Tmp_1535 > 2;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon128_Then:
    goto L54;
}



procedure {:LoopProcedure} FatUnpinRepinnedBcbs_loop_L49(in_Tmp_1525: int, in_Tmp_1526: int, in_Tmp_1530: int, in_j: int, in_FileObject_28: int, in_Tmp_1534: int, in_Tmp_1535: int, in_sdv_902: int, in_Tmp_1543: int, in_Repinned: int, in_Tmp_1547: int, in_Tmp_1551: int) returns (out_Tmp_1525: int, out_Tmp_1526: int, out_Tmp_1530: int, out_j: int, out_Tmp_1534: int, out_Tmp_1535: int, out_sdv_902: int, out_Tmp_1543: int, out_Tmp_1547: int, out_Tmp_1551: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatUnpinRepinnedBcbs_loop_L23(in_i_11: int, in_Tmp_1525: int, in_Tmp_1526: int, in_Tmp_1529: int, in_Tmp_1530: int, in_j: int, in_Tmp_1533: int, in_Iosb_13: int, in_FileObject_28: int, in_Tmp_1534: int, in_Tmp_1535: int, in_Tmp_1537: int, in_Tmp_1538: int, in_Tmp_1539: int, in_sdv_902: int, in_WriteThroughToDisk: int, in_Tmp_1543: int, in_Tmp_1544: int, in_ForceVerify: int, in_Repinned: int, in_Tmp_1546: int, in_Tmp_1547: int, in_Tmp_1548: int, in_RaiseIosb: int, in_Tmp_1549: int, in_Tmp_1551: int, in_IrpContext_71: int, in_vslice_dummy_var_235: int) returns (out_i_11: int, out_Tmp_1525: int, out_Tmp_1526: int, out_Tmp_1529: int, out_Tmp_1530: int, out_j: int, out_Tmp_1533: int, out_FileObject_28: int, out_Tmp_1534: int, out_Tmp_1535: int, out_Tmp_1537: int, out_Tmp_1538: int, out_Tmp_1539: int, out_sdv_902: int, out_Tmp_1543: int, out_Tmp_1544: int, out_ForceVerify: int, out_Tmp_1546: int, out_Tmp_1547: int, out_Tmp_1548: int, out_Tmp_1549: int, out_Tmp_1551: int, out_vslice_dummy_var_235: int)
{

  entry:
    out_i_11, out_Tmp_1525, out_Tmp_1526, out_Tmp_1529, out_Tmp_1530, out_j, out_Tmp_1533, out_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_Tmp_1537, out_Tmp_1538, out_Tmp_1539, out_sdv_902, out_Tmp_1543, out_Tmp_1544, out_ForceVerify, out_Tmp_1546, out_Tmp_1547, out_Tmp_1548, out_Tmp_1549, out_Tmp_1551, out_vslice_dummy_var_235 := in_i_11, in_Tmp_1525, in_Tmp_1526, in_Tmp_1529, in_Tmp_1530, in_j, in_Tmp_1533, in_FileObject_28, in_Tmp_1534, in_Tmp_1535, in_Tmp_1537, in_Tmp_1538, in_Tmp_1539, in_sdv_902, in_Tmp_1543, in_Tmp_1544, in_ForceVerify, in_Tmp_1546, in_Tmp_1547, in_Tmp_1548, in_Tmp_1549, in_Tmp_1551, in_vslice_dummy_var_235;
    goto L23, exit;

  exit:
    return;

  L23:
    assume {:CounterLoop 4} {:Counter "i_11"} true;
    goto anon102_Else;

  anon102_Else:
    assume {:partition} 4 > out_i_11;
    out_Tmp_1546 := out_i_11;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1529;
    assume {:nonnull} out_Tmp_1529 != 0;
    assume out_Tmp_1529 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} in_WriteThroughToDisk != 0;
    assume {:nonnull} in_IrpContext_71 != 0;
    assume in_IrpContext_71 > 0;
    havoc out_Tmp_1544;
    assume {:nonnull} out_Tmp_1544 != 0;
    assume out_Tmp_1544 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    out_Tmp_1539 := out_i_11;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1549;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume out_Tmp_1539 <= 2;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume out_Tmp_1539 != 2;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume out_Tmp_1539 != 1;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume out_Tmp_1539 != 0;
    goto L114;

  L114:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    out_FileObject_28 := 0;
    goto L29;

  L29:
    out_Tmp_1533 := out_i_11;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1537;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume out_Tmp_1533 <= 2;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume out_Tmp_1533 != 2;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume out_Tmp_1533 != 1;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume out_Tmp_1533 != 0;
    goto L124;

  L124:
    assume {:nonnull} in_Iosb_13 != 0;
    assume in_Iosb_13 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto L41;

  L41:
    out_Tmp_1548 := out_i_11;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1538;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume out_Tmp_1548 <= 2;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume out_Tmp_1548 != 2;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume out_Tmp_1548 != 1;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume out_Tmp_1548 != 0;
    goto L26;

  L26:
    out_i_11 := out_i_11 + 1;
    goto L26_dummy;

  L26_dummy:
    call {:si_unique_call 4833} {:si_old_unique_call 1} out_i_11, out_Tmp_1525, out_Tmp_1526, out_Tmp_1529, out_Tmp_1530, out_j, out_Tmp_1533, out_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_Tmp_1537, out_Tmp_1538, out_Tmp_1539, out_sdv_902, out_Tmp_1543, out_Tmp_1544, out_ForceVerify, out_Tmp_1546, out_Tmp_1547, out_Tmp_1548, out_Tmp_1549, out_Tmp_1551, out_vslice_dummy_var_235 := FatUnpinRepinnedBcbs_loop_L23(out_i_11, out_Tmp_1525, out_Tmp_1526, out_Tmp_1529, out_Tmp_1530, out_j, out_Tmp_1533, in_Iosb_13, out_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_Tmp_1537, out_Tmp_1538, out_Tmp_1539, out_sdv_902, in_WriteThroughToDisk, out_Tmp_1543, out_Tmp_1544, out_ForceVerify, in_Repinned, out_Tmp_1546, out_Tmp_1547, out_Tmp_1548, in_RaiseIosb, out_Tmp_1549, out_Tmp_1551, in_IrpContext_71, out_vslice_dummy_var_235);
    return;

  anon127_Then:
    assume out_Tmp_1548 == 0;
    out_Tmp_1548 := 0;
    assume {:nonnull} out_Tmp_1538 != 0;
    assume out_Tmp_1538 > 0;
    goto L26;

  anon126_Then:
    assume out_Tmp_1548 == 1;
    out_Tmp_1548 := 1;
    assume {:nonnull} out_Tmp_1538 != 0;
    assume out_Tmp_1538 > 0;
    goto L26;

  anon125_Then:
    assume out_Tmp_1548 == 2;
    out_Tmp_1548 := 2;
    assume {:nonnull} out_Tmp_1538 != 0;
    assume out_Tmp_1538 > 0;
    goto L26;

  anon124_Then:
    assume out_Tmp_1548 > 2;
    assume {:nonnull} out_Tmp_1538 != 0;
    assume out_Tmp_1538 > 0;
    goto L26;

  anon105_Then:
    assume {:nonnull} in_RaiseIosb != 0;
    assume in_RaiseIosb > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    goto L43;

  L43:
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} out_FileObject_28 != 0;
    assume {:nonnull} in_IrpContext_71 != 0;
    assume in_IrpContext_71 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} in_IrpContext_71 != 0;
    assume in_IrpContext_71 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} in_IrpContext_71 != 0;
    assume in_IrpContext_71 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    out_j := out_i_11 + 1;
    goto L49;

  L49:
    call {:si_unique_call 4831} out_Tmp_1525, out_Tmp_1526, out_Tmp_1530, out_j, out_Tmp_1534, out_Tmp_1535, out_sdv_902, out_Tmp_1543, out_Tmp_1547, out_Tmp_1551 := FatUnpinRepinnedBcbs_loop_L49(out_Tmp_1525, out_Tmp_1526, out_Tmp_1530, out_j, out_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_sdv_902, out_Tmp_1543, in_Repinned, out_Tmp_1547, out_Tmp_1551);
    goto L49_last;

  L49_last:
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} 4 > out_j;
    out_Tmp_1543 := out_j;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1530;
    assume {:nonnull} out_Tmp_1530 != 0;
    assume out_Tmp_1530 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    out_Tmp_1535 := out_j;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1551;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume out_Tmp_1535 <= 2;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume out_Tmp_1535 != 2;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume out_Tmp_1535 != 1;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume out_Tmp_1535 != 0;
    goto L144;

  L144:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    out_sdv_902 := 0;
    goto L59;

  L59:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} out_sdv_902 == out_FileObject_28;
    out_Tmp_1525 := out_j;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1526;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume out_Tmp_1525 <= 2;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume out_Tmp_1525 != 2;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume out_Tmp_1525 != 1;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume out_Tmp_1525 != 0;
    goto L154;

  L154:
    out_Tmp_1547 := out_j;
    assume {:nonnull} in_Repinned != 0;
    assume in_Repinned > 0;
    havoc out_Tmp_1534;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume out_Tmp_1547 <= 2;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume out_Tmp_1547 != 2;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume out_Tmp_1547 != 1;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume out_Tmp_1547 != 0;
    goto L54;

  L54:
    out_j := out_j + 1;
    assume false;
    return;

  anon134_Then:
    assume out_Tmp_1547 == 0;
    out_Tmp_1547 := 0;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon133_Then:
    assume out_Tmp_1547 == 1;
    out_Tmp_1547 := 1;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon132_Then:
    assume out_Tmp_1547 == 2;
    out_Tmp_1547 := 2;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon131_Then:
    assume out_Tmp_1547 > 2;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon137_Then:
    assume out_Tmp_1525 == 0;
    out_Tmp_1525 := 0;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon136_Then:
    assume out_Tmp_1525 == 1;
    out_Tmp_1525 := 1;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon135_Then:
    assume out_Tmp_1525 == 2;
    out_Tmp_1525 := 2;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon130_Then:
    assume out_Tmp_1525 > 2;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon112_Then:
    assume {:partition} out_sdv_902 != out_FileObject_28;
    goto L54;

  anon118_Then:
    call {:si_unique_call 4832} out_sdv_902 := __HAVOC_malloc(1);
    goto L59;

  anon140_Then:
    assume out_Tmp_1535 == 0;
    out_Tmp_1535 := 0;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon139_Then:
    assume out_Tmp_1535 == 1;
    out_Tmp_1535 := 1;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon138_Then:
    assume out_Tmp_1535 == 2;
    out_Tmp_1535 := 2;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon129_Then:
    assume out_Tmp_1535 > 2;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon128_Then:
    goto L54;

  anon111_Then:
    assume {:partition} out_j >= 4;
    call {:si_unique_call 4829} out_vslice_dummy_var_235 := corral_nondet();
    out_ForceVerify := 1;
    goto L41;

  anon110_Then:
    goto L41;

  anon109_Then:
    goto L41;

  anon108_Then:
    goto L41;

  anon107_Then:
    assume {:partition} out_FileObject_28 == 0;
    goto L41;

  anon106_Then:
    assume {:nonnull} in_Iosb_13 != 0;
    assume in_Iosb_13 > 0;
    assume {:nonnull} in_RaiseIosb != 0;
    assume in_RaiseIosb > 0;
    assume {:nonnull} in_Iosb_13 != 0;
    assume in_Iosb_13 > 0;
    assume {:nonnull} in_RaiseIosb != 0;
    assume in_RaiseIosb > 0;
    assume {:nonnull} in_Iosb_13 != 0;
    assume in_Iosb_13 > 0;
    assume {:nonnull} in_RaiseIosb != 0;
    assume in_RaiseIosb > 0;
    goto L43;

  anon143_Then:
    assume out_Tmp_1533 == 0;
    out_Tmp_1533 := 0;
    assume {:nonnull} out_Tmp_1537 != 0;
    assume out_Tmp_1537 > 0;
    goto L124;

  anon142_Then:
    assume out_Tmp_1533 == 1;
    out_Tmp_1533 := 1;
    assume {:nonnull} out_Tmp_1537 != 0;
    assume out_Tmp_1537 > 0;
    goto L124;

  anon141_Then:
    assume out_Tmp_1533 == 2;
    out_Tmp_1533 := 2;
    assume {:nonnull} out_Tmp_1537 != 0;
    assume out_Tmp_1537 > 0;
    goto L124;

  anon123_Then:
    assume out_Tmp_1533 > 2;
    assume {:nonnull} out_Tmp_1537 != 0;
    assume out_Tmp_1537 > 0;
    goto L124;

  anon117_Then:
    call {:si_unique_call 4830} out_FileObject_28 := __HAVOC_malloc(1);
    goto L29;

  anon146_Then:
    assume out_Tmp_1539 == 0;
    out_Tmp_1539 := 0;
    assume {:nonnull} out_Tmp_1549 != 0;
    assume out_Tmp_1549 > 0;
    goto L114;

  anon145_Then:
    assume out_Tmp_1539 == 1;
    out_Tmp_1539 := 1;
    assume {:nonnull} out_Tmp_1549 != 0;
    assume out_Tmp_1549 > 0;
    goto L114;

  anon144_Then:
    assume out_Tmp_1539 == 2;
    out_Tmp_1539 := 2;
    assume {:nonnull} out_Tmp_1549 != 0;
    assume out_Tmp_1549 > 0;
    goto L114;

  anon122_Then:
    assume out_Tmp_1539 > 2;
    assume {:nonnull} out_Tmp_1549 != 0;
    assume out_Tmp_1549 > 0;
    goto L114;

  anon121_Then:
    goto L29;

  anon104_Then:
    assume {:partition} in_WriteThroughToDisk == 0;
    goto L29;

  anon120_Then:
    goto L26;
}



procedure {:LoopProcedure} FatUnpinRepinnedBcbs_loop_L23(in_i_11: int, in_Tmp_1525: int, in_Tmp_1526: int, in_Tmp_1529: int, in_Tmp_1530: int, in_j: int, in_Tmp_1533: int, in_Iosb_13: int, in_FileObject_28: int, in_Tmp_1534: int, in_Tmp_1535: int, in_Tmp_1537: int, in_Tmp_1538: int, in_Tmp_1539: int, in_sdv_902: int, in_WriteThroughToDisk: int, in_Tmp_1543: int, in_Tmp_1544: int, in_ForceVerify: int, in_Repinned: int, in_Tmp_1546: int, in_Tmp_1547: int, in_Tmp_1548: int, in_RaiseIosb: int, in_Tmp_1549: int, in_Tmp_1551: int, in_IrpContext_71: int, in_vslice_dummy_var_235: int) returns (out_i_11: int, out_Tmp_1525: int, out_Tmp_1526: int, out_Tmp_1529: int, out_Tmp_1530: int, out_j: int, out_Tmp_1533: int, out_FileObject_28: int, out_Tmp_1534: int, out_Tmp_1535: int, out_Tmp_1537: int, out_Tmp_1538: int, out_Tmp_1539: int, out_sdv_902: int, out_Tmp_1543: int, out_Tmp_1544: int, out_ForceVerify: int, out_Tmp_1546: int, out_Tmp_1547: int, out_Tmp_1548: int, out_Tmp_1549: int, out_Tmp_1551: int, out_vslice_dummy_var_235: int);
  modifies alloc;
  free ensures {:va_keep} out_ForceVerify == 1 || out_ForceVerify == in_ForceVerify;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:SIextraRecBound 2} FatUnpinRepinnedBcbs_loop_L20(in_i_11: int, in_Tmp_1525: int, in_Tmp_1526: int, in_Saved: int, in_Tmp_1529: int, in_Tmp_1530: int, in_j: int, in_Tmp_1533: int, in_Iosb_13: int, in_FileObject_28: int, in_Tmp_1534: int, in_Tmp_1535: int, in_Tmp_1537: int, in_Tmp_1538: int, in_Tmp_1539: int, in_sdv_902: int, in_WriteThroughToDisk: int, in_Tmp_1543: int, in_Tmp_1544: int, in_ForceVerify: int, in_Repinned: int, in_Tmp_1546: int, in_Tmp_1547: int, in_Tmp_1548: int, in_RaiseIosb: int, in_Tmp_1549: int, in_Tmp_1551: int, in_IrpContext_71: int, in_vslice_dummy_var_235: int) returns (out_i_11: int, out_Tmp_1525: int, out_Tmp_1526: int, out_Saved: int, out_Tmp_1529: int, out_Tmp_1530: int, out_j: int, out_Tmp_1533: int, out_FileObject_28: int, out_Tmp_1534: int, out_Tmp_1535: int, out_Tmp_1537: int, out_Tmp_1538: int, out_Tmp_1539: int, out_sdv_902: int, out_Tmp_1543: int, out_Tmp_1544: int, out_ForceVerify: int, out_Repinned: int, out_Tmp_1546: int, out_Tmp_1547: int, out_Tmp_1548: int, out_Tmp_1549: int, out_Tmp_1551: int, out_vslice_dummy_var_235: int)
{

  entry:
    out_i_11, out_Tmp_1525, out_Tmp_1526, out_Saved, out_Tmp_1529, out_Tmp_1530, out_j, out_Tmp_1533, out_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_Tmp_1537, out_Tmp_1538, out_Tmp_1539, out_sdv_902, out_Tmp_1543, out_Tmp_1544, out_ForceVerify, out_Repinned, out_Tmp_1546, out_Tmp_1547, out_Tmp_1548, out_Tmp_1549, out_Tmp_1551, out_vslice_dummy_var_235 := in_i_11, in_Tmp_1525, in_Tmp_1526, in_Saved, in_Tmp_1529, in_Tmp_1530, in_j, in_Tmp_1533, in_FileObject_28, in_Tmp_1534, in_Tmp_1535, in_Tmp_1537, in_Tmp_1538, in_Tmp_1539, in_sdv_902, in_Tmp_1543, in_Tmp_1544, in_ForceVerify, in_Repinned, in_Tmp_1546, in_Tmp_1547, in_Tmp_1548, in_Tmp_1549, in_Tmp_1551, in_vslice_dummy_var_235;
    goto L20, exit;

  exit:
    return;

  L20:
    goto anon100_Else;

  anon100_Else:
    assume {:partition} out_Repinned != 0;
    out_i_11 := 0;
    goto L23;

  L23:
    call {:si_unique_call 4835} out_i_11, out_Tmp_1525, out_Tmp_1526, out_Tmp_1529, out_Tmp_1530, out_j, out_Tmp_1533, out_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_Tmp_1537, out_Tmp_1538, out_Tmp_1539, out_sdv_902, out_Tmp_1543, out_Tmp_1544, out_ForceVerify, out_Tmp_1546, out_Tmp_1547, out_Tmp_1548, out_Tmp_1549, out_Tmp_1551, out_vslice_dummy_var_235 := FatUnpinRepinnedBcbs_loop_L23(out_i_11, out_Tmp_1525, out_Tmp_1526, out_Tmp_1529, out_Tmp_1530, out_j, out_Tmp_1533, in_Iosb_13, out_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_Tmp_1537, out_Tmp_1538, out_Tmp_1539, out_sdv_902, in_WriteThroughToDisk, out_Tmp_1543, out_Tmp_1544, out_ForceVerify, out_Repinned, out_Tmp_1546, out_Tmp_1547, out_Tmp_1548, in_RaiseIosb, out_Tmp_1549, out_Tmp_1551, in_IrpContext_71, out_vslice_dummy_var_235);
    goto L23_last;

  L23_last:
    assume {:CounterLoop 4} {:Counter "i_11"} true;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} 4 > out_i_11;
    out_Tmp_1546 := out_i_11;
    assume {:nonnull} out_Repinned != 0;
    assume out_Repinned > 0;
    havoc out_Tmp_1529;
    assume {:nonnull} out_Tmp_1529 != 0;
    assume out_Tmp_1529 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} in_WriteThroughToDisk != 0;
    assume {:nonnull} in_IrpContext_71 != 0;
    assume in_IrpContext_71 > 0;
    havoc out_Tmp_1544;
    assume {:nonnull} out_Tmp_1544 != 0;
    assume out_Tmp_1544 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    out_Tmp_1539 := out_i_11;
    assume {:nonnull} out_Repinned != 0;
    assume out_Repinned > 0;
    havoc out_Tmp_1549;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume out_Tmp_1539 <= 2;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume out_Tmp_1539 != 2;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume out_Tmp_1539 != 1;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume out_Tmp_1539 != 0;
    goto L114;

  L114:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    out_FileObject_28 := 0;
    goto L29;

  L29:
    out_Tmp_1533 := out_i_11;
    assume {:nonnull} out_Repinned != 0;
    assume out_Repinned > 0;
    havoc out_Tmp_1537;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume out_Tmp_1533 <= 2;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume out_Tmp_1533 != 2;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume out_Tmp_1533 != 1;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume out_Tmp_1533 != 0;
    goto L124;

  L124:
    assume {:nonnull} in_Iosb_13 != 0;
    assume in_Iosb_13 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto L41;

  L41:
    out_Tmp_1548 := out_i_11;
    assume {:nonnull} out_Repinned != 0;
    assume out_Repinned > 0;
    havoc out_Tmp_1538;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume out_Tmp_1548 <= 2;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume out_Tmp_1548 != 2;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume out_Tmp_1548 != 1;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume out_Tmp_1548 != 0;
    goto L26;

  L26:
    out_i_11 := out_i_11 + 1;
    assume false;
    return;

  anon127_Then:
    assume out_Tmp_1548 == 0;
    out_Tmp_1548 := 0;
    assume {:nonnull} out_Tmp_1538 != 0;
    assume out_Tmp_1538 > 0;
    goto L26;

  anon126_Then:
    assume out_Tmp_1548 == 1;
    out_Tmp_1548 := 1;
    assume {:nonnull} out_Tmp_1538 != 0;
    assume out_Tmp_1538 > 0;
    goto L26;

  anon125_Then:
    assume out_Tmp_1548 == 2;
    out_Tmp_1548 := 2;
    assume {:nonnull} out_Tmp_1538 != 0;
    assume out_Tmp_1538 > 0;
    goto L26;

  anon124_Then:
    assume out_Tmp_1548 > 2;
    assume {:nonnull} out_Tmp_1538 != 0;
    assume out_Tmp_1538 > 0;
    goto L26;

  anon105_Then:
    assume {:nonnull} in_RaiseIosb != 0;
    assume in_RaiseIosb > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    goto L43;

  L43:
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} out_FileObject_28 != 0;
    assume {:nonnull} in_IrpContext_71 != 0;
    assume in_IrpContext_71 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} in_IrpContext_71 != 0;
    assume in_IrpContext_71 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} in_IrpContext_71 != 0;
    assume in_IrpContext_71 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    out_j := out_i_11 + 1;
    goto L49;

  L49:
    call {:si_unique_call 4838} out_Tmp_1525, out_Tmp_1526, out_Tmp_1530, out_j, out_Tmp_1534, out_Tmp_1535, out_sdv_902, out_Tmp_1543, out_Tmp_1547, out_Tmp_1551 := FatUnpinRepinnedBcbs_loop_L49(out_Tmp_1525, out_Tmp_1526, out_Tmp_1530, out_j, out_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_sdv_902, out_Tmp_1543, out_Repinned, out_Tmp_1547, out_Tmp_1551);
    goto L49_last;

  L49_last:
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} 4 > out_j;
    out_Tmp_1543 := out_j;
    assume {:nonnull} out_Repinned != 0;
    assume out_Repinned > 0;
    havoc out_Tmp_1530;
    assume {:nonnull} out_Tmp_1530 != 0;
    assume out_Tmp_1530 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    out_Tmp_1535 := out_j;
    assume {:nonnull} out_Repinned != 0;
    assume out_Repinned > 0;
    havoc out_Tmp_1551;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume out_Tmp_1535 <= 2;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume out_Tmp_1535 != 2;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume out_Tmp_1535 != 1;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume out_Tmp_1535 != 0;
    goto L144;

  L144:
    goto anon118_Then, anon118_Else;

  anon118_Else:
    out_sdv_902 := 0;
    goto L59;

  L59:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} out_sdv_902 == out_FileObject_28;
    out_Tmp_1525 := out_j;
    assume {:nonnull} out_Repinned != 0;
    assume out_Repinned > 0;
    havoc out_Tmp_1526;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume out_Tmp_1525 <= 2;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume out_Tmp_1525 != 2;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume out_Tmp_1525 != 1;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume out_Tmp_1525 != 0;
    goto L154;

  L154:
    out_Tmp_1547 := out_j;
    assume {:nonnull} out_Repinned != 0;
    assume out_Repinned > 0;
    havoc out_Tmp_1534;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume out_Tmp_1547 <= 2;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume out_Tmp_1547 != 2;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume out_Tmp_1547 != 1;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume out_Tmp_1547 != 0;
    goto L54;

  L54:
    out_j := out_j + 1;
    assume false;
    return;

  anon134_Then:
    assume out_Tmp_1547 == 0;
    out_Tmp_1547 := 0;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon133_Then:
    assume out_Tmp_1547 == 1;
    out_Tmp_1547 := 1;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon132_Then:
    assume out_Tmp_1547 == 2;
    out_Tmp_1547 := 2;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon131_Then:
    assume out_Tmp_1547 > 2;
    assume {:nonnull} out_Tmp_1534 != 0;
    assume out_Tmp_1534 > 0;
    goto L54;

  anon137_Then:
    assume out_Tmp_1525 == 0;
    out_Tmp_1525 := 0;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon136_Then:
    assume out_Tmp_1525 == 1;
    out_Tmp_1525 := 1;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon135_Then:
    assume out_Tmp_1525 == 2;
    out_Tmp_1525 := 2;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon130_Then:
    assume out_Tmp_1525 > 2;
    assume {:nonnull} out_Tmp_1526 != 0;
    assume out_Tmp_1526 > 0;
    goto L154;

  anon112_Then:
    assume {:partition} out_sdv_902 != out_FileObject_28;
    goto L54;

  anon118_Then:
    call {:si_unique_call 4839} out_sdv_902 := __HAVOC_malloc(1);
    goto L59;

  anon140_Then:
    assume out_Tmp_1535 == 0;
    out_Tmp_1535 := 0;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon139_Then:
    assume out_Tmp_1535 == 1;
    out_Tmp_1535 := 1;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon138_Then:
    assume out_Tmp_1535 == 2;
    out_Tmp_1535 := 2;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon129_Then:
    assume out_Tmp_1535 > 2;
    assume {:nonnull} out_Tmp_1551 != 0;
    assume out_Tmp_1551 > 0;
    goto L144;

  anon128_Then:
    goto L54;

  anon111_Then:
    assume {:partition} out_j >= 4;
    call {:si_unique_call 4836} out_vslice_dummy_var_235 := corral_nondet();
    out_ForceVerify := 1;
    goto L41;

  anon110_Then:
    goto L41;

  anon109_Then:
    goto L41;

  anon108_Then:
    goto L41;

  anon107_Then:
    assume {:partition} out_FileObject_28 == 0;
    goto L41;

  anon106_Then:
    assume {:nonnull} in_Iosb_13 != 0;
    assume in_Iosb_13 > 0;
    assume {:nonnull} in_RaiseIosb != 0;
    assume in_RaiseIosb > 0;
    assume {:nonnull} in_Iosb_13 != 0;
    assume in_Iosb_13 > 0;
    assume {:nonnull} in_RaiseIosb != 0;
    assume in_RaiseIosb > 0;
    assume {:nonnull} in_Iosb_13 != 0;
    assume in_Iosb_13 > 0;
    assume {:nonnull} in_RaiseIosb != 0;
    assume in_RaiseIosb > 0;
    goto L43;

  anon143_Then:
    assume out_Tmp_1533 == 0;
    out_Tmp_1533 := 0;
    assume {:nonnull} out_Tmp_1537 != 0;
    assume out_Tmp_1537 > 0;
    goto L124;

  anon142_Then:
    assume out_Tmp_1533 == 1;
    out_Tmp_1533 := 1;
    assume {:nonnull} out_Tmp_1537 != 0;
    assume out_Tmp_1537 > 0;
    goto L124;

  anon141_Then:
    assume out_Tmp_1533 == 2;
    out_Tmp_1533 := 2;
    assume {:nonnull} out_Tmp_1537 != 0;
    assume out_Tmp_1537 > 0;
    goto L124;

  anon123_Then:
    assume out_Tmp_1533 > 2;
    assume {:nonnull} out_Tmp_1537 != 0;
    assume out_Tmp_1537 > 0;
    goto L124;

  anon117_Then:
    call {:si_unique_call 4837} out_FileObject_28 := __HAVOC_malloc(1);
    goto L29;

  anon146_Then:
    assume out_Tmp_1539 == 0;
    out_Tmp_1539 := 0;
    assume {:nonnull} out_Tmp_1549 != 0;
    assume out_Tmp_1549 > 0;
    goto L114;

  anon145_Then:
    assume out_Tmp_1539 == 1;
    out_Tmp_1539 := 1;
    assume {:nonnull} out_Tmp_1549 != 0;
    assume out_Tmp_1549 > 0;
    goto L114;

  anon144_Then:
    assume out_Tmp_1539 == 2;
    out_Tmp_1539 := 2;
    assume {:nonnull} out_Tmp_1549 != 0;
    assume out_Tmp_1549 > 0;
    goto L114;

  anon122_Then:
    assume out_Tmp_1539 > 2;
    assume {:nonnull} out_Tmp_1549 != 0;
    assume out_Tmp_1549 > 0;
    goto L114;

  anon121_Then:
    goto L29;

  anon104_Then:
    assume {:partition} in_WriteThroughToDisk == 0;
    goto L29;

  anon120_Then:
    goto L26;

  anon102_Then:
    assume {:partition} out_i_11 >= 4;
    assume {:nonnull} in_IrpContext_71 != 0;
    assume in_IrpContext_71 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} out_Repinned != Repinned__IRP_CONTEXT(in_IrpContext_71);
    assume {:nonnull} out_Repinned != 0;
    assume out_Repinned > 0;
    havoc out_Saved;
    call {:si_unique_call 4834} sdv_ExFreePool(0);
    out_Repinned := out_Saved;
    goto anon103_Else_dummy;

  anon103_Else_dummy:
    goto L_BAF_3;

  L_BAF_3:
    call {:si_unique_call 4840} {:si_old_unique_call 1} out_i_11, out_Tmp_1525, out_Tmp_1526, out_Saved, out_Tmp_1529, out_Tmp_1530, out_j, out_Tmp_1533, out_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_Tmp_1537, out_Tmp_1538, out_Tmp_1539, out_sdv_902, out_Tmp_1543, out_Tmp_1544, out_ForceVerify, out_Repinned, out_Tmp_1546, out_Tmp_1547, out_Tmp_1548, out_Tmp_1549, out_Tmp_1551, out_vslice_dummy_var_235 := FatUnpinRepinnedBcbs_loop_L20(out_i_11, out_Tmp_1525, out_Tmp_1526, out_Saved, out_Tmp_1529, out_Tmp_1530, out_j, out_Tmp_1533, in_Iosb_13, out_FileObject_28, out_Tmp_1534, out_Tmp_1535, out_Tmp_1537, out_Tmp_1538, out_Tmp_1539, out_sdv_902, in_WriteThroughToDisk, out_Tmp_1543, out_Tmp_1544, out_ForceVerify, out_Repinned, out_Tmp_1546, out_Tmp_1547, out_Tmp_1548, in_RaiseIosb, out_Tmp_1549, out_Tmp_1551, in_IrpContext_71, out_vslice_dummy_var_235);
    return;

  anon103_Then:
    assume {:partition} out_Repinned == Repinned__IRP_CONTEXT(in_IrpContext_71);
    assume {:nonnull} out_Repinned != 0;
    assume out_Repinned > 0;
    havoc out_Repinned;
    assume {:nonnull} in_IrpContext_71 != 0;
    assume in_IrpContext_71 > 0;
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    goto L_BAF_3;
}



procedure {:LoopProcedure} FatUnpinRepinnedBcbs_loop_L20(in_i_11: int, in_Tmp_1525: int, in_Tmp_1526: int, in_Saved: int, in_Tmp_1529: int, in_Tmp_1530: int, in_j: int, in_Tmp_1533: int, in_Iosb_13: int, in_FileObject_28: int, in_Tmp_1534: int, in_Tmp_1535: int, in_Tmp_1537: int, in_Tmp_1538: int, in_Tmp_1539: int, in_sdv_902: int, in_WriteThroughToDisk: int, in_Tmp_1543: int, in_Tmp_1544: int, in_ForceVerify: int, in_Repinned: int, in_Tmp_1546: int, in_Tmp_1547: int, in_Tmp_1548: int, in_RaiseIosb: int, in_Tmp_1549: int, in_Tmp_1551: int, in_IrpContext_71: int, in_vslice_dummy_var_235: int) returns (out_i_11: int, out_Tmp_1525: int, out_Tmp_1526: int, out_Saved: int, out_Tmp_1529: int, out_Tmp_1530: int, out_j: int, out_Tmp_1533: int, out_FileObject_28: int, out_Tmp_1534: int, out_Tmp_1535: int, out_Tmp_1537: int, out_Tmp_1538: int, out_Tmp_1539: int, out_sdv_902: int, out_Tmp_1543: int, out_Tmp_1544: int, out_ForceVerify: int, out_Repinned: int, out_Tmp_1546: int, out_Tmp_1547: int, out_Tmp_1548: int, out_Tmp_1549: int, out_Tmp_1551: int, out_vslice_dummy_var_235: int);
  modifies alloc;
  free ensures {:va_keep} out_ForceVerify == 1 || out_ForceVerify == in_ForceVerify;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatPrepareWriteDirectoryFile_loop_L59(in_Vbo_5: int, in_BytesToPin: int, in_LocalBuffer_1: int, in_Tmp_1561: int, in_sdv_907: int, in_ClusterSize: int, in_IrpContext_73: int, in_ByteCount_9: int, in_Bcb_9: int, in_Buffer_22: int, in_Zero_1: int) returns (out_BytesToPin: int, out_Tmp_1561: int, out_sdv_907: int, out_ByteCount_9: int)
{

  entry:
    out_BytesToPin, out_Tmp_1561, out_sdv_907, out_ByteCount_9 := in_BytesToPin, in_Tmp_1561, in_sdv_907, in_ByteCount_9;
    goto L59, exit;

  exit:
    return;

  L59:
    goto anon29_Else;

  anon29_Else:
    assume {:partition} out_ByteCount_9 > 0;
    assume {:nonnull} in_Bcb_9 != 0;
    assume in_Bcb_9 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} out_ByteCount_9 > in_ClusterSize;
    out_BytesToPin := in_ClusterSize;
    goto L68;

  L68:
    assume {:nonnull} in_IrpContext_73 != 0;
    assume in_IrpContext_73 > 0;
    havoc out_Tmp_1561;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} out_Tmp_1561 == 0;
    goto L146;

  L146:
    call {:si_unique_call 4843} out_sdv_907 := corral_nondet();
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} out_sdv_907 != 0;
    goto L75;

  L75:
    assume {:nonnull} in_Buffer_22 != 0;
    assume in_Buffer_22 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L77;

  L77:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} in_Zero_1 != 0;
    call {:si_unique_call 4841} sdv_RtlZeroMemory(0, out_BytesToPin);
    goto L78;

  L78:
    out_ByteCount_9 := out_ByteCount_9 - out_BytesToPin;
    assume {:nonnull} in_Vbo_5 != 0;
    assume in_Vbo_5 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} out_ByteCount_9 > 0;
    assume {:nonnull} in_Bcb_9 != 0;
    assume in_Bcb_9 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} in_Bcb_9 != 0;
    assume in_Bcb_9 > 0;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    goto L_BAF_4;

  L_BAF_4:
    call {:si_unique_call 4844} {:si_old_unique_call 1} out_BytesToPin, out_Tmp_1561, out_sdv_907, out_ByteCount_9 := FatPrepareWriteDirectoryFile_loop_L59(in_Vbo_5, out_BytesToPin, in_LocalBuffer_1, out_Tmp_1561, out_sdv_907, in_ClusterSize, in_IrpContext_73, out_ByteCount_9, in_Bcb_9, in_Buffer_22, in_Zero_1);
    return;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    goto L_BAF_4;

  anon42_Then:
    assume {:partition} 0 >= out_ByteCount_9;
    goto anon42_Then_dummy;

  anon42_Then_dummy:
    goto L_BAF_4;

  anon32_Then:
    assume {:partition} in_Zero_1 == 0;
    goto L78;

  anon31_Then:
    assume {:nonnull} in_Buffer_22 != 0;
    assume in_Buffer_22 > 0;
    goto L77;

  anon30_Then:
    assume {:partition} out_sdv_907 == 0;
    assume {:nonnull} in_IrpContext_73 != 0;
    assume in_IrpContext_73 > 0;
    call {:si_unique_call 4842} ExRaiseStatus(-1073741608);
    goto L75;

  anon41_Then:
    assume {:partition} out_Tmp_1561 != 0;
    goto L146;

  anon40_Then:
    assume {:partition} in_ClusterSize >= out_ByteCount_9;
    out_BytesToPin := out_ByteCount_9;
    goto L68;
}



procedure {:LoopProcedure} FatPrepareWriteDirectoryFile_loop_L59(in_Vbo_5: int, in_BytesToPin: int, in_LocalBuffer_1: int, in_Tmp_1561: int, in_sdv_907: int, in_ClusterSize: int, in_IrpContext_73: int, in_ByteCount_9: int, in_Bcb_9: int, in_Buffer_22: int, in_Zero_1: int) returns (out_BytesToPin: int, out_Tmp_1561: int, out_sdv_907: int, out_ByteCount_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatRepinBcb_loop_L11(in_i_12: int, in_Tmp_1597: int, in_Tmp_1598: int, in_Tmp_1599: int, in_Tmp_1602: int, in_Repinned_1: int, in_Bcb_12: int) returns (out_i_12: int, out_Tmp_1597: int, out_Tmp_1598: int, out_Tmp_1599: int, out_Tmp_1602: int)
{

  entry:
    out_i_12, out_Tmp_1597, out_Tmp_1598, out_Tmp_1599, out_Tmp_1602 := in_i_12, in_Tmp_1597, in_Tmp_1598, in_Tmp_1599, in_Tmp_1602;
    goto L11, exit;

  exit:
    return;

  L11:
    goto anon17_Else;

  anon17_Else:
    assume {:partition} 4 > out_i_12;
    out_Tmp_1598 := out_i_12;
    assume {:nonnull} in_Repinned_1 != 0;
    assume in_Repinned_1 > 0;
    havoc out_Tmp_1602;
    assume {:nonnull} out_Tmp_1602 != 0;
    assume out_Tmp_1602 > 0;
    goto anon19_Else;

  anon19_Else:
    out_Tmp_1599 := out_i_12;
    assume {:nonnull} in_Repinned_1 != 0;
    assume in_Repinned_1 > 0;
    havoc out_Tmp_1597;
    assume {:nonnull} out_Tmp_1597 != 0;
    assume out_Tmp_1597 > 0;
    goto anon20_Else;

  anon20_Else:
    out_i_12 := out_i_12 + 1;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    call {:si_unique_call 4845} {:si_old_unique_call 1} out_i_12, out_Tmp_1597, out_Tmp_1598, out_Tmp_1599, out_Tmp_1602 := FatRepinBcb_loop_L11(out_i_12, out_Tmp_1597, out_Tmp_1598, out_Tmp_1599, out_Tmp_1602, in_Repinned_1, in_Bcb_12);
    return;
}



procedure {:LoopProcedure} FatRepinBcb_loop_L11(in_i_12: int, in_Tmp_1597: int, in_Tmp_1598: int, in_Tmp_1599: int, in_Tmp_1602: int, in_Repinned_1: int, in_Bcb_12: int) returns (out_i_12: int, out_Tmp_1597: int, out_Tmp_1598: int, out_Tmp_1599: int, out_Tmp_1602: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatRepinBcb_loop_L10(in_i_12: int, in_Tmp_1597: int, in_Tmp_1598: int, in_Tmp_1599: int, in_sdv_931: int, in_Tmp_1602: int, in_Repinned_1: int, in_Bcb_12: int) returns (out_i_12: int, out_Tmp_1597: int, out_Tmp_1598: int, out_Tmp_1599: int, out_sdv_931: int, out_Tmp_1602: int, out_Repinned_1: int)
{

  entry:
    out_i_12, out_Tmp_1597, out_Tmp_1598, out_Tmp_1599, out_sdv_931, out_Tmp_1602, out_Repinned_1 := in_i_12, in_Tmp_1597, in_Tmp_1598, in_Tmp_1599, in_sdv_931, in_Tmp_1602, in_Repinned_1;
    goto L10, exit;

  exit:
    return;

  L10:
    out_i_12 := 0;
    goto L11;

  L11:
    call {:si_unique_call 4848} out_i_12, out_Tmp_1597, out_Tmp_1598, out_Tmp_1599, out_Tmp_1602 := FatRepinBcb_loop_L11(out_i_12, out_Tmp_1597, out_Tmp_1598, out_Tmp_1599, out_Tmp_1602, out_Repinned_1, in_Bcb_12);
    goto L11_last;

  L11_last:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} 4 > out_i_12;
    out_Tmp_1598 := out_i_12;
    assume {:nonnull} out_Repinned_1 != 0;
    assume out_Repinned_1 > 0;
    havoc out_Tmp_1602;
    assume {:nonnull} out_Tmp_1602 != 0;
    assume out_Tmp_1602 > 0;
    goto anon19_Else;

  anon19_Else:
    out_Tmp_1599 := out_i_12;
    assume {:nonnull} out_Repinned_1 != 0;
    assume out_Repinned_1 > 0;
    havoc out_Tmp_1597;
    assume {:nonnull} out_Tmp_1597 != 0;
    assume out_Tmp_1597 > 0;
    goto anon20_Else;

  anon20_Else:
    out_i_12 := out_i_12 + 1;
    assume false;
    return;

  anon17_Then:
    assume {:partition} out_i_12 >= 4;
    assume {:nonnull} out_Repinned_1 != 0;
    assume out_Repinned_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L25;

  L25:
    assume {:nonnull} out_Repinned_1 != 0;
    assume out_Repinned_1 > 0;
    havoc out_Repinned_1;
    goto L25_dummy;

  L25_dummy:
    call {:si_unique_call 4849} {:si_old_unique_call 1} out_i_12, out_Tmp_1597, out_Tmp_1598, out_Tmp_1599, out_sdv_931, out_Tmp_1602, out_Repinned_1 := FatRepinBcb_loop_L10(out_i_12, out_Tmp_1597, out_Tmp_1598, out_Tmp_1599, out_sdv_931, out_Tmp_1602, out_Repinned_1, in_Bcb_12);
    return;

  anon18_Then:
    call {:si_unique_call 4846} out_sdv_931 := ExAllocatePoolWithTag(17, 20, -764124858);
    assume {:nonnull} out_Repinned_1 != 0;
    assume out_Repinned_1 > 0;
    call {:si_unique_call 4847} sdv_RtlZeroMemory(0, 20);
    goto L25;
}



procedure {:LoopProcedure} FatRepinBcb_loop_L10(in_i_12: int, in_Tmp_1597: int, in_Tmp_1598: int, in_Tmp_1599: int, in_sdv_931: int, in_Tmp_1602: int, in_Repinned_1: int, in_Bcb_12: int) returns (out_i_12: int, out_Tmp_1597: int, out_Tmp_1598: int, out_Tmp_1599: int, out_sdv_931: int, out_Tmp_1602: int, out_Repinned_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMultipleAsync_loop_L125(in_i_13: int, in_Irp_23: int, in_Tmp_1624: int, in_UnwindRunCount: int, in_IoRuns: int) returns (out_i_13: int, out_Irp_23: int, out_Tmp_1624: int)
{

  entry:
    out_i_13, out_Irp_23, out_Tmp_1624 := in_i_13, in_Irp_23, in_Tmp_1624;
    goto L125, exit;

  exit:
    return;

  L125:
    goto anon39_Else;

  anon39_Else:
    assume {:partition} in_UnwindRunCount >= out_i_13;
    out_Tmp_1624 := out_i_13;
    assume {:nonnull} in_IoRuns != 0;
    assume in_IoRuns > 0;
    havoc out_Irp_23;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} out_Irp_23 != 0;
    assume {:nonnull} out_Irp_23 != 0;
    assume out_Irp_23 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 4851} IoFreeMdl(0);
    goto L130;

  L130:
    call {:si_unique_call 4850} IoFreeIrp(0);
    goto L128;

  L128:
    out_i_13 := out_i_13 + 1;
    goto L128_dummy;

  L128_dummy:
    havoc out_i_13;
    return;

  anon40_Then:
    goto L130;

  anon45_Then:
    assume {:partition} out_Irp_23 == 0;
    goto L128;
}



procedure {:LoopProcedure} FatMultipleAsync_loop_L125(in_i_13: int, in_Irp_23: int, in_Tmp_1624: int, in_UnwindRunCount: int, in_IoRuns: int) returns (out_i_13: int, out_Irp_23: int, out_Tmp_1624: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_1624 == in_i_13 || out_Tmp_1624 == in_Tmp_1624;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMultipleAsync_loop_L108(in_Irp_23: int, in_Tmp_1611: int, in_UnwindRunCount: int, in_Vcb_47: int, in_MultipleIrpCount: int, in_IoRuns: int, in_vslice_dummy_var_251: int) returns (out_Irp_23: int, out_Tmp_1611: int, out_UnwindRunCount: int, out_vslice_dummy_var_251: int)
{
  var vslice_dummy_var_1754: int;

  entry:
    out_Irp_23, out_Tmp_1611, out_UnwindRunCount, out_vslice_dummy_var_251 := in_Irp_23, in_Tmp_1611, in_UnwindRunCount, in_vslice_dummy_var_251;
    goto L108, exit;

  exit:
    return;

  L108:
    goto anon36_Then;

  anon36_Then:
    assume {:partition} out_UnwindRunCount < in_MultipleIrpCount;
    out_Tmp_1611 := out_UnwindRunCount;
    assume {:nonnull} in_IoRuns != 0;
    assume in_IoRuns > 0;
    havoc out_Irp_23;
    assume {:nonnull} in_Vcb_47 != 0;
    assume in_Vcb_47 > 0;
    havoc vslice_dummy_var_1754;
    call {:si_unique_call 4852} out_vslice_dummy_var_251 := sdv_IoCallDriver(vslice_dummy_var_1754, out_Irp_23);
    out_UnwindRunCount := out_UnwindRunCount + 1;
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    call {:si_unique_call 4853} {:si_old_unique_call 1} out_Irp_23, out_Tmp_1611, out_UnwindRunCount, out_vslice_dummy_var_251 := FatMultipleAsync_loop_L108(out_Irp_23, out_Tmp_1611, out_UnwindRunCount, in_Vcb_47, in_MultipleIrpCount, in_IoRuns, out_vslice_dummy_var_251);
    return;
}



procedure {:LoopProcedure} FatMultipleAsync_loop_L108(in_Irp_23: int, in_Tmp_1611: int, in_UnwindRunCount: int, in_Vcb_47: int, in_MultipleIrpCount: int, in_IoRuns: int, in_vslice_dummy_var_251: int) returns (out_Irp_23: int, out_Tmp_1611: int, out_UnwindRunCount: int, out_vslice_dummy_var_251: int);
  free ensures {:va_keep} out_vslice_dummy_var_251 == 259 || out_vslice_dummy_var_251 == in_vslice_dummy_var_251;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMultipleAsync_loop_L24(in_Tmp_1609: int, in_Tmp_1610: int, in_Irp_23: int, in_Mdl_3: int, in_Tmp_1612: int, in_Tmp_1613: int, in_Tmp_1614: int, in_CalledByFatVerifyVolume: int, in_Tmp_1618: int, in_Wait_7: int, in_IrpSp_9: int, in_Tmp_1619: int, in_Tmp_1620: int, in_Context_6: int, in_Tmp_1621: int, in_Tmp_1623: int, in_Tmp_1625: int, in_UnwindRunCount: int, in_Tmp_1627: int, in_Tmp_1628: int, in_IrpContext_83: int, in_Vcb_47: int, in_MasterIrp: int, in_MultipleIrpCount: int, in_IoRuns: int) returns (out_Tmp_1609: int, out_Tmp_1610: int, out_Irp_23: int, out_Mdl_3: int, out_Tmp_1612: int, out_Tmp_1613: int, out_Tmp_1614: int, out_Tmp_1618: int, out_IrpSp_9: int, out_Tmp_1619: int, out_Tmp_1620: int, out_Tmp_1621: int, out_Tmp_1623: int, out_Tmp_1625: int, out_UnwindRunCount: int, out_Tmp_1627: int, out_Tmp_1628: int)
{

  entry:
    out_Tmp_1609, out_Tmp_1610, out_Irp_23, out_Mdl_3, out_Tmp_1612, out_Tmp_1613, out_Tmp_1614, out_Tmp_1618, out_IrpSp_9, out_Tmp_1619, out_Tmp_1620, out_Tmp_1621, out_Tmp_1623, out_Tmp_1625, out_UnwindRunCount, out_Tmp_1627, out_Tmp_1628 := in_Tmp_1609, in_Tmp_1610, in_Irp_23, in_Mdl_3, in_Tmp_1612, in_Tmp_1613, in_Tmp_1614, in_Tmp_1618, in_IrpSp_9, in_Tmp_1619, in_Tmp_1620, in_Tmp_1621, in_Tmp_1623, in_Tmp_1625, in_UnwindRunCount, in_Tmp_1627, in_Tmp_1628;
    goto L24, exit;

  exit:
    return;

  L24:
    goto anon32_Else;

  anon32_Else:
    assume {:partition} in_MultipleIrpCount > out_UnwindRunCount;
    out_Tmp_1612 := out_UnwindRunCount;
    assume {:nonnull} in_IoRuns != 0;
    assume in_IoRuns > 0;
    assume {:nonnull} in_Vcb_47 != 0;
    assume in_Vcb_47 > 0;
    havoc out_Tmp_1614;
    assume {:nonnull} out_Tmp_1614 != 0;
    assume out_Tmp_1614 > 0;
    havoc out_Tmp_1623;
    call {:si_unique_call 4862} out_Irp_23 := IoMakeAssociatedIrp(in_MasterIrp, out_Tmp_1623);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} out_Irp_23 != 0;
    goto L55;

  L55:
    out_Tmp_1621 := out_UnwindRunCount;
    assume {:nonnull} in_IoRuns != 0;
    assume in_IoRuns > 0;
    out_Tmp_1609 := out_UnwindRunCount;
    assume {:nonnull} in_IoRuns != 0;
    assume in_IoRuns > 0;
    havoc out_Tmp_1628;
    assume {:nonnull} in_MasterIrp != 0;
    assume in_MasterIrp > 0;
    call {:si_unique_call 4860} out_Mdl_3 := IoAllocateMdl(0, out_Tmp_1628, 0, 0, 0);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} out_Mdl_3 != 0;
    goto L64;

  L64:
    out_Tmp_1625 := out_UnwindRunCount;
    assume {:nonnull} in_IoRuns != 0;
    assume in_IoRuns > 0;
    havoc out_Tmp_1613;
    assume {:nonnull} in_MasterIrp != 0;
    assume in_MasterIrp > 0;
    call {:si_unique_call 4856} IoBuildPartialMdl(0, 0, 0, out_Tmp_1613);
    call {:si_unique_call 4857} sdv_IoSetNextIrpStackLocation(0);
    call {:si_unique_call 4858} out_IrpSp_9 := sdv_IoGetCurrentIrpStackLocation(out_Irp_23);
    assume {:nonnull} in_IrpContext_83 != 0;
    assume in_IrpContext_83 > 0;
    assume {:nonnull} out_IrpSp_9 != 0;
    assume out_IrpSp_9 > 0;
    out_Tmp_1610 := out_UnwindRunCount;
    assume {:nonnull} in_IoRuns != 0;
    assume in_IoRuns > 0;
    assume {:nonnull} out_IrpSp_9 != 0;
    assume out_IrpSp_9 > 0;
    out_Tmp_1618 := out_UnwindRunCount;
    assume {:nonnull} in_IoRuns != 0;
    assume in_IoRuns > 0;
    assume {:nonnull} out_IrpSp_9 != 0;
    assume out_IrpSp_9 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} in_Wait_7 != 0;
    out_Tmp_1619 := li2bplFunctionConstant732;
    goto L82;

  L82:
    call {:si_unique_call 4854} sdv_IoSetCompletionRoutine(out_Irp_23, out_Tmp_1619, in_Context_6, 1, 1, 1);
    call {:si_unique_call 4855} out_IrpSp_9 := sdv_IoGetNextIrpStackLocation(out_Irp_23);
    assume {:nonnull} in_IrpContext_83 != 0;
    assume in_IrpContext_83 > 0;
    assume {:nonnull} out_IrpSp_9 != 0;
    assume out_IrpSp_9 > 0;
    out_Tmp_1627 := out_UnwindRunCount;
    assume {:nonnull} in_IoRuns != 0;
    assume in_IoRuns > 0;
    assume {:nonnull} out_IrpSp_9 != 0;
    assume out_IrpSp_9 > 0;
    out_Tmp_1620 := out_UnwindRunCount;
    assume {:nonnull} in_IoRuns != 0;
    assume in_IoRuns > 0;
    assume {:nonnull} out_IrpSp_9 != 0;
    assume out_IrpSp_9 > 0;
    assume {:nonnull} in_IrpContext_83 != 0;
    assume in_IrpContext_83 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} out_IrpSp_9 != 0;
    assume out_IrpSp_9 > 0;
    goto L93;

  L93:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} in_CalledByFatVerifyVolume != 0;
    assume {:nonnull} out_IrpSp_9 != 0;
    assume out_IrpSp_9 > 0;
    goto L95;

  L95:
    out_UnwindRunCount := out_UnwindRunCount + 1;
    goto L95_dummy;

  L95_dummy:
    call {:si_unique_call 4863} {:si_old_unique_call 1} out_Tmp_1609, out_Tmp_1610, out_Irp_23, out_Mdl_3, out_Tmp_1612, out_Tmp_1613, out_Tmp_1614, out_Tmp_1618, out_IrpSp_9, out_Tmp_1619, out_Tmp_1620, out_Tmp_1621, out_Tmp_1623, out_Tmp_1625, out_UnwindRunCount, out_Tmp_1627, out_Tmp_1628 := FatMultipleAsync_loop_L24(out_Tmp_1609, out_Tmp_1610, out_Irp_23, out_Mdl_3, out_Tmp_1612, out_Tmp_1613, out_Tmp_1614, in_CalledByFatVerifyVolume, out_Tmp_1618, in_Wait_7, out_IrpSp_9, out_Tmp_1619, out_Tmp_1620, in_Context_6, out_Tmp_1621, out_Tmp_1623, out_Tmp_1625, out_UnwindRunCount, out_Tmp_1627, out_Tmp_1628, in_IrpContext_83, in_Vcb_47, in_MasterIrp, in_MultipleIrpCount, in_IoRuns);
    return;

  anon35_Then:
    assume {:partition} in_CalledByFatVerifyVolume == 0;
    goto L95;

  anon43_Then:
    goto L93;

  anon42_Then:
    assume {:partition} in_Wait_7 == 0;
    out_Tmp_1619 := li2bplFunctionConstant731;
    goto L82;

  anon34_Then:
    assume {:partition} out_Mdl_3 == 0;
    assume {:nonnull} in_IrpContext_83 != 0;
    assume in_IrpContext_83 > 0;
    call {:si_unique_call 4859} ExRaiseStatus(-1073741670);
    goto L64;

  anon33_Then:
    assume {:partition} out_Irp_23 == 0;
    assume {:nonnull} in_IrpContext_83 != 0;
    assume in_IrpContext_83 > 0;
    call {:si_unique_call 4861} ExRaiseStatus(-1073741670);
    goto L55;
}



procedure {:LoopProcedure} FatMultipleAsync_loop_L24(in_Tmp_1609: int, in_Tmp_1610: int, in_Irp_23: int, in_Mdl_3: int, in_Tmp_1612: int, in_Tmp_1613: int, in_Tmp_1614: int, in_CalledByFatVerifyVolume: int, in_Tmp_1618: int, in_Wait_7: int, in_IrpSp_9: int, in_Tmp_1619: int, in_Tmp_1620: int, in_Context_6: int, in_Tmp_1621: int, in_Tmp_1623: int, in_Tmp_1625: int, in_UnwindRunCount: int, in_Tmp_1627: int, in_Tmp_1628: int, in_IrpContext_83: int, in_Vcb_47: int, in_MasterIrp: int, in_MultipleIrpCount: int, in_IoRuns: int) returns (out_Tmp_1609: int, out_Tmp_1610: int, out_Irp_23: int, out_Mdl_3: int, out_Tmp_1612: int, out_Tmp_1613: int, out_Tmp_1614: int, out_Tmp_1618: int, out_IrpSp_9: int, out_Tmp_1619: int, out_Tmp_1620: int, out_Tmp_1621: int, out_Tmp_1623: int, out_Tmp_1625: int, out_UnwindRunCount: int, out_Tmp_1627: int, out_Tmp_1628: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatNonCachedIo_loop_L117(in_Tmp_1640: int, in_IoRuns_1: int, in_CurrentIndex: int, in_Tmp_1642: int, in_BufferOffset: int, in_LastIndex: int, in_Tmp_1646: int, in_NextVbo: int, in_NextByteCount: int, in_NextRun: int, in_Tmp_1657: int, in_NextLbo: int, in_FcbOrDcb_4: int, in_StartingVbo_5: int, in_ByteCount_13: int, in_vslice_dummy_var_255: int) returns (out_Tmp_1640: int, out_CurrentIndex: int, out_Tmp_1642: int, out_BufferOffset: int, out_Tmp_1646: int, out_NextRun: int, out_Tmp_1657: int, out_StartingVbo_5: int, out_ByteCount_13: int, out_vslice_dummy_var_255: int)
{
  var vslice_dummy_var_1755: int;

  entry:
    out_Tmp_1640, out_CurrentIndex, out_Tmp_1642, out_BufferOffset, out_Tmp_1646, out_NextRun, out_Tmp_1657, out_StartingVbo_5, out_ByteCount_13, out_vslice_dummy_var_255 := in_Tmp_1640, in_CurrentIndex, in_Tmp_1642, in_BufferOffset, in_Tmp_1646, in_NextRun, in_Tmp_1657, in_StartingVbo_5, in_ByteCount_13, in_vslice_dummy_var_255;
    goto L117, exit;

  exit:
    return;

  L117:
    assume {:nonnull} in_LastIndex != 0;
    assume in_LastIndex > 0;
    goto anon66_Else;

  anon66_Else:
    assume {:nonnull} in_NextByteCount != 0;
    assume in_NextByteCount > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} in_NextByteCount != 0;
    assume in_NextByteCount > 0;
    goto L120;

  L120:
    out_Tmp_1640 := out_NextRun;
    assume {:nonnull} in_IoRuns_1 != 0;
    assume in_IoRuns_1 > 0;
    out_Tmp_1642 := out_NextRun;
    assume {:nonnull} in_IoRuns_1 != 0;
    assume in_IoRuns_1 > 0;
    assume {:nonnull} in_NextLbo != 0;
    assume in_NextLbo > 0;
    out_Tmp_1646 := out_NextRun;
    assume {:nonnull} in_IoRuns_1 != 0;
    assume in_IoRuns_1 > 0;
    out_Tmp_1657 := out_NextRun;
    assume {:nonnull} in_IoRuns_1 != 0;
    assume in_IoRuns_1 > 0;
    assume {:nonnull} in_NextByteCount != 0;
    assume in_NextByteCount > 0;
    out_NextRun := out_NextRun + 1;
    assume {:nonnull} in_NextByteCount != 0;
    assume in_NextByteCount > 0;
    havoc out_StartingVbo_5;
    assume {:nonnull} in_NextByteCount != 0;
    assume in_NextByteCount > 0;
    havoc out_BufferOffset;
    assume {:nonnull} in_NextByteCount != 0;
    assume in_NextByteCount > 0;
    havoc out_ByteCount_13;
    out_CurrentIndex := out_CurrentIndex + 1;
    assume {:nonnull} in_LastIndex != 0;
    assume in_LastIndex > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} in_FcbOrDcb_4 != 0;
    assume in_FcbOrDcb_4 > 0;
    havoc vslice_dummy_var_1755;
    call {:si_unique_call 4864} out_vslice_dummy_var_255 := FatGetNextMcbEntry(vslice_dummy_var_1755, Mcb__FCB(in_FcbOrDcb_4), out_CurrentIndex, in_NextVbo, in_NextLbo, in_NextByteCount);
    goto anon75_Else_dummy;

  anon75_Else_dummy:
    goto L_BAF_5;

  L_BAF_5:
    call {:si_unique_call 4865} {:si_old_unique_call 1} out_Tmp_1640, out_CurrentIndex, out_Tmp_1642, out_BufferOffset, out_Tmp_1646, out_NextRun, out_Tmp_1657, out_StartingVbo_5, out_ByteCount_13, out_vslice_dummy_var_255 := FatNonCachedIo_loop_L117(out_Tmp_1640, in_IoRuns_1, out_CurrentIndex, out_Tmp_1642, out_BufferOffset, in_LastIndex, out_Tmp_1646, in_NextVbo, in_NextByteCount, out_NextRun, out_Tmp_1657, in_NextLbo, in_FcbOrDcb_4, out_StartingVbo_5, out_ByteCount_13, out_vslice_dummy_var_255);
    return;

  anon75_Then:
    goto anon75_Then_dummy;

  anon75_Then_dummy:
    goto L_BAF_5;

  anon67_Then:
    goto L120;
}



procedure {:LoopProcedure} FatNonCachedIo_loop_L117(in_Tmp_1640: int, in_IoRuns_1: int, in_CurrentIndex: int, in_Tmp_1642: int, in_BufferOffset: int, in_LastIndex: int, in_Tmp_1646: int, in_NextVbo: int, in_NextByteCount: int, in_NextRun: int, in_Tmp_1657: int, in_NextLbo: int, in_FcbOrDcb_4: int, in_StartingVbo_5: int, in_ByteCount_13: int, in_vslice_dummy_var_255: int) returns (out_Tmp_1640: int, out_CurrentIndex: int, out_Tmp_1642: int, out_BufferOffset: int, out_Tmp_1646: int, out_NextRun: int, out_Tmp_1657: int, out_StartingVbo_5: int, out_ByteCount_13: int, out_vslice_dummy_var_255: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatPagingFileIo_loop_L170(in_IrpCount: int, in_Irp_27: int, in_vslice_dummy_var_261: int) returns (out_vslice_dummy_var_261: int)
{

  entry:
    out_vslice_dummy_var_261 := in_vslice_dummy_var_261;
    goto L170, exit;

  exit:
    return;

  L170:
    assume {:nonnull} in_Irp_27 != 0;
    assume in_Irp_27 > 0;
    goto anon65_Else;

  anon65_Else:
    call {:si_unique_call 4866} out_vslice_dummy_var_261 := KeDelayExecutionThread(0, 0, 0);
    goto anon65_Else_dummy;

  anon65_Else_dummy:
    call {:si_unique_call 4867} {:si_old_unique_call 1} out_vslice_dummy_var_261 := FatPagingFileIo_loop_L170(in_IrpCount, in_Irp_27, out_vslice_dummy_var_261);
    return;
}



procedure {:LoopProcedure} FatPagingFileIo_loop_L170(in_IrpCount: int, in_Irp_27: int, in_vslice_dummy_var_261: int) returns (out_vslice_dummy_var_261: int);
  free ensures {:va_keep} out_vslice_dummy_var_261 == 0 || out_vslice_dummy_var_261 == -1073741823 || out_vslice_dummy_var_261 == in_vslice_dummy_var_261;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatPagingFileIo_loop_L151(in_IrpCount: int, in_Irp_27: int, in_vslice_dummy_var_260: int) returns (out_vslice_dummy_var_260: int)
{

  entry:
    out_vslice_dummy_var_260 := in_vslice_dummy_var_260;
    goto L151, exit;

  exit:
    return;

  L151:
    assume {:nonnull} in_Irp_27 != 0;
    assume in_Irp_27 > 0;
    goto anon61_Else;

  anon61_Else:
    call {:si_unique_call 4868} out_vslice_dummy_var_260 := KeDelayExecutionThread(0, 0, 0);
    goto anon61_Else_dummy;

  anon61_Else_dummy:
    call {:si_unique_call 4869} {:si_old_unique_call 1} out_vslice_dummy_var_260 := FatPagingFileIo_loop_L151(in_IrpCount, in_Irp_27, out_vslice_dummy_var_260);
    return;
}



procedure {:LoopProcedure} FatPagingFileIo_loop_L151(in_IrpCount: int, in_Irp_27: int, in_vslice_dummy_var_260: int) returns (out_vslice_dummy_var_260: int);
  free ensures {:va_keep} out_vslice_dummy_var_260 == 0 || out_vslice_dummy_var_260 == -1073741823 || out_vslice_dummy_var_260 == in_vslice_dummy_var_260;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatPagingFileIo_loop_L71(in_RemainingByteCount: int, in_Mdl_5: int, in_AssocIrp: int, in_Vbo_7: int, in_CurrentIndex_1: int, in_IrpCount: int, in_BufferOffset_1: int, in_LastIndex_1: int, in_NextIrpSp: int, in_IrpSp_11: int, in_NextVbo_1: int, in_DeviceObject_10: int, in_Context_7: int, in_NextByteCount_1: int, in_IrpIsMaster: int, in_NextLbo_1: int, in_Tmp_1669: int, in_MdlIsReserve: int, in_ByteCount_14: int, in_Irp_27: int, in_Fcb_30: int, in_vslice_dummy_var_257: int, in_vslice_dummy_var_258: int, in_vslice_dummy_var_259: int, in_vslice_dummy_var_260: int, in_vslice_dummy_var_263: int) returns (out_RemainingByteCount: int, out_Mdl_5: int, out_AssocIrp: int, out_Vbo_7: int, out_CurrentIndex_1: int, out_IrpCount: int, out_BufferOffset_1: int, out_NextIrpSp: int, out_IrpIsMaster: int, out_Tmp_1669: int, out_MdlIsReserve: int, out_ByteCount_14: int, out_vslice_dummy_var_257: int, out_vslice_dummy_var_258: int, out_vslice_dummy_var_259: int, out_vslice_dummy_var_260: int, out_vslice_dummy_var_263: int)
{
  var vslice_dummy_var_1756: int;
  var vslice_dummy_var_1757: int;
  var vslice_dummy_var_1758: int;

  entry:
    out_RemainingByteCount, out_Mdl_5, out_AssocIrp, out_Vbo_7, out_CurrentIndex_1, out_IrpCount, out_BufferOffset_1, out_NextIrpSp, out_IrpIsMaster, out_Tmp_1669, out_MdlIsReserve, out_ByteCount_14, out_vslice_dummy_var_257, out_vslice_dummy_var_258, out_vslice_dummy_var_259, out_vslice_dummy_var_260, out_vslice_dummy_var_263 := in_RemainingByteCount, in_Mdl_5, in_AssocIrp, in_Vbo_7, in_CurrentIndex_1, in_IrpCount, in_BufferOffset_1, in_NextIrpSp, in_IrpIsMaster, in_Tmp_1669, in_MdlIsReserve, in_ByteCount_14, in_vslice_dummy_var_257, in_vslice_dummy_var_258, in_vslice_dummy_var_259, in_vslice_dummy_var_260, in_vslice_dummy_var_263;
    goto L71, exit;

  exit:
    return;

  L71:
    assume {:nonnull} in_LastIndex_1 != 0;
    assume in_LastIndex_1 > 0;
    goto anon53_Else;

  anon53_Else:
    out_AssocIrp := 0;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    goto L75;

  L75:
    out_RemainingByteCount := 0;
    assume {:nonnull} in_Irp_27 != 0;
    assume in_Irp_27 > 0;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    havoc vslice_dummy_var_1757;
    call {:si_unique_call 4883} out_Mdl_5 := IoAllocateMdl(0, vslice_dummy_var_1757, 0, 0, 0);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} out_Mdl_5 != 0;
    goto L86;

  L86:
    assume {:nonnull} in_Irp_27 != 0;
    assume in_Irp_27 > 0;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    havoc vslice_dummy_var_1756;
    call {:si_unique_call 4881} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_1756);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} out_MdlIsReserve != 0;
    goto L92;

  L92:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} out_AssocIrp != 0;
    out_IrpCount := out_IrpCount - 1;
    goto L95;

  L95:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} out_IrpIsMaster != 0;
    assume {:nonnull} in_Context_7 != 0;
    assume in_Context_7 > 0;
    call {:si_unique_call 4875} KeInitializeEvent(Event_FAT_PAGING_FILE_CONTEXT(in_Context_7), 1, 0);
    assume {:nonnull} in_Context_7 != 0;
    assume in_Context_7 > 0;
    assume {:nonnull} in_Irp_27 != 0;
    assume in_Irp_27 > 0;
    goto L103;

  L103:
    assume {:nonnull} out_AssocIrp != 0;
    assume out_AssocIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} out_IrpIsMaster != 0;
    call {:si_unique_call 4873} sdv_IoSetCompletionRoutine(out_AssocIrp, li2bplFunctionConstant727, in_Context_7, 1, 1, 1);
    goto L111;

  L111:
    call {:si_unique_call 4872} out_NextIrpSp := sdv_IoGetNextIrpStackLocation(out_AssocIrp);
    assume {:nonnull} out_NextIrpSp != 0;
    assume out_NextIrpSp > 0;
    assume {:nonnull} in_IrpSp_11 != 0;
    assume in_IrpSp_11 > 0;
    assume {:nonnull} out_NextIrpSp != 0;
    assume out_NextIrpSp > 0;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    assume {:nonnull} out_NextIrpSp != 0;
    assume out_NextIrpSp > 0;
    assume {:nonnull} out_NextIrpSp != 0;
    assume out_NextIrpSp > 0;
    assume {:nonnull} in_NextLbo_1 != 0;
    assume in_NextLbo_1 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume out_AssocIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 4871} SLIC_sdv_IoCallDriver_entry(0);
    goto L203;

  L203:
    call {:si_unique_call 4870} out_vslice_dummy_var_263 := sdv_IoCallDriver(in_DeviceObject_10, out_AssocIrp);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_IrpIsMaster != 0;
    call {:si_unique_call 4884} out_vslice_dummy_var_258 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    out_MdlIsReserve := 0;
    out_IrpIsMaster := out_MdlIsReserve;
    assume {:nonnull} in_Irp_27 != 0;
    assume in_Irp_27 > 0;
    goto anon69_Else;

  anon69_Else:
    goto L123;

  L123:
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    havoc out_Vbo_7;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    havoc out_BufferOffset_1;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    havoc out_ByteCount_14;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} out_RemainingByteCount != 0;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    assume {:nonnull} in_NextLbo_1 != 0;
    assume in_NextLbo_1 > 0;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    assume {:nonnull} in_NextVbo_1 != 0;
    assume in_NextVbo_1 > 0;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    goto anon70_Else_dummy;

  anon70_Else_dummy:
    goto L_BAF_6;

  L_BAF_6:
    call {:si_unique_call 4886} {:si_old_unique_call 1} out_RemainingByteCount, out_Mdl_5, out_AssocIrp, out_Vbo_7, out_CurrentIndex_1, out_IrpCount, out_BufferOffset_1, out_NextIrpSp, out_IrpIsMaster, out_Tmp_1669, out_MdlIsReserve, out_ByteCount_14, out_vslice_dummy_var_257, out_vslice_dummy_var_258, out_vslice_dummy_var_259, out_vslice_dummy_var_260, out_vslice_dummy_var_263 := FatPagingFileIo_loop_L71(out_RemainingByteCount, out_Mdl_5, out_AssocIrp, out_Vbo_7, out_CurrentIndex_1, out_IrpCount, out_BufferOffset_1, in_LastIndex_1, out_NextIrpSp, in_IrpSp_11, in_NextVbo_1, in_DeviceObject_10, in_Context_7, in_NextByteCount_1, out_IrpIsMaster, in_NextLbo_1, out_Tmp_1669, out_MdlIsReserve, out_ByteCount_14, in_Irp_27, in_Fcb_30, out_vslice_dummy_var_257, out_vslice_dummy_var_258, out_vslice_dummy_var_259, out_vslice_dummy_var_260, out_vslice_dummy_var_263);
    return;

  anon70_Then:
    assume {:partition} out_RemainingByteCount == 0;
    out_CurrentIndex_1 := out_CurrentIndex_1 + 1;
    assume {:nonnull} in_LastIndex_1 != 0;
    assume in_LastIndex_1 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} in_Fcb_30 != 0;
    assume in_Fcb_30 > 0;
    havoc vslice_dummy_var_1758;
    call {:si_unique_call 4885} out_vslice_dummy_var_259 := FatGetNextMcbEntry(vslice_dummy_var_1758, Mcb__FCB(in_Fcb_30), out_CurrentIndex_1, in_NextVbo_1, in_NextLbo_1, in_NextByteCount_1);
    goto anon71_Else_dummy;

  anon71_Else_dummy:
    goto L_BAF_6;

  anon71_Then:
    goto anon71_Then_dummy;

  anon71_Then_dummy:
    goto L_BAF_6;

  anon60_Then:
    assume {:partition} out_IrpIsMaster == 0;
    goto L123;

  anon68_Then:
    assume !(out_AssocIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L203;

  anon67_Then:
    assume {:partition} out_IrpIsMaster == 0;
    call {:si_unique_call 4874} sdv_IoSetCompletionRoutine(out_AssocIrp, li2bplFunctionConstant726, in_Irp_27, 0, 1, 1);
    goto L111;

  anon59_Then:
    assume {:partition} out_IrpIsMaster == 0;
    call {:si_unique_call 4876} sdv_IoSetNextIrpStackLocation(0);
    call {:si_unique_call 4877} out_NextIrpSp := sdv_IoGetCurrentIrpStackLocation(out_AssocIrp);
    assume {:nonnull} in_IrpSp_11 != 0;
    assume in_IrpSp_11 > 0;
    assume {:nonnull} out_NextIrpSp != 0;
    assume out_NextIrpSp > 0;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    assume {:nonnull} out_NextIrpSp != 0;
    assume out_NextIrpSp > 0;
    assume {:nonnull} out_NextIrpSp != 0;
    assume out_NextIrpSp > 0;
    assume {:nonnull} in_IrpSp_11 != 0;
    assume in_IrpSp_11 > 0;
    assume {:nonnull} out_NextIrpSp != 0;
    assume out_NextIrpSp > 0;
    goto L103;

  anon58_Then:
    assume {:partition} out_AssocIrp == 0;
    out_AssocIrp := in_Irp_27;
    out_IrpIsMaster := 1;
    goto L151;

  L151:
    call {:si_unique_call 4878} out_vslice_dummy_var_260 := FatPagingFileIo_loop_L151(out_IrpCount, in_Irp_27, out_vslice_dummy_var_260);
    goto L151_last;

  L151_last:
    assume {:nonnull} in_Irp_27 != 0;
    assume in_Irp_27 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 4879} out_vslice_dummy_var_260 := KeDelayExecutionThread(0, 0, 0);
    assume false;
    return;

  anon61_Then:
    assume {:nonnull} in_Irp_27 != 0;
    assume in_Irp_27 > 0;
    goto anon62_Else;

  anon62_Else:
    goto L95;

  anon56_Then:
    assume {:partition} out_MdlIsReserve == 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} out_IrpCount != 1;
    goto L158;

  L158:
    assume {:nonnull} in_DeviceObject_10 != 0;
    assume in_DeviceObject_10 > 0;
    havoc out_Tmp_1669;
    call {:si_unique_call 4880} out_AssocIrp := IoMakeAssociatedIrp(in_Irp_27, out_Tmp_1669);
    goto L92;

  anon57_Then:
    assume {:partition} out_IrpCount == 1;
    assume {:nonnull} in_LastIndex_1 != 0;
    assume in_LastIndex_1 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} out_RemainingByteCount == 0;
    goto L158;

  anon64_Then:
    assume {:partition} out_RemainingByteCount != 0;
    goto L92;

  anon63_Then:
    goto L92;

  anon55_Then:
    assume {:partition} out_Mdl_5 == 0;
    call {:si_unique_call 4882} out_vslice_dummy_var_257 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    out_Mdl_5 := FatReserveMdl;
    out_MdlIsReserve := 1;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    havoc out_RemainingByteCount;
    assume {:nonnull} in_NextByteCount_1 != 0;
    assume in_NextByteCount_1 > 0;
    goto L86;

  anon72_Then:
    goto L86;

  anon66_Then:
    goto L75;
}



procedure {:LoopProcedure} FatPagingFileIo_loop_L71(in_RemainingByteCount: int, in_Mdl_5: int, in_AssocIrp: int, in_Vbo_7: int, in_CurrentIndex_1: int, in_IrpCount: int, in_BufferOffset_1: int, in_LastIndex_1: int, in_NextIrpSp: int, in_IrpSp_11: int, in_NextVbo_1: int, in_DeviceObject_10: int, in_Context_7: int, in_NextByteCount_1: int, in_IrpIsMaster: int, in_NextLbo_1: int, in_Tmp_1669: int, in_MdlIsReserve: int, in_ByteCount_14: int, in_Irp_27: int, in_Fcb_30: int, in_vslice_dummy_var_257: int, in_vslice_dummy_var_258: int, in_vslice_dummy_var_259: int, in_vslice_dummy_var_260: int, in_vslice_dummy_var_263: int) returns (out_RemainingByteCount: int, out_Mdl_5: int, out_AssocIrp: int, out_Vbo_7: int, out_CurrentIndex_1: int, out_IrpCount: int, out_BufferOffset_1: int, out_NextIrpSp: int, out_IrpIsMaster: int, out_Tmp_1669: int, out_MdlIsReserve: int, out_ByteCount_14: int, out_vslice_dummy_var_257: int, out_vslice_dummy_var_258: int, out_vslice_dummy_var_259: int, out_vslice_dummy_var_260: int, out_vslice_dummy_var_263: int);
  modifies alloc;
  free ensures {:va_keep} out_IrpIsMaster == 0 || out_IrpIsMaster == 1 || out_IrpIsMaster == in_IrpIsMaster;
  free ensures {:va_keep} out_MdlIsReserve == 0 || out_MdlIsReserve == 1 || out_MdlIsReserve == in_MdlIsReserve;
  free ensures {:va_keep} out_vslice_dummy_var_257 == 258 || out_vslice_dummy_var_257 == 0 || out_vslice_dummy_var_257 == in_vslice_dummy_var_257;
  free ensures {:va_keep} out_vslice_dummy_var_258 == 258 || out_vslice_dummy_var_258 == 0 || out_vslice_dummy_var_258 == in_vslice_dummy_var_258;
  free ensures {:va_keep} out_vslice_dummy_var_260 == 0 || out_vslice_dummy_var_260 == -1073741823 || out_vslice_dummy_var_260 == in_vslice_dummy_var_260;
  free ensures {:va_keep} out_vslice_dummy_var_263 == 259 || out_vslice_dummy_var_263 == in_vslice_dummy_var_263;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatForceCacheMiss_loop_L20(in_Links_2: int, in_sdv_997: int, in_TempFcb_2: int, in_IrpContext_92: int, in_vslice_dummy_var_277: int) returns (out_Links_2: int, out_sdv_997: int, out_TempFcb_2: int, out_vslice_dummy_var_277: int)
{

  entry:
    out_Links_2, out_sdv_997, out_TempFcb_2, out_vslice_dummy_var_277 := in_Links_2, in_sdv_997, in_TempFcb_2, in_vslice_dummy_var_277;
    goto L20, exit;

  exit:
    return;

  L20:
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 4887} out_sdv_997 := sdv_containing_record(out_Links_2, 72);
    out_TempFcb_2 := out_sdv_997;
    call {:si_unique_call 4888} out_vslice_dummy_var_277 := FatAcquireExclusiveFcb(in_IrpContext_92, out_TempFcb_2);
    assume {:nonnull} out_Links_2 != 0;
    assume out_Links_2 > 0;
    havoc out_Links_2;
    goto anon28_Else_dummy;

  anon28_Else_dummy:
    call {:si_unique_call 4889} {:si_old_unique_call 1} out_Links_2, out_sdv_997, out_TempFcb_2, out_vslice_dummy_var_277 := FatForceCacheMiss_loop_L20(out_Links_2, out_sdv_997, out_TempFcb_2, in_IrpContext_92, out_vslice_dummy_var_277);
    return;
}



procedure {:LoopProcedure} FatForceCacheMiss_loop_L20(in_Links_2: int, in_sdv_997: int, in_TempFcb_2: int, in_IrpContext_92: int, in_vslice_dummy_var_277: int) returns (out_Links_2: int, out_sdv_997: int, out_TempFcb_2: int, out_vslice_dummy_var_277: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Links_2 == in_Links_2;
  free ensures {:va_keep} out_sdv_997 == in_sdv_997;
  free ensures {:va_keep} out_TempFcb_2 == in_TempFcb_2;
  free ensures {:va_keep} out_vslice_dummy_var_277 == in_vslice_dummy_var_277;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatForceCacheMiss_loop_L64(in_Links_3: int, in_sdv_1000: int) returns (out_Links_3: int, out_sdv_1000: int)
{

  entry:
    out_Links_3, out_sdv_1000 := in_Links_3, in_sdv_1000;
    goto L64, exit;

  exit:
    return;

  L64:
    goto anon32_Else;

  anon32_Else:
    call {:si_unique_call 4890} out_sdv_1000 := sdv_containing_record(out_Links_3, 72);
    call {:si_unique_call 4891} ExReleaseResourceLite(0);
    assume {:nonnull} out_Links_3 != 0;
    assume out_Links_3 > 0;
    havoc out_Links_3;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    havoc out_Links_3;
    return;
}



procedure {:LoopProcedure} FatForceCacheMiss_loop_L64(in_Links_3: int, in_sdv_1000: int) returns (out_Links_3: int, out_sdv_1000: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Links_3 == in_Links_3;
  free ensures {:va_keep} out_sdv_1000 == in_sdv_1000;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:SIextraRecBound 2} FatPurgeReferencedFileObjects_loop_L9(in_NextFcb_2: int, in_OriginalFcb: int, in_IrpContext_93: int, in_Fcb_32: int, in_FlushType_1: int) returns (out_NextFcb_2: int, out_Fcb_32: int)
{

  entry:
    out_NextFcb_2, out_Fcb_32 := in_NextFcb_2, in_Fcb_32;
    goto L9, exit;

  exit:
    return;

  L9:
    goto anon5_Else;

  anon5_Else:
    assume {:partition} out_Fcb_32 != 0;
    call {:si_unique_call 4893} out_NextFcb_2 := FatGetNextFcbTopDown(in_IrpContext_93, out_Fcb_32, in_OriginalFcb);
    assume {:nonnull} out_Fcb_32 != 0;
    assume out_Fcb_32 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L19;

  L19:
    out_Fcb_32 := out_NextFcb_2;
    goto L19_dummy;

  L19_dummy:
    call {:si_unique_call 4894} {:si_old_unique_call 1} out_NextFcb_2, out_Fcb_32 := FatPurgeReferencedFileObjects_loop_L9(out_NextFcb_2, in_OriginalFcb, in_IrpContext_93, out_Fcb_32, in_FlushType_1);
    return;

  anon6_Then:
    call {:si_unique_call 4892} FatForceCacheMiss(in_IrpContext_93, out_Fcb_32, in_FlushType_1);
    goto L19;
}



procedure {:LoopProcedure} FatPurgeReferencedFileObjects_loop_L9(in_NextFcb_2: int, in_OriginalFcb: int, in_IrpContext_93: int, in_Fcb_32: int, in_FlushType_1: int) returns (out_NextFcb_2: int, out_Fcb_32: int);
  modifies alloc;
  free ensures {:va_keep} out_NextFcb_2 == 0 || out_NextFcb_2 == in_NextFcb_2;
  free ensures {:va_keep} out_Fcb_32 == 0 || out_Fcb_32 == in_Fcb_32;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatComputeMoveFileSplicePoints_loop_L29(in_SourceMcbVbo: int, in_SourceLbo: int, in_SourceVbo_2: int, in_SourceMcbBytesInRun: int, in_SourceBytesRemaining: int, in_Tmp_1727: int, in_SourceIndex: int, in_Vcb_54: int, in_SourceBytesInRun: int, in_FcbOrDcb_7: int, in_SourceMcb: int, in_vslice_dummy_var_283: int, in_vslice_dummy_var_286: int) returns (out_SourceMcbVbo: int, out_SourceMcbBytesInRun: int, out_SourceBytesRemaining: int, out_Tmp_1727: int, out_vslice_dummy_var_283: int, out_vslice_dummy_var_286: int)
{
  var vslice_dummy_var_1759: int;
  var vslice_dummy_var_1760: int;

  entry:
    out_SourceMcbVbo, out_SourceMcbBytesInRun, out_SourceBytesRemaining, out_Tmp_1727, out_vslice_dummy_var_283, out_vslice_dummy_var_286 := in_SourceMcbVbo, in_SourceMcbBytesInRun, in_SourceBytesRemaining, in_Tmp_1727, in_vslice_dummy_var_283, in_vslice_dummy_var_286;
    goto L29, exit;

  exit:
    return;

  L29:
    goto anon15_Else;

  anon15_Else:
    assume {:partition} out_SourceBytesRemaining > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} out_SourceMcbVbo != 0;
    assume {:nonnull} in_FcbOrDcb_7 != 0;
    assume in_FcbOrDcb_7 > 0;
    assume {:nonnull} in_SourceIndex != 0;
    assume in_SourceIndex > 0;
    havoc vslice_dummy_var_1760;
    call {:si_unique_call 4896} out_vslice_dummy_var_283 := FatGetNextMcbEntry(in_Vcb_54, Mcb__FCB(in_FcbOrDcb_7), vslice_dummy_var_1760, in_SourceVbo_2, in_SourceLbo, in_SourceBytesInRun);
    goto L32;

  L32:
    assume {:nonnull} in_SourceBytesInRun != 0;
    assume in_SourceBytesInRun > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} in_SourceBytesInRun != 0;
    assume in_SourceBytesInRun > 0;
    havoc out_Tmp_1727;
    goto L38;

  L38:
    out_SourceMcbBytesInRun := out_Tmp_1727;
    assume {:nonnull} in_SourceLbo != 0;
    assume in_SourceLbo > 0;
    havoc vslice_dummy_var_1759;
    call {:si_unique_call 4895} out_vslice_dummy_var_286 := FatAddMcbEntry(in_Vcb_54, in_SourceMcb, out_SourceMcbVbo, vslice_dummy_var_1759, out_SourceMcbBytesInRun);
    assume {:nonnull} in_SourceIndex != 0;
    assume in_SourceIndex > 0;
    out_SourceBytesRemaining := out_SourceBytesRemaining - out_SourceMcbBytesInRun;
    out_SourceMcbVbo := out_SourceMcbVbo + out_SourceMcbBytesInRun;
    goto L38_dummy;

  L38_dummy:
    call {:si_unique_call 4897} {:si_old_unique_call 1} out_SourceMcbVbo, out_SourceMcbBytesInRun, out_SourceBytesRemaining, out_Tmp_1727, out_vslice_dummy_var_283, out_vslice_dummy_var_286 := FatComputeMoveFileSplicePoints_loop_L29(out_SourceMcbVbo, in_SourceLbo, in_SourceVbo_2, out_SourceMcbBytesInRun, out_SourceBytesRemaining, out_Tmp_1727, in_SourceIndex, in_Vcb_54, in_SourceBytesInRun, in_FcbOrDcb_7, in_SourceMcb, out_vslice_dummy_var_283, out_vslice_dummy_var_286);
    return;

  anon18_Then:
    out_Tmp_1727 := out_SourceBytesRemaining;
    goto L38;

  anon17_Then:
    assume {:partition} out_SourceMcbVbo == 0;
    goto L32;
}



procedure {:LoopProcedure} FatComputeMoveFileSplicePoints_loop_L29(in_SourceMcbVbo: int, in_SourceLbo: int, in_SourceVbo_2: int, in_SourceMcbBytesInRun: int, in_SourceBytesRemaining: int, in_Tmp_1727: int, in_SourceIndex: int, in_Vcb_54: int, in_SourceBytesInRun: int, in_FcbOrDcb_7: int, in_SourceMcb: int, in_vslice_dummy_var_283: int, in_vslice_dummy_var_286: int) returns (out_SourceMcbVbo: int, out_SourceMcbBytesInRun: int, out_SourceBytesRemaining: int, out_Tmp_1727: int, out_vslice_dummy_var_283: int, out_vslice_dummy_var_286: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatQueryRetrievalPointers_loop_L74(in_i_14: int, in_MappingPairs: int, in_Tmp_1735: int, in_SectorCount_1: int, in_Lbo_10: int, in_Fcb_34: int, in_Vbo_9: int, in_Tmp_1737: int, in_Tmp_1738: int, in_MapSize: int, in_Tmp_1742: int, in_Index_3: int, in_vslice_dummy_var_289: int) returns (out_i_14: int, out_Tmp_1735: int, out_Tmp_1737: int, out_Tmp_1738: int, out_MapSize: int, out_Tmp_1742: int, out_vslice_dummy_var_289: int)
{
  var vslice_dummy_var_1761: int;
  var vslice_dummy_var_1762: int;

  entry:
    out_i_14, out_Tmp_1735, out_Tmp_1737, out_Tmp_1738, out_MapSize, out_Tmp_1742, out_vslice_dummy_var_289 := in_i_14, in_Tmp_1735, in_Tmp_1737, in_Tmp_1738, in_MapSize, in_Tmp_1742, in_vslice_dummy_var_289;
    goto L74, exit;

  exit:
    return;

  L74:
    assume {:nonnull} in_Index_3 != 0;
    assume in_Index_3 > 0;
    goto anon20_Else;

  anon20_Else:
    assume {:nonnull} in_Fcb_34 != 0;
    assume in_Fcb_34 > 0;
    havoc vslice_dummy_var_1761;
    havoc vslice_dummy_var_1762;
    call {:si_unique_call 4898} out_vslice_dummy_var_289 := FatGetNextMcbEntry(vslice_dummy_var_1761, vslice_dummy_var_1762, out_i_14, in_Vbo_9, in_Lbo_10, in_SectorCount_1);
    assume {:nonnull} in_SectorCount_1 != 0;
    assume in_SectorCount_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_SectorCount_1 != 0;
    assume in_SectorCount_1 > 0;
    goto L80;

  L80:
    out_Tmp_1742 := out_i_14 * 2 + 0;
    assume {:nonnull} in_MappingPairs != 0;
    assume in_MappingPairs > 0;
    havoc out_Tmp_1735;
    assume {:nonnull} in_SectorCount_1 != 0;
    assume in_SectorCount_1 > 0;
    assume {:nonnull} out_Tmp_1735 != 0;
    assume out_Tmp_1735 > 0;
    out_Tmp_1738 := out_i_14 * 2 + 1;
    assume {:nonnull} in_MappingPairs != 0;
    assume in_MappingPairs > 0;
    havoc out_Tmp_1737;
    assume {:nonnull} in_Lbo_10 != 0;
    assume in_Lbo_10 > 0;
    assume {:nonnull} out_Tmp_1737 != 0;
    assume out_Tmp_1737 > 0;
    assume {:nonnull} in_SectorCount_1 != 0;
    assume in_SectorCount_1 > 0;
    havoc out_MapSize;
    out_i_14 := out_i_14 + 1;
    goto L80_dummy;

  L80_dummy:
    call {:si_unique_call 4899} {:si_old_unique_call 1} out_i_14, out_Tmp_1735, out_Tmp_1737, out_Tmp_1738, out_MapSize, out_Tmp_1742, out_vslice_dummy_var_289 := FatQueryRetrievalPointers_loop_L74(out_i_14, in_MappingPairs, out_Tmp_1735, in_SectorCount_1, in_Lbo_10, in_Fcb_34, in_Vbo_9, out_Tmp_1737, out_Tmp_1738, out_MapSize, out_Tmp_1742, in_Index_3, out_vslice_dummy_var_289);
    return;

  anon21_Then:
    goto L80;
}



procedure {:LoopProcedure} FatQueryRetrievalPointers_loop_L74(in_i_14: int, in_MappingPairs: int, in_Tmp_1735: int, in_SectorCount_1: int, in_Lbo_10: int, in_Fcb_34: int, in_Vbo_9: int, in_Tmp_1737: int, in_Tmp_1738: int, in_MapSize: int, in_Tmp_1742: int, in_Index_3: int, in_vslice_dummy_var_289: int) returns (out_i_14: int, out_Tmp_1735: int, out_Tmp_1737: int, out_Tmp_1738: int, out_MapSize: int, out_Tmp_1742: int, out_vslice_dummy_var_289: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDismountVolume_loop_L96(in_Fcb_38: int, in_Vcb_60: int, in_IrpContext_99: int) returns (out_Fcb_38: int)
{
  var vslice_dummy_var_1763: int;

  entry:
    out_Fcb_38 := in_Fcb_38;
    goto L96, exit;

  exit:
    return;

  L96:
    assume {:nonnull} in_Vcb_60 != 0;
    assume in_Vcb_60 > 0;
    havoc vslice_dummy_var_1763;
    call {:si_unique_call 4900} out_Fcb_38 := FatGetNextFcbBottomUp(in_IrpContext_99, out_Fcb_38, vslice_dummy_var_1763);
    goto anon34_Else;

  anon34_Else:
    assume {:partition} out_Fcb_38 != 0;
    call {:si_unique_call 4901} ExReleaseResourceLite(0);
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    call {:si_unique_call 4902} {:si_old_unique_call 1} out_Fcb_38 := FatDismountVolume_loop_L96(out_Fcb_38, in_Vcb_60, in_IrpContext_99);
    return;
}



procedure {:LoopProcedure} FatDismountVolume_loop_L96(in_Fcb_38: int, in_Vcb_60: int, in_IrpContext_99: int) returns (out_Fcb_38: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDismountVolume_loop_L75(in_Fcb_36: int, in_Vcb_60: int, in_IrpContext_99: int, in_vslice_dummy_var_297: int) returns (out_Fcb_36: int, out_vslice_dummy_var_297: int)
{
  var vslice_dummy_var_1764: int;

  entry:
    out_Fcb_36, out_vslice_dummy_var_297 := in_Fcb_36, in_vslice_dummy_var_297;
    goto L75, exit;

  exit:
    return;

  L75:
    assume {:nonnull} in_Vcb_60 != 0;
    assume in_Vcb_60 > 0;
    havoc vslice_dummy_var_1764;
    call {:si_unique_call 4903} out_Fcb_36 := FatGetNextFcbBottomUp(in_IrpContext_99, out_Fcb_36, vslice_dummy_var_1764);
    goto anon32_Else;

  anon32_Else:
    assume {:partition} out_Fcb_36 != 0;
    call {:si_unique_call 4904} out_vslice_dummy_var_297 := FatAcquireExclusiveFcb(in_IrpContext_99, out_Fcb_36);
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    call {:si_unique_call 4905} {:si_old_unique_call 1} out_Fcb_36, out_vslice_dummy_var_297 := FatDismountVolume_loop_L75(out_Fcb_36, in_Vcb_60, in_IrpContext_99, out_vslice_dummy_var_297);
    return;
}



procedure {:LoopProcedure} FatDismountVolume_loop_L75(in_Fcb_36: int, in_Vcb_60: int, in_IrpContext_99: int, in_vslice_dummy_var_297: int) returns (out_Fcb_36: int, out_vslice_dummy_var_297: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_297 == 1 || out_vslice_dummy_var_297 == 0 || out_vslice_dummy_var_297 == in_vslice_dummy_var_297;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMoveFile_loop_L372(in_StackEvent: int, in_FirstSpliceSourceCluster_1: int, in_EventArmed: int, in_sdv_1053: int, in_sdv_1055: int, in_SourceMcb_1: int, in_sdv_1059: int, in_LargeTargetLbo: int, in_BytesToReallocate_1: int, in_TempVbo: int, in_TargetCluster_1: int, in_BytesToWrite: int, in_Dirent_18: int, in_Status_32: int, in_TempLbo: int, in_Iosb_17: int, in_Buffer_25: int, in_FcbAcquired_3: int, in_DirentBcb_8: int, in_BufferSize: int, in_SecondSpliceSourceCluster_1: int, in_LargeSourceLbo: int, in_IoIrp: int, in_IoEvent: int, in_sdv_1075: int, in_FileOffset_1: int, in_FirstSpliceTargetCluster_1: int, in_TargetLbo: int, in_Tmp_1759: int, in_SecondSpliceTargetCluster_1: int, in_Vcb_61: int, in_TargetMcb: int, in_FcbOrDcb_8: int, in_TempByteCount: int, in_sdv_1093: int, in_sdv_1094: int, in_DiskSpaceAllocated: int, in_ByteCount_17: int, in_IrpContext_100: int, in_Irp_37: int, in_boogieTmp: int, in_vslice_dummy_var_308: int, in_vslice_dummy_var_309: int, in_vslice_dummy_var_310: int, in_vslice_dummy_var_311: int, in_vslice_dummy_var_312: int, in_vslice_dummy_var_313: int, in_vslice_dummy_var_314: int, in_vslice_dummy_var_315: int) returns (out_EventArmed: int, out_sdv_1053: int, out_sdv_1055: int, out_sdv_1059: int, out_TargetCluster_1: int, out_Status_32: int, out_Buffer_25: int, out_FcbAcquired_3: int, out_IoIrp: int, out_sdv_1075: int, out_FileOffset_1: int, out_TargetLbo: int, out_Tmp_1759: int, out_sdv_1093: int, out_sdv_1094: int, out_DiskSpaceAllocated: int, out_boogieTmp: int, out_vslice_dummy_var_308: int, out_vslice_dummy_var_309: int, out_vslice_dummy_var_310: int, out_vslice_dummy_var_311: int, out_vslice_dummy_var_312: int, out_vslice_dummy_var_313: int, out_vslice_dummy_var_314: int, out_vslice_dummy_var_315: int)
{
  var vslice_dummy_var_1765: int;
  var vslice_dummy_var_1766: int;
  var vslice_dummy_var_1767: int;
  var vslice_dummy_var_1768: int;
  var vslice_dummy_var_1769: int;
  var vslice_dummy_var_1770: int;
  var vslice_dummy_var_1771: int;
  var vslice_dummy_var_1772: int;
  var vslice_dummy_var_1773: int;
  var vslice_dummy_var_1774: int;
  var vslice_dummy_var_1775: int;
  var vslice_dummy_var_1776: int;
  var vslice_dummy_var_1777: int;
  var vslice_dummy_var_1778: int;
  var vslice_dummy_var_1779: int;
  var vslice_dummy_var_1780: int;
  var vslice_dummy_var_1781: int;
  var vslice_dummy_var_1782: int;
  var vslice_dummy_var_1783: int;
  var vslice_dummy_var_1784: int;
  var vslice_dummy_var_1785: int;
  var vslice_dummy_var_1786: int;
  var vslice_dummy_var_1787: int;
  var vslice_dummy_var_1788: int;
  var vslice_dummy_var_1789: int;
  var vslice_dummy_var_1790: int;
  var vslice_dummy_var_1791: int;
  var vslice_dummy_var_1792: int;
  var vslice_dummy_var_1793: int;
  var vslice_dummy_var_1794: int;
  var vslice_dummy_var_1795: int;
  var vslice_dummy_var_1796: int;
  var vslice_dummy_var_1797: int;
  var vslice_dummy_var_1798: int;
  var vslice_dummy_var_1799: int;
  var vslice_dummy_var_1800: int;

  entry:
    out_EventArmed, out_sdv_1053, out_sdv_1055, out_sdv_1059, out_TargetCluster_1, out_Status_32, out_Buffer_25, out_FcbAcquired_3, out_IoIrp, out_sdv_1075, out_FileOffset_1, out_TargetLbo, out_Tmp_1759, out_sdv_1093, out_sdv_1094, out_DiskSpaceAllocated, out_boogieTmp, out_vslice_dummy_var_308, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312, out_vslice_dummy_var_313, out_vslice_dummy_var_314, out_vslice_dummy_var_315 := in_EventArmed, in_sdv_1053, in_sdv_1055, in_sdv_1059, in_TargetCluster_1, in_Status_32, in_Buffer_25, in_FcbAcquired_3, in_IoIrp, in_sdv_1075, in_FileOffset_1, in_TargetLbo, in_Tmp_1759, in_sdv_1093, in_sdv_1094, in_DiskSpaceAllocated, in_boogieTmp, in_vslice_dummy_var_308, in_vslice_dummy_var_309, in_vslice_dummy_var_310, in_vslice_dummy_var_311, in_vslice_dummy_var_312, in_vslice_dummy_var_313, in_vslice_dummy_var_314, in_vslice_dummy_var_315;
    goto L372, exit;

  exit:
    return;

  L372:
    assume {:nonnull} in_ByteCount_17 != 0;
    assume in_ByteCount_17 > 0;
    goto anon130_Else;

  anon130_Else:
    call {:si_unique_call 4943} out_vslice_dummy_var_308 := corral_nondet();
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} out_FcbAcquired_3 != 0;
    goto L385;

  L385:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} out_Buffer_25 != 0;
    goto L389;

  L389:
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1794;
    call {:si_unique_call 4939} FatComputeMoveFileParameter(in_IrpContext_100, vslice_dummy_var_1794, in_BufferSize, out_FileOffset_1, in_ByteCount_17, in_BytesToReallocate_1, in_BytesToWrite, in_LargeSourceLbo);
    assume {:nonnull} in_ByteCount_17 != 0;
    assume in_ByteCount_17 > 0;
    goto anon133_Else;

  anon133_Else:
    assume {:nonnull} in_BytesToReallocate_1 != 0;
    assume in_BytesToReallocate_1 > 0;
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1791;
    havoc vslice_dummy_var_1792;
    call {:si_unique_call 4936} FatComputeMoveFileSplicePoints(in_IrpContext_100, vslice_dummy_var_1791, out_FileOffset_1, out_TargetCluster_1, vslice_dummy_var_1792, in_FirstSpliceSourceCluster_1, in_FirstSpliceTargetCluster_1, in_SecondSpliceSourceCluster_1, in_SecondSpliceTargetCluster_1, in_SourceMcb_1);
    assume {:nonnull} in_BytesToReallocate_1 != 0;
    assume in_BytesToReallocate_1 > 0;
    assume {:nonnull} in_TempByteCount != 0;
    assume in_TempByteCount > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1793;
    call {:si_unique_call 4937} FatAllocateDiskSpace(in_IrpContext_100, vslice_dummy_var_1793, out_TargetCluster_1, in_TempByteCount, 1, in_TargetMcb);
    out_DiskSpaceAllocated := 1;
    call {:si_unique_call 4938} out_sdv_1055 := corral_nondet();
    goto anon134_Then;

  anon134_Then:
    assume {:partition} out_sdv_1055 == 1;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1790;
    call {:si_unique_call 4935} out_sdv_1075 := FatGetNextMcbEntry(vslice_dummy_var_1790, in_TargetMcb, 0, in_TempVbo, in_TempLbo, in_TempByteCount);
    goto anon135_Else;

  anon135_Else:
    assume {:partition} out_sdv_1075 != 0;
    goto anon136_Else;

  anon136_Else:
    assume {:nonnull} in_BytesToReallocate_1 != 0;
    assume in_BytesToReallocate_1 > 0;
    assume {:nonnull} in_TempByteCount != 0;
    assume in_TempByteCount > 0;
    goto anon137_Else;

  anon137_Else:
    call {:si_unique_call 4931} out_Tmp_1759 := corral_nondet();
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1789;
    call {:si_unique_call 4932} FatFlushFatEntries(in_IrpContext_100, vslice_dummy_var_1789, out_TargetCluster_1, out_Tmp_1759);
    call {:si_unique_call 4933} out_vslice_dummy_var_310 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    out_EventArmed := 1;
    call {:si_unique_call 4934} ExReleaseResourceLite(0);
    assume {:nonnull} in_BytesToWrite != 0;
    assume in_BytesToWrite > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    call {:si_unique_call 4955} KeInitializeEvent(in_IoEvent, 0, 0);
    assume {:nonnull} in_BytesToWrite != 0;
    assume in_BytesToWrite > 0;
    havoc vslice_dummy_var_1800;
    call {:si_unique_call 4956} out_IoIrp := IoBuildSynchronousFsdRequest(3, 0, 0, vslice_dummy_var_1800, 0, 0, in_Iosb_17);
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} out_IoIrp != 0;
    goto L442;

  L442:
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1799;
    call {:si_unique_call 4953} out_Status_32 := sdv_IoCallDriver(vslice_dummy_var_1799, out_IoIrp);
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} out_Status_32 == 259;
    call {:si_unique_call 4952} out_vslice_dummy_var_311 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_Iosb_17 != 0;
    assume in_Iosb_17 > 0;
    havoc out_Status_32;
    goto L447;

  L447:
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} out_Status_32 >= 0;
    goto L453;

  L453:
    call {:si_unique_call 4948} KeInitializeEvent(in_IoEvent, 0, 0);
    assume {:nonnull} in_BytesToWrite != 0;
    assume in_BytesToWrite > 0;
    havoc vslice_dummy_var_1798;
    call {:si_unique_call 4949} out_IoIrp := IoBuildSynchronousFsdRequest(4, 0, 0, vslice_dummy_var_1798, 0, 0, in_Iosb_17);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} out_IoIrp != 0;
    goto L462;

  L462:
    call {:si_unique_call 4945} out_sdv_1059 := sdv_IoGetNextIrpStackLocation(out_IoIrp);
    assume {:nonnull} out_sdv_1059 != 0;
    assume out_sdv_1059 > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1797;
    call {:si_unique_call 4946} out_Status_32 := sdv_IoCallDriver(vslice_dummy_var_1797, out_IoIrp);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} out_Status_32 == 259;
    call {:si_unique_call 4944} out_vslice_dummy_var_312 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_Iosb_17 != 0;
    assume in_Iosb_17 > 0;
    havoc out_Status_32;
    goto L471;

  L471:
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} out_Status_32 < 0;
    assume {:nonnull} in_IrpContext_100 != 0;
    assume in_IrpContext_100 > 0;
    call {:si_unique_call 4929} out_sdv_1053 := corral_nondet();
    call {:si_unique_call 4930} ExRaiseStatus(out_sdv_1053);
    goto L427;

  L427:
    assume {:nonnull} in_SecondSpliceSourceCluster_1 != 0;
    assume in_SecondSpliceSourceCluster_1 > 0;
    assume {:nonnull} in_SecondSpliceTargetCluster_1 != 0;
    assume in_SecondSpliceTargetCluster_1 > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1784;
    havoc vslice_dummy_var_1785;
    havoc vslice_dummy_var_1786;
    call {:si_unique_call 4927} FatSetFatEntry#1(in_IrpContext_100, vslice_dummy_var_1784, vslice_dummy_var_1785, vslice_dummy_var_1786);
    assume {:nonnull} in_SecondSpliceSourceCluster_1 != 0;
    assume in_SecondSpliceSourceCluster_1 > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1787;
    havoc vslice_dummy_var_1788;
    call {:si_unique_call 4928} FatFlushFatEntries(in_IrpContext_100, vslice_dummy_var_1787, vslice_dummy_var_1788, 1);
    assume {:nonnull} in_FirstSpliceSourceCluster_1 != 0;
    assume in_FirstSpliceSourceCluster_1 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} in_FirstSpliceSourceCluster_1 != 0;
    assume in_FirstSpliceSourceCluster_1 > 0;
    assume {:nonnull} in_FirstSpliceTargetCluster_1 != 0;
    assume in_FirstSpliceTargetCluster_1 > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1775;
    havoc vslice_dummy_var_1776;
    havoc vslice_dummy_var_1777;
    call {:si_unique_call 4921} FatSetFatEntry#1(in_IrpContext_100, vslice_dummy_var_1775, vslice_dummy_var_1776, vslice_dummy_var_1777);
    assume {:nonnull} in_FirstSpliceSourceCluster_1 != 0;
    assume in_FirstSpliceSourceCluster_1 > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1778;
    havoc vslice_dummy_var_1779;
    call {:si_unique_call 4922} FatFlushFatEntries(in_IrpContext_100, vslice_dummy_var_1778, vslice_dummy_var_1779, 1);
    goto L508;

  L508:
    out_DiskSpaceAllocated := 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1773;
    call {:si_unique_call 4918} FatDeallocateDiskSpace(in_IrpContext_100, vslice_dummy_var_1773, in_SourceMcb_1);
    call {:si_unique_call 4919} FatUnpinRepinnedBcbs(in_IrpContext_100);
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1774;
    call {:si_unique_call 4920} out_Status_32 := FatHijackIrpAndFlushDevice(in_IrpContext_100, in_Irp_37, vslice_dummy_var_1774);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} out_Status_32 >= 0;
    goto L521;

  L521:
    assume {:nonnull} in_BytesToReallocate_1 != 0;
    assume in_BytesToReallocate_1 > 0;
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1765;
    havoc vslice_dummy_var_1766;
    havoc vslice_dummy_var_1767;
    call {:si_unique_call 4906} FatRemoveMcbEntry(vslice_dummy_var_1765, vslice_dummy_var_1766, out_FileOffset_1, vslice_dummy_var_1767);
    assume {:nonnull} in_BytesToReallocate_1 != 0;
    assume in_BytesToReallocate_1 > 0;
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1768;
    havoc vslice_dummy_var_1769;
    havoc vslice_dummy_var_1770;
    call {:si_unique_call 4907} out_vslice_dummy_var_313 := FatAddMcbEntry(vslice_dummy_var_1768, vslice_dummy_var_1769, out_FileOffset_1, out_TargetLbo, vslice_dummy_var_1770);
    call {:si_unique_call 4908} out_vslice_dummy_var_314 := KeSetEvent(in_StackEvent, 0, 0);
    call {:si_unique_call 4909} out_vslice_dummy_var_315 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    out_EventArmed := 0;
    call {:si_unique_call 4910} ExReleaseResourceLite(0);
    call {:si_unique_call 4911} ExReleaseResourceLite(0);
    out_FcbAcquired_3 := 0;
    call {:si_unique_call 4912} out_TargetCluster_1 := corral_nondet();
    assume {:nonnull} in_BytesToReallocate_1 != 0;
    assume in_BytesToReallocate_1 > 0;
    havoc out_FileOffset_1;
    assume {:nonnull} in_BytesToReallocate_1 != 0;
    assume in_BytesToReallocate_1 > 0;
    havoc out_TargetLbo;
    assume {:nonnull} in_ByteCount_17 != 0;
    assume in_ByteCount_17 > 0;
    assume {:nonnull} in_BytesToReallocate_1 != 0;
    assume in_BytesToReallocate_1 > 0;
    assume {:nonnull} in_BytesToReallocate_1 != 0;
    assume in_BytesToReallocate_1 > 0;
    assume {:nonnull} in_LargeTargetLbo != 0;
    assume in_LargeTargetLbo > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1771;
    call {:si_unique_call 4913} FatRemoveMcbEntry(vslice_dummy_var_1771, in_SourceMcb_1, 0, -1);
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1772;
    call {:si_unique_call 4914} FatRemoveMcbEntry(vslice_dummy_var_1772, in_TargetMcb, 0, -1);
    call {:si_unique_call 4915} KeClearEvent(in_StackEvent);
    goto L521_dummy;

  L521_dummy:
    call {:si_unique_call 4957} {:si_old_unique_call 1} out_EventArmed, out_sdv_1053, out_sdv_1055, out_sdv_1059, out_TargetCluster_1, out_Status_32, out_Buffer_25, out_FcbAcquired_3, out_IoIrp, out_sdv_1075, out_FileOffset_1, out_TargetLbo, out_Tmp_1759, out_sdv_1093, out_sdv_1094, out_DiskSpaceAllocated, out_boogieTmp, out_vslice_dummy_var_308, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312, out_vslice_dummy_var_313, out_vslice_dummy_var_314, out_vslice_dummy_var_315 := FatMoveFile_loop_L372(in_StackEvent, in_FirstSpliceSourceCluster_1, out_EventArmed, out_sdv_1053, out_sdv_1055, in_SourceMcb_1, out_sdv_1059, in_LargeTargetLbo, in_BytesToReallocate_1, in_TempVbo, out_TargetCluster_1, in_BytesToWrite, in_Dirent_18, out_Status_32, in_TempLbo, in_Iosb_17, out_Buffer_25, out_FcbAcquired_3, in_DirentBcb_8, in_BufferSize, in_SecondSpliceSourceCluster_1, in_LargeSourceLbo, out_IoIrp, in_IoEvent, out_sdv_1075, out_FileOffset_1, in_FirstSpliceTargetCluster_1, out_TargetLbo, out_Tmp_1759, in_SecondSpliceTargetCluster_1, in_Vcb_61, in_TargetMcb, in_FcbOrDcb_8, in_TempByteCount, out_sdv_1093, out_sdv_1094, out_DiskSpaceAllocated, in_ByteCount_17, in_IrpContext_100, in_Irp_37, out_boogieTmp, out_vslice_dummy_var_308, out_vslice_dummy_var_309, out_vslice_dummy_var_310, out_vslice_dummy_var_311, out_vslice_dummy_var_312, out_vslice_dummy_var_313, out_vslice_dummy_var_314, out_vslice_dummy_var_315);
    return;

  anon146_Then:
    assume {:partition} 0 > out_Status_32;
    assume {:nonnull} in_IrpContext_100 != 0;
    assume in_IrpContext_100 > 0;
    call {:si_unique_call 4916} out_sdv_1094 := corral_nondet();
    call {:si_unique_call 4917} ExRaiseStatus(out_sdv_1094);
    goto L521;

  anon145_Then:
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1783;
    call {:si_unique_call 4926} FatGetDirentFromFcbOrDcb(in_IrpContext_100, vslice_dummy_var_1783, in_Dirent_18, in_DirentBcb_8);
    assume {:nonnull} in_Dirent_18 != 0;
    assume in_Dirent_18 > 0;
    assume {:nonnull} in_FirstSpliceTargetCluster_1 != 0;
    assume in_FirstSpliceTargetCluster_1 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_18] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_18] > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} in_Dirent_18 != 0;
    assume in_Dirent_18 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_18] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_18] > 0;
    call {:si_unique_call 4925} out_boogieTmp := corral_nondet();
    goto L564;

  L564:
    assume {:nonnull} in_DirentBcb_8 != 0;
    assume in_DirentBcb_8 > 0;
    assume {:nonnull} in_Vcb_61 != 0;
    assume in_Vcb_61 > 0;
    havoc vslice_dummy_var_1781;
    havoc vslice_dummy_var_1782;
    call {:si_unique_call 4924} FatSetDirtyBcb#1(in_IrpContext_100, vslice_dummy_var_1781, vslice_dummy_var_1782, 1);
    assume {:nonnull} in_DirentBcb_8 != 0;
    assume in_DirentBcb_8 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} in_DirentBcb_8 != 0;
    assume in_DirentBcb_8 > 0;
    goto L569;

  L569:
    assume {:nonnull} in_DirentBcb_8 != 0;
    assume in_DirentBcb_8 > 0;
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1780;
    call {:si_unique_call 4923} FatFlushDirentForFile(in_IrpContext_100, vslice_dummy_var_1780);
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    assume {:nonnull} in_FirstSpliceTargetCluster_1 != 0;
    assume in_FirstSpliceTargetCluster_1 > 0;
    goto L508;

  anon147_Then:
    goto L569;

  anon156_Then:
    goto L564;

  anon144_Then:
    assume {:partition} 0 <= out_Status_32;
    goto L427;

  anon143_Then:
    assume {:partition} out_Status_32 != 259;
    goto L471;

  anon142_Then:
    assume {:partition} out_IoIrp == 0;
    assume {:nonnull} in_IrpContext_100 != 0;
    assume in_IrpContext_100 > 0;
    call {:si_unique_call 4947} ExRaiseStatus(-1073741670);
    goto L462;

  anon141_Then:
    assume {:partition} 0 > out_Status_32;
    assume {:nonnull} in_IrpContext_100 != 0;
    assume in_IrpContext_100 > 0;
    call {:si_unique_call 4950} out_sdv_1093 := corral_nondet();
    call {:si_unique_call 4951} ExRaiseStatus(out_sdv_1093);
    goto L453;

  anon140_Then:
    assume {:partition} out_Status_32 != 259;
    goto L447;

  anon139_Then:
    assume {:partition} out_IoIrp == 0;
    assume {:nonnull} in_IrpContext_100 != 0;
    assume in_IrpContext_100 > 0;
    call {:si_unique_call 4954} ExRaiseStatus(-1073741670);
    goto L442;

  anon138_Then:
    goto L427;

  anon132_Then:
    assume {:partition} out_Buffer_25 == 0;
    call {:si_unique_call 4940} out_Buffer_25 := ExAllocatePoolWithTag(16, in_BufferSize, -948674234);
    goto L389;

  anon131_Then:
    assume {:partition} out_FcbAcquired_3 == 0;
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1795;
    call {:si_unique_call 4941} out_vslice_dummy_var_309 := FatAcquireExclusiveFcb(in_IrpContext_100, vslice_dummy_var_1795);
    out_FcbAcquired_3 := 1;
    assume {:nonnull} in_FcbOrDcb_8 != 0;
    assume in_FcbOrDcb_8 > 0;
    havoc vslice_dummy_var_1796;
    call {:si_unique_call 4942} FatVerifyFcb(in_IrpContext_100, vslice_dummy_var_1796);
    goto L385;
}



procedure {:LoopProcedure} FatMoveFile_loop_L372(in_StackEvent: int, in_FirstSpliceSourceCluster_1: int, in_EventArmed: int, in_sdv_1053: int, in_sdv_1055: int, in_SourceMcb_1: int, in_sdv_1059: int, in_LargeTargetLbo: int, in_BytesToReallocate_1: int, in_TempVbo: int, in_TargetCluster_1: int, in_BytesToWrite: int, in_Dirent_18: int, in_Status_32: int, in_TempLbo: int, in_Iosb_17: int, in_Buffer_25: int, in_FcbAcquired_3: int, in_DirentBcb_8: int, in_BufferSize: int, in_SecondSpliceSourceCluster_1: int, in_LargeSourceLbo: int, in_IoIrp: int, in_IoEvent: int, in_sdv_1075: int, in_FileOffset_1: int, in_FirstSpliceTargetCluster_1: int, in_TargetLbo: int, in_Tmp_1759: int, in_SecondSpliceTargetCluster_1: int, in_Vcb_61: int, in_TargetMcb: int, in_FcbOrDcb_8: int, in_TempByteCount: int, in_sdv_1093: int, in_sdv_1094: int, in_DiskSpaceAllocated: int, in_ByteCount_17: int, in_IrpContext_100: int, in_Irp_37: int, in_boogieTmp: int, in_vslice_dummy_var_308: int, in_vslice_dummy_var_309: int, in_vslice_dummy_var_310: int, in_vslice_dummy_var_311: int, in_vslice_dummy_var_312: int, in_vslice_dummy_var_313: int, in_vslice_dummy_var_314: int, in_vslice_dummy_var_315: int) returns (out_EventArmed: int, out_sdv_1053: int, out_sdv_1055: int, out_sdv_1059: int, out_TargetCluster_1: int, out_Status_32: int, out_Buffer_25: int, out_FcbAcquired_3: int, out_IoIrp: int, out_sdv_1075: int, out_FileOffset_1: int, out_TargetLbo: int, out_Tmp_1759: int, out_sdv_1093: int, out_sdv_1094: int, out_DiskSpaceAllocated: int, out_boogieTmp: int, out_vslice_dummy_var_308: int, out_vslice_dummy_var_309: int, out_vslice_dummy_var_310: int, out_vslice_dummy_var_311: int, out_vslice_dummy_var_312: int, out_vslice_dummy_var_313: int, out_vslice_dummy_var_314: int, out_vslice_dummy_var_315: int);
  modifies alloc, locked, queuedWithoutMarking, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_EventArmed == 0 || out_EventArmed == in_EventArmed;
  free ensures {:va_keep} out_sdv_1053 == in_sdv_1053;
  free ensures {:va_keep} out_FcbAcquired_3 == 0 || out_FcbAcquired_3 == in_FcbAcquired_3;
  free ensures {:va_keep} out_sdv_1093 == in_sdv_1093;
  free ensures {:va_keep} out_sdv_1094 == in_sdv_1094;
  free ensures {:va_keep} out_DiskSpaceAllocated == 0 || out_DiskSpaceAllocated == in_DiskSpaceAllocated;
  free ensures {:va_keep} out_vslice_dummy_var_309 == 1 || out_vslice_dummy_var_309 == 0 || out_vslice_dummy_var_309 == in_vslice_dummy_var_309;
  free ensures {:va_keep} out_vslice_dummy_var_310 == 0 || out_vslice_dummy_var_310 == 1 || out_vslice_dummy_var_310 == in_vslice_dummy_var_310;
  free ensures {:va_keep} out_vslice_dummy_var_311 == 258 || out_vslice_dummy_var_311 == 0 || out_vslice_dummy_var_311 == in_vslice_dummy_var_311;
  free ensures {:va_keep} out_vslice_dummy_var_312 == 258 || out_vslice_dummy_var_312 == 0 || out_vslice_dummy_var_312 == in_vslice_dummy_var_312;
  free ensures {:va_keep} out_vslice_dummy_var_315 == 0 || out_vslice_dummy_var_315 == 1 || out_vslice_dummy_var_315 == in_vslice_dummy_var_315;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatGetRetrievalPointers_loop_L136(in_Tmp_1838: int, in_Tmp_1839: int, in_sdv_1109: int, in_Tmp_1842: int, in_OutputBuffer_3: int, in_RunCount: int, in_Tmp_1847: int, in_OutputBufferLength_3: int, in_Vcb_65: int, in_Vcn: int, in_Run: int, in_Lbo_14: int, in_FcbOrDcb_9: int, in_ByteLength: int, in_Index_5: int, in_StartingRun: int, in_boogieTmp: int) returns (out_Tmp_1838: int, out_Tmp_1839: int, out_sdv_1109: int, out_Tmp_1842: int, out_Tmp_1847: int, out_Run: int, out_Index_5: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1801: int;
  var vslice_dummy_var_1802: int;
  var vslice_dummy_var_1803: int;
  var vslice_dummy_var_1804: int;

  entry:
    out_Tmp_1838, out_Tmp_1839, out_sdv_1109, out_Tmp_1842, out_Tmp_1847, out_Run, out_Index_5, out_boogieTmp := in_Tmp_1838, in_Tmp_1839, in_sdv_1109, in_Tmp_1842, in_Tmp_1847, in_Run, in_Index_5, in_boogieTmp;
    goto L136, exit;

  exit:
    return;

  L136:
    goto anon45_Else;

  anon45_Else:
    assume {:partition} in_RunCount > out_Run;
    goto anon52_Then;

  anon52_Then:
    assume {:partition} true;
    assume {:nonnull} in_FcbOrDcb_9 != 0;
    assume in_FcbOrDcb_9 > 0;
    assume {:nonnull} in_Vcb_65 != 0;
    assume in_Vcb_65 > 0;
    havoc vslice_dummy_var_1803;
    havoc vslice_dummy_var_1804;
    call {:si_unique_call 4962} out_sdv_1109 := FatGetNextMcbEntry(vslice_dummy_var_1803, vslice_dummy_var_1804, out_Run, in_Vcn, in_Lbo_14, in_ByteLength);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} out_sdv_1109 != 0;
    goto L153;

  L153:
    out_Tmp_1838 := out_Index_5;
    assume {:nonnull} in_OutputBuffer_3 != 0;
    assume in_OutputBuffer_3 > 0;
    havoc out_Tmp_1847;
    assume {:nonnull} out_Tmp_1847 != 0;
    assume out_Tmp_1847 > 0;
    call {:si_unique_call 4959} out_boogieTmp := corral_nondet();
    out_Tmp_1839 := out_Index_5;
    assume {:nonnull} in_OutputBuffer_3 != 0;
    assume in_OutputBuffer_3 > 0;
    havoc out_Tmp_1842;
    assume {:nonnull} out_Tmp_1842 != 0;
    assume out_Tmp_1842 > 0;
    call {:si_unique_call 4960} out_boogieTmp := corral_nondet();
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} out_Index_5 != 0;
    goto L157;

  L157:
    out_Index_5 := out_Index_5 + 1;
    out_Run := out_Run + 1;
    goto L157_dummy;

  L157_dummy:
    call {:si_unique_call 4963} {:si_old_unique_call 1} out_Tmp_1838, out_Tmp_1839, out_sdv_1109, out_Tmp_1842, out_Tmp_1847, out_Run, out_Index_5, out_boogieTmp := FatGetRetrievalPointers_loop_L136(out_Tmp_1838, out_Tmp_1839, out_sdv_1109, out_Tmp_1842, in_OutputBuffer_3, in_RunCount, out_Tmp_1847, in_OutputBufferLength_3, in_Vcb_65, in_Vcn, out_Run, in_Lbo_14, in_FcbOrDcb_9, in_ByteLength, out_Index_5, in_StartingRun, out_boogieTmp);
    return;

  anon53_Then:
    assume {:partition} out_Index_5 == 0;
    assume {:nonnull} in_OutputBuffer_3 != 0;
    assume in_OutputBuffer_3 > 0;
    assume {:nonnull} in_StartingRun != 0;
    assume in_StartingRun > 0;
    assume {:nonnull} in_OutputBuffer_3 != 0;
    assume in_OutputBuffer_3 > 0;
    call {:si_unique_call 4958} out_boogieTmp := corral_nondet();
    goto L157;

  anon46_Then:
    assume {:partition} out_sdv_1109 == 0;
    assume {:nonnull} in_FcbOrDcb_9 != 0;
    assume in_FcbOrDcb_9 > 0;
    havoc vslice_dummy_var_1801;
    havoc vslice_dummy_var_1802;
    call {:si_unique_call 4961} KeBugCheckEx(35, 1250142, vslice_dummy_var_1801, vslice_dummy_var_1802, out_Run);
    goto L153;
}



procedure {:LoopProcedure} FatGetRetrievalPointers_loop_L136(in_Tmp_1838: int, in_Tmp_1839: int, in_sdv_1109: int, in_Tmp_1842: int, in_OutputBuffer_3: int, in_RunCount: int, in_Tmp_1847: int, in_OutputBufferLength_3: int, in_Vcb_65: int, in_Vcn: int, in_Run: int, in_Lbo_14: int, in_FcbOrDcb_9: int, in_ByteLength: int, in_Index_5: int, in_StartingRun: int, in_boogieTmp: int) returns (out_Tmp_1838: int, out_Tmp_1839: int, out_sdv_1109: int, out_Tmp_1842: int, out_Tmp_1847: int, out_Run: int, out_Index_5: int, out_boogieTmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSearchBufferForLabel_loop_L27(in_Tmp_1858: int, in_Tmp_1859: int, in_OemString: int, in_Dirent_19: int, in_Tmp_1862: int, in_Tmp_1864: int) returns (out_Tmp_1858: int, out_Tmp_1859: int, out_Tmp_1862: int, out_Tmp_1864: int)
{

  entry:
    out_Tmp_1858, out_Tmp_1859, out_Tmp_1862, out_Tmp_1864 := in_Tmp_1858, in_Tmp_1859, in_Tmp_1862, in_Tmp_1864;
    goto L27, exit;

  exit:
    return;

  L27:
    assume {:CounterLoop 11} true;
    assume {:nonnull} in_OemString != 0;
    assume in_OemString > 0;
    goto anon25_Else;

  anon25_Else:
    assume {:nonnull} in_OemString != 0;
    assume in_OemString > 0;
    havoc out_Tmp_1864;
    assume {:nonnull} in_Dirent_19 != 0;
    assume in_Dirent_19 > 0;
    havoc out_Tmp_1862;
    assume {:nonnull} out_Tmp_1862 != 0;
    assume out_Tmp_1862 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} in_OemString != 0;
    assume in_OemString > 0;
    havoc out_Tmp_1859;
    assume {:nonnull} in_Dirent_19 != 0;
    assume in_Dirent_19 > 0;
    havoc out_Tmp_1858;
    assume {:nonnull} out_Tmp_1858 != 0;
    assume out_Tmp_1858 > 0;
    goto anon31_Else;

  anon31_Else:
    goto L30;

  L30:
    assume {:nonnull} in_OemString != 0;
    assume in_OemString > 0;
    goto L30_dummy;

  L30_dummy:
    call {:si_unique_call 4964} {:si_old_unique_call 1} out_Tmp_1858, out_Tmp_1859, out_Tmp_1862, out_Tmp_1864 := FatSearchBufferForLabel_loop_L27(out_Tmp_1858, out_Tmp_1859, in_OemString, in_Dirent_19, out_Tmp_1862, out_Tmp_1864);
    return;

  anon30_Then:
    goto L30;
}



procedure {:LoopProcedure} FatSearchBufferForLabel_loop_L27(in_Tmp_1858: int, in_Tmp_1859: int, in_OemString: int, in_Dirent_19: int, in_Tmp_1862: int, in_Tmp_1864: int) returns (out_Tmp_1858: int, out_Tmp_1859: int, out_Tmp_1862: int, out_Tmp_1864: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSearchBufferForLabel_loop_L12(in_TerminationDirent: int, in_Dirent_19: int, in_Tmp_1860: int, in_Tmp_1863: int, in_Tmp_1866: int) returns (out_Tmp_1860: int, out_Tmp_1863: int, out_Tmp_1866: int)
{

  entry:
    out_Tmp_1860, out_Tmp_1863, out_Tmp_1866 := in_Tmp_1860, in_Tmp_1863, in_Tmp_1866;
    goto L12, exit;

  exit:
    return;

  L12:
    goto anon23_Else;

  anon23_Else:
    assume {:partition} in_TerminationDirent > in_Dirent_19;
    assume {:nonnull} in_Dirent_19 != 0;
    assume in_Dirent_19 > 0;
    havoc out_Tmp_1860;
    assume {:nonnull} out_Tmp_1860 != 0;
    assume out_Tmp_1860 > 0;
    goto anon27_Else;

  anon27_Else:
    assume {:nonnull} in_Dirent_19 != 0;
    assume in_Dirent_19 > 0;
    havoc out_Tmp_1863;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} out_Tmp_1863 == 8;
    assume {:nonnull} in_Dirent_19 != 0;
    assume in_Dirent_19 > 0;
    havoc out_Tmp_1866;
    assume {:nonnull} out_Tmp_1866 != 0;
    assume out_Tmp_1866 > 0;
    goto anon29_Else;

  anon29_Else:
    goto L18;

  L18:
    goto L18_dummy;

  L18_dummy:
    call {:si_unique_call 4965} {:si_old_unique_call 1} out_Tmp_1860, out_Tmp_1863, out_Tmp_1866 := FatSearchBufferForLabel_loop_L12(in_TerminationDirent, in_Dirent_19, out_Tmp_1860, out_Tmp_1863, out_Tmp_1866);
    return;

  anon28_Then:
    assume {:partition} out_Tmp_1863 != 8;
    goto L18;
}



procedure {:LoopProcedure} FatSearchBufferForLabel_loop_L12(in_TerminationDirent: int, in_Dirent_19: int, in_Tmp_1860: int, in_Tmp_1863: int, in_Tmp_1866: int) returns (out_Tmp_1860: int, out_Tmp_1863: int, out_Tmp_1866: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMountVolume_loop_L265(in_OemString_1: int, in_Dirent_20: int, in_Tmp_1924: int, in_Tmp_1936: int, in_Tmp_1961: int, in_Tmp_1963: int) returns (out_Tmp_1924: int, out_Tmp_1936: int, out_Tmp_1961: int, out_Tmp_1963: int)
{

  entry:
    out_Tmp_1924, out_Tmp_1936, out_Tmp_1961, out_Tmp_1963 := in_Tmp_1924, in_Tmp_1936, in_Tmp_1961, in_Tmp_1963;
    goto L265, exit;

  exit:
    return;

  L265:
    assume {:CounterLoop 11} true;
    assume {:nonnull} in_OemString_1 != 0;
    assume in_OemString_1 > 0;
    goto anon136_Else;

  anon136_Else:
    assume {:nonnull} in_OemString_1 != 0;
    assume in_OemString_1 > 0;
    havoc out_Tmp_1961;
    assume {:nonnull} in_Dirent_20 != 0;
    assume in_Dirent_20 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_20] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_20] > 0;
    havoc out_Tmp_1963;
    assume {:nonnull} out_Tmp_1963 != 0;
    assume out_Tmp_1963 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:nonnull} in_OemString_1 != 0;
    assume in_OemString_1 > 0;
    havoc out_Tmp_1936;
    assume {:nonnull} in_Dirent_20 != 0;
    assume in_Dirent_20 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_20] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_20] > 0;
    havoc out_Tmp_1924;
    assume {:nonnull} out_Tmp_1924 != 0;
    assume out_Tmp_1924 > 0;
    goto anon153_Else;

  anon153_Else:
    goto L268;

  L268:
    assume {:nonnull} in_OemString_1 != 0;
    assume in_OemString_1 > 0;
    goto L268_dummy;

  L268_dummy:
    call {:si_unique_call 4966} {:si_old_unique_call 1} out_Tmp_1924, out_Tmp_1936, out_Tmp_1961, out_Tmp_1963 := FatMountVolume_loop_L265(in_OemString_1, in_Dirent_20, out_Tmp_1924, out_Tmp_1936, out_Tmp_1961, out_Tmp_1963);
    return;

  anon152_Then:
    goto L268;
}



procedure {:LoopProcedure} FatMountVolume_loop_L265(in_OemString_1: int, in_Dirent_20: int, in_Tmp_1924: int, in_Tmp_1936: int, in_Tmp_1961: int, in_Tmp_1963: int) returns (out_Tmp_1924: int, out_Tmp_1936: int, out_Tmp_1961: int, out_Tmp_1963: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMountVolume_loop_L281(in_Links_4: int, in_sdv_1142: int, in_OldVcb: int, in_RealDevice_3: int, in_OldVpb_1: int, in_Vcb_66: int, in_sdv_1160: int, in_sdv_1167: int, in_Vpb_3: int) returns (out_Links_4: int, out_OldVcb: int, out_OldVpb_1: int, out_sdv_1160: int)
{

  entry:
    out_Links_4, out_OldVcb, out_OldVpb_1, out_sdv_1160 := in_Links_4, in_OldVcb, in_OldVpb_1, in_sdv_1160;
    goto L281, exit;

  exit:
    return;

  L281:
    goto anon138_Else;

  anon138_Else:
    call {:si_unique_call 4967} out_sdv_1160 := sdv_containing_record(out_Links_4, 64);
    out_OldVcb := out_sdv_1160;
    assume {:nonnull} out_OldVcb != 0;
    assume out_OldVcb > 0;
    havoc out_OldVpb_1;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} out_OldVpb_1 == in_Vpb_3;
    goto L291;

  L291:
    assume {:nonnull} out_Links_4 != 0;
    assume out_Links_4 > 0;
    havoc out_Links_4;
    goto L291_dummy;

  L291_dummy:
    havoc out_Links_4;
    return;

  anon154_Then:
    assume {:partition} out_OldVpb_1 != in_Vpb_3;
    assume {:nonnull} out_OldVpb_1 != 0;
    assume out_OldVpb_1 > 0;
    assume {:nonnull} in_Vpb_3 != 0;
    assume in_Vpb_3 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} out_OldVcb != 0;
    assume out_OldVcb > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} out_OldVpb_1 != 0;
    assume out_OldVpb_1 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} out_OldVpb_1 != 0;
    assume out_OldVpb_1 > 0;
    assume {:nonnull} in_Vpb_3 != 0;
    assume in_Vpb_3 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} in_Vpb_3 != 0;
    assume in_Vpb_3 > 0;
    assume {:nonnull} out_OldVpb_1 != 0;
    assume out_OldVpb_1 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} in_sdv_1142 == 0;
    assume {:nonnull} in_Vcb_66 != 0;
    assume in_Vcb_66 > 0;
    goto anon156_Then;

  anon156_Then:
    assume {:partition} in_sdv_1167 != 0;
    goto L291;

  anon155_Then:
    assume {:partition} in_sdv_1142 != 0;
    goto L291;

  anon143_Then:
    goto L291;

  anon142_Then:
    goto L291;

  anon141_Then:
    goto L291;

  anon140_Then:
    goto L291;
}



procedure {:LoopProcedure} FatMountVolume_loop_L281(in_Links_4: int, in_sdv_1142: int, in_OldVcb: int, in_RealDevice_3: int, in_OldVpb_1: int, in_Vcb_66: int, in_sdv_1160: int, in_sdv_1167: int, in_Vpb_3: int) returns (out_Links_4: int, out_OldVcb: int, out_OldVpb_1: int, out_sdv_1160: int);
  free ensures {:va_keep} out_Links_4 == in_Links_4;
  free ensures {:va_keep} out_OldVcb == in_OldVcb;
  free ensures {:va_keep} out_OldVpb_1 == in_OldVpb_1;
  free ensures {:va_keep} out_sdv_1160 == in_sdv_1160;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatVerifyVolume_loop_L144(in_Vcb_67: int, in_Fcb_42: int, in_IrpContext_108: int) returns (out_Fcb_42: int)
{
  var vslice_dummy_var_1805: int;

  entry:
    out_Fcb_42 := in_Fcb_42;
    goto L144, exit;

  exit:
    return;

  L144:
    assume {:nonnull} in_Vcb_67 != 0;
    assume in_Vcb_67 > 0;
    havoc vslice_dummy_var_1805;
    call {:si_unique_call 4968} out_Fcb_42 := FatGetNextFcbBottomUp(in_IrpContext_108, out_Fcb_42, vslice_dummy_var_1805);
    goto anon108_Else;

  anon108_Else:
    assume {:partition} out_Fcb_42 != 0;
    call {:si_unique_call 4969} ExReleaseResourceLite(0);
    goto anon108_Else_dummy;

  anon108_Else_dummy:
    call {:si_unique_call 4970} {:si_old_unique_call 1} out_Fcb_42 := FatVerifyVolume_loop_L144(in_Vcb_67, out_Fcb_42, in_IrpContext_108);
    return;
}



procedure {:LoopProcedure} FatVerifyVolume_loop_L144(in_Vcb_67: int, in_Fcb_42: int, in_IrpContext_108: int) returns (out_Fcb_42: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatVerifyVolume_loop_L172(in_Fcb_41: int, in_Vcb_67: int, in_IrpContext_108: int, in_vslice_dummy_var_336: int) returns (out_Fcb_41: int, out_vslice_dummy_var_336: int)
{
  var vslice_dummy_var_1806: int;

  entry:
    out_Fcb_41, out_vslice_dummy_var_336 := in_Fcb_41, in_vslice_dummy_var_336;
    goto L172, exit;

  exit:
    return;

  L172:
    assume {:nonnull} in_Vcb_67 != 0;
    assume in_Vcb_67 > 0;
    havoc vslice_dummy_var_1806;
    call {:si_unique_call 4971} out_Fcb_41 := FatGetNextFcbBottomUp(in_IrpContext_108, out_Fcb_41, vslice_dummy_var_1806);
    goto anon111_Else;

  anon111_Else:
    assume {:partition} out_Fcb_41 != 0;
    call {:si_unique_call 4972} out_vslice_dummy_var_336 := FatAcquireExclusiveFcb(in_IrpContext_108, out_Fcb_41);
    goto anon111_Else_dummy;

  anon111_Else_dummy:
    call {:si_unique_call 4973} {:si_old_unique_call 1} out_Fcb_41, out_vslice_dummy_var_336 := FatVerifyVolume_loop_L172(out_Fcb_41, in_Vcb_67, in_IrpContext_108, out_vslice_dummy_var_336);
    return;
}



procedure {:LoopProcedure} FatVerifyVolume_loop_L172(in_Fcb_41: int, in_Vcb_67: int, in_IrpContext_108: int, in_vslice_dummy_var_336: int) returns (out_Fcb_41: int, out_vslice_dummy_var_336: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_336 == 1 || out_vslice_dummy_var_336 == 0 || out_vslice_dummy_var_336 == in_vslice_dummy_var_336;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatVerifyVolume_loop_L197(in_Vcb_67: int, in_Fcb_43: int, in_IrpContext_108: int, in_vslice_dummy_var_338: int) returns (out_Fcb_43: int, out_vslice_dummy_var_338: int)
{
  var vslice_dummy_var_1807: int;

  entry:
    out_Fcb_43, out_vslice_dummy_var_338 := in_Fcb_43, in_vslice_dummy_var_338;
    goto L197, exit;

  exit:
    return;

  L197:
    assume {:nonnull} in_Vcb_67 != 0;
    assume in_Vcb_67 > 0;
    havoc vslice_dummy_var_1807;
    call {:si_unique_call 4974} out_Fcb_43 := FatGetNextFcbBottomUp(in_IrpContext_108, out_Fcb_43, vslice_dummy_var_1807);
    goto anon112_Else;

  anon112_Else:
    assume {:partition} out_Fcb_43 != 0;
    call {:si_unique_call 4975} out_vslice_dummy_var_338 := FatAcquireExclusiveFcb(in_IrpContext_108, out_Fcb_43);
    goto anon112_Else_dummy;

  anon112_Else_dummy:
    call {:si_unique_call 4976} {:si_old_unique_call 1} out_Fcb_43, out_vslice_dummy_var_338 := FatVerifyVolume_loop_L197(in_Vcb_67, out_Fcb_43, in_IrpContext_108, out_vslice_dummy_var_338);
    return;
}



procedure {:LoopProcedure} FatVerifyVolume_loop_L197(in_Vcb_67: int, in_Fcb_43: int, in_IrpContext_108: int, in_vslice_dummy_var_338: int) returns (out_Fcb_43: int, out_vslice_dummy_var_338: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_338 == 1 || out_vslice_dummy_var_338 == 0 || out_vslice_dummy_var_338 == in_vslice_dummy_var_338;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatVerifyVolume_loop_L323(in_Vpb_4: int, in_sdv_1171: int, in_RootDirectory: int, in_RootDirectorySize: int, in_Status_39: int, in_sdv_1183: int, in_Vcb_67: int, in_RootDirectoryLbo: int, in_LabelFound_1: int, in_AllowRawMount: int, in_RootDirectoryCluster: int, in_IrpContext_108: int) returns (out_sdv_1171: int, out_Status_39: int, out_sdv_1183: int, out_RootDirectoryLbo: int)
{
  var vslice_dummy_var_1808: int;
  var vslice_dummy_var_1809: int;

  entry:
    out_sdv_1171, out_Status_39, out_sdv_1183, out_RootDirectoryLbo := in_sdv_1171, in_Status_39, in_sdv_1183, in_RootDirectoryLbo;
    goto L323, exit;

  exit:
    return;

  L323:
    assume {:nonnull} in_RootDirectoryCluster != 0;
    assume in_RootDirectoryCluster > 0;
    goto anon126_Else;

  anon126_Else:
    call {:si_unique_call 4981} out_RootDirectoryLbo := corral_nondet();
    call {:si_unique_call 4982} out_sdv_1171 := FatPerformVerifyDiskRead(in_IrpContext_108, in_Vcb_67, in_RootDirectory, out_RootDirectoryLbo, in_RootDirectorySize, in_AllowRawMount);
    goto anon128_Else;

  anon128_Else:
    assume {:partition} out_sdv_1171 != 0;
    call {:si_unique_call 4980} out_Status_39 := FatSearchBufferForLabel(in_IrpContext_108, in_Vpb_4, in_RootDirectory, in_RootDirectorySize, in_LabelFound_1);
    goto anon129_Else;

  anon129_Else:
    assume {:partition} out_Status_39 >= 0;
    assume {:nonnull} in_LabelFound_1 != 0;
    assume in_LabelFound_1 > 0;
    goto anon130_Else;

  anon130_Else:
    assume {:nonnull} in_RootDirectoryCluster != 0;
    assume in_RootDirectoryCluster > 0;
    havoc vslice_dummy_var_1808;
    call {:si_unique_call 4978} FatVerifyLookupFatEntry(in_IrpContext_108, in_Vcb_67, vslice_dummy_var_1808, in_RootDirectoryCluster);
    assume {:nonnull} in_RootDirectoryCluster != 0;
    assume in_RootDirectoryCluster > 0;
    havoc vslice_dummy_var_1809;
    call {:si_unique_call 4979} out_sdv_1183 := FatInterpretClusterType(in_Vcb_67, vslice_dummy_var_1809);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} out_sdv_1183 != 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} out_sdv_1183 != 1;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} out_sdv_1183 == 2;
    goto L347;

  L347:
    assume {:nonnull} in_IrpContext_108 != 0;
    assume in_IrpContext_108 > 0;
    call {:si_unique_call 4977} ExRaiseStatus(-1073741566);
    goto L347_dummy;

  L347_dummy:
    goto L_BAF_7;

  L_BAF_7:
    call {:si_unique_call 4983} {:si_old_unique_call 1} out_sdv_1171, out_Status_39, out_sdv_1183, out_RootDirectoryLbo := FatVerifyVolume_loop_L323(in_Vpb_4, out_sdv_1171, in_RootDirectory, in_RootDirectorySize, out_Status_39, out_sdv_1183, in_Vcb_67, out_RootDirectoryLbo, in_LabelFound_1, in_AllowRawMount, in_RootDirectoryCluster, in_IrpContext_108);
    return;

  anon133_Then:
    assume {:partition} out_sdv_1183 != 2;
    goto anon133_Then_dummy;

  anon133_Then_dummy:
    goto L_BAF_7;

  anon134_Then:
    assume {:partition} out_sdv_1183 == 1;
    goto L347;

  anon131_Then:
    assume {:partition} out_sdv_1183 == 0;
    goto L347;
}



procedure {:LoopProcedure} FatVerifyVolume_loop_L323(in_Vpb_4: int, in_sdv_1171: int, in_RootDirectory: int, in_RootDirectorySize: int, in_Status_39: int, in_sdv_1183: int, in_Vcb_67: int, in_RootDirectoryLbo: int, in_LabelFound_1: int, in_AllowRawMount: int, in_RootDirectoryCluster: int, in_IrpContext_108: int) returns (out_sdv_1171: int, out_Status_39: int, out_sdv_1183: int, out_RootDirectoryLbo: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_1171 == 0 || out_sdv_1171 == 1 || out_sdv_1171 == in_sdv_1171;
  free ensures {:va_keep} out_Status_39 == 0 || out_Status_39 == -1073741806 || out_Status_39 == -1073741675 || out_Status_39 == in_Status_39;
  free ensures {:va_keep} out_sdv_1183 == 4 || out_sdv_1183 == 1 || out_sdv_1183 == 2 || out_sdv_1183 == 3 || out_sdv_1183 == 0 || out_sdv_1183 == in_sdv_1183;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatInvalidateVolumes_loop_L54(in_Links_5: int, in_ExistingVcb: int, in_DeviceToMarkBad: int, in_NewVpb: int, in_sdv_1220: int, in_OldIrql: int, in_Tmp_2048: int, in_IrpContext_111: int, in_Tmp_2050: int, in_Tmp_2052: int, in_Tmp_2053: int, in_vslice_dummy_var_346: int) returns (out_Links_5: int, out_ExistingVcb: int, out_NewVpb: int, out_sdv_1220: int, out_OldIrql: int, out_Tmp_2048: int, out_Tmp_2050: int, out_Tmp_2052: int, out_Tmp_2053: int, out_vslice_dummy_var_346: int)
{
  var vslice_dummy_var_1810: int;
  var vslice_dummy_var_1811: int;

  entry:
    out_Links_5, out_ExistingVcb, out_NewVpb, out_sdv_1220, out_OldIrql, out_Tmp_2048, out_Tmp_2050, out_Tmp_2052, out_Tmp_2053, out_vslice_dummy_var_346 := in_Links_5, in_ExistingVcb, in_NewVpb, in_sdv_1220, in_OldIrql, in_Tmp_2048, in_Tmp_2050, in_Tmp_2052, in_Tmp_2053, in_vslice_dummy_var_346;
    goto L54, exit;

  exit:
    return;

  L54:
    goto anon22_Else;

  anon22_Else:
    call {:si_unique_call 4989} out_sdv_1220 := sdv_containing_record(out_Links_5, 64);
    out_ExistingVcb := out_sdv_1220;
    assume {:nonnull} out_Links_5 != 0;
    assume out_Links_5 > 0;
    havoc out_Links_5;
    assume {:nonnull} out_ExistingVcb != 0;
    assume out_ExistingVcb > 0;
    havoc out_Tmp_2053;
    assume {:nonnull} out_Tmp_2053 != 0;
    assume out_Tmp_2053 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 4988} out_vslice_dummy_var_346 := FatAcquireExclusiveVcb(in_IrpContext_111, out_ExistingVcb);
    assume {:nonnull} in_DeviceToMarkBad != 0;
    assume in_DeviceToMarkBad > 0;
    assume {:nonnull} out_ExistingVcb != 0;
    assume out_ExistingVcb > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 4991} out_Tmp_2048 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2048 != 0;
    assume out_Tmp_2048 > 0;
    call {:si_unique_call 4992} IoAcquireVpbSpinLock(out_Tmp_2048);
    assume {:nonnull} out_Tmp_2048 != 0;
    assume out_Tmp_2048 > 0;
    havoc out_OldIrql;
    assume {:nonnull} in_DeviceToMarkBad != 0;
    assume in_DeviceToMarkBad > 0;
    havoc out_Tmp_2050;
    assume {:nonnull} out_Tmp_2050 != 0;
    assume out_Tmp_2050 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} out_ExistingVcb != 0;
    assume out_ExistingVcb > 0;
    havoc out_NewVpb;
    assume {:nonnull} out_ExistingVcb != 0;
    assume out_ExistingVcb > 0;
    assume {:nonnull} out_ExistingVcb != 0;
    assume out_ExistingVcb > 0;
    call {:si_unique_call 4990} sdv_RtlZeroMemory(0, 88);
    assume {:nonnull} out_NewVpb != 0;
    assume out_NewVpb > 0;
    assume {:nonnull} out_NewVpb != 0;
    assume out_NewVpb > 0;
    assume {:nonnull} out_NewVpb != 0;
    assume out_NewVpb > 0;
    assume {:nonnull} in_DeviceToMarkBad != 0;
    assume in_DeviceToMarkBad > 0;
    havoc out_Tmp_2052;
    assume {:nonnull} out_NewVpb != 0;
    assume out_NewVpb > 0;
    assume {:nonnull} out_Tmp_2052 != 0;
    assume out_Tmp_2052 > 0;
    assume {:nonnull} in_DeviceToMarkBad != 0;
    assume in_DeviceToMarkBad > 0;
    goto L75;

  L75:
    call {:si_unique_call 4987} IoReleaseVpbSpinLock(out_OldIrql);
    goto L69;

  L69:
    assume {:nonnull} out_ExistingVcb != 0;
    assume out_ExistingVcb > 0;
    assume {:nonnull} out_ExistingVcb != 0;
    assume out_ExistingVcb > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_ExistingVcb != 0;
    assume out_ExistingVcb > 0;
    havoc vslice_dummy_var_1810;
    call {:si_unique_call 4985} FatMarkFcbCondition(in_IrpContext_111, vslice_dummy_var_1810, 2, 1);
    assume {:nonnull} out_ExistingVcb != 0;
    assume out_ExistingVcb > 0;
    havoc vslice_dummy_var_1811;
    call {:si_unique_call 4986} FatPurgeReferencedFileObjects(in_IrpContext_111, vslice_dummy_var_1811, 0);
    goto L91;

  L91:
    call {:si_unique_call 4984} ExReleaseResourceLite(0);
    goto L91_dummy;

  L91_dummy:
    goto L_BAF_8;

  L_BAF_8:
    call {:si_unique_call 4993} {:si_old_unique_call 1} out_Links_5, out_ExistingVcb, out_NewVpb, out_sdv_1220, out_OldIrql, out_Tmp_2048, out_Tmp_2050, out_Tmp_2052, out_Tmp_2053, out_vslice_dummy_var_346 := FatInvalidateVolumes_loop_L54(out_Links_5, out_ExistingVcb, in_DeviceToMarkBad, out_NewVpb, out_sdv_1220, out_OldIrql, out_Tmp_2048, in_IrpContext_111, out_Tmp_2050, out_Tmp_2052, out_Tmp_2053, out_vslice_dummy_var_346);
    return;

  anon27_Then:
    goto L91;

  anon26_Then:
    goto L75;

  anon23_Then:
    goto L69;

  anon25_Then:
    goto anon25_Then_dummy;

  anon25_Then_dummy:
    goto L_BAF_8;
}



procedure {:LoopProcedure} FatInvalidateVolumes_loop_L54(in_Links_5: int, in_ExistingVcb: int, in_DeviceToMarkBad: int, in_NewVpb: int, in_sdv_1220: int, in_OldIrql: int, in_Tmp_2048: int, in_IrpContext_111: int, in_Tmp_2050: int, in_Tmp_2052: int, in_Tmp_2053: int, in_vslice_dummy_var_346: int) returns (out_Links_5: int, out_ExistingVcb: int, out_NewVpb: int, out_sdv_1220: int, out_OldIrql: int, out_Tmp_2048: int, out_Tmp_2050: int, out_Tmp_2052: int, out_Tmp_2053: int, out_vslice_dummy_var_346: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Links_5 == in_Links_5;
  free ensures {:va_keep} out_ExistingVcb == in_ExistingVcb;
  free ensures {:va_keep} out_NewVpb == in_NewVpb;
  free ensures {:va_keep} out_sdv_1220 == in_sdv_1220;
  free ensures {:va_keep} out_OldIrql == in_OldIrql;
  free ensures {:va_keep} out_Tmp_2048 == in_Tmp_2048;
  free ensures {:va_keep} out_Tmp_2050 == in_Tmp_2050;
  free ensures {:va_keep} out_Tmp_2052 == in_Tmp_2052;
  free ensures {:va_keep} out_Tmp_2053 == in_Tmp_2053;
  free ensures {:va_keep} out_vslice_dummy_var_346 == in_vslice_dummy_var_346;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatScanForDismountedVcb_loop_L15(in_Links_6: int, in_sdv_1228: int, in_sdv_1229: int, in_Vcb_71: int, in_VcbDeleted_1: int, in_IrpContext_113: int) returns (out_Links_6: int, out_sdv_1228: int, out_sdv_1229: int, out_Vcb_71: int, out_VcbDeleted_1: int)
{

  entry:
    out_Links_6, out_sdv_1228, out_sdv_1229, out_Vcb_71, out_VcbDeleted_1 := in_Links_6, in_sdv_1228, in_sdv_1229, in_Vcb_71, in_VcbDeleted_1;
    goto L15, exit;

  exit:
    return;

  L15:
    goto anon9_Else;

  anon9_Else:
    call {:si_unique_call 4996} out_sdv_1228 := sdv_containing_record(out_Links_6, 64);
    out_Vcb_71 := out_sdv_1228;
    assume {:nonnull} out_Links_6 != 0;
    assume out_Links_6 > 0;
    havoc out_Links_6;
    call {:si_unique_call 4997} out_sdv_1229 := ExAcquireResourceExclusiveLite(0, 0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} out_sdv_1229 != 0;
    call {:si_unique_call 4995} out_VcbDeleted_1 := FatCheckForDismount#1(in_IrpContext_113, out_Vcb_71, 0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} out_VcbDeleted_1 == 0;
    call {:si_unique_call 4994} ExReleaseResourceLite(0);
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    goto L_BAF_9;

  L_BAF_9:
    call {:si_unique_call 4998} {:si_old_unique_call 1} out_Links_6, out_sdv_1228, out_sdv_1229, out_Vcb_71, out_VcbDeleted_1 := FatScanForDismountedVcb_loop_L15(out_Links_6, out_sdv_1228, out_sdv_1229, out_Vcb_71, out_VcbDeleted_1, in_IrpContext_113);
    return;

  anon11_Then:
    assume {:partition} out_VcbDeleted_1 != 0;
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    goto L_BAF_9;

  anon10_Then:
    assume {:partition} out_sdv_1229 == 0;
    goto anon10_Then_dummy;

  anon10_Then_dummy:
    goto L_BAF_9;
}



procedure {:LoopProcedure} FatScanForDismountedVcb_loop_L15(in_Links_6: int, in_sdv_1228: int, in_sdv_1229: int, in_Vcb_71: int, in_VcbDeleted_1: int, in_IrpContext_113: int) returns (out_Links_6: int, out_sdv_1228: int, out_sdv_1229: int, out_Vcb_71: int, out_VcbDeleted_1: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Links_6 == in_Links_6;
  free ensures {:va_keep} out_sdv_1228 == in_sdv_1228;
  free ensures {:va_keep} out_sdv_1229 == in_sdv_1229;
  free ensures {:va_keep} out_Vcb_71 == in_Vcb_71;
  free ensures {:va_keep} out_VcbDeleted_1 == in_VcbDeleted_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:SIextraRecBound 2} FatFlushDirectory_loop_L106(in_ReturnStatus: int, in_NextFcb_3: int, in_Fcb_49: int, in_Status_49: int, in_Tmp_2126: int, in_IrpContext_129: int, in_Dcb_11: int, in_FlushType_3: int) returns (out_ReturnStatus: int, out_NextFcb_3: int, out_Fcb_49: int, out_Status_49: int, out_Tmp_2126: int)
{

  entry:
    out_ReturnStatus, out_NextFcb_3, out_Fcb_49, out_Status_49, out_Tmp_2126 := in_ReturnStatus, in_NextFcb_3, in_Fcb_49, in_Status_49, in_Tmp_2126;
    goto L106, exit;

  exit:
    return;

  L106:
    goto anon58_Else;

  anon58_Else:
    assume {:partition} out_Fcb_49 != 0;
    call {:si_unique_call 4999} out_NextFcb_3 := FatGetNextFcbTopDown(in_IrpContext_129, out_Fcb_49, in_Dcb_11);
    out_Tmp_2126 := out_Fcb_49;
    assume {:nonnull} out_Tmp_2126 != 0;
    assume out_Tmp_2126 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} out_Fcb_49 != 0;
    assume out_Fcb_49 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} out_Fcb_49 != 0;
    assume out_Fcb_49 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L117;

  L117:
    call {:si_unique_call 5000} FatVerifyFcb(in_IrpContext_129, out_Fcb_49);
    assume {:nonnull} out_Fcb_49 != 0;
    assume out_Fcb_49 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 5001} out_Status_49 := FatFlushFile(in_IrpContext_129, out_Fcb_49, in_FlushType_3);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} out_Status_49 < 0;
    out_ReturnStatus := out_Status_49;
    goto L115;

  L115:
    out_Fcb_49 := out_NextFcb_3;
    goto L115_dummy;

  L115_dummy:
    call {:si_unique_call 5002} {:si_old_unique_call 1} out_ReturnStatus, out_NextFcb_3, out_Fcb_49, out_Status_49, out_Tmp_2126 := FatFlushDirectory_loop_L106(out_ReturnStatus, out_NextFcb_3, out_Fcb_49, out_Status_49, out_Tmp_2126, in_IrpContext_129, in_Dcb_11, in_FlushType_3);
    return;

  anon62_Then:
    assume {:partition} 0 <= out_Status_49;
    goto L115;

  anon61_Then:
    goto L115;

  anon60_Then:
    goto L115;

  anon59_Then:
    goto L117;

  anon66_Then:
    goto L115;
}



procedure {:LoopProcedure} FatFlushDirectory_loop_L106(in_ReturnStatus: int, in_NextFcb_3: int, in_Fcb_49: int, in_Status_49: int, in_Tmp_2126: int, in_IrpContext_129: int, in_Dcb_11: int, in_FlushType_3: int) returns (out_ReturnStatus: int, out_NextFcb_3: int, out_Fcb_49: int, out_Status_49: int, out_Tmp_2126: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} out_NextFcb_3 == 0 || out_NextFcb_3 == in_NextFcb_3;
  free ensures {:va_keep} out_Fcb_49 == 0 || out_Fcb_49 == in_Fcb_49;
  free ensures {:va_keep} out_Tmp_2126 == 0 || out_Tmp_2126 == in_Tmp_2126 || out_Tmp_2126 == in_Fcb_49;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:SIextraRecBound 2} FatFlushDirectory_loop_L25(in_ReturnStatus: int, in_NextFcb_3: int, in_Fcb_49: int, in_Dirent_21: int, in_Status_49: int, in_DirentBcb_11: int, in_Tmp_2125: int, in_Vcb_82: int, in_IrpContext_129: int, in_Dcb_11: int, in_FlushType_3: int, in_vslice_dummy_var_376: int) returns (out_ReturnStatus: int, out_NextFcb_3: int, out_Fcb_49: int, out_Status_49: int, out_Tmp_2125: int, out_vslice_dummy_var_376: int)
{
  var vslice_dummy_var_1812: int;

  entry:
    out_ReturnStatus, out_NextFcb_3, out_Fcb_49, out_Status_49, out_Tmp_2125, out_vslice_dummy_var_376 := in_ReturnStatus, in_NextFcb_3, in_Fcb_49, in_Status_49, in_Tmp_2125, in_vslice_dummy_var_376;
    goto L25, exit;

  exit:
    return;

  L25:
    goto anon47_Else;

  anon47_Else:
    assume {:partition} out_Fcb_49 != 0;
    call {:si_unique_call 5004} out_NextFcb_3 := FatGetNextFcbTopDown(in_IrpContext_129, out_Fcb_49, in_Dcb_11);
    out_Tmp_2125 := out_Fcb_49;
    assume {:nonnull} out_Tmp_2125 != 0;
    assume out_Tmp_2125 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} in_Vcb_82 != 0;
    assume in_Vcb_82 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} out_Fcb_49 != 0;
    assume out_Fcb_49 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} out_Fcb_49 != 0;
    assume out_Fcb_49 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L35;

  L35:
    call {:si_unique_call 5008} out_vslice_dummy_var_376 := FatAcquireExclusiveFcb(in_IrpContext_129, out_Fcb_49);
    assume {:nonnull} in_Vcb_82 != 0;
    assume in_Vcb_82 > 0;
    call {:si_unique_call 5009} FatVerifyFcb(in_IrpContext_129, out_Fcb_49);
    assume {:nonnull} out_Fcb_49 != 0;
    assume out_Fcb_49 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L78;

  L78:
    assume {:nonnull} in_DirentBcb_11 != 0;
    assume in_DirentBcb_11 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} in_DirentBcb_11 != 0;
    assume in_DirentBcb_11 > 0;
    goto L79;

  L79:
    assume {:nonnull} in_Vcb_82 != 0;
    assume in_Vcb_82 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 5003} ExReleaseResourceLite(0);
    goto L32;

  L32:
    out_Fcb_49 := out_NextFcb_3;
    goto L32_dummy;

  L32_dummy:
    call {:si_unique_call 5010} {:si_old_unique_call 1} out_ReturnStatus, out_NextFcb_3, out_Fcb_49, out_Status_49, out_Tmp_2125, out_vslice_dummy_var_376 := FatFlushDirectory_loop_L25(out_ReturnStatus, out_NextFcb_3, out_Fcb_49, in_Dirent_21, out_Status_49, in_DirentBcb_11, out_Tmp_2125, in_Vcb_82, in_IrpContext_129, in_Dcb_11, in_FlushType_3, out_vslice_dummy_var_376);
    return;

  anon54_Then:
    goto L32;

  anon53_Then:
    goto L79;

  anon51_Then:
    assume {:nonnull} out_Fcb_49 != 0;
    assume out_Fcb_49 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} out_Fcb_49 != 0;
    assume out_Fcb_49 > 0;
    havoc vslice_dummy_var_1812;
    call {:si_unique_call 5007} FatTruncateFileAllocation(in_IrpContext_129, out_Fcb_49, vslice_dummy_var_1812);
    goto L87;

  L87:
    call {:si_unique_call 5006} FatGetDirentFromFcbOrDcb(in_IrpContext_129, out_Fcb_49, in_Dirent_21, in_DirentBcb_11);
    assume {:nonnull} in_Dirent_21 != 0;
    assume in_Dirent_21 > 0;
    assume {:nonnull} out_Fcb_49 != 0;
    assume out_Fcb_49 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_21] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_21] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} in_Dirent_21 != 0;
    assume in_Dirent_21 > 0;
    assume {:nonnull} out_Fcb_49 != 0;
    assume out_Fcb_49 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_21] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_21] > 0;
    goto L94;

  L94:
    assume {:nonnull} in_DirentBcb_11 != 0;
    assume in_DirentBcb_11 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} in_DirentBcb_11 != 0;
    assume in_DirentBcb_11 > 0;
    goto L96;

  L96:
    call {:si_unique_call 5005} out_Status_49 := FatFlushFile(in_IrpContext_129, out_Fcb_49, in_FlushType_3);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} out_Status_49 < 0;
    out_ReturnStatus := out_Status_49;
    goto L78;

  anon57_Then:
    assume {:partition} 0 <= out_Status_49;
    goto L78;

  anon56_Then:
    goto L96;

  anon55_Then:
    goto L94;

  anon52_Then:
    goto L87;

  anon50_Then:
    goto L32;

  anon49_Then:
    goto L35;

  anon48_Then:
    goto L32;

  anon65_Then:
    goto L32;
}



procedure {:LoopProcedure} FatFlushDirectory_loop_L25(in_ReturnStatus: int, in_NextFcb_3: int, in_Fcb_49: int, in_Dirent_21: int, in_Status_49: int, in_DirentBcb_11: int, in_Tmp_2125: int, in_Vcb_82: int, in_IrpContext_129: int, in_Dcb_11: int, in_FlushType_3: int, in_vslice_dummy_var_376: int) returns (out_ReturnStatus: int, out_NextFcb_3: int, out_Fcb_49: int, out_Status_49: int, out_Tmp_2125: int, out_vslice_dummy_var_376: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_NextFcb_3 == 0 || out_NextFcb_3 == in_NextFcb_3;
  free ensures {:va_keep} out_Fcb_49 == 0 || out_Fcb_49 == in_Fcb_49;
  free ensures {:va_keep} out_Tmp_2125 == 0 || out_Tmp_2125 == in_Tmp_2125 || out_Tmp_2125 == in_Fcb_49;
  free ensures {:va_keep} out_vslice_dummy_var_376 == 1 || out_vslice_dummy_var_376 == 0 || out_vslice_dummy_var_376 == in_vslice_dummy_var_376;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatFlushFat_loop_L40(in_ReturnStatus_2: int, in_Offset_3: int, in_Iosb_24: int, in_Page_3: int, in_sdv_1329: int, in_NumberOfPages_2: int) returns (out_ReturnStatus_2: int, out_Page_3: int, out_sdv_1329: int)
{

  entry:
    out_ReturnStatus_2, out_Page_3, out_sdv_1329 := in_ReturnStatus_2, in_Page_3, in_sdv_1329;
    goto L40, exit;

  exit:
    return;

  L40:
    goto anon24_Else;

  anon24_Else:
    assume {:partition} in_NumberOfPages_2 > out_Page_3;
    call {:si_unique_call 5011} out_sdv_1329 := corral_nondet();
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} out_sdv_1329 != 0;
    assume {:nonnull} in_Iosb_24 != 0;
    assume in_Iosb_24 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} in_Iosb_24 != 0;
    assume in_Iosb_24 > 0;
    havoc out_ReturnStatus_2;
    goto L54;

  L54:
    out_Page_3 := out_Page_3 + 1;
    assume {:nonnull} in_Offset_3 != 0;
    assume in_Offset_3 > 0;
    goto L54_dummy;

  L54_dummy:
    call {:si_unique_call 5012} {:si_old_unique_call 1} out_ReturnStatus_2, out_Page_3, out_sdv_1329 := FatFlushFat_loop_L40(out_ReturnStatus_2, in_Offset_3, in_Iosb_24, out_Page_3, out_sdv_1329, in_NumberOfPages_2);
    return;

  anon26_Then:
    goto L54;

  anon25_Then:
    assume {:partition} out_sdv_1329 == 0;
    goto L54;
}



procedure {:LoopProcedure} FatFlushFat_loop_L40(in_ReturnStatus_2: int, in_Offset_3: int, in_Iosb_24: int, in_Page_3: int, in_sdv_1329: int, in_NumberOfPages_2: int) returns (out_ReturnStatus_2: int, out_Page_3: int, out_sdv_1329: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonWrite_loop_L202(in_IoRuns_2: int, in_Tmp_2185: int, in_BytesPerFat: int, in_Tmp_2190: int, in_Vcb_87: int, in_WriteLength: int, in_Tmp_2207: int, in_Tmp_2212: int, in_StartingDirtyVbo: int, in_StartingVbo_7: int, in_Fat: int) returns (out_Tmp_2185: int, out_Tmp_2190: int, out_Tmp_2207: int, out_Tmp_2212: int, out_Fat: int)
{

  entry:
    out_Tmp_2185, out_Tmp_2190, out_Tmp_2207, out_Tmp_2212, out_Fat := in_Tmp_2185, in_Tmp_2190, in_Tmp_2207, in_Tmp_2212, in_Fat;
    goto L202, exit;

  exit:
    return;

  L202:
    assume {:nonnull} in_Vcb_87 != 0;
    assume in_Vcb_87 > 0;
    goto anon454_Else;

  anon454_Else:
    out_Tmp_2212 := out_Fat;
    assume {:nonnull} in_IoRuns_2 != 0;
    assume in_IoRuns_2 > 0;
    out_Tmp_2190 := out_Fat;
    assume {:nonnull} in_IoRuns_2 != 0;
    assume in_IoRuns_2 > 0;
    out_Tmp_2185 := out_Fat;
    assume {:nonnull} in_IoRuns_2 != 0;
    assume in_IoRuns_2 > 0;
    out_Tmp_2207 := out_Fat;
    assume {:nonnull} in_IoRuns_2 != 0;
    assume in_IoRuns_2 > 0;
    out_Fat := out_Fat + 1;
    goto anon454_Else_dummy;

  anon454_Else_dummy:
    call {:si_unique_call 5013} {:si_old_unique_call 1} out_Tmp_2185, out_Tmp_2190, out_Tmp_2207, out_Tmp_2212, out_Fat := FatCommonWrite_loop_L202(in_IoRuns_2, out_Tmp_2185, in_BytesPerFat, out_Tmp_2190, in_Vcb_87, in_WriteLength, out_Tmp_2207, out_Tmp_2212, in_StartingDirtyVbo, in_StartingVbo_7, out_Fat);
    return;
}



procedure {:LoopProcedure} FatCommonWrite_loop_L202(in_IoRuns_2: int, in_Tmp_2185: int, in_BytesPerFat: int, in_Tmp_2190: int, in_Vcb_87: int, in_WriteLength: int, in_Tmp_2207: int, in_Tmp_2212: int, in_StartingDirtyVbo: int, in_StartingVbo_7: int, in_Fat: int) returns (out_Tmp_2185: int, out_Tmp_2190: int, out_Tmp_2207: int, out_Tmp_2212: int, out_Fat: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:SIextraRecBound 2} FatCommonWrite_loop_L161(in_Tmp_2172: int, in_MoreDirtyRuns: int, in_DirtyLbo: int, in_sdv_1349: int, in_Vcb_87: int, in_DirtyVbo: int, in_CleanByteCount: int, in_StartingVbo_7: int, in_CleanLbo: int, in_DirtyByteCount: int, in_sdv_1397: int, in_ByteCount_20: int) returns (out_Tmp_2172: int, out_MoreDirtyRuns: int, out_sdv_1349: int, out_DirtyVbo: int, out_sdv_1397: int)
{
  var vslice_dummy_var_1813: int;
  var vslice_dummy_var_1814: int;
  var vslice_dummy_var_1815: int;
  var vslice_dummy_var_1816: int;

  entry:
    out_Tmp_2172, out_MoreDirtyRuns, out_sdv_1349, out_DirtyVbo, out_sdv_1397 := in_Tmp_2172, in_MoreDirtyRuns, in_sdv_1349, in_DirtyVbo, in_sdv_1397;
    goto L161, exit;

  exit:
    return;

  L161:
    goto anon450_Else;

  anon450_Else:
    assume {:partition} out_MoreDirtyRuns != 0;
    assume {:nonnull} in_Vcb_87 != 0;
    assume in_Vcb_87 > 0;
    havoc vslice_dummy_var_1813;
    havoc vslice_dummy_var_1814;
    call {:si_unique_call 5014} out_sdv_1349 := FatLookupMcbEntry(vslice_dummy_var_1813, vslice_dummy_var_1814, out_DirtyVbo, in_DirtyLbo, in_DirtyByteCount, 0);
    goto anon451_Then, anon451_Else;

  anon451_Else:
    assume {:partition} out_sdv_1349 != 0;
    assume {:nonnull} in_DirtyLbo != 0;
    assume in_DirtyLbo > 0;
    havoc out_DirtyVbo;
    assume {:nonnull} in_DirtyByteCount != 0;
    assume in_DirtyByteCount > 0;
    goto anon592_Then, anon592_Else;

  anon592_Else:
    assume {:nonnull} in_DirtyByteCount != 0;
    assume in_DirtyByteCount > 0;
    out_MoreDirtyRuns := 0;
    goto anon592_Else_dummy;

  anon592_Else_dummy:
    goto L_BAF_10;

  L_BAF_10:
    call {:si_unique_call 5017} {:si_old_unique_call 1} out_Tmp_2172, out_MoreDirtyRuns, out_sdv_1349, out_DirtyVbo, out_sdv_1397 := FatCommonWrite_loop_L161(out_Tmp_2172, out_MoreDirtyRuns, in_DirtyLbo, out_sdv_1349, in_Vcb_87, out_DirtyVbo, in_CleanByteCount, in_StartingVbo_7, in_CleanLbo, in_DirtyByteCount, out_sdv_1397, in_ByteCount_20);
    return;

  anon592_Then:
    assume {:nonnull} in_DirtyByteCount != 0;
    assume in_DirtyByteCount > 0;
    havoc out_Tmp_2172;
    assume {:nonnull} in_Vcb_87 != 0;
    assume in_Vcb_87 > 0;
    havoc vslice_dummy_var_1815;
    havoc vslice_dummy_var_1816;
    call {:si_unique_call 5015} out_sdv_1397 := FatLookupMcbEntry(vslice_dummy_var_1815, vslice_dummy_var_1816, out_Tmp_2172, in_CleanLbo, in_CleanByteCount, 0);
    goto anon452_Then, anon452_Else;

  anon452_Else:
    assume {:partition} out_sdv_1397 != 0;
    assume {:nonnull} in_CleanByteCount != 0;
    assume in_CleanByteCount > 0;
    assume {:nonnull} in_DirtyByteCount != 0;
    assume in_DirtyByteCount > 0;
    goto anon453_Then, anon453_Else;

  anon453_Else:
    out_MoreDirtyRuns := 0;
    goto anon453_Else_dummy;

  anon453_Else_dummy:
    goto L_BAF_10;

  anon453_Then:
    assume {:nonnull} in_CleanByteCount != 0;
    assume in_CleanByteCount > 0;
    assume {:nonnull} in_DirtyByteCount != 0;
    assume in_DirtyByteCount > 0;
    havoc out_DirtyVbo;
    goto anon453_Then_dummy;

  anon453_Then_dummy:
    goto L_BAF_10;

  anon452_Then:
    assume {:partition} out_sdv_1397 == 0;
    out_MoreDirtyRuns := 0;
    goto anon452_Then_dummy;

  anon452_Then_dummy:
    goto L_BAF_10;

  anon451_Then:
    assume {:partition} out_sdv_1349 == 0;
    assume {:nonnull} in_DirtyLbo != 0;
    assume in_DirtyLbo > 0;
    havoc out_DirtyVbo;
    call {:si_unique_call 5016} KeBugCheckEx(35, 2163323, 0, 0, 0);
    goto anon451_Then_dummy;

  anon451_Then_dummy:
    goto L_BAF_10;
}



procedure {:LoopProcedure} FatCommonWrite_loop_L161(in_Tmp_2172: int, in_MoreDirtyRuns: int, in_DirtyLbo: int, in_sdv_1349: int, in_Vcb_87: int, in_DirtyVbo: int, in_CleanByteCount: int, in_StartingVbo_7: int, in_CleanLbo: int, in_DirtyByteCount: int, in_sdv_1397: int, in_ByteCount_20: int) returns (out_Tmp_2172: int, out_MoreDirtyRuns: int, out_sdv_1349: int, out_DirtyVbo: int, out_sdv_1397: int);
  modifies alloc;
  free ensures {:va_keep} out_MoreDirtyRuns == 0 || out_MoreDirtyRuns == in_MoreDirtyRuns;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonWrite_loop_L330(in_Fcb_52: int, in_Vcb_87: int, in_IrpContext_137: int) returns (out_Fcb_52: int)
{
  var vslice_dummy_var_1817: int;

  entry:
    out_Fcb_52 := in_Fcb_52;
    goto L330, exit;

  exit:
    return;

  L330:
    assume {:nonnull} in_Vcb_87 != 0;
    assume in_Vcb_87 > 0;
    havoc vslice_dummy_var_1817;
    call {:si_unique_call 5018} out_Fcb_52 := FatGetNextFcbBottomUp(in_IrpContext_137, out_Fcb_52, vslice_dummy_var_1817);
    goto anon470_Else;

  anon470_Else:
    assume {:partition} out_Fcb_52 != 0;
    call {:si_unique_call 5019} ExReleaseResourceLite(0);
    goto anon470_Else_dummy;

  anon470_Else_dummy:
    call {:si_unique_call 5020} {:si_old_unique_call 1} out_Fcb_52 := FatCommonWrite_loop_L330(out_Fcb_52, in_Vcb_87, in_IrpContext_137);
    return;
}



procedure {:LoopProcedure} FatCommonWrite_loop_L330(in_Fcb_52: int, in_Vcb_87: int, in_IrpContext_137: int) returns (out_Fcb_52: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonWrite_loop_L316(in_Vcb_87: int, in_Fcb_53: int, in_IrpContext_137: int, in_vslice_dummy_var_384: int) returns (out_Fcb_53: int, out_vslice_dummy_var_384: int)
{
  var vslice_dummy_var_1818: int;

  entry:
    out_Fcb_53, out_vslice_dummy_var_384 := in_Fcb_53, in_vslice_dummy_var_384;
    goto L316, exit;

  exit:
    return;

  L316:
    assume {:nonnull} in_Vcb_87 != 0;
    assume in_Vcb_87 > 0;
    havoc vslice_dummy_var_1818;
    call {:si_unique_call 5021} out_Fcb_53 := FatGetNextFcbBottomUp(in_IrpContext_137, out_Fcb_53, vslice_dummy_var_1818);
    goto anon468_Else;

  anon468_Else:
    assume {:partition} out_Fcb_53 != 0;
    call {:si_unique_call 5022} out_vslice_dummy_var_384 := FatAcquireExclusiveFcb(in_IrpContext_137, out_Fcb_53);
    goto anon468_Else_dummy;

  anon468_Else_dummy:
    call {:si_unique_call 5023} {:si_old_unique_call 1} out_Fcb_53, out_vslice_dummy_var_384 := FatCommonWrite_loop_L316(in_Vcb_87, out_Fcb_53, in_IrpContext_137, out_vslice_dummy_var_384);
    return;
}



procedure {:LoopProcedure} FatCommonWrite_loop_L316(in_Vcb_87: int, in_Fcb_53: int, in_IrpContext_137: int, in_vslice_dummy_var_384: int) returns (out_Fcb_53: int, out_vslice_dummy_var_384: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_384 == 1 || out_vslice_dummy_var_384 == 0 || out_vslice_dummy_var_384 == in_vslice_dummy_var_384;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatStringTo8dot3_loop_L17(in_InputString: int, in_i_15: int, in_Tmp_2260: int, in_j_1: int, in_Tmp_2262: int, in_Tmp_2268: int, in_Output8dot3: int) returns (out_i_15: int, out_Tmp_2260: int, out_j_1: int, out_Tmp_2262: int, out_Tmp_2268: int)
{

  entry:
    out_i_15, out_Tmp_2260, out_j_1, out_Tmp_2262, out_Tmp_2268 := in_i_15, in_Tmp_2260, in_j_1, in_Tmp_2262, in_Tmp_2268;
    goto L17, exit;

  exit:
    return;

  L17:
    assume {:nonnull} in_InputString != 0;
    assume in_InputString > 0;
    goto anon13_Else;

  anon13_Else:
    out_Tmp_2268 := out_j_1;
    assume {:nonnull} in_Output8dot3 != 0;
    assume in_Output8dot3 > 0;
    havoc out_Tmp_2260;
    out_Tmp_2262 := out_i_15;
    assume {:nonnull} in_InputString != 0;
    assume in_InputString > 0;
    assume {:nonnull} out_Tmp_2260 != 0;
    assume out_Tmp_2260 > 0;
    out_j_1 := out_j_1 + 1;
    out_i_15 := out_i_15 + 1;
    goto anon13_Else_dummy;

  anon13_Else_dummy:
    call {:si_unique_call 5024} {:si_old_unique_call 1} out_i_15, out_Tmp_2260, out_j_1, out_Tmp_2262, out_Tmp_2268 := FatStringTo8dot3_loop_L17(in_InputString, out_i_15, out_Tmp_2260, out_j_1, out_Tmp_2262, out_Tmp_2268, in_Output8dot3);
    return;
}



procedure {:LoopProcedure} FatStringTo8dot3_loop_L17(in_InputString: int, in_i_15: int, in_Tmp_2260: int, in_j_1: int, in_Tmp_2262: int, in_Tmp_2268: int, in_Output8dot3: int) returns (out_i_15: int, out_Tmp_2260: int, out_j_1: int, out_Tmp_2262: int, out_Tmp_2268: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatStringTo8dot3_loop_L9(in_InputString: int, in_i_15: int, in_Tmp_2258: int, in_Tmp_2264: int, in_Tmp_2266: int, in_Tmp_2267: int, in_Output8dot3: int) returns (out_i_15: int, out_Tmp_2258: int, out_Tmp_2264: int, out_Tmp_2266: int, out_Tmp_2267: int)
{

  entry:
    out_i_15, out_Tmp_2258, out_Tmp_2264, out_Tmp_2266, out_Tmp_2267 := in_i_15, in_Tmp_2258, in_Tmp_2264, in_Tmp_2266, in_Tmp_2267;
    goto L9, exit;

  exit:
    return;

  L9:
    assume {:nonnull} in_InputString != 0;
    assume in_InputString > 0;
    goto anon11_Else;

  anon11_Else:
    out_Tmp_2264 := out_i_15;
    assume {:nonnull} in_InputString != 0;
    assume in_InputString > 0;
    goto anon14_Else;

  anon14_Else:
    out_Tmp_2267 := out_i_15;
    assume {:nonnull} in_Output8dot3 != 0;
    assume in_Output8dot3 > 0;
    havoc out_Tmp_2258;
    out_Tmp_2266 := out_i_15;
    assume {:nonnull} in_InputString != 0;
    assume in_InputString > 0;
    assume {:nonnull} out_Tmp_2258 != 0;
    assume out_Tmp_2258 > 0;
    out_i_15 := out_i_15 + 1;
    goto anon14_Else_dummy;

  anon14_Else_dummy:
    call {:si_unique_call 5025} {:si_old_unique_call 1} out_i_15, out_Tmp_2258, out_Tmp_2264, out_Tmp_2266, out_Tmp_2267 := FatStringTo8dot3_loop_L9(in_InputString, out_i_15, out_Tmp_2258, out_Tmp_2264, out_Tmp_2266, out_Tmp_2267, in_Output8dot3);
    return;
}



procedure {:LoopProcedure} FatStringTo8dot3_loop_L9(in_InputString: int, in_i_15: int, in_Tmp_2258: int, in_Tmp_2264: int, in_Tmp_2266: int, in_Tmp_2267: int, in_Output8dot3: int) returns (out_i_15: int, out_Tmp_2258: int, out_Tmp_2264: int, out_Tmp_2266: int, out_Tmp_2267: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatEvaluateNameCase_loop_L12(in_i_16: int, in_Tmp_2270: int, in_Lowers: int, in_Tmp_2271: int, in_ExtensionPresent: int, in_Tmp_2275: int, in_c_1: int, in_Tmp_2277: int, in_Uppers: int, in_UnicodeName_2: int, in_AllLowerComponent_3: int, in_CreateLfn_3: int) returns (out_i_16: int, out_Tmp_2270: int, out_Lowers: int, out_Tmp_2271: int, out_ExtensionPresent: int, out_Tmp_2275: int, out_c_1: int, out_Tmp_2277: int, out_Uppers: int)
{

  entry:
    out_i_16, out_Tmp_2270, out_Lowers, out_Tmp_2271, out_ExtensionPresent, out_Tmp_2275, out_c_1, out_Tmp_2277, out_Uppers := in_i_16, in_Tmp_2270, in_Lowers, in_Tmp_2271, in_ExtensionPresent, in_Tmp_2275, in_c_1, in_Tmp_2277, in_Uppers;
    goto L12, exit;

  exit:
    return;

  L12:
    assume {:nonnull} in_UnicodeName_2 != 0;
    assume in_UnicodeName_2 > 0;
    goto anon47_Else;

  anon47_Else:
    out_Tmp_2270 := out_i_16;
    assume {:nonnull} in_UnicodeName_2 != 0;
    assume in_UnicodeName_2 > 0;
    havoc out_Tmp_2277;
    assume {:nonnull} out_Tmp_2277 != 0;
    assume out_Tmp_2277 > 0;
    havoc out_c_1;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_c_1 >= 65;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} 90 >= out_c_1;
    out_Uppers := out_Uppers + 1;
    goto L20;

  L20:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} out_c_1 == 46;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} out_Lowers != 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} out_Uppers != 0;
    out_Tmp_2271 := 1;
    goto L26;

  L26:
    assume {:nonnull} in_CreateLfn_3 != 0;
    assume in_CreateLfn_3 > 0;
    assume {:nonnull} in_CreateLfn_3 != 0;
    assume in_CreateLfn_3 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L29;

  L29:
    out_Tmp_2275 := 0;
    goto L30;

  L30:
    assume {:nonnull} in_AllLowerComponent_3 != 0;
    assume in_AllLowerComponent_3 > 0;
    out_ExtensionPresent := 1;
    out_Lowers := 0;
    out_Uppers := out_Lowers;
    goto L21;

  L21:
    out_i_16 := out_i_16 + 1;
    goto L21_dummy;

  L21_dummy:
    call {:si_unique_call 5026} {:si_old_unique_call 1} out_i_16, out_Tmp_2270, out_Lowers, out_Tmp_2271, out_ExtensionPresent, out_Tmp_2275, out_c_1, out_Tmp_2277, out_Uppers := FatEvaluateNameCase_loop_L12(out_i_16, out_Tmp_2270, out_Lowers, out_Tmp_2271, out_ExtensionPresent, out_Tmp_2275, out_c_1, out_Tmp_2277, out_Uppers, in_UnicodeName_2, in_AllLowerComponent_3, in_CreateLfn_3);
    return;

  anon67_Then:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} out_Lowers != 0;
    out_Tmp_2275 := 1;
    goto L30;

  anon54_Then:
    assume {:partition} out_Lowers == 0;
    goto L29;

  anon53_Then:
    assume {:partition} out_Uppers == 0;
    goto L23;

  L23:
    out_Tmp_2271 := 0;
    goto L26;

  anon52_Then:
    assume {:partition} out_Lowers == 0;
    goto L23;

  anon51_Then:
    assume {:partition} out_c_1 != 46;
    goto L21;

  anon50_Then:
    assume {:partition} out_c_1 > 90;
    goto L17;

  L17:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} out_c_1 >= 97;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} 122 >= out_c_1;
    out_Lowers := out_Lowers + 1;
    goto L20;

  anon56_Then:
    assume {:partition} out_c_1 > 122;
    goto L35;

  L35:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} out_c_1 >= 128;
    goto anon57_Else;

  anon57_Else:
    goto L20;

  anon55_Then:
    assume {:partition} 128 > out_c_1;
    goto L20;

  anon49_Then:
    assume {:partition} 97 > out_c_1;
    goto L35;

  anon66_Then:
    assume {:partition} 65 > out_c_1;
    goto L17;
}



procedure {:LoopProcedure} FatEvaluateNameCase_loop_L12(in_i_16: int, in_Tmp_2270: int, in_Lowers: int, in_Tmp_2271: int, in_ExtensionPresent: int, in_Tmp_2275: int, in_c_1: int, in_Tmp_2277: int, in_Uppers: int, in_UnicodeName_2: int, in_AllLowerComponent_3: int, in_CreateLfn_3: int) returns (out_i_16: int, out_Tmp_2270: int, out_Lowers: int, out_Tmp_2271: int, out_ExtensionPresent: int, out_Tmp_2275: int, out_c_1: int, out_Tmp_2277: int, out_Uppers: int);
  free ensures {:va_keep} out_Tmp_2271 == 1 || out_Tmp_2271 == 0 || out_Tmp_2271 == in_Tmp_2271;
  free ensures {:va_keep} out_ExtensionPresent == 1 || out_ExtensionPresent == in_ExtensionPresent;
  free ensures {:va_keep} out_Tmp_2275 == 1 || out_Tmp_2275 == 0 || out_Tmp_2275 == in_Tmp_2275;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSpaceInName_loop_L5(in_i_17: int, in_Tmp_2286: int, in_Tmp_2288: int, in_UnicodeName_3: int) returns (out_i_17: int, out_Tmp_2286: int, out_Tmp_2288: int)
{

  entry:
    out_i_17, out_Tmp_2286, out_Tmp_2288 := in_i_17, in_Tmp_2286, in_Tmp_2288;
    goto L5, exit;

  exit:
    return;

  L5:
    assume {:nonnull} in_UnicodeName_3 != 0;
    assume in_UnicodeName_3 > 0;
    goto anon5_Else;

  anon5_Else:
    out_Tmp_2288 := out_i_17;
    assume {:nonnull} in_UnicodeName_3 != 0;
    assume in_UnicodeName_3 > 0;
    havoc out_Tmp_2286;
    assume {:nonnull} out_Tmp_2286 != 0;
    assume out_Tmp_2286 > 0;
    goto anon6_Then;

  anon6_Then:
    out_i_17 := out_i_17 + 1;
    goto anon6_Then_dummy;

  anon6_Then_dummy:
    havoc out_i_17;
    return;
}



procedure {:LoopProcedure} FatSpaceInName_loop_L5(in_i_17: int, in_Tmp_2286: int, in_Tmp_2288: int, in_UnicodeName_3: int) returns (out_i_17: int, out_Tmp_2286: int, out_Tmp_2288: int);
  free ensures {:va_keep} out_Tmp_2288 == in_i_17 || out_Tmp_2288 == in_Tmp_2288;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation Fat8dot3ToString_loop_L28(in_Tmp_2289: int, in_Tmp_2292: int, in_Tmp_2297: int, in_Tmp_2299: int, in_Tmp_2300: int, in_Tmp_2303: int, in_Tmp_2305: int, in_Tmp_2306: int, in_Tmp_2307: int, in_Tmp_2310: int, in_Tmp_2311: int, in_Tmp_2312: int, in_StringIndex: int, in_BaseLength: int, in_Tmp_2326: int, in_Tmp_2328: int, in_Tmp_2331: int, in_Tmp_2334: int, in_OutputString: int) returns (out_Tmp_2289: int, out_Tmp_2292: int, out_Tmp_2297: int, out_Tmp_2299: int, out_Tmp_2300: int, out_Tmp_2303: int, out_Tmp_2305: int, out_Tmp_2306: int, out_Tmp_2307: int, out_Tmp_2310: int, out_Tmp_2311: int, out_Tmp_2312: int, out_StringIndex: int, out_Tmp_2326: int, out_Tmp_2328: int, out_Tmp_2331: int, out_Tmp_2334: int)
{

  entry:
    out_Tmp_2289, out_Tmp_2292, out_Tmp_2297, out_Tmp_2299, out_Tmp_2300, out_Tmp_2303, out_Tmp_2305, out_Tmp_2306, out_Tmp_2307, out_Tmp_2310, out_Tmp_2311, out_Tmp_2312, out_StringIndex, out_Tmp_2326, out_Tmp_2328, out_Tmp_2331, out_Tmp_2334 := in_Tmp_2289, in_Tmp_2292, in_Tmp_2297, in_Tmp_2299, in_Tmp_2300, in_Tmp_2303, in_Tmp_2305, in_Tmp_2306, in_Tmp_2307, in_Tmp_2310, in_Tmp_2311, in_Tmp_2312, in_StringIndex, in_Tmp_2326, in_Tmp_2328, in_Tmp_2331, in_Tmp_2334;
    goto L28, exit;

  exit:
    return;

  L28:
    goto anon68_Else;

  anon68_Else:
    assume {:partition} in_BaseLength > out_StringIndex;
    out_Tmp_2328 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2310;
    assume {:nonnull} out_Tmp_2310 != 0;
    assume out_Tmp_2310 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    out_Tmp_2307 := 0;
    goto L32;

  L32:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} out_Tmp_2307 != 0;
    out_StringIndex := out_StringIndex + 1;
    goto L36;

  L36:
    out_StringIndex := out_StringIndex + 1;
    goto L36_dummy;

  L36_dummy:
    call {:si_unique_call 5027} {:si_old_unique_call 1} out_Tmp_2289, out_Tmp_2292, out_Tmp_2297, out_Tmp_2299, out_Tmp_2300, out_Tmp_2303, out_Tmp_2305, out_Tmp_2306, out_Tmp_2307, out_Tmp_2310, out_Tmp_2311, out_Tmp_2312, out_StringIndex, out_Tmp_2326, out_Tmp_2328, out_Tmp_2331, out_Tmp_2334 := Fat8dot3ToString_loop_L28(out_Tmp_2289, out_Tmp_2292, out_Tmp_2297, out_Tmp_2299, out_Tmp_2300, out_Tmp_2303, out_Tmp_2305, out_Tmp_2306, out_Tmp_2307, out_Tmp_2310, out_Tmp_2311, out_Tmp_2312, out_StringIndex, in_BaseLength, out_Tmp_2326, out_Tmp_2328, out_Tmp_2331, out_Tmp_2334, in_OutputString);
    return;

  anon70_Then:
    assume {:partition} out_Tmp_2307 == 0;
    out_Tmp_2305 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2306;
    assume {:nonnull} out_Tmp_2306 != 0;
    assume out_Tmp_2306 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    out_Tmp_2300 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2312;
    assume {:nonnull} out_Tmp_2312 != 0;
    assume out_Tmp_2312 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    out_Tmp_2292 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2326;
    out_Tmp_2311 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2334;
    assume {:nonnull} out_Tmp_2326 != 0;
    assume out_Tmp_2326 > 0;
    assume {:nonnull} out_Tmp_2334 != 0;
    assume out_Tmp_2334 > 0;
    goto L36;

  anon83_Then:
    goto L36;

  anon82_Then:
    goto L36;

  anon81_Then:
    assume {:nonnull} NlsMbOemCodePageTag != 0;
    assume NlsMbOemCodePageTag > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    out_Tmp_2303 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2297;
    assume {:nonnull} out_Tmp_2297 != 0;
    assume out_Tmp_2297 > 0;
    havoc out_Tmp_2299;
    assume {:nonnull} NlsOemLeadByteInfo != 0;
    assume NlsOemLeadByteInfo > 0;
    havoc out_Tmp_2331;
    assume {:nonnull} out_Tmp_2331 != 0;
    assume out_Tmp_2331 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    out_Tmp_2289 := 1;
    goto L42;

  L42:
    out_Tmp_2307 := out_Tmp_2289;
    goto L32;

  anon84_Then:
    goto L39;

  L39:
    out_Tmp_2289 := 0;
    goto L42;

  anon69_Then:
    goto L39;
}



procedure {:LoopProcedure} Fat8dot3ToString_loop_L28(in_Tmp_2289: int, in_Tmp_2292: int, in_Tmp_2297: int, in_Tmp_2299: int, in_Tmp_2300: int, in_Tmp_2303: int, in_Tmp_2305: int, in_Tmp_2306: int, in_Tmp_2307: int, in_Tmp_2310: int, in_Tmp_2311: int, in_Tmp_2312: int, in_StringIndex: int, in_BaseLength: int, in_Tmp_2326: int, in_Tmp_2328: int, in_Tmp_2331: int, in_Tmp_2334: int, in_OutputString: int) returns (out_Tmp_2289: int, out_Tmp_2292: int, out_Tmp_2297: int, out_Tmp_2299: int, out_Tmp_2300: int, out_Tmp_2303: int, out_Tmp_2305: int, out_Tmp_2306: int, out_Tmp_2307: int, out_Tmp_2310: int, out_Tmp_2311: int, out_Tmp_2312: int, out_StringIndex: int, out_Tmp_2326: int, out_Tmp_2328: int, out_Tmp_2331: int, out_Tmp_2334: int);
  free ensures {:va_keep} out_Tmp_2289 == 1 || out_Tmp_2289 == 0 || out_Tmp_2289 == in_Tmp_2289;
  free ensures {:va_keep} out_Tmp_2307 == 0 || out_Tmp_2307 == 1 || out_Tmp_2307 == in_Tmp_2307;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation Fat8dot3ToString_loop_L59(in_Tmp_2291: int, in_Tmp_2293: int, in_Tmp_2294: int, in_Tmp_2301: int, in_Tmp_2302: int, in_Tmp_2308: int, in_Tmp_2309: int, in_Tmp_2313: int, in_StringIndex: int, in_Tmp_2315: int, in_Tmp_2317: int, in_Tmp_2318: int, in_Tmp_2319: int, in_Tmp_2323: int, in_Tmp_2324: int, in_Tmp_2330: int, in_Tmp_2332: int, in_OutputString: int) returns (out_Tmp_2291: int, out_Tmp_2293: int, out_Tmp_2294: int, out_Tmp_2301: int, out_Tmp_2302: int, out_Tmp_2308: int, out_Tmp_2309: int, out_Tmp_2313: int, out_StringIndex: int, out_Tmp_2315: int, out_Tmp_2317: int, out_Tmp_2318: int, out_Tmp_2319: int, out_Tmp_2323: int, out_Tmp_2324: int, out_Tmp_2330: int, out_Tmp_2332: int)
{

  entry:
    out_Tmp_2291, out_Tmp_2293, out_Tmp_2294, out_Tmp_2301, out_Tmp_2302, out_Tmp_2308, out_Tmp_2309, out_Tmp_2313, out_StringIndex, out_Tmp_2315, out_Tmp_2317, out_Tmp_2318, out_Tmp_2319, out_Tmp_2323, out_Tmp_2324, out_Tmp_2330, out_Tmp_2332 := in_Tmp_2291, in_Tmp_2293, in_Tmp_2294, in_Tmp_2301, in_Tmp_2302, in_Tmp_2308, in_Tmp_2309, in_Tmp_2313, in_StringIndex, in_Tmp_2315, in_Tmp_2317, in_Tmp_2318, in_Tmp_2319, in_Tmp_2323, in_Tmp_2324, in_Tmp_2330, in_Tmp_2332;
    goto L59, exit;

  exit:
    return;

  L59:
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    goto anon73_Else;

  anon73_Else:
    out_Tmp_2301 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2318;
    assume {:nonnull} out_Tmp_2318 != 0;
    assume out_Tmp_2318 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    out_Tmp_2291 := 0;
    goto L63;

  L63:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} out_Tmp_2291 != 0;
    out_StringIndex := out_StringIndex + 1;
    goto L67;

  L67:
    out_StringIndex := out_StringIndex + 1;
    goto L67_dummy;

  L67_dummy:
    call {:si_unique_call 5028} {:si_old_unique_call 1} out_Tmp_2291, out_Tmp_2293, out_Tmp_2294, out_Tmp_2301, out_Tmp_2302, out_Tmp_2308, out_Tmp_2309, out_Tmp_2313, out_StringIndex, out_Tmp_2315, out_Tmp_2317, out_Tmp_2318, out_Tmp_2319, out_Tmp_2323, out_Tmp_2324, out_Tmp_2330, out_Tmp_2332 := Fat8dot3ToString_loop_L59(out_Tmp_2291, out_Tmp_2293, out_Tmp_2294, out_Tmp_2301, out_Tmp_2302, out_Tmp_2308, out_Tmp_2309, out_Tmp_2313, out_StringIndex, out_Tmp_2315, out_Tmp_2317, out_Tmp_2318, out_Tmp_2319, out_Tmp_2323, out_Tmp_2324, out_Tmp_2330, out_Tmp_2332, in_OutputString);
    return;

  anon75_Then:
    assume {:partition} out_Tmp_2291 == 0;
    out_Tmp_2317 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2330;
    assume {:nonnull} out_Tmp_2330 != 0;
    assume out_Tmp_2330 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    out_Tmp_2315 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2319;
    assume {:nonnull} out_Tmp_2319 != 0;
    assume out_Tmp_2319 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    out_Tmp_2313 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2293;
    out_Tmp_2294 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2323;
    assume {:nonnull} out_Tmp_2293 != 0;
    assume out_Tmp_2293 > 0;
    assume {:nonnull} out_Tmp_2323 != 0;
    assume out_Tmp_2323 > 0;
    goto L67;

  anon89_Then:
    goto L67;

  anon88_Then:
    goto L67;

  anon87_Then:
    assume {:nonnull} NlsMbOemCodePageTag != 0;
    assume NlsMbOemCodePageTag > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    out_Tmp_2332 := out_StringIndex;
    assume {:nonnull} in_OutputString != 0;
    assume in_OutputString > 0;
    havoc out_Tmp_2302;
    assume {:nonnull} out_Tmp_2302 != 0;
    assume out_Tmp_2302 > 0;
    havoc out_Tmp_2308;
    assume {:nonnull} NlsOemLeadByteInfo != 0;
    assume NlsOemLeadByteInfo > 0;
    havoc out_Tmp_2309;
    assume {:nonnull} out_Tmp_2309 != 0;
    assume out_Tmp_2309 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    out_Tmp_2324 := 1;
    goto L73;

  L73:
    out_Tmp_2291 := out_Tmp_2324;
    goto L63;

  anon90_Then:
    goto L70;

  L70:
    out_Tmp_2324 := 0;
    goto L73;

  anon74_Then:
    goto L70;
}



procedure {:LoopProcedure} Fat8dot3ToString_loop_L59(in_Tmp_2291: int, in_Tmp_2293: int, in_Tmp_2294: int, in_Tmp_2301: int, in_Tmp_2302: int, in_Tmp_2308: int, in_Tmp_2309: int, in_Tmp_2313: int, in_StringIndex: int, in_Tmp_2315: int, in_Tmp_2317: int, in_Tmp_2318: int, in_Tmp_2319: int, in_Tmp_2323: int, in_Tmp_2324: int, in_Tmp_2330: int, in_Tmp_2332: int, in_OutputString: int) returns (out_Tmp_2291: int, out_Tmp_2293: int, out_Tmp_2294: int, out_Tmp_2301: int, out_Tmp_2302: int, out_Tmp_2308: int, out_Tmp_2309: int, out_Tmp_2313: int, out_StringIndex: int, out_Tmp_2315: int, out_Tmp_2317: int, out_Tmp_2318: int, out_Tmp_2319: int, out_Tmp_2323: int, out_Tmp_2324: int, out_Tmp_2330: int, out_Tmp_2332: int);
  free ensures {:va_keep} out_Tmp_2291 == 0 || out_Tmp_2291 == 1 || out_Tmp_2291 == in_Tmp_2291;
  free ensures {:va_keep} out_Tmp_2324 == 1 || out_Tmp_2324 == 0 || out_Tmp_2324 == in_Tmp_2324;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation Fat8dot3ToString_loop_L13(in_Tmp_2296: int, in_Tmp_2320: int, in_ExtensionLength: int, in_Dirent_23: int) returns (out_Tmp_2296: int, out_Tmp_2320: int, out_ExtensionLength: int)
{

  entry:
    out_Tmp_2296, out_Tmp_2320, out_ExtensionLength := in_Tmp_2296, in_Tmp_2320, in_ExtensionLength;
    goto L13, exit;

  exit:
    return;

  L13:
    assume {:CounterLoop 3} {:Counter "ExtensionLength"} true;
    goto anon62_Else;

  anon62_Else:
    assume {:partition} out_ExtensionLength > 0;
    out_Tmp_2296 := 8 + out_ExtensionLength - 1;
    assume {:nonnull} in_Dirent_23 != 0;
    assume in_Dirent_23 > 0;
    havoc out_Tmp_2320;
    assume {:nonnull} out_Tmp_2320 != 0;
    assume out_Tmp_2320 > 0;
    goto anon79_Else;

  anon79_Else:
    out_ExtensionLength := out_ExtensionLength - 1;
    goto anon79_Else_dummy;

  anon79_Else_dummy:
    havoc out_ExtensionLength;
    return;
}



procedure {:LoopProcedure} Fat8dot3ToString_loop_L13(in_Tmp_2296: int, in_Tmp_2320: int, in_ExtensionLength: int, in_Dirent_23: int) returns (out_Tmp_2296: int, out_Tmp_2320: int, out_ExtensionLength: int);
  free ensures {:va_keep} out_Tmp_2296 == in_Tmp_2296 || out_Tmp_2296 == 8 + in_ExtensionLength - 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation Fat8dot3ToString_loop_L8(in_Tmp_2322: int, in_BaseLength: int, in_Tmp_2325: int, in_Dirent_23: int) returns (out_Tmp_2322: int, out_BaseLength: int, out_Tmp_2325: int)
{

  entry:
    out_Tmp_2322, out_BaseLength, out_Tmp_2325 := in_Tmp_2322, in_BaseLength, in_Tmp_2325;
    goto L8, exit;

  exit:
    return;

  L8:
    assume {:CounterLoop 8} {:Counter "BaseLength"} true;
    goto anon61_Else;

  anon61_Else:
    assume {:partition} out_BaseLength > 0;
    out_Tmp_2322 := out_BaseLength - 1;
    assume {:nonnull} in_Dirent_23 != 0;
    assume in_Dirent_23 > 0;
    havoc out_Tmp_2325;
    assume {:nonnull} out_Tmp_2325 != 0;
    assume out_Tmp_2325 > 0;
    goto anon78_Else;

  anon78_Else:
    out_BaseLength := out_BaseLength - 1;
    goto anon78_Else_dummy;

  anon78_Else_dummy:
    havoc out_BaseLength;
    return;
}



procedure {:LoopProcedure} Fat8dot3ToString_loop_L8(in_Tmp_2322: int, in_BaseLength: int, in_Tmp_2325: int, in_Dirent_23: int) returns (out_Tmp_2322: int, out_BaseLength: int, out_Tmp_2325: int);
  free ensures {:va_keep} out_Tmp_2322 == in_Tmp_2322 || out_Tmp_2322 == in_BaseLength - 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSelectNames_loop_L51(in_ShortUnicodeName: int, in_Dirent_24: int, in_Bcb_14: int, in_ByteOffset_2: int, in_TrySuggestedShortName: int, in_IrpContext_147: int, in_Parent: int, in_ShortName_6: int, in_SuggestedShortName: int, in_vslice_dummy_var_407: int, in_vslice_dummy_var_408: int) returns (out_TrySuggestedShortName: int, out_vslice_dummy_var_407: int, out_vslice_dummy_var_408: int)
{

  entry:
    out_TrySuggestedShortName, out_vslice_dummy_var_407, out_vslice_dummy_var_408 := in_TrySuggestedShortName, in_vslice_dummy_var_407, in_vslice_dummy_var_408;
    goto L51, exit;

  exit:
    return;

  L51:
    assume {:nonnull} in_Bcb_14 != 0;
    assume in_Bcb_14 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} in_Bcb_14 != 0;
    assume in_Bcb_14 > 0;
    goto L52;

  L52:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} out_TrySuggestedShortName != 0;
    assume {:nonnull} in_ShortUnicodeName != 0;
    assume in_ShortUnicodeName > 0;
    assume {:nonnull} in_SuggestedShortName != 0;
    assume in_SuggestedShortName > 0;
    assume {:nonnull} in_ShortUnicodeName != 0;
    assume in_ShortUnicodeName > 0;
    assume {:nonnull} in_SuggestedShortName != 0;
    assume in_SuggestedShortName > 0;
    assume {:nonnull} in_ShortUnicodeName != 0;
    assume in_ShortUnicodeName > 0;
    assume {:nonnull} in_SuggestedShortName != 0;
    assume in_SuggestedShortName > 0;
    out_TrySuggestedShortName := 0;
    goto L69;

  L69:
    call {:si_unique_call 5029} out_vslice_dummy_var_408 := RtlUnicodeStringToCountedOemString(0, 0, 0);
    call {:si_unique_call 5030} FatLocateSimpleOemDirent(in_IrpContext_147, in_Parent, in_ShortName_6, in_Dirent_24, in_Bcb_14, in_ByteOffset_2);
    assume {:nonnull} in_Bcb_14 != 0;
    assume in_Bcb_14 > 0;
    goto anon29_Else;

  anon29_Else:
    goto anon29_Else_dummy;

  anon29_Else_dummy:
    call {:si_unique_call 5032} {:si_old_unique_call 1} out_TrySuggestedShortName, out_vslice_dummy_var_407, out_vslice_dummy_var_408 := FatSelectNames_loop_L51(in_ShortUnicodeName, in_Dirent_24, in_Bcb_14, in_ByteOffset_2, out_TrySuggestedShortName, in_IrpContext_147, in_Parent, in_ShortName_6, in_SuggestedShortName, out_vslice_dummy_var_407, out_vslice_dummy_var_408);
    return;

  anon28_Then:
    assume {:partition} out_TrySuggestedShortName == 0;
    call {:si_unique_call 5031} out_vslice_dummy_var_407 := corral_nondet();
    goto L69;

  anon27_Then:
    goto L52;
}



procedure {:LoopProcedure} FatSelectNames_loop_L51(in_ShortUnicodeName: int, in_Dirent_24: int, in_Bcb_14: int, in_ByteOffset_2: int, in_TrySuggestedShortName: int, in_IrpContext_147: int, in_Parent: int, in_ShortName_6: int, in_SuggestedShortName: int, in_vslice_dummy_var_407: int, in_vslice_dummy_var_408: int) returns (out_TrySuggestedShortName: int, out_vslice_dummy_var_407: int, out_vslice_dummy_var_408: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} out_TrySuggestedShortName == 0 || out_TrySuggestedShortName == in_TrySuggestedShortName;
  free ensures {:va_keep} out_vslice_dummy_var_408 == -1073741675 || out_vslice_dummy_var_408 == 0 || out_vslice_dummy_var_408 == in_vslice_dummy_var_408;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatRescanDirectory_loop_L24(in_Tmp_2350: int, in_DirentDeleted: int, in_StartIndexOfThisRun_1: int, in_DeletedHint: int, in_Dirent_25: int, in_Status_59: int, in_Tmp_2352: int, in_Tmp_2353: int, in_Bcb_15: int, in_Tmp_2355: int, in_CurrentRun_1: int, in_DirentIndex: int, in_UnusedVbo: int, in_IrpContext_150: int, in_Dcb_12: int) returns (out_Tmp_2350: int, out_DirentDeleted: int, out_StartIndexOfThisRun_1: int, out_DeletedHint: int, out_Tmp_2352: int, out_Tmp_2353: int, out_Tmp_2355: int, out_CurrentRun_1: int, out_DirentIndex: int, out_UnusedVbo: int)
{

  entry:
    out_Tmp_2350, out_DirentDeleted, out_StartIndexOfThisRun_1, out_DeletedHint, out_Tmp_2352, out_Tmp_2353, out_Tmp_2355, out_CurrentRun_1, out_DirentIndex, out_UnusedVbo := in_Tmp_2350, in_DirentDeleted, in_StartIndexOfThisRun_1, in_DeletedHint, in_Tmp_2352, in_Tmp_2353, in_Tmp_2355, in_CurrentRun_1, in_DirentIndex, in_UnusedVbo;
    goto L24, exit;

  exit:
    return;

  L24:
    assume {:nonnull} in_Dcb_12 != 0;
    assume in_Dcb_12 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} in_Status_59 != 0;
    assume in_Status_59 > 0;
    assume {:nonnull} in_Bcb_15 != 0;
    assume in_Bcb_15 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} in_Bcb_15 != 0;
    assume in_Bcb_15 > 0;
    goto L28;

  L28:
    assume {:nonnull} in_Status_59 != 0;
    assume in_Status_59 > 0;
    goto anon43_Else;

  anon43_Else:
    assume {:nonnull} in_Dirent_25 != 0;
    assume in_Dirent_25 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_25] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_25] > 0;
    havoc out_Tmp_2350;
    assume {:nonnull} out_Tmp_2350 != 0;
    assume out_Tmp_2350 > 0;
    goto anon58_Else;

  anon58_Else:
    assume {:nonnull} in_Dirent_25 != 0;
    assume in_Dirent_25 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_25] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_25] > 0;
    havoc out_Tmp_2353;
    assume {:nonnull} out_Tmp_2353 != 0;
    assume out_Tmp_2353 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    out_DirentDeleted := 1;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_DeletedHint == -1;
    out_DeletedHint := out_UnusedVbo;
    goto L44;

  L44:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} out_CurrentRun_1 != 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} out_CurrentRun_1 == 1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} out_DirentDeleted == 0;
    out_CurrentRun_1 := 2;
    out_StartIndexOfThisRun_1 := out_DirentIndex;
    goto L48;

  L48:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} out_CurrentRun_1 == 2;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} out_DirentDeleted != 0;
    out_CurrentRun_1 := 1;
    out_StartIndexOfThisRun_1 := out_DirentIndex;
    goto L56;

  L56:
    out_UnusedVbo := out_UnusedVbo + 32;
    assume {:nonnull} in_Dirent_25 != 0;
    assume in_Dirent_25 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_25] := Mem_T.P_PACKED_DIRENT[in_Dirent_25];
    out_DirentIndex := out_DirentIndex + 1;
    goto L56_dummy;

  L56_dummy:
    call {:si_unique_call 5034} {:si_old_unique_call 1} out_Tmp_2350, out_DirentDeleted, out_StartIndexOfThisRun_1, out_DeletedHint, out_Tmp_2352, out_Tmp_2353, out_Tmp_2355, out_CurrentRun_1, out_DirentIndex, out_UnusedVbo := FatRescanDirectory_loop_L24(out_Tmp_2350, out_DirentDeleted, out_StartIndexOfThisRun_1, out_DeletedHint, in_Dirent_25, in_Status_59, out_Tmp_2352, out_Tmp_2353, in_Bcb_15, out_Tmp_2355, out_CurrentRun_1, out_DirentIndex, out_UnusedVbo, in_IrpContext_150, in_Dcb_12);
    return;

  anon49_Then:
    assume {:partition} out_DirentDeleted == 0;
    goto L56;

  anon47_Then:
    assume {:partition} out_CurrentRun_1 != 2;
    goto L56;

  anon48_Then:
    assume {:partition} out_DirentDeleted != 0;
    goto L48;

  anon46_Then:
    assume {:partition} out_CurrentRun_1 != 1;
    goto L48;

  anon44_Then:
    assume {:partition} out_CurrentRun_1 == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} out_DirentDeleted != 0;
    out_Tmp_2352 := 1;
    goto L68;

  L68:
    out_CurrentRun_1 := out_Tmp_2352;
    goto L56;

  anon45_Then:
    assume {:partition} out_DirentDeleted == 0;
    out_Tmp_2352 := 2;
    goto L68;

  anon60_Then:
    assume {:partition} out_DeletedHint != -1;
    goto L44;

  anon59_Then:
    out_DirentDeleted := 0;
    goto L44;

  anon56_Then:
    goto L28;

  anon41_Then:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} INTMOD(out_UnusedVbo, 4096) != 0;
    assume {:nonnull} in_Bcb_15 != 0;
    assume in_Bcb_15 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L69;

  L69:
    assume {:nonnull} in_Bcb_15 != 0;
    assume in_Bcb_15 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} in_Bcb_15 != 0;
    assume in_Bcb_15 > 0;
    goto L71;

  L71:
    out_Tmp_2355 := BAND(out_UnusedVbo, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 5033} FatReadDirectoryFile#1(in_IrpContext_150, in_Dcb_12, out_Tmp_2355, 4096, 0, in_Bcb_15, in_Dirent_25, in_Status_59);
    assume {:nonnull} in_Dirent_25 != 0;
    assume in_Dirent_25 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_25] := Mem_T.P_PACKED_DIRENT[in_Dirent_25];
    goto L28;

  anon50_Then:
    goto L71;

  anon51_Then:
    goto L28;

  anon42_Then:
    assume {:partition} INTMOD(out_UnusedVbo, 4096) == 0;
    goto L69;
}



procedure {:LoopProcedure} FatRescanDirectory_loop_L24(in_Tmp_2350: int, in_DirentDeleted: int, in_StartIndexOfThisRun_1: int, in_DeletedHint: int, in_Dirent_25: int, in_Status_59: int, in_Tmp_2352: int, in_Tmp_2353: int, in_Bcb_15: int, in_Tmp_2355: int, in_CurrentRun_1: int, in_DirentIndex: int, in_UnusedVbo: int, in_IrpContext_150: int, in_Dcb_12: int) returns (out_Tmp_2350: int, out_DirentDeleted: int, out_StartIndexOfThisRun_1: int, out_DeletedHint: int, out_Tmp_2352: int, out_Tmp_2353: int, out_Tmp_2355: int, out_CurrentRun_1: int, out_DirentIndex: int, out_UnusedVbo: int);
  modifies Mem_T.P_PACKED_DIRENT, alloc;
  free ensures {:va_keep} out_DirentDeleted == 1 || out_DirentDeleted == 0 || out_DirentDeleted == in_DirentDeleted;
  free ensures {:va_keep} out_Tmp_2352 == 1 || out_Tmp_2352 == 2 || out_Tmp_2352 == in_Tmp_2352;
  free ensures {:va_keep} out_CurrentRun_1 == 1 || out_CurrentRun_1 == 2 || out_CurrentRun_1 == in_CurrentRun_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatConstructDirent_loop_L84(in_i_18: int, in_Tmp_2358: int, in_Tmp_2364: int, in_RemainderChars: int, in_FinalLfnBuffer: int) returns (out_i_18: int, out_Tmp_2358: int, out_Tmp_2364: int)
{

  entry:
    out_i_18, out_Tmp_2358, out_Tmp_2364 := in_i_18, in_Tmp_2358, in_Tmp_2364;
    goto L84, exit;

  exit:
    return;

  L84:
    goto anon51_Else;

  anon51_Else:
    assume {:partition} 13 > out_i_18;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} out_i_18 == in_RemainderChars;
    out_Tmp_2358 := out_i_18;
    assume {:nonnull} in_FinalLfnBuffer != 0;
    assume in_FinalLfnBuffer > 0;
    goto L89;

  L89:
    out_i_18 := out_i_18 + 1;
    goto L89_dummy;

  L89_dummy:
    call {:si_unique_call 5035} {:si_old_unique_call 1} out_i_18, out_Tmp_2358, out_Tmp_2364 := FatConstructDirent_loop_L84(out_i_18, out_Tmp_2358, out_Tmp_2364, in_RemainderChars, in_FinalLfnBuffer);
    return;

  anon52_Then:
    assume {:partition} out_i_18 != in_RemainderChars;
    out_Tmp_2364 := out_i_18;
    assume {:nonnull} in_FinalLfnBuffer != 0;
    assume in_FinalLfnBuffer > 0;
    goto L89;
}



procedure {:LoopProcedure} FatConstructDirent_loop_L84(in_i_18: int, in_Tmp_2358: int, in_Tmp_2364: int, in_RemainderChars: int, in_FinalLfnBuffer: int) returns (out_i_18: int, out_Tmp_2358: int, out_Tmp_2364: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatConstructDirent_loop_L68(in_i_18: int, in_LfnOrdinal: int, in_Tmp_2358: int, in_DirentsInLfn: int, in_Tmp_2360: int, in_DirentChecksum: int, in_Tmp_2364: int, in_Tmp_2366: int, in_Buffer_29: int, in_RemainderChars: int, in_LfnDirent: int, in_Tmp_2368: int, in_Tmp_2369: int, in_FinalLfnBuffer: int, in_LfnBuffer_2: int, in_Dirent_26: int, in_Lfn_9: int) returns (out_i_18: int, out_LfnOrdinal: int, out_Tmp_2358: int, out_Tmp_2360: int, out_Tmp_2364: int, out_Tmp_2366: int, out_Buffer_29: int, out_RemainderChars: int, out_Tmp_2368: int, out_Tmp_2369: int)
{

  entry:
    out_i_18, out_LfnOrdinal, out_Tmp_2358, out_Tmp_2360, out_Tmp_2364, out_Tmp_2366, out_Buffer_29, out_RemainderChars, out_Tmp_2368, out_Tmp_2369 := in_i_18, in_LfnOrdinal, in_Tmp_2358, in_Tmp_2360, in_Tmp_2364, in_Tmp_2366, in_Buffer_29, in_RemainderChars, in_Tmp_2368, in_Tmp_2369;
    goto L68, exit;

  exit:
    return;

  L68:
    goto anon49_Else;

  anon49_Else:
    assume {:partition} in_Dirent_26 > in_LfnDirent;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} out_LfnOrdinal == in_DirentsInLfn;
    assume {:nonnull} in_Lfn_9 != 0;
    assume in_Lfn_9 > 0;
    havoc out_RemainderChars;
    assume {:nonnull} in_LfnDirent != 0;
    assume in_LfnDirent > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} out_RemainderChars != 0;
    out_Tmp_2360 := out_RemainderChars * 2;
    call {:si_unique_call 5040} sdv_RtlCopyMemory(0, 0, out_Tmp_2360);
    out_i_18 := out_RemainderChars;
    goto L84;

  L84:
    call {:si_unique_call 5039} out_i_18, out_Tmp_2358, out_Tmp_2364 := FatConstructDirent_loop_L84(out_i_18, out_Tmp_2358, out_Tmp_2364, out_RemainderChars, in_FinalLfnBuffer);
    goto L84_last;

  L84_last:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} 13 > out_i_18;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} out_i_18 == out_RemainderChars;
    out_Tmp_2358 := out_i_18;
    assume {:nonnull} in_FinalLfnBuffer != 0;
    assume in_FinalLfnBuffer > 0;
    goto L89;

  L89:
    out_i_18 := out_i_18 + 1;
    assume false;
    return;

  anon52_Then:
    assume {:partition} out_i_18 != out_RemainderChars;
    out_Tmp_2364 := out_i_18;
    assume {:nonnull} in_FinalLfnBuffer != 0;
    assume in_FinalLfnBuffer > 0;
    goto L89;

  anon51_Then:
    assume {:partition} out_i_18 >= 13;
    out_Buffer_29 := in_FinalLfnBuffer;
    goto L90;

  L90:
    assume {:nonnull} in_LfnDirent != 0;
    assume in_LfnDirent > 0;
    havoc out_Tmp_2366;
    call {:si_unique_call 5036} sdv_RtlCopyMemory(0, 0, 10);
    assume {:nonnull} in_LfnDirent != 0;
    assume in_LfnDirent > 0;
    havoc out_Tmp_2368;
    call {:si_unique_call 5037} sdv_RtlCopyMemory(0, 0, 12);
    assume {:nonnull} in_LfnDirent != 0;
    assume in_LfnDirent > 0;
    havoc out_Tmp_2369;
    call {:si_unique_call 5038} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} in_LfnDirent != 0;
    assume in_LfnDirent > 0;
    assume {:nonnull} in_LfnDirent != 0;
    assume in_LfnDirent > 0;
    assume {:nonnull} in_LfnDirent != 0;
    assume in_LfnDirent > 0;
    assume {:nonnull} in_LfnDirent != 0;
    assume in_LfnDirent > 0;
    out_LfnOrdinal := out_LfnOrdinal - 1;
    goto L90_dummy;

  L90_dummy:
    call {:si_unique_call 5041} {:si_old_unique_call 1} out_i_18, out_LfnOrdinal, out_Tmp_2358, out_Tmp_2360, out_Tmp_2364, out_Tmp_2366, out_Buffer_29, out_RemainderChars, out_Tmp_2368, out_Tmp_2369 := FatConstructDirent_loop_L68(out_i_18, out_LfnOrdinal, out_Tmp_2358, in_DirentsInLfn, out_Tmp_2360, in_DirentChecksum, out_Tmp_2364, out_Tmp_2366, out_Buffer_29, out_RemainderChars, in_LfnDirent, out_Tmp_2368, out_Tmp_2369, in_FinalLfnBuffer, in_LfnBuffer_2, in_Dirent_26, in_Lfn_9);
    return;

  anon54_Then:
    assume {:partition} out_RemainderChars == 0;
    out_Buffer_29 := in_LfnBuffer_2;
    goto L90;

  anon50_Then:
    assume {:partition} out_LfnOrdinal != in_DirentsInLfn;
    assume {:nonnull} in_LfnDirent != 0;
    assume in_LfnDirent > 0;
    out_Buffer_29 := in_LfnBuffer_2;
    goto L90;
}



procedure {:LoopProcedure} FatConstructDirent_loop_L68(in_i_18: int, in_LfnOrdinal: int, in_Tmp_2358: int, in_DirentsInLfn: int, in_Tmp_2360: int, in_DirentChecksum: int, in_Tmp_2364: int, in_Tmp_2366: int, in_Buffer_29: int, in_RemainderChars: int, in_LfnDirent: int, in_Tmp_2368: int, in_Tmp_2369: int, in_FinalLfnBuffer: int, in_LfnBuffer_2: int, in_Dirent_26: int, in_Lfn_9: int) returns (out_i_18: int, out_LfnOrdinal: int, out_Tmp_2358: int, out_Tmp_2360: int, out_Tmp_2364: int, out_Tmp_2366: int, out_Buffer_29: int, out_RemainderChars: int, out_Tmp_2368: int, out_Tmp_2369: int);
  modifies alloc;
  free ensures {:va_keep} out_Buffer_29 == in_Buffer_29 || out_Buffer_29 == in_FinalLfnBuffer || out_Buffer_29 == in_LfnBuffer_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDefragDirectory_loop_L168(in_Bcbs: int, in_PagesPinned: int, in_Tmp_2379: int, in_Page_4: int, in_Tmp_2397: int, in_Tmp_2401: int) returns (out_Tmp_2379: int, out_Page_4: int, out_Tmp_2397: int, out_Tmp_2401: int)
{

  entry:
    out_Tmp_2379, out_Page_4, out_Tmp_2397, out_Tmp_2401 := in_Tmp_2379, in_Page_4, in_Tmp_2397, in_Tmp_2401;
    goto L168, exit;

  exit:
    return;

  L168:
    goto anon82_Else;

  anon82_Else:
    assume {:partition} in_PagesPinned > out_Page_4;
    out_Tmp_2401 := out_Page_4;
    assume {:nonnull} in_Bcbs != 0;
    assume in_Bcbs > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    out_Tmp_2379 := out_Page_4;
    assume {:nonnull} in_Bcbs != 0;
    assume in_Bcbs > 0;
    out_Tmp_2397 := out_Page_4;
    assume {:nonnull} in_Bcbs != 0;
    assume in_Bcbs > 0;
    goto L173;

  L173:
    out_Page_4 := out_Page_4 + 1;
    goto L173_dummy;

  L173_dummy:
    call {:si_unique_call 5042} {:si_old_unique_call 1} out_Tmp_2379, out_Page_4, out_Tmp_2397, out_Tmp_2401 := FatDefragDirectory_loop_L168(in_Bcbs, in_PagesPinned, out_Tmp_2379, out_Page_4, out_Tmp_2397, out_Tmp_2401);
    return;

  anon100_Then:
    goto L173;
}



procedure {:LoopProcedure} FatDefragDirectory_loop_L168(in_Bcbs: int, in_PagesPinned: int, in_Tmp_2379: int, in_Page_4: int, in_Tmp_2397: int, in_Tmp_2401: int) returns (out_Tmp_2379: int, out_Page_4: int, out_Tmp_2397: int, out_Tmp_2401: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDefragDirectory_loop_L184(in_Links_7: int, in_Fcb_58: int, in_sdv_1437: int) returns (out_Links_7: int, out_Fcb_58: int, out_sdv_1437: int)
{

  entry:
    out_Links_7, out_Fcb_58, out_sdv_1437 := in_Links_7, in_Fcb_58, in_sdv_1437;
    goto L184, exit;

  exit:
    return;

  L184:
    goto anon83_Else;

  anon83_Else:
    call {:si_unique_call 5043} out_sdv_1437 := sdv_containing_record(out_Links_7, 72);
    out_Fcb_58 := out_sdv_1437;
    call {:si_unique_call 5044} ExReleaseResourceLite(0);
    assume {:nonnull} out_Links_7 != 0;
    assume out_Links_7 > 0;
    havoc out_Links_7;
    goto anon83_Else_dummy;

  anon83_Else_dummy:
    havoc out_Links_7;
    return;
}



procedure {:LoopProcedure} FatDefragDirectory_loop_L184(in_Links_7: int, in_Fcb_58: int, in_sdv_1437: int) returns (out_Links_7: int, out_Fcb_58: int, out_sdv_1437: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Links_7 == in_Links_7;
  free ensures {:va_keep} out_Fcb_58 == in_Fcb_58;
  free ensures {:va_keep} out_sdv_1437 == in_sdv_1437;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDefragDirectory_loop_L270(in_Bcbs: int, in_PagesPinned: int, in_Tmp_2378: int, in_Tmp_2381: int, in_Page_4: int, in_Tmp_2400: int) returns (out_Tmp_2378: int, out_Tmp_2381: int, out_Page_4: int, out_Tmp_2400: int)
{

  entry:
    out_Tmp_2378, out_Tmp_2381, out_Page_4, out_Tmp_2400 := in_Tmp_2378, in_Tmp_2381, in_Page_4, in_Tmp_2400;
    goto L270, exit;

  exit:
    return;

  L270:
    goto anon91_Else;

  anon91_Else:
    assume {:partition} in_PagesPinned > out_Page_4;
    out_Tmp_2378 := out_Page_4;
    assume {:nonnull} in_Bcbs != 0;
    assume in_Bcbs > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    out_Tmp_2381 := out_Page_4;
    assume {:nonnull} in_Bcbs != 0;
    assume in_Bcbs > 0;
    out_Tmp_2400 := out_Page_4;
    assume {:nonnull} in_Bcbs != 0;
    assume in_Bcbs > 0;
    goto L275;

  L275:
    out_Page_4 := out_Page_4 + 1;
    goto L275_dummy;

  L275_dummy:
    call {:si_unique_call 5045} {:si_old_unique_call 1} out_Tmp_2378, out_Tmp_2381, out_Page_4, out_Tmp_2400 := FatDefragDirectory_loop_L270(in_Bcbs, in_PagesPinned, out_Tmp_2378, out_Tmp_2381, out_Page_4, out_Tmp_2400);
    return;

  anon101_Then:
    goto L275;
}



procedure {:LoopProcedure} FatDefragDirectory_loop_L270(in_Bcbs: int, in_PagesPinned: int, in_Tmp_2378: int, in_Tmp_2381: int, in_Page_4: int, in_Tmp_2400: int) returns (out_Tmp_2378: int, out_Tmp_2381: int, out_Page_4: int, out_Tmp_2400: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDefragDirectory_loop_L306(in_Links_7: int, in_TmpDirent: int, in_Fcb_58: int, in_TmpBcb: int, in_TmpOffset: int, in_PreviousLfnSpread: int, in_sdv_1445: int, in_InvalidateFcbs: int, in_IrpContext_152: int, in_Dcb_13: int) returns (out_Links_7: int, out_Fcb_58: int, out_PreviousLfnSpread: int, out_sdv_1445: int)
{

  entry:
    out_Links_7, out_Fcb_58, out_PreviousLfnSpread, out_sdv_1445 := in_Links_7, in_Fcb_58, in_PreviousLfnSpread, in_sdv_1445;
    goto L306, exit;

  exit:
    return;

  L306:
    goto anon92_Else;

  anon92_Else:
    assume {:nonnull} in_TmpBcb != 0;
    assume in_TmpBcb > 0;
    assume {:nonnull} in_TmpDirent != 0;
    assume in_TmpDirent > 0;
    Mem_T.P_PACKED_DIRENT[in_TmpDirent] := 0;
    call {:si_unique_call 5048} out_sdv_1445 := sdv_containing_record(out_Links_7, 72);
    out_Fcb_58 := out_sdv_1445;
    assume {:nonnull} out_Fcb_58 != 0;
    assume out_Fcb_58 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} out_Fcb_58 != 0;
    assume out_Fcb_58 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    goto L321;

  L321:
    assume {:nonnull} out_Links_7 != 0;
    assume out_Links_7 > 0;
    havoc out_Links_7;
    goto L321_dummy;

  L321_dummy:
    call {:si_unique_call 5049} {:si_old_unique_call 1} out_Links_7, out_Fcb_58, out_PreviousLfnSpread, out_sdv_1445 := FatDefragDirectory_loop_L306(out_Links_7, in_TmpDirent, out_Fcb_58, in_TmpBcb, in_TmpOffset, out_PreviousLfnSpread, out_sdv_1445, in_InvalidateFcbs, in_IrpContext_152, in_Dcb_13);
    return;

  anon94_Then:
    goto L318;

  L318:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} in_InvalidateFcbs != 0;
    goto L325;

  L325:
    assume {:nonnull} in_TmpBcb != 0;
    assume in_TmpBcb > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} in_InvalidateFcbs == 0;
    assume {:nonnull} in_TmpBcb != 0;
    assume in_TmpBcb > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} in_TmpBcb != 0;
    assume in_TmpBcb > 0;
    goto L329;

  L329:
    assume {:nonnull} out_Fcb_58 != 0;
    assume out_Fcb_58 > 0;
    havoc out_PreviousLfnSpread;
    assume {:nonnull} out_Fcb_58 != 0;
    assume out_Fcb_58 > 0;
    assume {:nonnull} in_TmpOffset != 0;
    assume in_TmpOffset > 0;
    assume {:nonnull} out_Fcb_58 != 0;
    assume out_Fcb_58 > 0;
    assume {:nonnull} in_TmpOffset != 0;
    assume in_TmpOffset > 0;
    goto L321;

  anon98_Then:
    goto L329;

  anon97_Then:
    assume {:partition} in_InvalidateFcbs != 0;
    goto L326;

  L326:
    assume {:nonnull} in_TmpBcb != 0;
    assume in_TmpBcb > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} in_TmpBcb != 0;
    assume in_TmpBcb > 0;
    goto L336;

  L336:
    call {:si_unique_call 5046} FatMarkFcbCondition(in_IrpContext_152, out_Fcb_58, 2, 1);
    goto L321;

  anon96_Then:
    goto L336;

  anon95_Then:
    goto L326;

  anon93_Then:
    assume {:partition} in_InvalidateFcbs == 0;
    assume {:nonnull} out_Fcb_58 != 0;
    assume out_Fcb_58 > 0;
    call {:si_unique_call 5047} FatLocateSimpleOemDirent(in_IrpContext_152, in_Dcb_13, Oem_unnamed_tag_70(Name__FILE_NAME_NODE(ShortName__FCB(out_Fcb_58))), in_TmpDirent, in_TmpBcb, in_TmpOffset);
    goto L325;

  anon102_Then:
    goto L318;
}



procedure {:LoopProcedure} FatDefragDirectory_loop_L306(in_Links_7: int, in_TmpDirent: int, in_Fcb_58: int, in_TmpBcb: int, in_TmpOffset: int, in_PreviousLfnSpread: int, in_sdv_1445: int, in_InvalidateFcbs: int, in_IrpContext_152: int, in_Dcb_13: int) returns (out_Links_7: int, out_Fcb_58: int, out_PreviousLfnSpread: int, out_sdv_1445: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Links_7 == in_Links_7;
  free ensures {:va_keep} out_Fcb_58 == in_Fcb_58;
  free ensures {:va_keep} out_PreviousLfnSpread == in_PreviousLfnSpread;
  free ensures {:va_keep} out_sdv_1445 == in_sdv_1445;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDefragDirectory_loop_L256(in_Char: int, in_UnusedDirents: int)
{

  entry:
    goto L256, exit;

  exit:
    return;

  L256:
    goto anon89_Else;

  anon89_Else:
    assume {:partition} in_UnusedDirents > in_Char;
    assume {:nonnull} in_Char != 0;
    assume in_Char > 0;
    goto anon89_Else_dummy;

  anon89_Else_dummy:
    call {:si_unique_call 5050} {:si_old_unique_call 1} FatDefragDirectory_loop_L256(in_Char, in_UnusedDirents);
    return;
}



procedure {:LoopProcedure} FatDefragDirectory_loop_L256(in_Char: int, in_UnusedDirents: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDefragDirectory_loop_L234(in_Lbo_17: int, in_Tmp_2382: int, in_TotalRuns: int, in_UsedDirents: int, in_Tmp_2395: int, in_BytesUsed: int, in_Run_1: int, in_UnusedDirents: int, in_Directory: int, in_vslice_dummy_var_414: int) returns (out_Tmp_2382: int, out_Tmp_2395: int, out_Run_1: int, out_vslice_dummy_var_414: int)
{

  entry:
    out_Tmp_2382, out_Tmp_2395, out_Run_1, out_vslice_dummy_var_414 := in_Tmp_2382, in_Tmp_2395, in_Run_1, in_vslice_dummy_var_414;
    goto L234, exit;

  exit:
    return;

  L234:
    goto anon87_Else;

  anon87_Else:
    assume {:partition} in_TotalRuns > out_Run_1;
    call {:si_unique_call 5053} out_vslice_dummy_var_414 := corral_nondet();
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} in_Lbo_17 != -1;
    out_Tmp_2395 := in_BytesUsed;
    call {:si_unique_call 5051} sdv_RtlCopyMemory(0, 0, out_Tmp_2395);
    goto L250;

  L250:
    out_Run_1 := out_Run_1 + 1;
    goto L250_dummy;

  L250_dummy:
    havoc out_Run_1;
    return;

  anon88_Then:
    assume {:partition} in_Lbo_17 == -1;
    out_Tmp_2382 := in_BytesUsed;
    call {:si_unique_call 5052} sdv_RtlCopyMemory(0, 0, out_Tmp_2382);
    goto L250;
}



procedure {:LoopProcedure} FatDefragDirectory_loop_L234(in_Lbo_17: int, in_Tmp_2382: int, in_TotalRuns: int, in_UsedDirents: int, in_Tmp_2395: int, in_BytesUsed: int, in_Run_1: int, in_UnusedDirents: int, in_Directory: int, in_vslice_dummy_var_414: int) returns (out_Tmp_2382: int, out_Tmp_2395: int, out_Run_1: int, out_vslice_dummy_var_414: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_2382 == in_Tmp_2382 || out_Tmp_2382 == in_BytesUsed;
  free ensures {:va_keep} out_Tmp_2395 == in_BytesUsed || out_Tmp_2395 == in_Tmp_2395;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDefragDirectory_loop_L216(in_Bcbs: int, in_DcbSize: int, in_PagesPinned: int, in_Dirent_27: int, in_Tmp_2392: int, in_DontCare_4: int, in_Tmp_2393: int, in_Page_4: int, in_PinSize: int, in_Tmp_2399: int, in_Directory: int, in_IrpContext_152: int, in_Dcb_13: int) returns (out_Tmp_2392: int, out_Tmp_2393: int, out_Page_4: int, out_PinSize: int, out_Tmp_2399: int, out_Directory: int)
{

  entry:
    out_Tmp_2392, out_Tmp_2393, out_Page_4, out_PinSize, out_Tmp_2399, out_Directory := in_Tmp_2392, in_Tmp_2393, in_Page_4, in_PinSize, in_Tmp_2399, in_Directory;
    goto L216, exit;

  exit:
    return;

  L216:
    goto anon84_Else;

  anon84_Else:
    assume {:partition} in_PagesPinned > out_Page_4;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} (out_Page_4 + 1) * 4096 > in_DcbSize;
    out_PinSize := in_DcbSize - out_Page_4 * 4096;
    goto L224;

  L224:
    out_Tmp_2392 := out_Page_4;
    out_Tmp_2393 := in_Bcbs + out_Tmp_2392 * 4;
    out_Tmp_2399 := out_Page_4 * 4096;
    call {:si_unique_call 5054} FatPrepareWriteDirectoryFile(in_IrpContext_152, in_Dcb_13, out_Tmp_2399, out_PinSize, out_Tmp_2393, in_Dirent_27, 0, 1, in_DontCare_4);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} out_Page_4 != 0;
    goto L231;

  L231:
    out_Page_4 := out_Page_4 + 1;
    goto L231_dummy;

  L231_dummy:
    call {:si_unique_call 5055} {:si_old_unique_call 1} out_Tmp_2392, out_Tmp_2393, out_Page_4, out_PinSize, out_Tmp_2399, out_Directory := FatDefragDirectory_loop_L216(in_Bcbs, in_DcbSize, in_PagesPinned, in_Dirent_27, out_Tmp_2392, in_DontCare_4, out_Tmp_2393, out_Page_4, out_PinSize, out_Tmp_2399, out_Directory, in_IrpContext_152, in_Dcb_13);
    return;

  anon86_Then:
    assume {:partition} out_Page_4 == 0;
    assume {:nonnull} in_Dirent_27 != 0;
    assume in_Dirent_27 > 0;
    out_Directory := Mem_T.P_PACKED_DIRENT[in_Dirent_27];
    goto L231;

  anon85_Then:
    assume {:partition} in_DcbSize >= (out_Page_4 + 1) * 4096;
    out_PinSize := 4096;
    goto L224;
}



procedure {:LoopProcedure} FatDefragDirectory_loop_L216(in_Bcbs: int, in_DcbSize: int, in_PagesPinned: int, in_Dirent_27: int, in_Tmp_2392: int, in_DontCare_4: int, in_Tmp_2393: int, in_Page_4: int, in_PinSize: int, in_Tmp_2399: int, in_Directory: int, in_IrpContext_152: int, in_Dcb_13: int) returns (out_Tmp_2392: int, out_Tmp_2393: int, out_Page_4: int, out_PinSize: int, out_Tmp_2399: int, out_Directory: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDefragDirectory_loop_L122(in_LfnByteOffset_3: int, in_DcbSize: int, in_Ccb_31: int, in_TotalBytesAllocated: int, in_Lfn_10: int, in_Dirent_27: int, in_Bcb_16: int, in_FoundOffset: int, in_BytesUsed: int, in_QueryOffset: int, in_IrpContext_152: int, in_Dcb_13: int, in_vslice_dummy_var_416: int) returns (out_LfnByteOffset_3: int, out_TotalBytesAllocated: int, out_BytesUsed: int, out_QueryOffset: int, out_vslice_dummy_var_416: int)
{

  entry:
    out_LfnByteOffset_3, out_TotalBytesAllocated, out_BytesUsed, out_QueryOffset, out_vslice_dummy_var_416 := in_LfnByteOffset_3, in_TotalBytesAllocated, in_BytesUsed, in_QueryOffset, in_vslice_dummy_var_416;
    goto L122, exit;

  exit:
    return;

  L122:
    call {:si_unique_call 5056} FatLocateDirent#1(in_IrpContext_152, in_Dcb_13, in_Ccb_31, out_QueryOffset, in_Dirent_27, in_Bcb_16, in_FoundOffset, 0, in_Lfn_10);
    assume {:nonnull} in_Dirent_27 != 0;
    assume in_Dirent_27 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[in_Dirent_27] != 0;
    assume {:nonnull} in_FoundOffset != 0;
    assume in_FoundOffset > 0;
    assume {:nonnull} in_Lfn_10 != 0;
    assume in_Lfn_10 > 0;
    havoc out_LfnByteOffset_3;
    assume {:nonnull} in_FoundOffset != 0;
    assume in_FoundOffset > 0;
    havoc out_BytesUsed;
    call {:si_unique_call 5057} out_vslice_dummy_var_416 := corral_nondet();
    out_TotalBytesAllocated := out_TotalBytesAllocated + out_BytesUsed;
    assume {:nonnull} in_FoundOffset != 0;
    assume in_FoundOffset > 0;
    havoc out_QueryOffset;
    goto L126;

  L126:
    assume {:nonnull} in_Dirent_27 != 0;
    assume in_Dirent_27 > 0;
    goto anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.P_PACKED_DIRENT[in_Dirent_27] != 0;
    goto anon73_Then;

  anon73_Then:
    assume {:partition} out_QueryOffset < in_DcbSize;
    goto anon73_Then_dummy;

  anon73_Then_dummy:
    call {:si_unique_call 5058} {:si_old_unique_call 1} out_LfnByteOffset_3, out_TotalBytesAllocated, out_BytesUsed, out_QueryOffset, out_vslice_dummy_var_416 := FatDefragDirectory_loop_L122(out_LfnByteOffset_3, in_DcbSize, in_Ccb_31, out_TotalBytesAllocated, in_Lfn_10, in_Dirent_27, in_Bcb_16, in_FoundOffset, out_BytesUsed, out_QueryOffset, in_IrpContext_152, in_Dcb_13, out_vslice_dummy_var_416);
    return;

  anon70_Then:
    assume {:partition} Mem_T.P_PACKED_DIRENT[in_Dirent_27] == 0;
    goto L126;
}



procedure {:LoopProcedure} FatDefragDirectory_loop_L122(in_LfnByteOffset_3: int, in_DcbSize: int, in_Ccb_31: int, in_TotalBytesAllocated: int, in_Lfn_10: int, in_Dirent_27: int, in_Bcb_16: int, in_FoundOffset: int, in_BytesUsed: int, in_QueryOffset: int, in_IrpContext_152: int, in_Dcb_13: int, in_vslice_dummy_var_416: int) returns (out_LfnByteOffset_3: int, out_TotalBytesAllocated: int, out_BytesUsed: int, out_QueryOffset: int, out_vslice_dummy_var_416: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDefragDirectory_loop_L43(in_Links_7: int, in_Fcb_58: int, in_sdv_1436: int, in_vslice_dummy_var_415: int) returns (out_Links_7: int, out_Fcb_58: int, out_sdv_1436: int, out_vslice_dummy_var_415: int)
{

  entry:
    out_Links_7, out_Fcb_58, out_sdv_1436, out_vslice_dummy_var_415 := in_Links_7, in_Fcb_58, in_sdv_1436, in_vslice_dummy_var_415;
    goto L43, exit;

  exit:
    return;

  L43:
    goto anon69_Then;

  anon69_Then:
    call {:si_unique_call 5059} out_sdv_1436 := sdv_containing_record(out_Links_7, 72);
    out_Fcb_58 := out_sdv_1436;
    call {:si_unique_call 5060} out_vslice_dummy_var_415 := ExAcquireResourceExclusiveLite(0, 1);
    assume {:nonnull} out_Links_7 != 0;
    assume out_Links_7 > 0;
    havoc out_Links_7;
    goto anon69_Then_dummy;

  anon69_Then_dummy:
    havoc out_Links_7;
    return;
}



procedure {:LoopProcedure} FatDefragDirectory_loop_L43(in_Links_7: int, in_Fcb_58: int, in_sdv_1436: int, in_vslice_dummy_var_415: int) returns (out_Links_7: int, out_Fcb_58: int, out_sdv_1436: int, out_vslice_dummy_var_415: int);
  free ensures {:va_keep} out_Links_7 == in_Links_7;
  free ensures {:va_keep} out_Fcb_58 == in_Fcb_58;
  free ensures {:va_keep} out_sdv_1436 == in_sdv_1436;
  free ensures {:va_keep} out_vslice_dummy_var_415 == in_vslice_dummy_var_415;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatComputeLfnChecksum_loop_L10(in_i_19: int, in_Checksum: int, in_Dirent_28: int) returns (out_i_19: int, out_Checksum: int)
{

  entry:
    out_i_19, out_Checksum := in_i_19, in_Checksum;
    goto L10, exit;

  exit:
    return;

  L10:
    assume {:CounterLoop 10} {:Counter "i_19"} true;
    goto anon5_Else;

  anon5_Else:
    assume {:partition} 11 > out_i_19;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} BAND(out_Checksum, 1) != 0;
    goto L15;

  L15:
    assume {:nonnull} in_Dirent_28 != 0;
    assume in_Dirent_28 > 0;
    call {:si_unique_call 5061} out_Checksum := corral_nondet();
    out_i_19 := out_i_19 + 1;
    goto L15_dummy;

  L15_dummy:
    havoc out_i_19;
    return;

  anon6_Then:
    assume {:partition} BAND(out_Checksum, 1) == 0;
    goto L15;
}



procedure {:LoopProcedure} FatComputeLfnChecksum_loop_L10(in_i_19: int, in_Checksum: int, in_Dirent_28: int) returns (out_i_19: int, out_Checksum: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatLocateVolumeLabel_loop_L11(in_Tmp_2479: int, in_Tmp_2480: int, in_Status_61: int, in_Tmp_2482: int, in_Tmp_2483: int, in_Tmp_2484: int, in_Tmp_2485: int, in_Tmp_2486: int, in_Tmp_2487: int, in_IrpContext_156: int, in_Vcb_88: int, in_Dirent_32: int, in_Bcb_19: int, in_ByteOffset_4: int) returns (out_Tmp_2479: int, out_Tmp_2480: int, out_Tmp_2482: int, out_Tmp_2483: int, out_Tmp_2484: int, out_Tmp_2485: int, out_Tmp_2486: int, out_Tmp_2487: int)
{
  var vslice_dummy_var_1819: int;

  entry:
    out_Tmp_2479, out_Tmp_2480, out_Tmp_2482, out_Tmp_2483, out_Tmp_2484, out_Tmp_2485, out_Tmp_2486, out_Tmp_2487 := in_Tmp_2479, in_Tmp_2480, in_Tmp_2482, in_Tmp_2483, in_Tmp_2484, in_Tmp_2485, in_Tmp_2486, in_Tmp_2487;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_Vcb_88 != 0;
    assume in_Vcb_88 > 0;
    havoc out_Tmp_2479;
    assume {:nonnull} in_ByteOffset_4 != 0;
    assume in_ByteOffset_4 > 0;
    assume {:nonnull} out_Tmp_2479 != 0;
    assume out_Tmp_2479 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} in_Status_61 != 0;
    assume in_Status_61 > 0;
    assume {:nonnull} in_Bcb_19 != 0;
    assume in_Bcb_19 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} in_Bcb_19 != 0;
    assume in_Bcb_19 > 0;
    goto L15;

  L15:
    assume {:nonnull} in_Status_61 != 0;
    assume in_Status_61 > 0;
    goto anon22_Then;

  anon22_Then:
    assume {:nonnull} in_Dirent_32 != 0;
    assume in_Dirent_32 > 0;
    out_Tmp_2480 := Mem_T.P_PACKED_DIRENT[in_Dirent_32];
    assume {:nonnull} out_Tmp_2480 != 0;
    assume out_Tmp_2480 > 0;
    havoc out_Tmp_2482;
    assume {:nonnull} out_Tmp_2482 != 0;
    assume out_Tmp_2482 > 0;
    goto anon28_Else;

  anon28_Else:
    assume {:nonnull} in_Dirent_32 != 0;
    assume in_Dirent_32 > 0;
    out_Tmp_2486 := Mem_T.P_PACKED_DIRENT[in_Dirent_32];
    assume {:nonnull} out_Tmp_2486 != 0;
    assume out_Tmp_2486 > 0;
    havoc out_Tmp_2484;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_Tmp_2484 == 8;
    assume {:nonnull} in_Dirent_32 != 0;
    assume in_Dirent_32 > 0;
    out_Tmp_2487 := Mem_T.P_PACKED_DIRENT[in_Dirent_32];
    assume {:nonnull} out_Tmp_2487 != 0;
    assume out_Tmp_2487 > 0;
    havoc out_Tmp_2483;
    assume {:nonnull} out_Tmp_2483 != 0;
    assume out_Tmp_2483 > 0;
    goto anon30_Then;

  anon30_Then:
    goto L31;

  L31:
    assume {:nonnull} in_ByteOffset_4 != 0;
    assume in_ByteOffset_4 > 0;
    assume {:nonnull} in_Dirent_32 != 0;
    assume in_Dirent_32 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_32] := Mem_T.P_PACKED_DIRENT[in_Dirent_32];
    goto L31_dummy;

  L31_dummy:
    call {:si_unique_call 5063} {:si_old_unique_call 1} out_Tmp_2479, out_Tmp_2480, out_Tmp_2482, out_Tmp_2483, out_Tmp_2484, out_Tmp_2485, out_Tmp_2486, out_Tmp_2487 := FatLocateVolumeLabel_loop_L11(out_Tmp_2479, out_Tmp_2480, in_Status_61, out_Tmp_2482, out_Tmp_2483, out_Tmp_2484, out_Tmp_2485, out_Tmp_2486, out_Tmp_2487, in_IrpContext_156, in_Vcb_88, in_Dirent_32, in_Bcb_19, in_ByteOffset_4);
    return;

  anon29_Then:
    assume {:partition} out_Tmp_2484 != 8;
    goto L31;

  anon27_Then:
    goto L15;

  anon26_Then:
    assume {:nonnull} in_ByteOffset_4 != 0;
    assume in_ByteOffset_4 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_Bcb_19 != 0;
    assume in_Bcb_19 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L38;

  L38:
    assume {:nonnull} in_Bcb_19 != 0;
    assume in_Bcb_19 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} in_Bcb_19 != 0;
    assume in_Bcb_19 > 0;
    goto L40;

  L40:
    assume {:nonnull} in_ByteOffset_4 != 0;
    assume in_ByteOffset_4 > 0;
    havoc out_Tmp_2485;
    assume {:nonnull} in_Vcb_88 != 0;
    assume in_Vcb_88 > 0;
    havoc vslice_dummy_var_1819;
    call {:si_unique_call 5062} FatReadDirectoryFile#1(in_IrpContext_156, vslice_dummy_var_1819, out_Tmp_2485, 4096, 0, in_Bcb_19, in_Dirent_32, in_Status_61);
    assume {:nonnull} in_Dirent_32 != 0;
    assume in_Dirent_32 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_32] := Mem_T.P_PACKED_DIRENT[in_Dirent_32];
    goto L15;

  anon24_Then:
    goto L40;

  anon25_Then:
    goto L15;

  anon21_Then:
    goto L38;
}



procedure {:LoopProcedure} FatLocateVolumeLabel_loop_L11(in_Tmp_2479: int, in_Tmp_2480: int, in_Status_61: int, in_Tmp_2482: int, in_Tmp_2483: int, in_Tmp_2484: int, in_Tmp_2485: int, in_Tmp_2486: int, in_Tmp_2487: int, in_IrpContext_156: int, in_Vcb_88: int, in_Dirent_32: int, in_Bcb_19: int, in_ByteOffset_4: int) returns (out_Tmp_2479: int, out_Tmp_2480: int, out_Tmp_2482: int, out_Tmp_2483: int, out_Tmp_2484: int, out_Tmp_2485: int, out_Tmp_2486: int, out_Tmp_2487: int);
  modifies Mem_T.P_PACKED_DIRENT, alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatTunnelFcbOrDcb_loop_L27(in_i_20: int, in_ShortNameWithCase: int, in_Tmp_2503: int) returns (out_i_20: int, out_Tmp_2503: int)
{

  entry:
    out_i_20, out_Tmp_2503 := in_i_20, in_Tmp_2503;
    goto L27, exit;

  exit:
    return;

  L27:
    assume {:nonnull} in_ShortNameWithCase != 0;
    assume in_ShortNameWithCase > 0;
    goto anon18_Else;

  anon18_Else:
    out_Tmp_2503 := out_i_20;
    assume {:nonnull} in_ShortNameWithCase != 0;
    assume in_ShortNameWithCase > 0;
    goto anon22_Else;

  anon22_Else:
    out_i_20 := out_i_20 + 1;
    goto anon22_Else_dummy;

  anon22_Else_dummy:
    havoc out_i_20;
    return;
}



procedure {:LoopProcedure} FatTunnelFcbOrDcb_loop_L27(in_i_20: int, in_ShortNameWithCase: int, in_Tmp_2503: int) returns (out_i_20: int, out_Tmp_2503: int);
  free ensures {:va_keep} out_Tmp_2503 == in_i_20 || out_Tmp_2503 == in_Tmp_2503;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCreateNewDirent_loop_L89(in_i_21: int, in_Tmp_2509: int, in_Tmp_2510: int, in_Status_63: int, in_Dirent_35: int, in_Bcb_21: int, in_ByteOffset_6: int, in_Tmp_2519: int, in_IrpContext_159: int, in_ParentDirectory_2: int, in_DirentsNeeded_3: int) returns (out_i_21: int, out_Tmp_2509: int, out_Tmp_2510: int, out_Tmp_2519: int)
{

  entry:
    out_i_21, out_Tmp_2509, out_Tmp_2510, out_Tmp_2519 := in_i_21, in_Tmp_2509, in_Tmp_2510, in_Tmp_2519;
    goto L89, exit;

  exit:
    return;

  L89:
    goto anon85_Else;

  anon85_Else:
    assume {:partition} in_DirentsNeeded_3 > out_i_21;
    assume {:nonnull} in_ParentDirectory_2 != 0;
    assume in_ParentDirectory_2 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} in_Status_63 != 0;
    assume in_Status_63 > 0;
    assume {:nonnull} in_Bcb_21 != 0;
    assume in_Bcb_21 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} in_Bcb_21 != 0;
    assume in_Bcb_21 > 0;
    goto L95;

  L95:
    assume {:nonnull} in_Status_63 != 0;
    assume in_Status_63 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L106;

  L106:
    call {:si_unique_call 5064} FatPopUpFileCorrupt#1(in_IrpContext_159, in_ParentDirectory_2);
    assume {:nonnull} in_IrpContext_159 != 0;
    assume in_IrpContext_159 > 0;
    call {:si_unique_call 5065} ExRaiseStatus(-1073741566);
    goto L113;

  L113:
    out_i_21 := out_i_21 + 1;
    goto L113_dummy;

  L113_dummy:
    call {:si_unique_call 5067} {:si_old_unique_call 1} out_i_21, out_Tmp_2509, out_Tmp_2510, out_Tmp_2519 := FatCreateNewDirent_loop_L89(out_i_21, out_Tmp_2509, out_Tmp_2510, in_Status_63, in_Dirent_35, in_Bcb_21, in_ByteOffset_6, out_Tmp_2519, in_IrpContext_159, in_ParentDirectory_2, in_DirentsNeeded_3);
    return;

  anon89_Then:
    assume {:nonnull} in_Dirent_35 != 0;
    assume in_Dirent_35 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_35] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_35] > 0;
    havoc out_Tmp_2510;
    assume {:nonnull} out_Tmp_2510 != 0;
    assume out_Tmp_2510 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} in_Dirent_35 != 0;
    assume in_Dirent_35 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_35] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_35] > 0;
    havoc out_Tmp_2519;
    assume {:nonnull} out_Tmp_2519 != 0;
    assume out_Tmp_2519 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    goto L113;

  anon105_Then:
    goto L106;

  anon104_Then:
    goto L113;

  anon103_Then:
    goto L95;

  anon87_Then:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} INTMOD(in_ByteOffset_6 + out_i_21 * 32, 4096) != 0;
    assume {:nonnull} in_Bcb_21 != 0;
    assume in_Bcb_21 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto L115;

  L115:
    assume {:nonnull} in_Bcb_21 != 0;
    assume in_Bcb_21 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} in_Bcb_21 != 0;
    assume in_Bcb_21 > 0;
    goto L117;

  L117:
    out_Tmp_2509 := BAND(in_ByteOffset_6 + out_i_21 * 32, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 5066} FatReadDirectoryFile#1(in_IrpContext_159, in_ParentDirectory_2, out_Tmp_2509, 4096, 0, in_Bcb_21, in_Dirent_35, in_Status_63);
    assume {:nonnull} in_Dirent_35 != 0;
    assume in_Dirent_35 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_35] := Mem_T.P_PACKED_DIRENT[in_Dirent_35];
    goto L95;

  anon90_Then:
    goto L117;

  anon91_Then:
    goto L95;

  anon88_Then:
    assume {:partition} INTMOD(in_ByteOffset_6 + out_i_21 * 32, 4096) == 0;
    goto L115;
}



procedure {:LoopProcedure} FatCreateNewDirent_loop_L89(in_i_21: int, in_Tmp_2509: int, in_Tmp_2510: int, in_Status_63: int, in_Dirent_35: int, in_Bcb_21: int, in_ByteOffset_6: int, in_Tmp_2519: int, in_IrpContext_159: int, in_ParentDirectory_2: int, in_DirentsNeeded_3: int) returns (out_i_21: int, out_Tmp_2509: int, out_Tmp_2510: int, out_Tmp_2519: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatIsDirectoryEmpty_loop_L20(in_Tmp_2556: int, in_Dirent_36: int, in_Status_64: int, in_Tmp_2557: int, in_Bcb_23: int, in_ByteOffset_7: int, in_Tmp_2559: int, in_IrpContext_161: int, in_Dcb_16: int) returns (out_Tmp_2556: int, out_Tmp_2557: int, out_ByteOffset_7: int, out_Tmp_2559: int)
{

  entry:
    out_Tmp_2556, out_Tmp_2557, out_ByteOffset_7, out_Tmp_2559 := in_Tmp_2556, in_Tmp_2557, in_ByteOffset_7, in_Tmp_2559;
    goto L20, exit;

  exit:
    return;

  L20:
    assume {:nonnull} in_Dcb_16 != 0;
    assume in_Dcb_16 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} in_Status_64 != 0;
    assume in_Status_64 > 0;
    assume {:nonnull} in_Bcb_23 != 0;
    assume in_Bcb_23 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} in_Bcb_23 != 0;
    assume in_Bcb_23 > 0;
    goto L24;

  L24:
    assume {:nonnull} in_Status_64 != 0;
    assume in_Status_64 > 0;
    goto anon26_Then;

  anon26_Then:
    assume {:nonnull} in_Dirent_36 != 0;
    assume in_Dirent_36 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_36] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_36] > 0;
    havoc out_Tmp_2556;
    assume {:nonnull} out_Tmp_2556 != 0;
    assume out_Tmp_2556 > 0;
    goto anon32_Else;

  anon32_Else:
    assume {:nonnull} in_Dirent_36 != 0;
    assume in_Dirent_36 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_36] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_36] > 0;
    havoc out_Tmp_2557;
    assume {:nonnull} out_Tmp_2557 != 0;
    assume out_Tmp_2557 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} in_Dirent_36 != 0;
    assume in_Dirent_36 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_36] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_36] > 0;
    goto anon27_Then;

  anon27_Then:
    goto L38;

  L38:
    out_ByteOffset_7 := out_ByteOffset_7 + 32;
    assume {:nonnull} in_Dirent_36 != 0;
    assume in_Dirent_36 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_36] := Mem_T.P_PACKED_DIRENT[in_Dirent_36];
    goto L38_dummy;

  L38_dummy:
    call {:si_unique_call 5069} {:si_old_unique_call 1} out_Tmp_2556, out_Tmp_2557, out_ByteOffset_7, out_Tmp_2559 := FatIsDirectoryEmpty_loop_L20(out_Tmp_2556, in_Dirent_36, in_Status_64, out_Tmp_2557, in_Bcb_23, out_ByteOffset_7, out_Tmp_2559, in_IrpContext_161, in_Dcb_16);
    return;

  anon33_Then:
    goto L38;

  anon31_Then:
    goto L24;

  anon24_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} INTMOD(out_ByteOffset_7, 4096) != 0;
    assume {:nonnull} in_Bcb_23 != 0;
    assume in_Bcb_23 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L43;

  L43:
    assume {:nonnull} in_Bcb_23 != 0;
    assume in_Bcb_23 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} in_Bcb_23 != 0;
    assume in_Bcb_23 > 0;
    goto L45;

  L45:
    out_Tmp_2559 := BAND(out_ByteOffset_7, BNOT(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(BOR(1, 2), 4), 8), 16), 32), 64), 128), 256), 512), 1024), 2048)));
    call {:si_unique_call 5068} FatReadDirectoryFile#1(in_IrpContext_161, in_Dcb_16, out_Tmp_2559, 4096, 0, in_Bcb_23, in_Dirent_36, in_Status_64);
    assume {:nonnull} in_Dirent_36 != 0;
    assume in_Dirent_36 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_36] := Mem_T.P_PACKED_DIRENT[in_Dirent_36];
    goto L24;

  anon28_Then:
    goto L45;

  anon29_Then:
    goto L24;

  anon25_Then:
    assume {:partition} INTMOD(out_ByteOffset_7, 4096) == 0;
    goto L43;
}



procedure {:LoopProcedure} FatIsDirectoryEmpty_loop_L20(in_Tmp_2556: int, in_Dirent_36: int, in_Status_64: int, in_Tmp_2557: int, in_Bcb_23: int, in_ByteOffset_7: int, in_Tmp_2559: int, in_IrpContext_161: int, in_Dcb_16: int) returns (out_Tmp_2556: int, out_Tmp_2557: int, out_ByteOffset_7: int, out_Tmp_2559: int);
  modifies Mem_T.P_PACKED_DIRENT, alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatInsertName_loop_L18(in_Tmp_2585: int, in_Tmp_2587: int, in_Tmp_2588: int, in_Tmp_2589: int, in_Tmp_2590: int, in_Node: int, in_Tmp_2591: int, in_Tmp_2592: int, in_Tmp_2593: int, in_sdv_1469: int, in_sdv_1470: int, in_Comparison: int, in_Tmp_2595: int, in_Tmp_2596: int, in_Tmp_2597: int, in_Tmp_2598: int, in_Tmp_2600: int, in_Tmp_2601: int, in_Name_4: int) returns (out_Tmp_2585: int, out_Tmp_2587: int, out_Tmp_2588: int, out_Tmp_2589: int, out_Tmp_2590: int, out_Node: int, out_Tmp_2591: int, out_Tmp_2592: int, out_Tmp_2593: int, out_sdv_1469: int, out_sdv_1470: int, out_Comparison: int, out_Tmp_2595: int, out_Tmp_2596: int, out_Tmp_2597: int, out_Tmp_2598: int, out_Tmp_2600: int, out_Tmp_2601: int)
{
  var vslice_dummy_var_1820: int;
  var vslice_dummy_var_1821: int;

  entry:
    out_Tmp_2585, out_Tmp_2587, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_Node, out_Tmp_2591, out_Tmp_2592, out_Tmp_2593, out_sdv_1469, out_sdv_1470, out_Comparison, out_Tmp_2595, out_Tmp_2596, out_Tmp_2597, out_Tmp_2598, out_Tmp_2600, out_Tmp_2601 := in_Tmp_2585, in_Tmp_2587, in_Tmp_2588, in_Tmp_2589, in_Tmp_2590, in_Node, in_Tmp_2591, in_Tmp_2592, in_Tmp_2593, in_sdv_1469, in_sdv_1470, in_Comparison, in_Tmp_2595, in_Tmp_2596, in_Tmp_2597, in_Tmp_2598, in_Tmp_2600, in_Tmp_2601;
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2587 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(out_Node));
    assume {:nonnull} out_Tmp_2587 != 0;
    assume out_Tmp_2587 > 0;
    havoc out_Tmp_2595;
    assume {:nonnull} in_Name_4 != 0;
    assume in_Name_4 > 0;
    out_Tmp_2598 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(in_Name_4));
    assume {:nonnull} out_Tmp_2598 != 0;
    assume out_Tmp_2598 > 0;
    havoc out_Tmp_2596;
    assume {:nonnull} out_Tmp_2595 != 0;
    assume out_Tmp_2595 > 0;
    assume {:nonnull} out_Tmp_2596 != 0;
    assume out_Tmp_2596 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2600 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(out_Node));
    assume {:nonnull} out_Tmp_2600 != 0;
    assume out_Tmp_2600 > 0;
    havoc out_Tmp_2597;
    assume {:nonnull} in_Name_4 != 0;
    assume in_Name_4 > 0;
    out_Tmp_2592 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(in_Name_4));
    assume {:nonnull} out_Tmp_2592 != 0;
    assume out_Tmp_2592 > 0;
    havoc out_Tmp_2589;
    assume {:nonnull} out_Tmp_2589 != 0;
    assume out_Tmp_2589 > 0;
    assume {:nonnull} out_Tmp_2597 != 0;
    assume out_Tmp_2597 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    out_Tmp_2601 := 0;
    goto L25;

  L25:
    out_Tmp_2588 := out_Tmp_2601;
    goto L26;

  L26:
    out_Comparison := out_Tmp_2588;
    goto anon21_Then;

  anon21_Then:
    assume {:partition} out_Comparison != 2;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} out_Comparison == 1;
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2585 := Links__FILE_NAME_NODE(out_Node);
    assume {:nonnull} out_Tmp_2585 != 0;
    assume out_Tmp_2585 > 0;
    goto anon23_Then;

  anon23_Then:
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2591 := Links__FILE_NAME_NODE(out_Node);
    assume {:nonnull} out_Tmp_2591 != 0;
    assume out_Tmp_2591 > 0;
    havoc vslice_dummy_var_1820;
    call {:si_unique_call 5070} out_sdv_1469 := sdv_containing_record(vslice_dummy_var_1820, 16);
    out_Node := out_sdv_1469;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    goto L_BAF_11;

  L_BAF_11:
    call {:si_unique_call 5073} {:si_old_unique_call 1} out_Tmp_2585, out_Tmp_2587, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_Node, out_Tmp_2591, out_Tmp_2592, out_Tmp_2593, out_sdv_1469, out_sdv_1470, out_Comparison, out_Tmp_2595, out_Tmp_2596, out_Tmp_2597, out_Tmp_2598, out_Tmp_2600, out_Tmp_2601 := FatInsertName_loop_L18(out_Tmp_2585, out_Tmp_2587, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_Node, out_Tmp_2591, out_Tmp_2592, out_Tmp_2593, out_sdv_1469, out_sdv_1470, out_Comparison, out_Tmp_2595, out_Tmp_2596, out_Tmp_2597, out_Tmp_2598, out_Tmp_2600, out_Tmp_2601, in_Name_4);
    return;

  anon17_Then:
    assume {:partition} out_Comparison != 1;
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2593 := Links__FILE_NAME_NODE(out_Node);
    assume {:nonnull} out_Tmp_2593 != 0;
    assume out_Tmp_2593 > 0;
    goto anon24_Then;

  anon24_Then:
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2590 := Links__FILE_NAME_NODE(out_Node);
    assume {:nonnull} out_Tmp_2590 != 0;
    assume out_Tmp_2590 > 0;
    havoc vslice_dummy_var_1821;
    call {:si_unique_call 5072} out_sdv_1470 := sdv_containing_record(vslice_dummy_var_1821, 16);
    out_Node := out_sdv_1470;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    goto L_BAF_11;

  anon20_Then:
    out_Tmp_2601 := 1;
    goto L25;

  anon19_Then:
    assume {:nonnull} in_Name_4 != 0;
    assume in_Name_4 > 0;
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    call {:si_unique_call 5071} out_Tmp_2588 := FatCompareNames(Oem_unnamed_tag_70(Name__FILE_NAME_NODE(out_Node)), Oem_unnamed_tag_70(Name__FILE_NAME_NODE(in_Name_4)));
    goto L26;
}



procedure {:LoopProcedure} FatInsertName_loop_L18(in_Tmp_2585: int, in_Tmp_2587: int, in_Tmp_2588: int, in_Tmp_2589: int, in_Tmp_2590: int, in_Node: int, in_Tmp_2591: int, in_Tmp_2592: int, in_Tmp_2593: int, in_sdv_1469: int, in_sdv_1470: int, in_Comparison: int, in_Tmp_2595: int, in_Tmp_2596: int, in_Tmp_2597: int, in_Tmp_2598: int, in_Tmp_2600: int, in_Tmp_2601: int, in_Name_4: int) returns (out_Tmp_2585: int, out_Tmp_2587: int, out_Tmp_2588: int, out_Tmp_2589: int, out_Tmp_2590: int, out_Node: int, out_Tmp_2591: int, out_Tmp_2592: int, out_Tmp_2593: int, out_sdv_1469: int, out_sdv_1470: int, out_Comparison: int, out_Tmp_2595: int, out_Tmp_2596: int, out_Tmp_2597: int, out_Tmp_2598: int, out_Tmp_2600: int, out_Tmp_2601: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Tmp_2585 == in_Tmp_2585;
  free ensures {:va_keep} out_Tmp_2587 == in_Tmp_2587;
  free ensures {:va_keep} out_Tmp_2588 == in_Tmp_2588;
  free ensures {:va_keep} out_Tmp_2589 == in_Tmp_2589;
  free ensures {:va_keep} out_Tmp_2590 == in_Tmp_2590;
  free ensures {:va_keep} out_Node == in_Node;
  free ensures {:va_keep} out_Tmp_2591 == in_Tmp_2591;
  free ensures {:va_keep} out_Tmp_2592 == in_Tmp_2592;
  free ensures {:va_keep} out_Tmp_2593 == in_Tmp_2593;
  free ensures {:va_keep} out_sdv_1469 == in_sdv_1469;
  free ensures {:va_keep} out_sdv_1470 == in_sdv_1470;
  free ensures {:va_keep} out_Comparison == in_Comparison;
  free ensures {:va_keep} out_Tmp_2595 == in_Tmp_2595;
  free ensures {:va_keep} out_Tmp_2596 == in_Tmp_2596;
  free ensures {:va_keep} out_Tmp_2597 == in_Tmp_2597;
  free ensures {:va_keep} out_Tmp_2598 == in_Tmp_2598;
  free ensures {:va_keep} out_Tmp_2600 == in_Tmp_2600;
  free ensures {:va_keep} out_Tmp_2601 == in_Tmp_2601;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatInsertName_loop_L12(in_Tmp_2585: int, in_Tmp_2587: int, in_Tmp_2588: int, in_Tmp_2589: int, in_Tmp_2590: int, in_sdv_1467: int, in_Node: int, in_Tmp_2591: int, in_Tmp_2592: int, in_Tmp_2593: int, in_sdv_1469: int, in_sdv_1470: int, in_Comparison: int, in_Tmp_2595: int, in_Tmp_2596: int, in_Tmp_2597: int, in_Tmp_2598: int, in_Tmp_2599: int, in_Tmp_2600: int, in_Tmp_2601: int, in_IrpContext_164: int, in_RootNode: int, in_Name_4: int) returns (out_Tmp_2585: int, out_Tmp_2587: int, out_Tmp_2588: int, out_Tmp_2589: int, out_Tmp_2590: int, out_sdv_1467: int, out_Node: int, out_Tmp_2591: int, out_Tmp_2592: int, out_Tmp_2593: int, out_sdv_1469: int, out_sdv_1470: int, out_Comparison: int, out_Tmp_2595: int, out_Tmp_2596: int, out_Tmp_2597: int, out_Tmp_2598: int, out_Tmp_2599: int, out_Tmp_2600: int, out_Tmp_2601: int)
{
  var vslice_dummy_var_1822: int;
  var vslice_dummy_var_1823: int;
  var vslice_dummy_var_1824: int;
  var vslice_dummy_var_1825: int;
  var vslice_dummy_var_1826: int;
  var vslice_dummy_var_1827: int;

  entry:
    out_Tmp_2585, out_Tmp_2587, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_sdv_1467, out_Node, out_Tmp_2591, out_Tmp_2592, out_Tmp_2593, out_sdv_1469, out_sdv_1470, out_Comparison, out_Tmp_2595, out_Tmp_2596, out_Tmp_2597, out_Tmp_2598, out_Tmp_2599, out_Tmp_2600, out_Tmp_2601 := in_Tmp_2585, in_Tmp_2587, in_Tmp_2588, in_Tmp_2589, in_Tmp_2590, in_sdv_1467, in_Node, in_Tmp_2591, in_Tmp_2592, in_Tmp_2593, in_sdv_1469, in_sdv_1470, in_Comparison, in_Tmp_2595, in_Tmp_2596, in_Tmp_2597, in_Tmp_2598, in_Tmp_2599, in_Tmp_2600, in_Tmp_2601;
    goto L12, exit;

  exit:
    return;

  L12:
    assume {:nonnull} in_RootNode != 0;
    assume in_RootNode > 0;
    havoc vslice_dummy_var_1822;
    call {:si_unique_call 5074} out_sdv_1467 := sdv_containing_record(vslice_dummy_var_1822, 16);
    out_Node := out_sdv_1467;
    goto L18;

  L18:
    call {:si_unique_call 5079} out_Tmp_2585, out_Tmp_2587, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_Node, out_Tmp_2591, out_Tmp_2592, out_Tmp_2593, out_sdv_1469, out_sdv_1470, out_Comparison, out_Tmp_2595, out_Tmp_2596, out_Tmp_2597, out_Tmp_2598, out_Tmp_2600, out_Tmp_2601 := FatInsertName_loop_L18(out_Tmp_2585, out_Tmp_2587, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_Node, out_Tmp_2591, out_Tmp_2592, out_Tmp_2593, out_sdv_1469, out_sdv_1470, out_Comparison, out_Tmp_2595, out_Tmp_2596, out_Tmp_2597, out_Tmp_2598, out_Tmp_2600, out_Tmp_2601, in_Name_4);
    goto L18_last;

  L18_last:
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2587 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(out_Node));
    assume {:nonnull} out_Tmp_2587 != 0;
    assume out_Tmp_2587 > 0;
    havoc out_Tmp_2595;
    assume {:nonnull} in_Name_4 != 0;
    assume in_Name_4 > 0;
    out_Tmp_2598 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(in_Name_4));
    assume {:nonnull} out_Tmp_2598 != 0;
    assume out_Tmp_2598 > 0;
    havoc out_Tmp_2596;
    assume {:nonnull} out_Tmp_2595 != 0;
    assume out_Tmp_2595 > 0;
    assume {:nonnull} out_Tmp_2596 != 0;
    assume out_Tmp_2596 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2600 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(out_Node));
    assume {:nonnull} out_Tmp_2600 != 0;
    assume out_Tmp_2600 > 0;
    havoc out_Tmp_2597;
    assume {:nonnull} in_Name_4 != 0;
    assume in_Name_4 > 0;
    out_Tmp_2592 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(in_Name_4));
    assume {:nonnull} out_Tmp_2592 != 0;
    assume out_Tmp_2592 > 0;
    havoc out_Tmp_2589;
    assume {:nonnull} out_Tmp_2589 != 0;
    assume out_Tmp_2589 > 0;
    assume {:nonnull} out_Tmp_2597 != 0;
    assume out_Tmp_2597 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    out_Tmp_2601 := 0;
    goto L25;

  L25:
    out_Tmp_2588 := out_Tmp_2601;
    goto L26;

  L26:
    out_Comparison := out_Tmp_2588;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} out_Comparison == 2;
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    havoc out_Tmp_2599;
    assume {:nonnull} out_Tmp_2599 != 0;
    assume out_Tmp_2599 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} in_RootNode != 0;
    assume in_RootNode > 0;
    havoc vslice_dummy_var_1825;
    call {:si_unique_call 5077} KeBugCheckEx(35, 1769629, vslice_dummy_var_1825, in_Name_4, out_Node);
    goto L30;

  L30:
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    havoc vslice_dummy_var_1823;
    call {:si_unique_call 5075} FatMarkFcbCondition(in_IrpContext_164, vslice_dummy_var_1823, 2, 1);
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    havoc vslice_dummy_var_1824;
    call {:si_unique_call 5076} FatRemoveNames(in_IrpContext_164, vslice_dummy_var_1824);
    goto L30_dummy;

  L30_dummy:
    call {:si_unique_call 5082} {:si_old_unique_call 1} out_Tmp_2585, out_Tmp_2587, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_sdv_1467, out_Node, out_Tmp_2591, out_Tmp_2592, out_Tmp_2593, out_sdv_1469, out_sdv_1470, out_Comparison, out_Tmp_2595, out_Tmp_2596, out_Tmp_2597, out_Tmp_2598, out_Tmp_2599, out_Tmp_2600, out_Tmp_2601 := FatInsertName_loop_L12(out_Tmp_2585, out_Tmp_2587, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_sdv_1467, out_Node, out_Tmp_2591, out_Tmp_2592, out_Tmp_2593, out_sdv_1469, out_sdv_1470, out_Comparison, out_Tmp_2595, out_Tmp_2596, out_Tmp_2597, out_Tmp_2598, out_Tmp_2599, out_Tmp_2600, out_Tmp_2601, in_IrpContext_164, in_RootNode, in_Name_4);
    return;

  anon22_Then:
    goto L30;

  anon21_Then:
    assume {:partition} out_Comparison != 2;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} out_Comparison == 1;
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2585 := Links__FILE_NAME_NODE(out_Node);
    assume {:nonnull} out_Tmp_2585 != 0;
    assume out_Tmp_2585 > 0;
    goto anon23_Then;

  anon23_Then:
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2591 := Links__FILE_NAME_NODE(out_Node);
    assume {:nonnull} out_Tmp_2591 != 0;
    assume out_Tmp_2591 > 0;
    havoc vslice_dummy_var_1826;
    call {:si_unique_call 5080} out_sdv_1469 := sdv_containing_record(vslice_dummy_var_1826, 16);
    out_Node := out_sdv_1469;
    assume false;
    return;

  anon17_Then:
    assume {:partition} out_Comparison != 1;
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2593 := Links__FILE_NAME_NODE(out_Node);
    assume {:nonnull} out_Tmp_2593 != 0;
    assume out_Tmp_2593 > 0;
    goto anon24_Then;

  anon24_Then:
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    out_Tmp_2590 := Links__FILE_NAME_NODE(out_Node);
    assume {:nonnull} out_Tmp_2590 != 0;
    assume out_Tmp_2590 > 0;
    havoc vslice_dummy_var_1827;
    call {:si_unique_call 5081} out_sdv_1470 := sdv_containing_record(vslice_dummy_var_1827, 16);
    out_Node := out_sdv_1470;
    assume false;
    return;

  anon20_Then:
    out_Tmp_2601 := 1;
    goto L25;

  anon19_Then:
    assume {:nonnull} in_Name_4 != 0;
    assume in_Name_4 > 0;
    assume {:nonnull} out_Node != 0;
    assume out_Node > 0;
    call {:si_unique_call 5078} out_Tmp_2588 := FatCompareNames(Oem_unnamed_tag_70(Name__FILE_NAME_NODE(out_Node)), Oem_unnamed_tag_70(Name__FILE_NAME_NODE(in_Name_4)));
    goto L26;
}



procedure {:LoopProcedure} FatInsertName_loop_L12(in_Tmp_2585: int, in_Tmp_2587: int, in_Tmp_2588: int, in_Tmp_2589: int, in_Tmp_2590: int, in_sdv_1467: int, in_Node: int, in_Tmp_2591: int, in_Tmp_2592: int, in_Tmp_2593: int, in_sdv_1469: int, in_sdv_1470: int, in_Comparison: int, in_Tmp_2595: int, in_Tmp_2596: int, in_Tmp_2597: int, in_Tmp_2598: int, in_Tmp_2599: int, in_Tmp_2600: int, in_Tmp_2601: int, in_IrpContext_164: int, in_RootNode: int, in_Name_4: int) returns (out_Tmp_2585: int, out_Tmp_2587: int, out_Tmp_2588: int, out_Tmp_2589: int, out_Tmp_2590: int, out_sdv_1467: int, out_Node: int, out_Tmp_2591: int, out_Tmp_2592: int, out_Tmp_2593: int, out_sdv_1469: int, out_sdv_1470: int, out_Comparison: int, out_Tmp_2595: int, out_Tmp_2596: int, out_Tmp_2597: int, out_Tmp_2598: int, out_Tmp_2599: int, out_Tmp_2600: int, out_Tmp_2601: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Tmp_2585 == in_Tmp_2585;
  free ensures {:va_keep} out_Tmp_2587 == in_Tmp_2587;
  free ensures {:va_keep} out_Tmp_2588 == in_Tmp_2588;
  free ensures {:va_keep} out_Tmp_2589 == in_Tmp_2589;
  free ensures {:va_keep} out_Tmp_2590 == in_Tmp_2590;
  free ensures {:va_keep} out_sdv_1467 == in_sdv_1467;
  free ensures {:va_keep} out_Node == in_Node;
  free ensures {:va_keep} out_Tmp_2591 == in_Tmp_2591;
  free ensures {:va_keep} out_Tmp_2592 == in_Tmp_2592;
  free ensures {:va_keep} out_Tmp_2593 == in_Tmp_2593;
  free ensures {:va_keep} out_sdv_1469 == in_sdv_1469;
  free ensures {:va_keep} out_sdv_1470 == in_sdv_1470;
  free ensures {:va_keep} out_Comparison == in_Comparison;
  free ensures {:va_keep} out_Tmp_2595 == in_Tmp_2595;
  free ensures {:va_keep} out_Tmp_2596 == in_Tmp_2596;
  free ensures {:va_keep} out_Tmp_2597 == in_Tmp_2597;
  free ensures {:va_keep} out_Tmp_2598 == in_Tmp_2598;
  free ensures {:va_keep} out_Tmp_2599 == in_Tmp_2599;
  free ensures {:va_keep} out_Tmp_2600 == in_Tmp_2600;
  free ensures {:va_keep} out_Tmp_2601 == in_Tmp_2601;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatFindFcb_loop_L7(in_Tmp_2615: int, in_Links_8: int, in_sdv_1475: int, in_Tmp_2617: int, in_Node_1: int, in_Tmp_2618: int, in_Tmp_2619: int, in_Tmp_2620: int, in_Tmp_2621: int, in_Comparison_1: int, in_Tmp_2622: int, in_Tmp_2623: int, in_Name_5: int) returns (out_Tmp_2615: int, out_Links_8: int, out_sdv_1475: int, out_Tmp_2617: int, out_Node_1: int, out_Tmp_2618: int, out_Tmp_2619: int, out_Tmp_2620: int, out_Tmp_2621: int, out_Comparison_1: int, out_Tmp_2622: int, out_Tmp_2623: int)
{

  entry:
    out_Tmp_2615, out_Links_8, out_sdv_1475, out_Tmp_2617, out_Node_1, out_Tmp_2618, out_Tmp_2619, out_Tmp_2620, out_Tmp_2621, out_Comparison_1, out_Tmp_2622, out_Tmp_2623 := in_Tmp_2615, in_Links_8, in_sdv_1475, in_Tmp_2617, in_Node_1, in_Tmp_2618, in_Tmp_2619, in_Tmp_2620, in_Tmp_2621, in_Comparison_1, in_Tmp_2622, in_Tmp_2623;
    goto L7, exit;

  exit:
    return;

  L7:
    goto anon15_Else;

  anon15_Else:
    assume {:partition} out_Links_8 != 0;
    call {:si_unique_call 5084} out_sdv_1475 := sdv_containing_record(out_Links_8, 16);
    out_Node_1 := out_sdv_1475;
    assume {:nonnull} out_Node_1 != 0;
    assume out_Node_1 > 0;
    out_Tmp_2622 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(out_Node_1));
    assume {:nonnull} out_Tmp_2622 != 0;
    assume out_Tmp_2622 > 0;
    havoc out_Tmp_2619;
    assume {:nonnull} in_Name_5 != 0;
    assume in_Name_5 > 0;
    havoc out_Tmp_2618;
    assume {:nonnull} out_Tmp_2618 != 0;
    assume out_Tmp_2618 > 0;
    assume {:nonnull} out_Tmp_2619 != 0;
    assume out_Tmp_2619 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} out_Node_1 != 0;
    assume out_Node_1 > 0;
    out_Tmp_2621 := Oem_unnamed_tag_70(Name__FILE_NAME_NODE(out_Node_1));
    assume {:nonnull} out_Tmp_2621 != 0;
    assume out_Tmp_2621 > 0;
    havoc out_Tmp_2620;
    assume {:nonnull} in_Name_5 != 0;
    assume in_Name_5 > 0;
    havoc out_Tmp_2617;
    assume {:nonnull} out_Tmp_2617 != 0;
    assume out_Tmp_2617 > 0;
    assume {:nonnull} out_Tmp_2620 != 0;
    assume out_Tmp_2620 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    out_Tmp_2623 := 0;
    goto L20;

  L20:
    out_Tmp_2615 := out_Tmp_2623;
    goto L21;

  L21:
    out_Comparison_1 := out_Tmp_2615;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} out_Comparison_1 == 1;
    assume {:nonnull} out_Links_8 != 0;
    assume out_Links_8 > 0;
    havoc out_Links_8;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    goto L_BAF_12;

  L_BAF_12:
    havoc out_Links_8;
    return;

  anon21_Then:
    assume {:partition} out_Comparison_1 != 1;
    goto anon16_Then;

  anon16_Then:
    assume {:partition} out_Comparison_1 == 0;
    assume {:nonnull} out_Links_8 != 0;
    assume out_Links_8 > 0;
    havoc out_Links_8;
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    goto L_BAF_12;

  anon20_Then:
    out_Tmp_2623 := 1;
    goto L20;

  anon19_Then:
    assume {:nonnull} out_Node_1 != 0;
    assume out_Node_1 > 0;
    call {:si_unique_call 5083} out_Tmp_2615 := FatCompareNames(Oem_unnamed_tag_70(Name__FILE_NAME_NODE(out_Node_1)), in_Name_5);
    goto L21;
}



procedure {:LoopProcedure} FatFindFcb_loop_L7(in_Tmp_2615: int, in_Links_8: int, in_sdv_1475: int, in_Tmp_2617: int, in_Node_1: int, in_Tmp_2618: int, in_Tmp_2619: int, in_Tmp_2620: int, in_Tmp_2621: int, in_Comparison_1: int, in_Tmp_2622: int, in_Tmp_2623: int, in_Name_5: int) returns (out_Tmp_2615: int, out_Links_8: int, out_sdv_1475: int, out_Tmp_2617: int, out_Node_1: int, out_Tmp_2618: int, out_Tmp_2619: int, out_Tmp_2620: int, out_Tmp_2621: int, out_Comparison_1: int, out_Tmp_2622: int, out_Tmp_2623: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_Tmp_2615 == in_Tmp_2615;
  free ensures {:va_keep} out_Links_8 == in_Links_8;
  free ensures {:va_keep} out_sdv_1475 == in_sdv_1475;
  free ensures {:va_keep} out_Tmp_2617 == in_Tmp_2617;
  free ensures {:va_keep} out_Node_1 == in_Node_1;
  free ensures {:va_keep} out_Tmp_2618 == in_Tmp_2618;
  free ensures {:va_keep} out_Tmp_2619 == in_Tmp_2619;
  free ensures {:va_keep} out_Tmp_2620 == in_Tmp_2620;
  free ensures {:va_keep} out_Tmp_2621 == in_Tmp_2621;
  free ensures {:va_keep} out_Comparison_1 == in_Comparison_1;
  free ensures {:va_keep} out_Tmp_2622 == in_Tmp_2622;
  free ensures {:va_keep} out_Tmp_2623 == in_Tmp_2623;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonDeviceControl_loop_L33(in_Fcb_63: int, in_Vcb_98: int, in_IrpContext_179: int, in_vslice_dummy_var_470: int) returns (out_Fcb_63: int, out_vslice_dummy_var_470: int)
{
  var vslice_dummy_var_1828: int;

  entry:
    out_Fcb_63, out_vslice_dummy_var_470 := in_Fcb_63, in_vslice_dummy_var_470;
    goto L33, exit;

  exit:
    return;

  L33:
    assume {:nonnull} in_Vcb_98 != 0;
    assume in_Vcb_98 > 0;
    havoc vslice_dummy_var_1828;
    call {:si_unique_call 5085} out_Fcb_63 := FatGetNextFcbBottomUp(in_IrpContext_179, out_Fcb_63, vslice_dummy_var_1828);
    goto anon22_Else;

  anon22_Else:
    assume {:partition} out_Fcb_63 != 0;
    call {:si_unique_call 5086} out_vslice_dummy_var_470 := FatAcquireExclusiveFcb(in_IrpContext_179, out_Fcb_63);
    goto anon22_Else_dummy;

  anon22_Else_dummy:
    call {:si_unique_call 5087} {:si_old_unique_call 1} out_Fcb_63, out_vslice_dummy_var_470 := FatCommonDeviceControl_loop_L33(out_Fcb_63, in_Vcb_98, in_IrpContext_179, out_vslice_dummy_var_470);
    return;
}



procedure {:LoopProcedure} FatCommonDeviceControl_loop_L33(in_Fcb_63: int, in_Vcb_98: int, in_IrpContext_179: int, in_vslice_dummy_var_470: int) returns (out_Fcb_63: int, out_vslice_dummy_var_470: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_470 == 1 || out_vslice_dummy_var_470 == 0 || out_vslice_dummy_var_470 == in_vslice_dummy_var_470;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonDeviceControl_loop_L69(in_Fcb_65: int, in_Vcb_98: int, in_IrpContext_179: int) returns (out_Fcb_65: int)
{
  var vslice_dummy_var_1829: int;

  entry:
    out_Fcb_65 := in_Fcb_65;
    goto L69, exit;

  exit:
    return;

  L69:
    assume {:nonnull} in_Vcb_98 != 0;
    assume in_Vcb_98 > 0;
    havoc vslice_dummy_var_1829;
    call {:si_unique_call 5088} out_Fcb_65 := FatGetNextFcbBottomUp(in_IrpContext_179, out_Fcb_65, vslice_dummy_var_1829);
    goto anon27_Else;

  anon27_Else:
    assume {:partition} out_Fcb_65 != 0;
    call {:si_unique_call 5089} ExReleaseResourceLite(0);
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    call {:si_unique_call 5090} {:si_old_unique_call 1} out_Fcb_65 := FatCommonDeviceControl_loop_L69(out_Fcb_65, in_Vcb_98, in_IrpContext_179);
    return;
}



procedure {:LoopProcedure} FatCommonDeviceControl_loop_L69(in_Fcb_65: int, in_Vcb_98: int, in_IrpContext_179: int) returns (out_Fcb_65: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCreateEa_loop_L49(in_EaName: int, in_EaOffset: int, in_Tmp_2735: int, in_Tmp_2737: int, in_Tmp_2739: int, in_PackedEasLength: int, in_FullEa: int, in_Tmp_2744: int, in_EaSetHeader_2: int, in_sdv_1608: int, in_sdv_1609: int, in_Tmp_2745: int, in_Tmp_2746: int, in_Tmp_2747: int, in_AllocationLength: int, in_BytesPerCluster_6: int, in_Tmp_2750: int, in_IrpContext_182: int, in_Buffer_33: int, in_Length_20: int) returns (out_Tmp_2735: int, out_Tmp_2737: int, out_Tmp_2739: int, out_FullEa: int, out_Tmp_2744: int, out_sdv_1608: int, out_sdv_1609: int, out_Tmp_2745: int, out_Tmp_2746: int, out_Tmp_2747: int, out_Tmp_2750: int)
{
  var vslice_dummy_var_1830: int;
  var vslice_dummy_var_1831: int;
  var vslice_dummy_var_1832: int;
  var vslice_dummy_var_1833: int;

  entry:
    out_Tmp_2735, out_Tmp_2737, out_Tmp_2739, out_FullEa, out_Tmp_2744, out_sdv_1608, out_sdv_1609, out_Tmp_2745, out_Tmp_2746, out_Tmp_2747, out_Tmp_2750 := in_Tmp_2735, in_Tmp_2737, in_Tmp_2739, in_FullEa, in_Tmp_2744, in_sdv_1608, in_sdv_1609, in_Tmp_2745, in_Tmp_2746, in_Tmp_2747, in_Tmp_2750;
    goto L49, exit;

  exit:
    return;

  L49:
    out_Tmp_2745 := in_Length_20;
    goto anon36_Else;

  anon36_Else:
    assume {:partition} in_Buffer_33 + out_Tmp_2745 * 4 > out_FullEa;
    assume {:nonnull} in_EaName != 0;
    assume in_EaName > 0;
    assume {:nonnull} out_FullEa != 0;
    assume out_FullEa > 0;
    assume {:nonnull} out_FullEa != 0;
    assume out_FullEa > 0;
    havoc out_Tmp_2737;
    assume {:nonnull} in_EaName != 0;
    assume in_EaName > 0;
    call {:si_unique_call 5096} out_sdv_1608 := FatIsEaNameValid(in_IrpContext_182, in_EaName);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} out_sdv_1608 != 0;
    goto L60;

  L60:
    assume {:nonnull} out_FullEa != 0;
    assume out_FullEa > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_FullEa != 0;
    assume out_FullEa > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} in_IrpContext_182 != 0;
    assume in_IrpContext_182 > 0;
    havoc out_Tmp_2739;
    assume {:nonnull} out_Tmp_2739 != 0;
    assume out_Tmp_2739 > 0;
    assume {:nonnull} in_IrpContext_182 != 0;
    assume in_IrpContext_182 > 0;
    havoc out_Tmp_2744;
    assume {:nonnull} out_Tmp_2744 != 0;
    assume out_Tmp_2744 > 0;
    assume {:nonnull} in_IrpContext_182 != 0;
    assume in_IrpContext_182 > 0;
    call {:si_unique_call 5094} ExRaiseStatus(19);
    goto L61;

  L61:
    assume {:nonnull} in_EaSetHeader_2 != 0;
    assume in_EaSetHeader_2 > 0;
    assume {:nonnull} in_PackedEasLength != 0;
    assume in_PackedEasLength > 0;
    havoc vslice_dummy_var_1832;
    havoc vslice_dummy_var_1833;
    call {:si_unique_call 5093} out_sdv_1609 := FatLocateEaByName(in_IrpContext_182, vslice_dummy_var_1832, vslice_dummy_var_1833, in_EaName, in_EaOffset);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_sdv_1609 != 0;
    assume {:nonnull} in_EaOffset != 0;
    assume in_EaOffset > 0;
    assume {:nonnull} in_EaSetHeader_2 != 0;
    assume in_EaSetHeader_2 > 0;
    havoc vslice_dummy_var_1830;
    havoc vslice_dummy_var_1831;
    call {:si_unique_call 5092} FatDeletePackedEa(in_IrpContext_182, vslice_dummy_var_1830, in_PackedEasLength, vslice_dummy_var_1831);
    goto L72;

  L72:
    assume {:nonnull} out_FullEa != 0;
    assume out_FullEa > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L80;

  L80:
    assume {:nonnull} out_FullEa != 0;
    assume out_FullEa > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    out_Tmp_2746 := out_FullEa;
    goto L83;

  L83:
    out_FullEa := out_Tmp_2746;
    goto L83_dummy;

  L83_dummy:
    call {:si_unique_call 5097} {:si_old_unique_call 1} out_Tmp_2735, out_Tmp_2737, out_Tmp_2739, out_FullEa, out_Tmp_2744, out_sdv_1608, out_sdv_1609, out_Tmp_2745, out_Tmp_2746, out_Tmp_2747, out_Tmp_2750 := FatCreateEa_loop_L49(in_EaName, in_EaOffset, out_Tmp_2735, out_Tmp_2737, out_Tmp_2739, in_PackedEasLength, out_FullEa, out_Tmp_2744, in_EaSetHeader_2, out_sdv_1608, out_sdv_1609, out_Tmp_2745, out_Tmp_2746, out_Tmp_2747, in_AllocationLength, in_BytesPerCluster_6, out_Tmp_2750, in_IrpContext_182, in_Buffer_33, in_Length_20);
    return;

  anon31_Then:
    out_Tmp_2747 := in_Length_20;
    out_Tmp_2746 := in_Buffer_33 + out_Tmp_2747 * 4;
    goto L83;

  anon30_Then:
    call {:si_unique_call 5091} FatAppendPackedEa(in_IrpContext_182, in_EaSetHeader_2, in_PackedEasLength, in_AllocationLength, out_FullEa, in_BytesPerCluster_6);
    goto L80;

  anon29_Then:
    assume {:partition} out_sdv_1609 == 0;
    goto L72;

  anon28_Then:
    goto L61;

  anon27_Then:
    goto L61;

  anon26_Then:
    assume {:partition} out_sdv_1608 == 0;
    assume {:nonnull} in_IrpContext_182 != 0;
    assume in_IrpContext_182 > 0;
    havoc out_Tmp_2750;
    assume {:nonnull} out_Tmp_2750 != 0;
    assume out_Tmp_2750 > 0;
    assume {:nonnull} in_IrpContext_182 != 0;
    assume in_IrpContext_182 > 0;
    havoc out_Tmp_2735;
    assume {:nonnull} out_Tmp_2735 != 0;
    assume out_Tmp_2735 > 0;
    assume {:nonnull} in_IrpContext_182 != 0;
    assume in_IrpContext_182 > 0;
    call {:si_unique_call 5095} ExRaiseStatus(19);
    goto L60;
}



procedure {:LoopProcedure} FatCreateEa_loop_L49(in_EaName: int, in_EaOffset: int, in_Tmp_2735: int, in_Tmp_2737: int, in_Tmp_2739: int, in_PackedEasLength: int, in_FullEa: int, in_Tmp_2744: int, in_EaSetHeader_2: int, in_sdv_1608: int, in_sdv_1609: int, in_Tmp_2745: int, in_Tmp_2746: int, in_Tmp_2747: int, in_AllocationLength: int, in_BytesPerCluster_6: int, in_Tmp_2750: int, in_IrpContext_182: int, in_Buffer_33: int, in_Length_20: int) returns (out_Tmp_2735: int, out_Tmp_2737: int, out_Tmp_2739: int, out_FullEa: int, out_Tmp_2744: int, out_sdv_1608: int, out_sdv_1609: int, out_Tmp_2745: int, out_Tmp_2746: int, out_Tmp_2747: int, out_Tmp_2750: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_2735 == in_Tmp_2735;
  free ensures {:va_keep} out_Tmp_2739 == in_Tmp_2739;
  free ensures {:va_keep} out_FullEa == in_FullEa || out_FullEa == in_Buffer_33 + in_Length_20 * 4;
  free ensures {:va_keep} out_Tmp_2744 == in_Tmp_2744;
  free ensures {:va_keep} out_sdv_1608 == 0 || out_sdv_1608 == 1 || out_sdv_1608 == in_sdv_1608;
  free ensures {:va_keep} out_sdv_1609 == 1 || out_sdv_1609 == 0 || out_sdv_1609 == in_sdv_1609;
  free ensures {:va_keep} out_Tmp_2745 == in_Tmp_2745 || out_Tmp_2745 == in_Length_20;
  free ensures {:va_keep} out_Tmp_2746 == in_Tmp_2746 || out_Tmp_2746 == in_FullEa || out_Tmp_2746 == in_Buffer_33 + in_Length_20 * 4;
  free ensures {:va_keep} out_Tmp_2747 == in_Tmp_2747 || out_Tmp_2747 == in_Length_20;
  free ensures {:va_keep} out_Tmp_2750 == in_Tmp_2750;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatUnpinEaRange_loop_L14(in_Tmp_2774: int, in_BcbCount: int, in_NextBcb: int) returns (out_Tmp_2774: int, out_BcbCount: int)
{

  entry:
    out_Tmp_2774, out_BcbCount := in_Tmp_2774, in_BcbCount;
    goto L14, exit;

  exit:
    return;

  L14:
    out_Tmp_2774 := out_BcbCount;
    out_BcbCount := out_BcbCount - 1;
    goto anon14_Else;

  anon14_Else:
    assume {:partition} out_Tmp_2774 != 0;
    assume {:nonnull} in_NextBcb != 0;
    assume in_NextBcb > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} in_NextBcb != 0;
    assume in_NextBcb > 0;
    goto L17;

  L17:
    goto L17_dummy;

  L17_dummy:
    havoc out_BcbCount;
    return;

  anon13_Then:
    goto L17;
}



procedure {:LoopProcedure} FatUnpinEaRange_loop_L14(in_Tmp_2774: int, in_BcbCount: int, in_NextBcb: int) returns (out_Tmp_2774: int, out_BcbCount: int);
  free ensures {:va_keep} out_Tmp_2774 == in_BcbCount || out_Tmp_2774 == in_Tmp_2774;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatIsEaNameValid_loop_L10(in_Name: int, in_Char_1: int, in_Tmp_2776: int, in_Tmp_2777: int, in_Tmp_2778: int, in_Tmp_2779: int, in_Tmp_2780: int, in_Tmp_2782: int, in_Tmp_2783: int, in_Tmp_2784: int, in_Index_8: int) returns (out_Char_1: int, out_Tmp_2776: int, out_Tmp_2777: int, out_Tmp_2778: int, out_Tmp_2779: int, out_Tmp_2780: int, out_Tmp_2782: int, out_Tmp_2783: int, out_Tmp_2784: int, out_Index_8: int)
{

  entry:
    out_Char_1, out_Tmp_2776, out_Tmp_2777, out_Tmp_2778, out_Tmp_2779, out_Tmp_2780, out_Tmp_2782, out_Tmp_2783, out_Tmp_2784, out_Index_8 := in_Char_1, in_Tmp_2776, in_Tmp_2777, in_Tmp_2778, in_Tmp_2779, in_Tmp_2780, in_Tmp_2782, in_Tmp_2783, in_Tmp_2784, in_Index_8;
    goto L10, exit;

  exit:
    return;

  L10:
    assume {:nonnull} in_Name != 0;
    assume in_Name > 0;
    goto anon21_Else;

  anon21_Else:
    out_Tmp_2778 := out_Index_8;
    assume {:nonnull} in_Name != 0;
    assume in_Name > 0;
    havoc out_Char_1;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 128 > out_Char_1;
    out_Tmp_2777 := 0;
    goto L16;

  L16:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} out_Tmp_2777 != 0;
    out_Index_8 := out_Index_8 + 1;
    goto L20;

  L20:
    out_Index_8 := out_Index_8 + 1;
    goto L20_dummy;

  L20_dummy:
    havoc out_Index_8;
    return;

  anon23_Then:
    assume {:partition} out_Tmp_2777 == 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} 0 > out_Char_1;
    out_Tmp_2779 := 1;
    goto L23;

  L23:
    goto anon25_Then;

  anon25_Then:
    assume {:partition} out_Tmp_2779 != 0;
    goto L20;

  anon24_Then:
    assume {:partition} out_Char_1 >= 0;
    out_Tmp_2782 := out_Char_1;
    assume {:nonnull} FsRtlLegalAnsiCharacterArray != 0;
    assume FsRtlLegalAnsiCharacterArray > 0;
    havoc out_Tmp_2783;
    assume {:nonnull} out_Tmp_2783 != 0;
    assume out_Tmp_2783 > 0;
    havoc out_Tmp_2779;
    goto L23;

  anon26_Then:
    assume {:partition} out_Char_1 >= 128;
    assume {:nonnull} NlsMbOemCodePageTag != 0;
    assume NlsMbOemCodePageTag > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    out_Tmp_2784 := out_Char_1;
    assume {:nonnull} NlsOemLeadByteInfo != 0;
    assume NlsOemLeadByteInfo > 0;
    havoc out_Tmp_2776;
    assume {:nonnull} out_Tmp_2776 != 0;
    assume out_Tmp_2776 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    out_Tmp_2780 := 1;
    goto L28;

  L28:
    out_Tmp_2777 := out_Tmp_2780;
    goto L16;

  anon27_Then:
    goto L25;

  L25:
    out_Tmp_2780 := 0;
    goto L28;

  anon22_Then:
    goto L25;
}



procedure {:LoopProcedure} FatIsEaNameValid_loop_L10(in_Name: int, in_Char_1: int, in_Tmp_2776: int, in_Tmp_2777: int, in_Tmp_2778: int, in_Tmp_2779: int, in_Tmp_2780: int, in_Tmp_2782: int, in_Tmp_2783: int, in_Tmp_2784: int, in_Index_8: int) returns (out_Char_1: int, out_Tmp_2776: int, out_Tmp_2777: int, out_Tmp_2778: int, out_Tmp_2779: int, out_Tmp_2780: int, out_Tmp_2782: int, out_Tmp_2783: int, out_Tmp_2784: int, out_Index_8: int);
  free ensures {:va_keep} out_Tmp_2777 == 0 || out_Tmp_2777 == 1 || out_Tmp_2777 == in_Tmp_2777;
  free ensures {:va_keep} out_Tmp_2778 == in_Index_8 || out_Tmp_2778 == in_Tmp_2778;
  free ensures {:va_keep} out_Tmp_2780 == 1 || out_Tmp_2780 == 0 || out_Tmp_2780 == in_Tmp_2780;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:SIextraRecBound 2} FatPinEaRange_loop_L40(in_LargeVbo: int, in_FirstPage: int, in_Buffer_35: int, in_sdv_1613: int, in_Tmp_2819: int, in_DestinationBuffer: int, in_NextBcb_1: int, in_ByteCount_21: int, in_IrpContext_191: int, in_EaRange_1: int, in_StartingVbo_8: int, in_Length_21: int) returns (out_FirstPage: int, out_sdv_1613: int, out_Tmp_2819: int, out_ByteCount_21: int, out_StartingVbo_8: int, out_Length_21: int)
{

  entry:
    out_FirstPage, out_sdv_1613, out_Tmp_2819, out_ByteCount_21, out_StartingVbo_8, out_Length_21 := in_FirstPage, in_sdv_1613, in_Tmp_2819, in_ByteCount_21, in_StartingVbo_8, in_Length_21;
    goto L40, exit;

  exit:
    return;

  L40:
    goto anon27_Else;

  anon27_Else:
    assume {:partition} out_Length_21 != 0;
    assume {:nonnull} in_LargeVbo != 0;
    assume in_LargeVbo > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} out_ByteCount_21 > out_Length_21;
    out_ByteCount_21 := out_Length_21;
    goto L44;

  L44:
    assume {:nonnull} in_IrpContext_191 != 0;
    assume in_IrpContext_191 > 0;
    havoc out_Tmp_2819;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} out_Tmp_2819 == 0;
    goto L103;

  L103:
    call {:si_unique_call 5100} out_sdv_1613 := corral_nondet();
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} out_sdv_1613 != 0;
    goto L52;

  L52:
    assume {:nonnull} in_EaRange_1 != 0;
    assume in_EaRange_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 5098} sdv_RtlCopyMemory(0, 0, out_ByteCount_21);
    goto L54;

  L54:
    out_StartingVbo_8 := out_StartingVbo_8 + out_ByteCount_21;
    out_Length_21 := out_Length_21 - out_ByteCount_21;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} out_FirstPage != 0;
    out_FirstPage := 0;
    out_ByteCount_21 := 4096;
    assume {:nonnull} in_EaRange_1 != 0;
    assume in_EaRange_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} in_EaRange_1 != 0;
    assume in_EaRange_1 > 0;
    goto anon36_Else_dummy;

  anon36_Else_dummy:
    goto L_BAF_13;

  L_BAF_13:
    call {:si_unique_call 5101} {:si_old_unique_call 1} out_FirstPage, out_sdv_1613, out_Tmp_2819, out_ByteCount_21, out_StartingVbo_8, out_Length_21 := FatPinEaRange_loop_L40(in_LargeVbo, out_FirstPage, in_Buffer_35, out_sdv_1613, out_Tmp_2819, in_DestinationBuffer, in_NextBcb_1, out_ByteCount_21, in_IrpContext_191, in_EaRange_1, out_StartingVbo_8, out_Length_21);
    return;

  anon36_Then:
    goto anon36_Then_dummy;

  anon36_Then_dummy:
    goto L_BAF_13;

  anon35_Then:
    assume {:partition} out_FirstPage == 0;
    goto anon35_Then_dummy;

  anon35_Then_dummy:
    goto L_BAF_13;

  anon34_Then:
    goto L54;

  anon28_Then:
    assume {:partition} out_sdv_1613 == 0;
    assume {:nonnull} in_IrpContext_191 != 0;
    assume in_IrpContext_191 > 0;
    call {:si_unique_call 5099} ExRaiseStatus(-1073741608);
    goto L52;

  anon33_Then:
    assume {:partition} out_Tmp_2819 != 0;
    goto L103;

  anon32_Then:
    assume {:partition} out_Length_21 >= out_ByteCount_21;
    goto L44;
}



procedure {:LoopProcedure} FatPinEaRange_loop_L40(in_LargeVbo: int, in_FirstPage: int, in_Buffer_35: int, in_sdv_1613: int, in_Tmp_2819: int, in_DestinationBuffer: int, in_NextBcb_1: int, in_ByteCount_21: int, in_IrpContext_191: int, in_EaRange_1: int, in_StartingVbo_8: int, in_Length_21: int) returns (out_FirstPage: int, out_sdv_1613: int, out_Tmp_2819: int, out_ByteCount_21: int, out_StartingVbo_8: int, out_Length_21: int);
  modifies alloc;
  free ensures {:va_keep} out_FirstPage == 0 || out_FirstPage == in_FirstPage;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDeleteEaSet_loop_L225(in_Count_1: int, in_EaSetClusterCount: int, in_NextEaIndex: int, in_Tmp_2831: int) returns (out_Count_1: int, out_Tmp_2831: int)
{

  entry:
    out_Count_1, out_Tmp_2831 := in_Count_1, in_Tmp_2831;
    goto L225, exit;

  exit:
    return;

  L225:
    out_Tmp_2831 := out_Count_1;
    out_Count_1 := out_Count_1 - 1;
    goto anon68_Else;

  anon68_Else:
    assume {:partition} out_Tmp_2831 != 0;
    assume {:nonnull} in_NextEaIndex != 0;
    assume in_NextEaIndex > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} in_NextEaIndex != 0;
    assume in_NextEaIndex > 0;
    goto L230;

  L230:
    goto L230_dummy;

  L230_dummy:
    call {:si_unique_call 5102} {:si_old_unique_call 1} out_Count_1, out_Tmp_2831 := FatDeleteEaSet_loop_L225(out_Count_1, in_EaSetClusterCount, in_NextEaIndex, out_Tmp_2831);
    return;

  anon52_Then:
    goto L230;
}



procedure {:LoopProcedure} FatDeleteEaSet_loop_L225(in_Count_1: int, in_EaSetClusterCount: int, in_NextEaIndex: int, in_Tmp_2831: int) returns (out_Count_1: int, out_Tmp_2831: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDeleteEaSet_loop_L217(in_Count_1: int, in_Tmp_2828: int, in_EaSetClusterCount: int, in_NextEaIndex: int, in_Tmp_2834: int) returns (out_Count_1: int, out_Tmp_2828: int, out_Tmp_2834: int)
{

  entry:
    out_Count_1, out_Tmp_2828, out_Tmp_2834 := in_Count_1, in_Tmp_2828, in_Tmp_2834;
    goto L217, exit;

  exit:
    return;

  L217:
    out_Tmp_2834 := out_Count_1;
    out_Count_1 := out_Count_1 - 1;
    goto anon67_Else;

  anon67_Else:
    assume {:partition} out_Tmp_2834 != 0;
    out_Tmp_2828 := in_NextEaIndex;
    assume {:nonnull} in_NextEaIndex != 0;
    assume in_NextEaIndex > 0;
    assume {:nonnull} out_Tmp_2828 != 0;
    assume out_Tmp_2828 > 0;
    goto anon67_Else_dummy;

  anon67_Else_dummy:
    call {:si_unique_call 5103} {:si_old_unique_call 1} out_Count_1, out_Tmp_2828, out_Tmp_2834 := FatDeleteEaSet_loop_L217(out_Count_1, out_Tmp_2828, in_EaSetClusterCount, in_NextEaIndex, out_Tmp_2834);
    return;
}



procedure {:LoopProcedure} FatDeleteEaSet_loop_L217(in_Count_1: int, in_Tmp_2828: int, in_EaSetClusterCount: int, in_NextEaIndex: int, in_Tmp_2834: int) returns (out_Count_1: int, out_Tmp_2828: int, out_Tmp_2834: int);
  free ensures {:va_keep} out_Tmp_2828 == in_Tmp_2828 || out_Tmp_2828 == in_NextEaIndex;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDeleteEaSet_loop_L149(in_PurgeCount: int, in_Iosb_25: int, in_sdv_1615: int) returns (out_PurgeCount: int, out_sdv_1615: int)
{

  entry:
    out_PurgeCount, out_sdv_1615 := in_PurgeCount, in_sdv_1615;
    goto L149, exit;

  exit:
    return;

  L149:
    assume {:CounterLoop 5} {:Counter "PurgeCount"} true;
    out_PurgeCount := out_PurgeCount - 1;
    goto anon65_Else;

  anon65_Else:
    assume {:partition} out_PurgeCount != 0;
    assume {:nonnull} in_Iosb_25 != 0;
    assume in_Iosb_25 > 0;
    call {:si_unique_call 5104} out_sdv_1615 := corral_nondet();
    goto anon51_Then;

  anon51_Then:
    assume {:partition} out_sdv_1615 == 0;
    goto anon51_Then_dummy;

  anon51_Then_dummy:
    havoc out_PurgeCount;
    return;
}



procedure {:LoopProcedure} FatDeleteEaSet_loop_L149(in_PurgeCount: int, in_Iosb_25: int, in_sdv_1615: int) returns (out_PurgeCount: int, out_sdv_1615: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAddEaSet_loop_L348(in_Tmp_2835: int, in_Count_2: int, in_Tmp_2851: int, in_NextEaOffset: int) returns (out_Tmp_2835: int, out_Count_2: int, out_Tmp_2851: int)
{

  entry:
    out_Tmp_2835, out_Count_2, out_Tmp_2851 := in_Tmp_2835, in_Count_2, in_Tmp_2851;
    goto L348, exit;

  exit:
    return;

  L348:
    out_Tmp_2835 := out_Count_2;
    out_Count_2 := out_Count_2 - 1;
    goto anon135_Else;

  anon135_Else:
    assume {:partition} out_Tmp_2835 != 0;
    out_Tmp_2851 := in_NextEaOffset;
    assume {:nonnull} in_NextEaOffset != 0;
    assume in_NextEaOffset > 0;
    assume {:nonnull} out_Tmp_2851 != 0;
    assume out_Tmp_2851 > 0;
    goto anon135_Else_dummy;

  anon135_Else_dummy:
    call {:si_unique_call 5105} {:si_old_unique_call 1} out_Tmp_2835, out_Count_2, out_Tmp_2851 := FatAddEaSet_loop_L348(out_Tmp_2835, out_Count_2, out_Tmp_2851, in_NextEaOffset);
    return;
}



procedure {:LoopProcedure} FatAddEaSet_loop_L348(in_Tmp_2835: int, in_Count_2: int, in_Tmp_2851: int, in_NextEaOffset: int) returns (out_Tmp_2835: int, out_Count_2: int, out_Tmp_2851: int);
  free ensures {:va_keep} out_Tmp_2851 == in_Tmp_2851 || out_Tmp_2851 == in_NextEaOffset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAddEaSet_loop_L355(in_Count_2: int, in_Tmp_2840: int, in_NextEaOffset: int) returns (out_Count_2: int, out_Tmp_2840: int)
{

  entry:
    out_Count_2, out_Tmp_2840 := in_Count_2, in_Tmp_2840;
    goto L355, exit;

  exit:
    return;

  L355:
    out_Tmp_2840 := out_Count_2;
    out_Count_2 := out_Count_2 - 1;
    goto anon136_Else;

  anon136_Else:
    assume {:partition} out_Tmp_2840 != 0;
    assume {:nonnull} in_NextEaOffset != 0;
    assume in_NextEaOffset > 0;
    goto anon136_Else_dummy;

  anon136_Else_dummy:
    havoc out_Count_2;
    return;
}



procedure {:LoopProcedure} FatAddEaSet_loop_L355(in_Count_2: int, in_Tmp_2840: int, in_NextEaOffset: int) returns (out_Count_2: int, out_Tmp_2840: int);
  free ensures {:va_keep} out_Tmp_2840 == in_Count_2 || out_Tmp_2840 == in_Tmp_2840;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAddEaSet_loop_L359(in_Tmp_2836: int, in_Count_2: int, in_EaSetClusterCount_1: int, in_NextEaOffset: int) returns (out_Tmp_2836: int, out_Count_2: int)
{

  entry:
    out_Tmp_2836, out_Count_2 := in_Tmp_2836, in_Count_2;
    goto L359, exit;

  exit:
    return;

  L359:
    out_Tmp_2836 := out_Count_2;
    out_Count_2 := out_Count_2 - 1;
    goto anon137_Else;

  anon137_Else:
    assume {:partition} out_Tmp_2836 != 0;
    assume {:nonnull} in_NextEaOffset != 0;
    assume in_NextEaOffset > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} in_NextEaOffset != 0;
    assume in_NextEaOffset > 0;
    goto L364;

  L364:
    goto L364_dummy;

  L364_dummy:
    call {:si_unique_call 5106} {:si_old_unique_call 1} out_Tmp_2836, out_Count_2 := FatAddEaSet_loop_L359(out_Tmp_2836, out_Count_2, in_EaSetClusterCount_1, in_NextEaOffset);
    return;

  anon111_Then:
    goto L364;
}



procedure {:LoopProcedure} FatAddEaSet_loop_L359(in_Tmp_2836: int, in_Count_2: int, in_EaSetClusterCount_1: int, in_NextEaOffset: int) returns (out_Tmp_2836: int, out_Count_2: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAddEaSet_loop_L340(in_Count_2: int, in_Tmp_2841: int, in_EaSetClusterCount_1: int, in_Tmp_2847: int, in_NextEaOffset: int) returns (out_Count_2: int, out_Tmp_2841: int, out_Tmp_2847: int)
{

  entry:
    out_Count_2, out_Tmp_2841, out_Tmp_2847 := in_Count_2, in_Tmp_2841, in_Tmp_2847;
    goto L340, exit;

  exit:
    return;

  L340:
    out_Tmp_2847 := out_Count_2;
    out_Count_2 := out_Count_2 - 1;
    goto anon134_Else;

  anon134_Else:
    assume {:partition} out_Tmp_2847 != 0;
    out_Tmp_2841 := in_NextEaOffset;
    assume {:nonnull} in_NextEaOffset != 0;
    assume in_NextEaOffset > 0;
    assume {:nonnull} out_Tmp_2841 != 0;
    assume out_Tmp_2841 > 0;
    goto anon134_Else_dummy;

  anon134_Else_dummy:
    call {:si_unique_call 5107} {:si_old_unique_call 1} out_Count_2, out_Tmp_2841, out_Tmp_2847 := FatAddEaSet_loop_L340(out_Count_2, out_Tmp_2841, in_EaSetClusterCount_1, out_Tmp_2847, in_NextEaOffset);
    return;
}



procedure {:LoopProcedure} FatAddEaSet_loop_L340(in_Count_2: int, in_Tmp_2841: int, in_EaSetClusterCount_1: int, in_Tmp_2847: int, in_NextEaOffset: int) returns (out_Count_2: int, out_Tmp_2841: int, out_Tmp_2847: int);
  free ensures {:va_keep} out_Tmp_2841 == in_Tmp_2841 || out_Tmp_2841 == in_NextEaOffset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAddEaSet_loop_L224(in_PurgeCount_1: int, in_Iosb_26: int, in_sdv_1620: int) returns (out_PurgeCount_1: int, out_sdv_1620: int)
{

  entry:
    out_PurgeCount_1, out_sdv_1620 := in_PurgeCount_1, in_sdv_1620;
    goto L224, exit;

  exit:
    return;

  L224:
    assume {:CounterLoop 5} {:Counter "PurgeCount_1"} true;
    out_PurgeCount_1 := out_PurgeCount_1 - 1;
    goto anon131_Else;

  anon131_Else:
    assume {:partition} out_PurgeCount_1 != 0;
    assume {:nonnull} in_Iosb_26 != 0;
    assume in_Iosb_26 > 0;
    call {:si_unique_call 5108} out_sdv_1620 := corral_nondet();
    goto anon103_Then;

  anon103_Then:
    assume {:partition} out_sdv_1620 == 0;
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    havoc out_PurgeCount_1;
    return;
}



procedure {:LoopProcedure} FatAddEaSet_loop_L224(in_PurgeCount_1: int, in_Iosb_26: int, in_sdv_1620: int) returns (out_PurgeCount_1: int, out_sdv_1620: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAddEaSet_loop_L157(in_NewEaIndex: int, in_NextEaOffset: int) returns (out_NewEaIndex: int)
{

  entry:
    out_NewEaIndex := in_NewEaIndex;
    goto L157, exit;

  exit:
    return;

  L157:
    goto anon93_Else;

  anon93_Else:
    assume {:partition} out_NewEaIndex != 0;
    assume {:nonnull} in_NextEaOffset != 0;
    assume in_NextEaOffset > 0;
    goto anon98_Else;

  anon98_Else:
    out_NewEaIndex := out_NewEaIndex - 1;
    goto anon98_Else_dummy;

  anon98_Else_dummy:
    havoc out_NewEaIndex;
    return;
}



procedure {:LoopProcedure} FatAddEaSet_loop_L157(in_NewEaIndex: int, in_NextEaOffset: int) returns (out_NewEaIndex: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAddEaSet_loop_L158(in_NewEaIndex: int, in_NextEaOffset: int) returns (out_NewEaIndex: int)
{

  entry:
    out_NewEaIndex := in_NewEaIndex;
    goto L158, exit;

  exit:
    return;

  L158:
    goto anon94_Else;

  anon94_Else:
    assume {:partition} out_NewEaIndex != 0;
    assume {:nonnull} in_NextEaOffset != 0;
    assume in_NextEaOffset > 0;
    goto anon95_Then;

  anon95_Then:
    out_NewEaIndex := out_NewEaIndex - 1;
    goto anon95_Then_dummy;

  anon95_Then_dummy:
    havoc out_NewEaIndex;
    return;
}



procedure {:LoopProcedure} FatAddEaSet_loop_L158(in_NewEaIndex: int, in_NextEaOffset: int) returns (out_NewEaIndex: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatLocateEaByName_loop_L6(in_Tmp_2855: int, in_PackedEa_2: int, in_sdv_1623: int, in_Name_6: int, in_IrpContext_194: int, in_FirstPackedEa_1: int, in_PackedEasLength_4: int, in_Offset_7: int, in_boogieTmp: int) returns (out_Tmp_2855: int, out_PackedEa_2: int, out_sdv_1623: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1834: int;

  entry:
    out_Tmp_2855, out_PackedEa_2, out_sdv_1623, out_boogieTmp := in_Tmp_2855, in_PackedEa_2, in_sdv_1623, in_boogieTmp;
    goto L6, exit;

  exit:
    return;

  L6:
    assume {:nonnull} in_Offset_7 != 0;
    assume in_Offset_7 > 0;
    goto anon5_Else;

  anon5_Else:
    out_PackedEa_2 := in_FirstPackedEa_1;
    assume {:nonnull} out_PackedEa_2 != 0;
    assume out_PackedEa_2 > 0;
    havoc out_Tmp_2855;
    assume {:nonnull} in_Name_6 != 0;
    assume in_Name_6 > 0;
    assume {:nonnull} in_Name_6 != 0;
    assume in_Name_6 > 0;
    assume {:nonnull} out_PackedEa_2 != 0;
    assume out_PackedEa_2 > 0;
    assume {:nonnull} in_Name_6 != 0;
    assume in_Name_6 > 0;
    assume {:nonnull} out_PackedEa_2 != 0;
    assume out_PackedEa_2 > 0;
    call {:si_unique_call 5110} out_sdv_1623 := corral_nondet();
    goto anon6_Else;

  anon6_Else:
    assume {:partition} out_sdv_1623 != 0;
    assume {:nonnull} in_Offset_7 != 0;
    assume in_Offset_7 > 0;
    havoc vslice_dummy_var_1834;
    call {:si_unique_call 5109} out_boogieTmp := FatLocateNextEa(in_IrpContext_194, in_FirstPackedEa_1, in_PackedEasLength_4, vslice_dummy_var_1834);
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    call {:si_unique_call 5111} {:si_old_unique_call 1} out_Tmp_2855, out_PackedEa_2, out_sdv_1623, out_boogieTmp := FatLocateEaByName_loop_L6(out_Tmp_2855, out_PackedEa_2, out_sdv_1623, in_Name_6, in_IrpContext_194, in_FirstPackedEa_1, in_PackedEasLength_4, in_Offset_7, out_boogieTmp);
    return;
}



procedure {:LoopProcedure} FatLocateEaByName_loop_L6(in_Tmp_2855: int, in_PackedEa_2: int, in_sdv_1623: int, in_Name_6: int, in_IrpContext_194: int, in_FirstPackedEa_1: int, in_PackedEasLength_4: int, in_Offset_7: int, in_boogieTmp: int) returns (out_Tmp_2855: int, out_PackedEa_2: int, out_sdv_1623: int, out_boogieTmp: int);
  free ensures {:va_keep} out_PackedEa_2 == in_PackedEa_2 || out_PackedEa_2 == in_FirstPackedEa_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMarkEaRangeDirty_loop_L13(in_Tmp_2858: int, in_BcbCount_1: int, in_NextBcb_2: int) returns (out_Tmp_2858: int, out_BcbCount_1: int)
{

  entry:
    out_Tmp_2858, out_BcbCount_1 := in_Tmp_2858, in_BcbCount_1;
    goto L13, exit;

  exit:
    return;

  L13:
    out_Tmp_2858 := out_BcbCount_1;
    out_BcbCount_1 := out_BcbCount_1 - 1;
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_Tmp_2858 != 0;
    assume {:nonnull} in_NextBcb_2 != 0;
    assume in_NextBcb_2 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L16;

  L16:
    goto L16_dummy;

  L16_dummy:
    havoc out_BcbCount_1;
    return;

  anon8_Then:
    goto L16;
}



procedure {:LoopProcedure} FatMarkEaRangeDirty_loop_L13(in_Tmp_2858: int, in_BcbCount_1: int, in_NextBcb_2: int) returns (out_Tmp_2858: int, out_BcbCount_1: int);
  free ensures {:va_keep} out_Tmp_2858 == in_BcbCount_1 || out_Tmp_2858 == in_Tmp_2858;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatVerifyFcb_loop_L29(in_Tmp_2893: int, in_CurrentFcb: int, in_IrpContext_199: int) returns (out_Tmp_2893: int, out_CurrentFcb: int)
{

  entry:
    out_Tmp_2893, out_CurrentFcb := in_Tmp_2893, in_CurrentFcb;
    goto L29, exit;

  exit:
    return;

  L29:
    assume {:nonnull} out_CurrentFcb != 0;
    assume out_CurrentFcb > 0;
    goto anon32_Else;

  anon32_Else:
    call {:si_unique_call 5112} FatDetermineAndMarkFcbCondition(in_IrpContext_199, out_CurrentFcb);
    assume {:nonnull} out_CurrentFcb != 0;
    assume out_CurrentFcb > 0;
    goto anon34_Else;

  anon34_Else:
    out_Tmp_2893 := out_CurrentFcb;
    assume {:nonnull} out_Tmp_2893 != 0;
    assume out_Tmp_2893 > 0;
    goto anon42_Else;

  anon42_Else:
    assume {:nonnull} out_CurrentFcb != 0;
    assume out_CurrentFcb > 0;
    havoc out_CurrentFcb;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    call {:si_unique_call 5113} {:si_old_unique_call 1} out_Tmp_2893, out_CurrentFcb := FatVerifyFcb_loop_L29(out_Tmp_2893, out_CurrentFcb, in_IrpContext_199);
    return;
}



procedure {:LoopProcedure} FatVerifyFcb_loop_L29(in_Tmp_2893: int, in_CurrentFcb: int, in_IrpContext_199: int) returns (out_Tmp_2893: int, out_CurrentFcb: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMarkFcbCondition_loop_L29(in_OriginalFcb_1: int, in_IrpContext_200: int, in_Fcb_68: int, in_FcbCondition: int) returns (out_Fcb_68: int)
{

  entry:
    out_Fcb_68 := in_Fcb_68;
    goto L29, exit;

  exit:
    return;

  L29:
    call {:si_unique_call 5114} out_Fcb_68 := FatGetNextFcbTopDown(in_IrpContext_200, out_Fcb_68, in_OriginalFcb_1);
    goto anon35_Else;

  anon35_Else:
    assume {:partition} out_Fcb_68 != 0;
    assume {:nonnull} out_Fcb_68 != 0;
    assume out_Fcb_68 > 0;
    assume {:nonnull} out_Fcb_68 != 0;
    assume out_Fcb_68 > 0;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    call {:si_unique_call 5115} {:si_old_unique_call 1} out_Fcb_68 := FatMarkFcbCondition_loop_L29(in_OriginalFcb_1, in_IrpContext_200, out_Fcb_68, in_FcbCondition);
    return;
}



procedure {:LoopProcedure} FatMarkFcbCondition_loop_L29(in_OriginalFcb_1: int, in_IrpContext_200: int, in_Fcb_68: int, in_FcbCondition: int) returns (out_Fcb_68: int);
  free ensures {:va_keep} out_Fcb_68 == 0 || out_Fcb_68 == in_Fcb_68;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatIsNameLongUnicodeValid_loop_L5(in_i_23: int, in_Tmp_2970: int, in_Tmp_2971: int, in_Tmp_2973: int, in_Tmp_2974: int, in_Tmp_2975: int, in_Tmp_2976: int, in_Tmp_2977: int, in_Tmp_2978: int, in_Tmp_2979: int, in_Tmp_2980: int, in_Name_8: int, in_CanContainWildcards: int) returns (out_i_23: int, out_Tmp_2970: int, out_Tmp_2971: int, out_Tmp_2973: int, out_Tmp_2974: int, out_Tmp_2975: int, out_Tmp_2976: int, out_Tmp_2977: int, out_Tmp_2978: int, out_Tmp_2979: int, out_Tmp_2980: int)
{

  entry:
    out_i_23, out_Tmp_2970, out_Tmp_2971, out_Tmp_2973, out_Tmp_2974, out_Tmp_2975, out_Tmp_2976, out_Tmp_2977, out_Tmp_2978, out_Tmp_2979, out_Tmp_2980 := in_i_23, in_Tmp_2970, in_Tmp_2971, in_Tmp_2973, in_Tmp_2974, in_Tmp_2975, in_Tmp_2976, in_Tmp_2977, in_Tmp_2978, in_Tmp_2979, in_Tmp_2980;
    goto L5, exit;

  exit:
    return;

  L5:
    assume {:nonnull} in_Name_8 != 0;
    assume in_Name_8 > 0;
    goto anon11_Else;

  anon11_Else:
    out_Tmp_2975 := out_i_23;
    assume {:nonnull} in_Name_8 != 0;
    assume in_Name_8 > 0;
    havoc out_Tmp_2976;
    assume {:nonnull} out_Tmp_2976 != 0;
    assume out_Tmp_2976 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    out_Tmp_2979 := out_i_23;
    assume {:nonnull} in_Name_8 != 0;
    assume in_Name_8 > 0;
    havoc out_Tmp_2970;
    assume {:nonnull} out_Tmp_2970 != 0;
    assume out_Tmp_2970 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    out_Tmp_2973 := 1;
    goto L12;

  L12:
    goto anon13_Then;

  anon13_Then:
    assume {:partition} out_Tmp_2973 != 0;
    goto L8;

  L8:
    out_i_23 := out_i_23 + 1;
    goto L8_dummy;

  L8_dummy:
    havoc out_i_23;
    return;

  anon15_Then:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} in_CanContainWildcards != 0;
    out_Tmp_2978 := 8;
    goto L16;

  L16:
    out_Tmp_2980 := out_i_23;
    assume {:nonnull} in_Name_8 != 0;
    assume in_Name_8 > 0;
    havoc out_Tmp_2977;
    assume {:nonnull} out_Tmp_2977 != 0;
    assume out_Tmp_2977 > 0;
    havoc out_Tmp_2971;
    assume {:nonnull} FsRtlLegalAnsiCharacterArray != 0;
    assume FsRtlLegalAnsiCharacterArray > 0;
    havoc out_Tmp_2974;
    assume {:nonnull} out_Tmp_2974 != 0;
    assume out_Tmp_2974 > 0;
    havoc out_Tmp_2973;
    goto L12;

  anon12_Then:
    assume {:partition} in_CanContainWildcards == 0;
    out_Tmp_2978 := 0;
    goto L16;

  anon14_Then:
    goto L8;
}



procedure {:LoopProcedure} FatIsNameLongUnicodeValid_loop_L5(in_i_23: int, in_Tmp_2970: int, in_Tmp_2971: int, in_Tmp_2973: int, in_Tmp_2974: int, in_Tmp_2975: int, in_Tmp_2976: int, in_Tmp_2977: int, in_Tmp_2978: int, in_Tmp_2979: int, in_Tmp_2980: int, in_Name_8: int, in_CanContainWildcards: int) returns (out_i_23: int, out_Tmp_2970: int, out_Tmp_2971: int, out_Tmp_2973: int, out_Tmp_2974: int, out_Tmp_2975: int, out_Tmp_2976: int, out_Tmp_2977: int, out_Tmp_2978: int, out_Tmp_2979: int, out_Tmp_2980: int);
  free ensures {:va_keep} out_Tmp_2975 == in_i_23 || out_Tmp_2975 == in_Tmp_2975;
  free ensures {:va_keep} out_Tmp_2978 == 8 || out_Tmp_2978 == 0 || out_Tmp_2978 == in_Tmp_2978;
  free ensures {:va_keep} out_Tmp_2979 == in_i_23 || out_Tmp_2979 == in_Tmp_2979;
  free ensures {:va_keep} out_Tmp_2980 == in_Tmp_2980 || out_Tmp_2980 == in_i_23;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonShutdown_loop_L88(in_Fcb_74: int, in_Vcb_119: int, in_IrpContext_212: int) returns (out_Fcb_74: int)
{
  var vslice_dummy_var_1835: int;

  entry:
    out_Fcb_74 := in_Fcb_74;
    goto L88, exit;

  exit:
    return;

  L88:
    assume {:nonnull} in_Vcb_119 != 0;
    assume in_Vcb_119 > 0;
    havoc vslice_dummy_var_1835;
    call {:si_unique_call 5116} out_Fcb_74 := FatGetNextFcbBottomUp(in_IrpContext_212, out_Fcb_74, vslice_dummy_var_1835);
    goto anon25_Else;

  anon25_Else:
    assume {:partition} out_Fcb_74 != 0;
    call {:si_unique_call 5117} ExReleaseResourceLite(0);
    goto anon25_Else_dummy;

  anon25_Else_dummy:
    call {:si_unique_call 5118} {:si_old_unique_call 1} out_Fcb_74 := FatCommonShutdown_loop_L88(out_Fcb_74, in_Vcb_119, in_IrpContext_212);
    return;
}



procedure {:LoopProcedure} FatCommonShutdown_loop_L88(in_Fcb_74: int, in_Vcb_119: int, in_IrpContext_212: int) returns (out_Fcb_74: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonShutdown_loop_L62(in_Fcb_75: int, in_Vcb_119: int, in_IrpContext_212: int, in_vslice_dummy_var_546: int) returns (out_Fcb_75: int, out_vslice_dummy_var_546: int)
{
  var vslice_dummy_var_1836: int;

  entry:
    out_Fcb_75, out_vslice_dummy_var_546 := in_Fcb_75, in_vslice_dummy_var_546;
    goto L62, exit;

  exit:
    return;

  L62:
    assume {:nonnull} in_Vcb_119 != 0;
    assume in_Vcb_119 > 0;
    havoc vslice_dummy_var_1836;
    call {:si_unique_call 5119} out_Fcb_75 := FatGetNextFcbBottomUp(in_IrpContext_212, out_Fcb_75, vslice_dummy_var_1836);
    goto anon23_Else;

  anon23_Else:
    assume {:partition} out_Fcb_75 != 0;
    call {:si_unique_call 5120} out_vslice_dummy_var_546 := FatAcquireExclusiveFcb(in_IrpContext_212, out_Fcb_75);
    goto anon23_Else_dummy;

  anon23_Else_dummy:
    call {:si_unique_call 5121} {:si_old_unique_call 1} out_Fcb_75, out_vslice_dummy_var_546 := FatCommonShutdown_loop_L62(out_Fcb_75, in_Vcb_119, in_IrpContext_212, out_vslice_dummy_var_546);
    return;
}



procedure {:LoopProcedure} FatCommonShutdown_loop_L62(in_Fcb_75: int, in_Vcb_119: int, in_IrpContext_212: int, in_vslice_dummy_var_546: int) returns (out_Fcb_75: int, out_vslice_dummy_var_546: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_546 == 1 || out_vslice_dummy_var_546 == 0 || out_vslice_dummy_var_546 == in_vslice_dummy_var_546;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonShutdown_loop_L24(in_Fcb_74: int, in_Links_9: int, in_Fcb_75: int, in_Iosb_28: int, in_Event_16: int, in_sdv_1766: int, in_NewIrp: int, in_sdv_1767: int, in_Vcb_119: int, in_VcbDeleted_7: int, in_IrpContext_212: int, in_vslice_dummy_var_545: int, in_vslice_dummy_var_546: int, in_vslice_dummy_var_547: int, in_vslice_dummy_var_548: int, in_vslice_dummy_var_550: int) returns (out_Fcb_74: int, out_Links_9: int, out_Fcb_75: int, out_sdv_1766: int, out_NewIrp: int, out_sdv_1767: int, out_Vcb_119: int, out_VcbDeleted_7: int, out_vslice_dummy_var_545: int, out_vslice_dummy_var_546: int, out_vslice_dummy_var_547: int, out_vslice_dummy_var_548: int, out_vslice_dummy_var_550: int)
{
  var vslice_dummy_var_1837: int;
  var vslice_dummy_var_1838: int;
  var vslice_dummy_var_1839: int;

  entry:
    out_Fcb_74, out_Links_9, out_Fcb_75, out_sdv_1766, out_NewIrp, out_sdv_1767, out_Vcb_119, out_VcbDeleted_7, out_vslice_dummy_var_545, out_vslice_dummy_var_546, out_vslice_dummy_var_547, out_vslice_dummy_var_548, out_vslice_dummy_var_550 := in_Fcb_74, in_Links_9, in_Fcb_75, in_sdv_1766, in_NewIrp, in_sdv_1767, in_Vcb_119, in_VcbDeleted_7, in_vslice_dummy_var_545, in_vslice_dummy_var_546, in_vslice_dummy_var_547, in_vslice_dummy_var_548, in_vslice_dummy_var_550;
    goto L24, exit;

  exit:
    return;

  L24:
    goto anon21_Else;

  anon21_Else:
    call {:si_unique_call 5137} out_sdv_1767 := sdv_containing_record(out_Links_9, 64);
    out_Vcb_119 := out_sdv_1767;
    assume {:nonnull} out_Links_9 != 0;
    assume out_Links_9 > 0;
    havoc out_Links_9;
    assume {:nonnull} out_Vcb_119 != 0;
    assume out_Vcb_119 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} out_Vcb_119 != 0;
    assume out_Vcb_119 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    out_Fcb_75 := 0;
    call {:si_unique_call 5135} out_vslice_dummy_var_550 := FatAcquireExclusiveVcb(in_IrpContext_212, out_Vcb_119);
    goto L62;

  L62:
    call {:si_unique_call 5133} out_Fcb_75, out_vslice_dummy_var_546 := FatCommonShutdown_loop_L62(out_Fcb_75, out_Vcb_119, in_IrpContext_212, out_vslice_dummy_var_546);
    goto L62_last;

  L62_last:
    assume {:nonnull} out_Vcb_119 != 0;
    assume out_Vcb_119 > 0;
    havoc vslice_dummy_var_1838;
    call {:si_unique_call 5134} out_Fcb_75 := FatGetNextFcbBottomUp(in_IrpContext_212, out_Fcb_75, vslice_dummy_var_1838);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} out_Fcb_75 != 0;
    call {:si_unique_call 5136} out_vslice_dummy_var_546 := FatAcquireExclusiveFcb(in_IrpContext_212, out_Fcb_75);
    assume false;
    return;

  anon23_Then:
    assume {:partition} out_Fcb_75 == 0;
    call {:si_unique_call 5132} out_vslice_dummy_var_545 := FatFlushVolume(in_IrpContext_212, out_Vcb_119, 1);
    assume {:nonnull} out_Vcb_119 != 0;
    assume out_Vcb_119 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 5130} out_vslice_dummy_var_548 := corral_nondet();
    call {:si_unique_call 5131} FatMarkVolume#1(in_IrpContext_212, out_Vcb_119, 0);
    goto L75;

  L75:
    call {:si_unique_call 5129} out_NewIrp := IoBuildSynchronousFsdRequest(16, 0, 0, 0, 0, 0, in_Iosb_28);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} out_NewIrp != 0;
    assume {:nonnull} out_Vcb_119 != 0;
    assume out_Vcb_119 > 0;
    havoc vslice_dummy_var_1839;
    call {:si_unique_call 5138} out_sdv_1766 := sdv_IoCallDriver(vslice_dummy_var_1839, out_NewIrp);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} out_sdv_1766 >= 0;
    call {:si_unique_call 5127} out_vslice_dummy_var_547 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 5128} KeClearEvent(in_Event_16);
    goto L80;

  L80:
    assume {:nonnull} out_Vcb_119 != 0;
    assume out_Vcb_119 > 0;
    call {:si_unique_call 5126} out_VcbDeleted_7 := FatCheckForDismount#1(in_IrpContext_212, out_Vcb_119, 0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} out_VcbDeleted_7 == 0;
    out_Fcb_74 := 0;
    goto L88;

  L88:
    call {:si_unique_call 5123} out_Fcb_74 := FatCommonShutdown_loop_L88(out_Fcb_74, out_Vcb_119, in_IrpContext_212);
    goto L88_last;

  L88_last:
    assume {:nonnull} out_Vcb_119 != 0;
    assume out_Vcb_119 > 0;
    havoc vslice_dummy_var_1837;
    call {:si_unique_call 5124} out_Fcb_74 := FatGetNextFcbBottomUp(in_IrpContext_212, out_Fcb_74, vslice_dummy_var_1837);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} out_Fcb_74 != 0;
    call {:si_unique_call 5125} ExReleaseResourceLite(0);
    assume false;
    return;

  anon25_Then:
    assume {:partition} out_Fcb_74 == 0;
    call {:si_unique_call 5122} ExReleaseResourceLite(0);
    goto anon25_Then_dummy;

  anon25_Then_dummy:
    goto L_BAF_14;

  L_BAF_14:
    call {:si_unique_call 5139} {:si_old_unique_call 1} out_Fcb_74, out_Links_9, out_Fcb_75, out_sdv_1766, out_NewIrp, out_sdv_1767, out_Vcb_119, out_VcbDeleted_7, out_vslice_dummy_var_545, out_vslice_dummy_var_546, out_vslice_dummy_var_547, out_vslice_dummy_var_548, out_vslice_dummy_var_550 := FatCommonShutdown_loop_L24(out_Fcb_74, out_Links_9, out_Fcb_75, in_Iosb_28, in_Event_16, out_sdv_1766, out_NewIrp, out_sdv_1767, out_Vcb_119, out_VcbDeleted_7, in_IrpContext_212, out_vslice_dummy_var_545, out_vslice_dummy_var_546, out_vslice_dummy_var_547, out_vslice_dummy_var_548, out_vslice_dummy_var_550);
    return;

  anon24_Then:
    assume {:partition} out_VcbDeleted_7 != 0;
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    goto L_BAF_14;

  anon27_Then:
    assume {:partition} 0 > out_sdv_1766;
    goto L80;

  anon26_Then:
    assume {:partition} out_NewIrp == 0;
    goto L80;

  anon28_Then:
    goto L75;

  anon22_Then:
    goto anon22_Then_dummy;

  anon22_Then_dummy:
    goto L_BAF_14;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    goto L_BAF_14;
}



procedure {:LoopProcedure} FatCommonShutdown_loop_L24(in_Fcb_74: int, in_Links_9: int, in_Fcb_75: int, in_Iosb_28: int, in_Event_16: int, in_sdv_1766: int, in_NewIrp: int, in_sdv_1767: int, in_Vcb_119: int, in_VcbDeleted_7: int, in_IrpContext_212: int, in_vslice_dummy_var_545: int, in_vslice_dummy_var_546: int, in_vslice_dummy_var_547: int, in_vslice_dummy_var_548: int, in_vslice_dummy_var_550: int) returns (out_Fcb_74: int, out_Links_9: int, out_Fcb_75: int, out_sdv_1766: int, out_NewIrp: int, out_sdv_1767: int, out_Vcb_119: int, out_VcbDeleted_7: int, out_vslice_dummy_var_545: int, out_vslice_dummy_var_546: int, out_vslice_dummy_var_547: int, out_vslice_dummy_var_548: int, out_vslice_dummy_var_550: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_Fcb_74 == in_Fcb_74;
  free ensures {:va_keep} out_Links_9 == in_Links_9;
  free ensures {:va_keep} out_Fcb_75 == in_Fcb_75;
  free ensures {:va_keep} out_sdv_1766 == in_sdv_1766;
  free ensures {:va_keep} out_NewIrp == in_NewIrp;
  free ensures {:va_keep} out_sdv_1767 == in_sdv_1767;
  free ensures {:va_keep} out_Vcb_119 == in_Vcb_119;
  free ensures {:va_keep} out_VcbDeleted_7 == in_VcbDeleted_7;
  free ensures {:va_keep} out_vslice_dummy_var_545 == in_vslice_dummy_var_545;
  free ensures {:va_keep} out_vslice_dummy_var_546 == in_vslice_dummy_var_546;
  free ensures {:va_keep} out_vslice_dummy_var_547 == in_vslice_dummy_var_547;
  free ensures {:va_keep} out_vslice_dummy_var_548 == in_vslice_dummy_var_548;
  free ensures {:va_keep} out_vslice_dummy_var_550 == in_vslice_dummy_var_550;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAcquireExclusiveFcb_loop_L3(in_Tmp_3072: int, in_sdv_1782: int, in_Tmp_3073: int, in_Tmp_3074: int, in_sdv_1785: int, in_sdv_1787: int, in_Tmp_3076: int, in_IrpContext_215: int, in_Fcb_76: int, in_vslice_dummy_var_553: int) returns (out_Tmp_3072: int, out_sdv_1782: int, out_Tmp_3073: int, out_Tmp_3074: int, out_sdv_1785: int, out_sdv_1787: int, out_Tmp_3076: int, out_vslice_dummy_var_553: int)
{

  entry:
    out_Tmp_3072, out_sdv_1782, out_Tmp_3073, out_Tmp_3074, out_sdv_1785, out_sdv_1787, out_Tmp_3076, out_vslice_dummy_var_553 := in_Tmp_3072, in_sdv_1782, in_Tmp_3073, in_Tmp_3074, in_sdv_1785, in_sdv_1787, in_Tmp_3076, in_vslice_dummy_var_553;
    goto L3, exit;

  exit:
    return;

  L3:
    assume {:nonnull} in_IrpContext_215 != 0;
    assume in_IrpContext_215 > 0;
    havoc out_Tmp_3073;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} out_Tmp_3073 == 0;
    out_Tmp_3074 := 0;
    goto L57;

  L57:
    call {:si_unique_call 5142} out_sdv_1782 := ExAcquireResourceExclusiveLite(0, out_Tmp_3074);
    goto anon17_Else;

  anon17_Else:
    assume {:partition} out_sdv_1782 != 0;
    assume {:nonnull} in_Fcb_76 != 0;
    assume in_Fcb_76 > 0;
    havoc out_Tmp_3076;
    assume {:nonnull} out_Tmp_3076 != 0;
    assume out_Tmp_3076 > 0;
    goto anon23_Else;

  anon23_Else:
    assume {:nonnull} in_IrpContext_215 != 0;
    assume in_IrpContext_215 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L16;

  L16:
    assume {:nonnull} in_Fcb_76 != 0;
    assume in_Fcb_76 > 0;
    call {:si_unique_call 5140} out_vslice_dummy_var_553 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 5141} ExReleaseResourceLite(0);
    goto L16_dummy;

  L16_dummy:
    call {:si_unique_call 5145} {:si_old_unique_call 1} out_Tmp_3072, out_sdv_1782, out_Tmp_3073, out_Tmp_3074, out_sdv_1785, out_sdv_1787, out_Tmp_3076, out_vslice_dummy_var_553 := FatAcquireExclusiveFcb_loop_L3(out_Tmp_3072, out_sdv_1782, out_Tmp_3073, out_Tmp_3074, out_sdv_1785, out_sdv_1787, out_Tmp_3076, in_IrpContext_215, in_Fcb_76, out_vslice_dummy_var_553);
    return;

  anon18_Then:
    assume {:nonnull} in_IrpContext_215 != 0;
    assume in_IrpContext_215 > 0;
    havoc out_Tmp_3072;
    assume {:nonnull} out_Tmp_3072 != 0;
    assume out_Tmp_3072 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 5143} out_sdv_1785 := ExGetSharedWaiterCount(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} out_sdv_1785 == 0;
    call {:si_unique_call 5144} out_sdv_1787 := ExGetExclusiveWaiterCount(0);
    goto anon20_Else;

  anon20_Else:
    assume {:partition} out_sdv_1787 != 0;
    goto L16;

  anon19_Then:
    assume {:partition} out_sdv_1785 != 0;
    goto L16;

  anon24_Then:
    goto L16;

  anon22_Then:
    assume {:partition} out_Tmp_3073 != 0;
    out_Tmp_3074 := 1;
    goto L57;
}



procedure {:LoopProcedure} FatAcquireExclusiveFcb_loop_L3(in_Tmp_3072: int, in_sdv_1782: int, in_Tmp_3073: int, in_Tmp_3074: int, in_sdv_1785: int, in_sdv_1787: int, in_Tmp_3076: int, in_IrpContext_215: int, in_Fcb_76: int, in_vslice_dummy_var_553: int) returns (out_Tmp_3072: int, out_sdv_1782: int, out_Tmp_3073: int, out_Tmp_3074: int, out_sdv_1785: int, out_sdv_1787: int, out_Tmp_3076: int, out_vslice_dummy_var_553: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_1782 == 0 || out_sdv_1782 == 1 || out_sdv_1782 == in_sdv_1782;
  free ensures {:va_keep} out_Tmp_3074 == 0 || out_Tmp_3074 == 1 || out_Tmp_3074 == in_Tmp_3074;
  free ensures {:va_keep} out_vslice_dummy_var_553 == 258 || out_vslice_dummy_var_553 == 0 || out_vslice_dummy_var_553 == in_vslice_dummy_var_553;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAcquireSharedFcb_loop_L3(in_Tmp_3078: int, in_Tmp_3080: int, in_sdv_1788: int, in_Tmp_3081: int, in_sdv_1791: int, in_sdv_1793: int, in_Tmp_3083: int, in_IrpContext_216: int, in_Fcb_77: int, in_vslice_dummy_var_554: int) returns (out_Tmp_3078: int, out_Tmp_3080: int, out_sdv_1788: int, out_Tmp_3081: int, out_sdv_1791: int, out_sdv_1793: int, out_Tmp_3083: int, out_vslice_dummy_var_554: int)
{

  entry:
    out_Tmp_3078, out_Tmp_3080, out_sdv_1788, out_Tmp_3081, out_sdv_1791, out_sdv_1793, out_Tmp_3083, out_vslice_dummy_var_554 := in_Tmp_3078, in_Tmp_3080, in_sdv_1788, in_Tmp_3081, in_sdv_1791, in_sdv_1793, in_Tmp_3083, in_vslice_dummy_var_554;
    goto L3, exit;

  exit:
    return;

  L3:
    assume {:nonnull} in_IrpContext_216 != 0;
    assume in_IrpContext_216 > 0;
    havoc out_Tmp_3080;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} out_Tmp_3080 == 0;
    out_Tmp_3078 := 0;
    goto L57;

  L57:
    call {:si_unique_call 5148} out_sdv_1788 := ExAcquireResourceSharedLite(0, out_Tmp_3078);
    goto anon17_Else;

  anon17_Else:
    assume {:partition} out_sdv_1788 != 0;
    assume {:nonnull} in_Fcb_77 != 0;
    assume in_Fcb_77 > 0;
    havoc out_Tmp_3081;
    assume {:nonnull} out_Tmp_3081 != 0;
    assume out_Tmp_3081 > 0;
    goto anon23_Else;

  anon23_Else:
    assume {:nonnull} in_IrpContext_216 != 0;
    assume in_IrpContext_216 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L16;

  L16:
    assume {:nonnull} in_Fcb_77 != 0;
    assume in_Fcb_77 > 0;
    call {:si_unique_call 5146} out_vslice_dummy_var_554 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 5147} ExReleaseResourceLite(0);
    goto L16_dummy;

  L16_dummy:
    call {:si_unique_call 5151} {:si_old_unique_call 1} out_Tmp_3078, out_Tmp_3080, out_sdv_1788, out_Tmp_3081, out_sdv_1791, out_sdv_1793, out_Tmp_3083, out_vslice_dummy_var_554 := FatAcquireSharedFcb_loop_L3(out_Tmp_3078, out_Tmp_3080, out_sdv_1788, out_Tmp_3081, out_sdv_1791, out_sdv_1793, out_Tmp_3083, in_IrpContext_216, in_Fcb_77, out_vslice_dummy_var_554);
    return;

  anon18_Then:
    assume {:nonnull} in_IrpContext_216 != 0;
    assume in_IrpContext_216 > 0;
    havoc out_Tmp_3083;
    assume {:nonnull} out_Tmp_3083 != 0;
    assume out_Tmp_3083 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 5149} out_sdv_1791 := ExGetSharedWaiterCount(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} out_sdv_1791 == 0;
    call {:si_unique_call 5150} out_sdv_1793 := ExGetExclusiveWaiterCount(0);
    goto anon20_Else;

  anon20_Else:
    assume {:partition} out_sdv_1793 != 0;
    goto L16;

  anon19_Then:
    assume {:partition} out_sdv_1791 != 0;
    goto L16;

  anon24_Then:
    goto L16;

  anon22_Then:
    assume {:partition} out_Tmp_3080 != 0;
    out_Tmp_3078 := 1;
    goto L57;
}



procedure {:LoopProcedure} FatAcquireSharedFcb_loop_L3(in_Tmp_3078: int, in_Tmp_3080: int, in_sdv_1788: int, in_Tmp_3081: int, in_sdv_1791: int, in_sdv_1793: int, in_Tmp_3083: int, in_IrpContext_216: int, in_Fcb_77: int, in_vslice_dummy_var_554: int) returns (out_Tmp_3078: int, out_Tmp_3080: int, out_sdv_1788: int, out_Tmp_3081: int, out_sdv_1791: int, out_sdv_1793: int, out_Tmp_3083: int, out_vslice_dummy_var_554: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_3078 == 0 || out_Tmp_3078 == 1 || out_Tmp_3078 == in_Tmp_3078;
  free ensures {:va_keep} out_sdv_1788 == 0 || out_sdv_1788 == 1 || out_sdv_1788 == in_sdv_1788;
  free ensures {:va_keep} out_vslice_dummy_var_554 == 258 || out_vslice_dummy_var_554 == 0 || out_vslice_dummy_var_554 == in_vslice_dummy_var_554;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatAcquireSharedFcbWaitForEx_loop_L3(in_sdv_1794: int, in_Tmp_3085: int, in_IrpContext_217: int, in_Fcb_78: int, in_vslice_dummy_var_555: int) returns (out_sdv_1794: int, out_Tmp_3085: int, out_vslice_dummy_var_555: int)
{

  entry:
    out_sdv_1794, out_Tmp_3085, out_vslice_dummy_var_555 := in_sdv_1794, in_Tmp_3085, in_vslice_dummy_var_555;
    goto L3, exit;

  exit:
    return;

  L3:
    call {:si_unique_call 5152} out_sdv_1794 := ExAcquireSharedWaitForExclusive(0, 0);
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_sdv_1794 != 0;
    assume {:nonnull} in_Fcb_78 != 0;
    assume in_Fcb_78 > 0;
    havoc out_Tmp_3085;
    assume {:nonnull} out_Tmp_3085 != 0;
    assume out_Tmp_3085 > 0;
    goto anon12_Else;

  anon12_Else:
    assume {:nonnull} in_IrpContext_217 != 0;
    assume in_IrpContext_217 > 0;
    goto anon10_Else;

  anon10_Else:
    assume {:nonnull} in_Fcb_78 != 0;
    assume in_Fcb_78 > 0;
    call {:si_unique_call 5153} out_vslice_dummy_var_555 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 5154} ExReleaseResourceLite(0);
    goto anon10_Else_dummy;

  anon10_Else_dummy:
    call {:si_unique_call 5155} {:si_old_unique_call 1} out_sdv_1794, out_Tmp_3085, out_vslice_dummy_var_555 := FatAcquireSharedFcbWaitForEx_loop_L3(out_sdv_1794, out_Tmp_3085, in_IrpContext_217, in_Fcb_78, out_vslice_dummy_var_555);
    return;
}



procedure {:LoopProcedure} FatAcquireSharedFcbWaitForEx_loop_L3(in_sdv_1794: int, in_Tmp_3085: int, in_IrpContext_217: int, in_Fcb_78: int, in_vslice_dummy_var_555: int) returns (out_sdv_1794: int, out_Tmp_3085: int, out_vslice_dummy_var_555: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_1794 == 0 || out_sdv_1794 == 1 || out_sdv_1794 == in_sdv_1794;
  free ensures {:va_keep} out_vslice_dummy_var_555 == 258 || out_vslice_dummy_var_555 == 0 || out_vslice_dummy_var_555 == in_vslice_dummy_var_555;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMarkVolume#0_loop_L99(in_Irp_78: int, in_NextMdl: int, in_Tmp_2912: int) returns (out_NextMdl: int, out_Tmp_2912: int)
{

  entry:
    out_NextMdl, out_Tmp_2912 := in_NextMdl, in_Tmp_2912;
    goto L99, exit;

  exit:
    return;

  L99:
    assume {:nonnull} in_Irp_78 != 0;
    assume in_Irp_78 > 0;
    goto anon71_Else;

  anon71_Else:
    assume {:nonnull} in_Irp_78 != 0;
    assume in_Irp_78 > 0;
    havoc out_Tmp_2912;
    assume {:nonnull} out_Tmp_2912 != 0;
    assume out_Tmp_2912 > 0;
    havoc out_NextMdl;
    call {:si_unique_call 5156} MmUnlockPages(0);
    call {:si_unique_call 5157} IoFreeMdl(0);
    assume {:nonnull} in_Irp_78 != 0;
    assume in_Irp_78 > 0;
    goto anon71_Else_dummy;

  anon71_Else_dummy:
    call {:si_unique_call 5158} {:si_old_unique_call 1} out_NextMdl, out_Tmp_2912 := FatMarkVolume#0_loop_L99(in_Irp_78, out_NextMdl, out_Tmp_2912);
    return;
}



procedure {:LoopProcedure} FatMarkVolume#0_loop_L99(in_Irp_78: int, in_NextMdl: int, in_Tmp_2912: int) returns (out_NextMdl: int, out_Tmp_2912: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:SIextraRecBound 2} FatMarkVolume#0_loop_L22(in_Tmp_2909: int, in_Offset_8: int, in_Irp_78: int, in_abort: int, in_Tmp_2910: int, in_Tmp_2911: int, in_PinLength: int, in_NextMdl: int, in_Status_79: int, in_Tmp_2912: int, in_sdv_1637: int, in_Bcb_25: int, in_ThisPass: int, in_Tmp_2913: int, in_Event_13: int, in_Tmp_2914: int, in_Tmp_2915: int, in_Tmp_2916: int, in_sdv_1639: int, in_Tmp_2918: int, in_WriteLength_1: int, in_FsInfoUpdate: int, in_Tmp_2919: int, in_FsInfoSector: int, in_Tmp_2920: int, in_CurrentHead: int, in_Sector: int, in_Vcb_109: int, in_VolumeState_1: int, in_vslice_dummy_var_585: int, in_vslice_dummy_var_586: int) returns (out_Tmp_2909: int, out_Irp_78: int, out_abort: int, out_Tmp_2910: int, out_Tmp_2911: int, out_PinLength: int, out_NextMdl: int, out_Status_79: int, out_Tmp_2912: int, out_sdv_1637: int, out_Bcb_25: int, out_ThisPass: int, out_Tmp_2913: int, out_Tmp_2914: int, out_Tmp_2915: int, out_Tmp_2916: int, out_sdv_1639: int, out_Tmp_2918: int, out_WriteLength_1: int, out_FsInfoUpdate: int, out_Tmp_2919: int, out_FsInfoSector: int, out_Tmp_2920: int, out_CurrentHead: int, out_vslice_dummy_var_585: int, out_vslice_dummy_var_586: int)
{
  var vslice_dummy_var_1840: int;

  entry:
    out_Tmp_2909, out_Irp_78, out_abort, out_Tmp_2910, out_Tmp_2911, out_PinLength, out_NextMdl, out_Status_79, out_Tmp_2912, out_sdv_1637, out_Bcb_25, out_ThisPass, out_Tmp_2913, out_Tmp_2914, out_Tmp_2915, out_Tmp_2916, out_sdv_1639, out_Tmp_2918, out_WriteLength_1, out_FsInfoUpdate, out_Tmp_2919, out_FsInfoSector, out_Tmp_2920, out_CurrentHead, out_vslice_dummy_var_585, out_vslice_dummy_var_586 := in_Tmp_2909, in_Irp_78, in_abort, in_Tmp_2910, in_Tmp_2911, in_PinLength, in_NextMdl, in_Status_79, in_Tmp_2912, in_sdv_1637, in_Bcb_25, in_ThisPass, in_Tmp_2913, in_Tmp_2914, in_Tmp_2915, in_Tmp_2916, in_sdv_1639, in_Tmp_2918, in_WriteLength_1, in_FsInfoUpdate, in_Tmp_2919, in_FsInfoSector, in_Tmp_2920, in_CurrentHead, in_vslice_dummy_var_585, in_vslice_dummy_var_586;
    goto L22, exit;

  exit:
    return;

  L22:
    assume {:CounterLoop 2} {:Counter "ThisPass"} true;
    goto anon58_Else;

  anon58_Else:
    assume {:partition} 2 > out_ThisPass;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_ThisPass != 1;
    goto L32;

  L32:
    assume {:nonnull} in_Offset_8 != 0;
    assume in_Offset_8 > 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2911 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} out_Tmp_2911 != 0;
    assume out_Tmp_2911 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2914 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2916 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} out_Tmp_2914 != 0;
    assume out_Tmp_2914 > 0;
    assume {:nonnull} out_Tmp_2916 != 0;
    assume out_Tmp_2916 > 0;
    havoc out_Tmp_2910;
    goto L38;

  L38:
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2918 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2919 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} out_Tmp_2918 != 0;
    assume out_Tmp_2918 > 0;
    assume {:nonnull} out_Tmp_2919 != 0;
    assume out_Tmp_2919 > 0;
    havoc out_PinLength;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    havoc out_WriteLength_1;
    goto L40;

  L40:
    call {:si_unique_call 5162} out_vslice_dummy_var_585 := corral_nondet();
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} out_ThisPass == 0;
    call {:si_unique_call 5161} out_sdv_1637 := FatIsBootSectorFat(in_Sector);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} out_sdv_1637 != 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    out_Tmp_2909 := in_Sector;
    assume {:nonnull} out_Tmp_2909 != 0;
    assume out_Tmp_2909 > 0;
    out_CurrentHead := CurrentHead__PACKED_BOOT_SECTOR_EX(out_Tmp_2909);
    goto L126;

  L126:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} in_VolumeState_1 != 0;
    assume {:nonnull} out_CurrentHead != 0;
    assume out_CurrentHead > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} in_VolumeState_1 == 2;
    assume {:nonnull} out_CurrentHead != 0;
    assume out_CurrentHead > 0;
    goto L65;

  L65:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_FsInfoUpdate != 0;
    out_FsInfoSector := in_Sector;
    assume {:nonnull} out_FsInfoSector != 0;
    assume out_FsInfoSector > 0;
    assume {:nonnull} out_FsInfoSector != 0;
    assume out_FsInfoSector > 0;
    assume {:nonnull} out_FsInfoSector != 0;
    assume out_FsInfoSector > 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    assume {:nonnull} out_FsInfoSector != 0;
    assume out_FsInfoSector > 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    assume {:nonnull} out_FsInfoSector != 0;
    assume out_FsInfoSector > 0;
    goto L66;

  L66:
    call {:si_unique_call 5166} KeInitializeEvent(in_Event_13, 0, 0);
    call {:si_unique_call 5167} out_Irp_78 := IoBuildAsynchronousFsdRequest(4, 0, 0, out_WriteLength_1, 0, 0);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} out_Irp_78 == 0;
    goto L94;

  L94:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} out_Irp_78 != 0;
    goto L99;

  L99:
    call {:si_unique_call 5168} out_NextMdl, out_Tmp_2912 := FatMarkVolume#0_loop_L99(out_Irp_78, out_NextMdl, out_Tmp_2912);
    goto L99_last;

  L99_last:
    assume {:nonnull} out_Irp_78 != 0;
    assume out_Irp_78 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} out_Irp_78 != 0;
    assume out_Irp_78 > 0;
    havoc out_Tmp_2912;
    assume {:nonnull} out_Tmp_2912 != 0;
    assume out_Tmp_2912 > 0;
    havoc out_NextMdl;
    call {:si_unique_call 5169} MmUnlockPages(0);
    call {:si_unique_call 5170} IoFreeMdl(0);
    assume {:nonnull} out_Irp_78 != 0;
    assume out_Irp_78 > 0;
    assume false;
    return;

  anon71_Then:
    call {:si_unique_call 5159} IoFreeIrp(0);
    goto L98;

  L98:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} out_Bcb_25 != 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} out_Bcb_25 != 0;
    out_Bcb_25 := 0;
    goto L112;

  L112:
    out_ThisPass := out_ThisPass + 1;
    goto L112_dummy;

  L112_dummy:
    call {:si_unique_call 5171} {:si_old_unique_call 1} out_Tmp_2909, out_Irp_78, out_abort, out_Tmp_2910, out_Tmp_2911, out_PinLength, out_NextMdl, out_Status_79, out_Tmp_2912, out_sdv_1637, out_Bcb_25, out_ThisPass, out_Tmp_2913, out_Tmp_2914, out_Tmp_2915, out_Tmp_2916, out_sdv_1639, out_Tmp_2918, out_WriteLength_1, out_FsInfoUpdate, out_Tmp_2919, out_FsInfoSector, out_Tmp_2920, out_CurrentHead, out_vslice_dummy_var_585, out_vslice_dummy_var_586 := FatMarkVolume#0_loop_L22(out_Tmp_2909, in_Offset_8, out_Irp_78, out_abort, out_Tmp_2910, out_Tmp_2911, out_PinLength, out_NextMdl, out_Status_79, out_Tmp_2912, out_sdv_1637, out_Bcb_25, out_ThisPass, out_Tmp_2913, in_Event_13, out_Tmp_2914, out_Tmp_2915, out_Tmp_2916, out_sdv_1639, out_Tmp_2918, out_WriteLength_1, out_FsInfoUpdate, out_Tmp_2919, out_FsInfoSector, out_Tmp_2920, out_CurrentHead, in_Sector, in_Vcb_109, in_VolumeState_1, out_vslice_dummy_var_585, out_vslice_dummy_var_586);
    return;

  anon72_Then:
    assume {:partition} out_Bcb_25 == 0;
    goto L112;

  anon70_Then:
    assume {:partition} out_Bcb_25 == 0;
    goto L112;

  anon69_Then:
    assume {:partition} out_Irp_78 == 0;
    goto L98;

  anon67_Then:
    assume {:partition} out_Irp_78 != 0;
    call {:si_unique_call 5163} out_sdv_1639 := sdv_IoGetNextIrpStackLocation(out_Irp_78);
    assume {:nonnull} out_sdv_1639 != 0;
    assume out_sdv_1639 > 0;
    call {:si_unique_call 5164} sdv_IoSetCompletionRoutine(out_Irp_78, li2bplFunctionConstant600, in_Event_13, 1, 1, 1);
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    havoc vslice_dummy_var_1840;
    call {:si_unique_call 5165} out_Status_79 := sdv_IoCallDriver(vslice_dummy_var_1840, out_Irp_78);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} out_Status_79 == 259;
    call {:si_unique_call 5160} out_vslice_dummy_var_586 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L94;

  anon68_Then:
    assume {:partition} out_Status_79 != 259;
    goto L94;

  anon66_Then:
    assume {:partition} out_FsInfoUpdate == 0;
    goto L66;

  anon83_Then:
    assume {:partition} in_VolumeState_1 != 2;
    goto L65;

  anon75_Then:
    assume {:partition} in_VolumeState_1 == 0;
    assume {:nonnull} out_CurrentHead != 0;
    assume out_CurrentHead > 0;
    goto L65;

  anon74_Then:
    out_Tmp_2920 := in_Sector;
    assume {:nonnull} out_Tmp_2920 != 0;
    assume out_Tmp_2920 > 0;
    out_CurrentHead := CurrentHead__PACKED_BOOT_SECTOR(out_Tmp_2920);
    goto L126;

  anon73_Then:
    assume {:partition} out_sdv_1637 == 0;
    out_abort := 1;
    goto L94;

  anon65_Then:
    assume {:partition} out_ThisPass != 0;
    goto L65;

  anon82_Then:
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2915 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2913 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} out_Tmp_2913 != 0;
    assume out_Tmp_2913 > 0;
    assume {:nonnull} out_Tmp_2915 != 0;
    assume out_Tmp_2915 > 0;
    havoc out_Tmp_2910;
    goto L38;

  anon81_Then:
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    havoc out_PinLength;
    out_WriteLength_1 := out_PinLength;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} in_VolumeState_1 == 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    out_FsInfoUpdate := 1;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    havoc out_PinLength;
    out_WriteLength_1 := out_PinLength;
    goto L40;

  anon77_Then:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} out_ThisPass == 1;
    out_FsInfoUpdate := 1;
    assume {:nonnull} in_Offset_8 != 0;
    assume in_Offset_8 > 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto L40;

  anon78_Then:
    assume {:partition} out_ThisPass != 1;
    goto L40;

  anon76_Then:
    assume {:partition} in_VolumeState_1 != 0;
    goto L40;

  anon84_Then:
    goto L40;

  anon60_Then:
    assume {:partition} out_ThisPass == 1;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon61_Else;

  anon61_Else:
    goto anon62_Else;

  anon62_Else:
    assume {:partition} in_VolumeState_1 == 0;
    goto anon63_Else;

  anon63_Else:
    assume {:partition} out_FsInfoUpdate == 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon64_Else;

  anon64_Else:
    goto L32;
}



procedure {:LoopProcedure} FatMarkVolume#0_loop_L22(in_Tmp_2909: int, in_Offset_8: int, in_Irp_78: int, in_abort: int, in_Tmp_2910: int, in_Tmp_2911: int, in_PinLength: int, in_NextMdl: int, in_Status_79: int, in_Tmp_2912: int, in_sdv_1637: int, in_Bcb_25: int, in_ThisPass: int, in_Tmp_2913: int, in_Event_13: int, in_Tmp_2914: int, in_Tmp_2915: int, in_Tmp_2916: int, in_sdv_1639: int, in_Tmp_2918: int, in_WriteLength_1: int, in_FsInfoUpdate: int, in_Tmp_2919: int, in_FsInfoSector: int, in_Tmp_2920: int, in_CurrentHead: int, in_Sector: int, in_Vcb_109: int, in_VolumeState_1: int, in_vslice_dummy_var_585: int, in_vslice_dummy_var_586: int) returns (out_Tmp_2909: int, out_Irp_78: int, out_abort: int, out_Tmp_2910: int, out_Tmp_2911: int, out_PinLength: int, out_NextMdl: int, out_Status_79: int, out_Tmp_2912: int, out_sdv_1637: int, out_Bcb_25: int, out_ThisPass: int, out_Tmp_2913: int, out_Tmp_2914: int, out_Tmp_2915: int, out_Tmp_2916: int, out_sdv_1639: int, out_Tmp_2918: int, out_WriteLength_1: int, out_FsInfoUpdate: int, out_Tmp_2919: int, out_FsInfoSector: int, out_Tmp_2920: int, out_CurrentHead: int, out_vslice_dummy_var_585: int, out_vslice_dummy_var_586: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_2909 == in_Tmp_2909 || out_Tmp_2909 == in_Sector;
  free ensures {:va_keep} out_abort == 1 || out_abort == in_abort;
  free ensures {:va_keep} out_Tmp_2911 == in_Tmp_2911 || out_Tmp_2911 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_Status_79 == 259 || out_Status_79 == in_Status_79;
  free ensures {:va_keep} out_sdv_1637 == 0 || out_sdv_1637 == 1 || out_sdv_1637 == in_sdv_1637;
  free ensures {:va_keep} out_Bcb_25 == 0 || out_Bcb_25 == in_Bcb_25;
  free ensures {:va_keep} out_Tmp_2913 == in_Tmp_2913 || out_Tmp_2913 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_Tmp_2914 == in_Tmp_2914 || out_Tmp_2914 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_Tmp_2915 == in_Tmp_2915 || out_Tmp_2915 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_Tmp_2916 == in_Tmp_2916 || out_Tmp_2916 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_Tmp_2918 == in_Tmp_2918 || out_Tmp_2918 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_FsInfoUpdate == 1 || out_FsInfoUpdate == in_FsInfoUpdate;
  free ensures {:va_keep} out_Tmp_2919 == in_Tmp_2919 || out_Tmp_2919 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_FsInfoSector == in_FsInfoSector || out_FsInfoSector == in_Sector;
  free ensures {:va_keep} out_Tmp_2920 == in_Tmp_2920 || out_Tmp_2920 == in_Sector;
  free ensures {:va_keep} out_CurrentHead == in_CurrentHead || out_CurrentHead == CurrentHead__PACKED_BOOT_SECTOR_EX(in_Sector) || out_CurrentHead == CurrentHead__PACKED_BOOT_SECTOR(in_Sector);
  free ensures {:va_keep} out_vslice_dummy_var_586 == 258 || out_vslice_dummy_var_586 == 0 || out_vslice_dummy_var_586 == in_vslice_dummy_var_586;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatMarkVolume#1_loop_L99(in_Irp_78: int, in_NextMdl: int, in_Tmp_2912: int) returns (out_NextMdl: int, out_Tmp_2912: int)
{

  entry:
    out_NextMdl, out_Tmp_2912 := in_NextMdl, in_Tmp_2912;
    goto L99, exit;

  exit:
    return;

  L99:
    assume {:nonnull} in_Irp_78 != 0;
    assume in_Irp_78 > 0;
    goto anon71_Else;

  anon71_Else:
    assume {:nonnull} in_Irp_78 != 0;
    assume in_Irp_78 > 0;
    havoc out_Tmp_2912;
    assume {:nonnull} out_Tmp_2912 != 0;
    assume out_Tmp_2912 > 0;
    havoc out_NextMdl;
    call {:si_unique_call 5172} MmUnlockPages(0);
    call {:si_unique_call 5173} IoFreeMdl(0);
    assume {:nonnull} in_Irp_78 != 0;
    assume in_Irp_78 > 0;
    goto anon71_Else_dummy;

  anon71_Else_dummy:
    call {:si_unique_call 5174} {:si_old_unique_call 1} out_NextMdl, out_Tmp_2912 := FatMarkVolume#1_loop_L99(in_Irp_78, out_NextMdl, out_Tmp_2912);
    return;
}



procedure {:LoopProcedure} FatMarkVolume#1_loop_L99(in_Irp_78: int, in_NextMdl: int, in_Tmp_2912: int) returns (out_NextMdl: int, out_Tmp_2912: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:SIextraRecBound 2} FatMarkVolume#1_loop_L22(in_Tmp_2909: int, in_Offset_8: int, in_Irp_78: int, in_abort: int, in_Tmp_2910: int, in_Tmp_2911: int, in_PinLength: int, in_NextMdl: int, in_Status_79: int, in_Tmp_2912: int, in_sdv_1637: int, in_Bcb_25: int, in_ThisPass: int, in_Tmp_2913: int, in_Event_13: int, in_Tmp_2914: int, in_Tmp_2915: int, in_Tmp_2916: int, in_sdv_1639: int, in_Tmp_2918: int, in_WriteLength_1: int, in_FsInfoUpdate: int, in_Tmp_2919: int, in_FsInfoSector: int, in_Tmp_2920: int, in_CurrentHead: int, in_Sector: int, in_Vcb_109: int, in_VolumeState_1: int, in_vslice_dummy_var_588: int, in_vslice_dummy_var_589: int) returns (out_Tmp_2909: int, out_Irp_78: int, out_abort: int, out_Tmp_2910: int, out_Tmp_2911: int, out_PinLength: int, out_NextMdl: int, out_Status_79: int, out_Tmp_2912: int, out_sdv_1637: int, out_Bcb_25: int, out_ThisPass: int, out_Tmp_2913: int, out_Tmp_2914: int, out_Tmp_2915: int, out_Tmp_2916: int, out_sdv_1639: int, out_Tmp_2918: int, out_WriteLength_1: int, out_FsInfoUpdate: int, out_Tmp_2919: int, out_FsInfoSector: int, out_Tmp_2920: int, out_CurrentHead: int, out_vslice_dummy_var_588: int, out_vslice_dummy_var_589: int)
{
  var vslice_dummy_var_1841: int;

  entry:
    out_Tmp_2909, out_Irp_78, out_abort, out_Tmp_2910, out_Tmp_2911, out_PinLength, out_NextMdl, out_Status_79, out_Tmp_2912, out_sdv_1637, out_Bcb_25, out_ThisPass, out_Tmp_2913, out_Tmp_2914, out_Tmp_2915, out_Tmp_2916, out_sdv_1639, out_Tmp_2918, out_WriteLength_1, out_FsInfoUpdate, out_Tmp_2919, out_FsInfoSector, out_Tmp_2920, out_CurrentHead, out_vslice_dummy_var_588, out_vslice_dummy_var_589 := in_Tmp_2909, in_Irp_78, in_abort, in_Tmp_2910, in_Tmp_2911, in_PinLength, in_NextMdl, in_Status_79, in_Tmp_2912, in_sdv_1637, in_Bcb_25, in_ThisPass, in_Tmp_2913, in_Tmp_2914, in_Tmp_2915, in_Tmp_2916, in_sdv_1639, in_Tmp_2918, in_WriteLength_1, in_FsInfoUpdate, in_Tmp_2919, in_FsInfoSector, in_Tmp_2920, in_CurrentHead, in_vslice_dummy_var_588, in_vslice_dummy_var_589;
    goto L22, exit;

  exit:
    return;

  L22:
    assume {:CounterLoop 2} {:Counter "ThisPass"} true;
    goto anon58_Else;

  anon58_Else:
    assume {:partition} 2 > out_ThisPass;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_ThisPass != 1;
    goto L32;

  L32:
    assume {:nonnull} in_Offset_8 != 0;
    assume in_Offset_8 > 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2911 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} out_Tmp_2911 != 0;
    assume out_Tmp_2911 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2914 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2916 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} out_Tmp_2914 != 0;
    assume out_Tmp_2914 > 0;
    assume {:nonnull} out_Tmp_2916 != 0;
    assume out_Tmp_2916 > 0;
    havoc out_Tmp_2910;
    goto L38;

  L38:
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2918 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2919 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} out_Tmp_2918 != 0;
    assume out_Tmp_2918 > 0;
    assume {:nonnull} out_Tmp_2919 != 0;
    assume out_Tmp_2919 > 0;
    havoc out_PinLength;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    havoc out_WriteLength_1;
    goto L40;

  L40:
    call {:si_unique_call 5178} out_vslice_dummy_var_588 := corral_nondet();
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} out_ThisPass == 0;
    call {:si_unique_call 5177} out_sdv_1637 := FatIsBootSectorFat(in_Sector);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} out_sdv_1637 != 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    out_Tmp_2909 := in_Sector;
    assume {:nonnull} out_Tmp_2909 != 0;
    assume out_Tmp_2909 > 0;
    out_CurrentHead := CurrentHead__PACKED_BOOT_SECTOR_EX(out_Tmp_2909);
    goto L126;

  L126:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} in_VolumeState_1 != 0;
    assume {:nonnull} out_CurrentHead != 0;
    assume out_CurrentHead > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} in_VolumeState_1 == 2;
    assume {:nonnull} out_CurrentHead != 0;
    assume out_CurrentHead > 0;
    goto L65;

  L65:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_FsInfoUpdate != 0;
    out_FsInfoSector := in_Sector;
    assume {:nonnull} out_FsInfoSector != 0;
    assume out_FsInfoSector > 0;
    assume {:nonnull} out_FsInfoSector != 0;
    assume out_FsInfoSector > 0;
    assume {:nonnull} out_FsInfoSector != 0;
    assume out_FsInfoSector > 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    assume {:nonnull} out_FsInfoSector != 0;
    assume out_FsInfoSector > 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    assume {:nonnull} out_FsInfoSector != 0;
    assume out_FsInfoSector > 0;
    goto L66;

  L66:
    call {:si_unique_call 5182} KeInitializeEvent(in_Event_13, 0, 0);
    call {:si_unique_call 5183} out_Irp_78 := IoBuildAsynchronousFsdRequest(4, 0, 0, out_WriteLength_1, 0, 0);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} out_Irp_78 == 0;
    goto L94;

  L94:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} out_Irp_78 != 0;
    goto L99;

  L99:
    call {:si_unique_call 5184} out_NextMdl, out_Tmp_2912 := FatMarkVolume#1_loop_L99(out_Irp_78, out_NextMdl, out_Tmp_2912);
    goto L99_last;

  L99_last:
    assume {:nonnull} out_Irp_78 != 0;
    assume out_Irp_78 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} out_Irp_78 != 0;
    assume out_Irp_78 > 0;
    havoc out_Tmp_2912;
    assume {:nonnull} out_Tmp_2912 != 0;
    assume out_Tmp_2912 > 0;
    havoc out_NextMdl;
    call {:si_unique_call 5185} MmUnlockPages(0);
    call {:si_unique_call 5186} IoFreeMdl(0);
    assume {:nonnull} out_Irp_78 != 0;
    assume out_Irp_78 > 0;
    assume false;
    return;

  anon71_Then:
    call {:si_unique_call 5175} IoFreeIrp(0);
    goto L98;

  L98:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} out_Bcb_25 != 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} out_Bcb_25 != 0;
    out_Bcb_25 := 0;
    goto L112;

  L112:
    out_ThisPass := out_ThisPass + 1;
    goto L112_dummy;

  L112_dummy:
    call {:si_unique_call 5187} {:si_old_unique_call 1} out_Tmp_2909, out_Irp_78, out_abort, out_Tmp_2910, out_Tmp_2911, out_PinLength, out_NextMdl, out_Status_79, out_Tmp_2912, out_sdv_1637, out_Bcb_25, out_ThisPass, out_Tmp_2913, out_Tmp_2914, out_Tmp_2915, out_Tmp_2916, out_sdv_1639, out_Tmp_2918, out_WriteLength_1, out_FsInfoUpdate, out_Tmp_2919, out_FsInfoSector, out_Tmp_2920, out_CurrentHead, out_vslice_dummy_var_588, out_vslice_dummy_var_589 := FatMarkVolume#1_loop_L22(out_Tmp_2909, in_Offset_8, out_Irp_78, out_abort, out_Tmp_2910, out_Tmp_2911, out_PinLength, out_NextMdl, out_Status_79, out_Tmp_2912, out_sdv_1637, out_Bcb_25, out_ThisPass, out_Tmp_2913, in_Event_13, out_Tmp_2914, out_Tmp_2915, out_Tmp_2916, out_sdv_1639, out_Tmp_2918, out_WriteLength_1, out_FsInfoUpdate, out_Tmp_2919, out_FsInfoSector, out_Tmp_2920, out_CurrentHead, in_Sector, in_Vcb_109, in_VolumeState_1, out_vslice_dummy_var_588, out_vslice_dummy_var_589);
    return;

  anon72_Then:
    assume {:partition} out_Bcb_25 == 0;
    goto L112;

  anon70_Then:
    assume {:partition} out_Bcb_25 == 0;
    goto L112;

  anon69_Then:
    assume {:partition} out_Irp_78 == 0;
    goto L98;

  anon67_Then:
    assume {:partition} out_Irp_78 != 0;
    call {:si_unique_call 5179} out_sdv_1639 := sdv_IoGetNextIrpStackLocation(out_Irp_78);
    assume {:nonnull} out_sdv_1639 != 0;
    assume out_sdv_1639 > 0;
    call {:si_unique_call 5180} sdv_IoSetCompletionRoutine(out_Irp_78, li2bplFunctionConstant600, in_Event_13, 1, 1, 1);
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    havoc vslice_dummy_var_1841;
    call {:si_unique_call 5181} out_Status_79 := sdv_IoCallDriver(vslice_dummy_var_1841, out_Irp_78);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} out_Status_79 == 259;
    call {:si_unique_call 5176} out_vslice_dummy_var_589 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L94;

  anon68_Then:
    assume {:partition} out_Status_79 != 259;
    goto L94;

  anon66_Then:
    assume {:partition} out_FsInfoUpdate == 0;
    goto L66;

  anon83_Then:
    assume {:partition} in_VolumeState_1 != 2;
    goto L65;

  anon75_Then:
    assume {:partition} in_VolumeState_1 == 0;
    assume {:nonnull} out_CurrentHead != 0;
    assume out_CurrentHead > 0;
    goto L65;

  anon74_Then:
    out_Tmp_2920 := in_Sector;
    assume {:nonnull} out_Tmp_2920 != 0;
    assume out_Tmp_2920 > 0;
    out_CurrentHead := CurrentHead__PACKED_BOOT_SECTOR(out_Tmp_2920);
    goto L126;

  anon73_Then:
    assume {:partition} out_sdv_1637 == 0;
    out_abort := 1;
    goto L94;

  anon65_Then:
    assume {:partition} out_ThisPass != 0;
    goto L65;

  anon82_Then:
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2915 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    out_Tmp_2913 := Bpb__VCB(in_Vcb_109);
    assume {:nonnull} out_Tmp_2913 != 0;
    assume out_Tmp_2913 > 0;
    assume {:nonnull} out_Tmp_2915 != 0;
    assume out_Tmp_2915 > 0;
    havoc out_Tmp_2910;
    goto L38;

  anon81_Then:
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    havoc out_PinLength;
    out_WriteLength_1 := out_PinLength;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} in_VolumeState_1 == 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    out_FsInfoUpdate := 1;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    havoc out_PinLength;
    out_WriteLength_1 := out_PinLength;
    goto L40;

  anon77_Then:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} out_ThisPass == 1;
    out_FsInfoUpdate := 1;
    assume {:nonnull} in_Offset_8 != 0;
    assume in_Offset_8 > 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto L40;

  anon78_Then:
    assume {:partition} out_ThisPass != 1;
    goto L40;

  anon76_Then:
    assume {:partition} in_VolumeState_1 != 0;
    goto L40;

  anon84_Then:
    goto L40;

  anon60_Then:
    assume {:partition} out_ThisPass == 1;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon61_Else;

  anon61_Else:
    goto anon62_Else;

  anon62_Else:
    assume {:partition} in_VolumeState_1 == 0;
    goto anon63_Else;

  anon63_Else:
    assume {:partition} out_FsInfoUpdate == 0;
    assume {:nonnull} in_Vcb_109 != 0;
    assume in_Vcb_109 > 0;
    goto anon64_Else;

  anon64_Else:
    goto L32;
}



procedure {:LoopProcedure} FatMarkVolume#1_loop_L22(in_Tmp_2909: int, in_Offset_8: int, in_Irp_78: int, in_abort: int, in_Tmp_2910: int, in_Tmp_2911: int, in_PinLength: int, in_NextMdl: int, in_Status_79: int, in_Tmp_2912: int, in_sdv_1637: int, in_Bcb_25: int, in_ThisPass: int, in_Tmp_2913: int, in_Event_13: int, in_Tmp_2914: int, in_Tmp_2915: int, in_Tmp_2916: int, in_sdv_1639: int, in_Tmp_2918: int, in_WriteLength_1: int, in_FsInfoUpdate: int, in_Tmp_2919: int, in_FsInfoSector: int, in_Tmp_2920: int, in_CurrentHead: int, in_Sector: int, in_Vcb_109: int, in_VolumeState_1: int, in_vslice_dummy_var_588: int, in_vslice_dummy_var_589: int) returns (out_Tmp_2909: int, out_Irp_78: int, out_abort: int, out_Tmp_2910: int, out_Tmp_2911: int, out_PinLength: int, out_NextMdl: int, out_Status_79: int, out_Tmp_2912: int, out_sdv_1637: int, out_Bcb_25: int, out_ThisPass: int, out_Tmp_2913: int, out_Tmp_2914: int, out_Tmp_2915: int, out_Tmp_2916: int, out_sdv_1639: int, out_Tmp_2918: int, out_WriteLength_1: int, out_FsInfoUpdate: int, out_Tmp_2919: int, out_FsInfoSector: int, out_Tmp_2920: int, out_CurrentHead: int, out_vslice_dummy_var_588: int, out_vslice_dummy_var_589: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_2909 == in_Tmp_2909 || out_Tmp_2909 == in_Sector;
  free ensures {:va_keep} out_abort == 1 || out_abort == in_abort;
  free ensures {:va_keep} out_Tmp_2911 == in_Tmp_2911 || out_Tmp_2911 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_Status_79 == 259 || out_Status_79 == in_Status_79;
  free ensures {:va_keep} out_sdv_1637 == 0 || out_sdv_1637 == 1 || out_sdv_1637 == in_sdv_1637;
  free ensures {:va_keep} out_Bcb_25 == 0 || out_Bcb_25 == in_Bcb_25;
  free ensures {:va_keep} out_Tmp_2913 == in_Tmp_2913 || out_Tmp_2913 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_Tmp_2914 == in_Tmp_2914 || out_Tmp_2914 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_Tmp_2915 == in_Tmp_2915 || out_Tmp_2915 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_Tmp_2916 == in_Tmp_2916 || out_Tmp_2916 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_Tmp_2918 == in_Tmp_2918 || out_Tmp_2918 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_FsInfoUpdate == 1 || out_FsInfoUpdate == in_FsInfoUpdate;
  free ensures {:va_keep} out_Tmp_2919 == in_Tmp_2919 || out_Tmp_2919 == Bpb__VCB(in_Vcb_109);
  free ensures {:va_keep} out_FsInfoSector == in_FsInfoSector || out_FsInfoSector == in_Sector;
  free ensures {:va_keep} out_Tmp_2920 == in_Tmp_2920 || out_Tmp_2920 == in_Sector;
  free ensures {:va_keep} out_CurrentHead == in_CurrentHead || out_CurrentHead == CurrentHead__PACKED_BOOT_SECTOR_EX(in_Sector) || out_CurrentHead == CurrentHead__PACKED_BOOT_SECTOR(in_Sector);
  free ensures {:va_keep} out_vslice_dummy_var_589 == 258 || out_vslice_dummy_var_589 == 0 || out_vslice_dummy_var_589 == in_vslice_dummy_var_589;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatLookupFileAllocation#0_loop_L46(in_BytesOnVolume: int, in_Tmp_257: int, in_CurrentLbo: int, in_Tmp_258: int, in_Runs: int, in_Context: int, in_sdv_124: int, in_LastCluster: int, in_Vcb_15: int, in_FatEntry_1: int, in_FirstLboOfCurrentRun: int, in_FirstVboOfCurrentRun: int, in_CurrentVbo: int, in_BytesPerCluster_1: int, in_PriorLbo: int, in_IrpContext_22: int, in_FcbOrDcb: int, in_Vbo: int, in_EndOnMax: int, in_boogieTmp: int, in_vslice_dummy_var_603: int, in_vslice_dummy_var_604: int) returns (out_Tmp_257: int, out_Tmp_258: int, out_sdv_124: int, out_LastCluster: int, out_FirstLboOfCurrentRun: int, out_FirstVboOfCurrentRun: int, out_PriorLbo: int, out_boogieTmp: int, out_vslice_dummy_var_603: int, out_vslice_dummy_var_604: int)
{
  var vslice_dummy_var_1842: int;
  var vslice_dummy_var_1843: int;

  entry:
    out_Tmp_257, out_Tmp_258, out_sdv_124, out_LastCluster, out_FirstLboOfCurrentRun, out_FirstVboOfCurrentRun, out_PriorLbo, out_boogieTmp, out_vslice_dummy_var_603, out_vslice_dummy_var_604 := in_Tmp_257, in_Tmp_258, in_sdv_124, in_LastCluster, in_FirstLboOfCurrentRun, in_FirstVboOfCurrentRun, in_PriorLbo, in_boogieTmp, in_vslice_dummy_var_603, in_vslice_dummy_var_604;
    goto L46, exit;

  exit:
    return;

  L46:
    goto anon52_Then;

  anon52_Then:
    assume {:partition} out_LastCluster == 0;
    assume {:nonnull} in_FatEntry_1 != 0;
    assume in_FatEntry_1 > 0;
    havoc vslice_dummy_var_1842;
    call {:si_unique_call 5191} FatLookupFatEntry(in_IrpContext_22, in_Vcb_15, vslice_dummy_var_1842, in_FatEntry_1, in_Context);
    assume {:nonnull} in_CurrentLbo != 0;
    assume in_CurrentLbo > 0;
    havoc out_PriorLbo;
    assume {:nonnull} in_CurrentLbo != 0;
    assume in_CurrentLbo > 0;
    call {:si_unique_call 5192} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    assume {:nonnull} in_FatEntry_1 != 0;
    assume in_FatEntry_1 > 0;
    havoc vslice_dummy_var_1843;
    call {:si_unique_call 5193} out_sdv_124 := FatInterpretClusterType(in_Vcb_15, vslice_dummy_var_1843);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} out_sdv_124 != 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} out_sdv_124 != 1;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} out_sdv_124 != 2;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_sdv_124 != 3;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} out_sdv_124 == 4;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} in_BytesOnVolume != 0;
    assume in_BytesOnVolume > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L86;

  L86:
    assume {:nonnull} in_CurrentLbo != 0;
    assume in_CurrentLbo > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_FirstLboOfCurrentRun != 0;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    havoc out_Tmp_258;
    assume {:nonnull} in_FcbOrDcb != 0;
    assume in_FcbOrDcb > 0;
    call {:si_unique_call 5188} out_vslice_dummy_var_604 := FatAddMcbEntry(in_Vcb_15, Mcb__FCB(in_FcbOrDcb), out_FirstVboOfCurrentRun, out_FirstLboOfCurrentRun, out_Tmp_258);
    assume {:nonnull} in_Runs != 0;
    assume in_Runs > 0;
    goto L89;

  L89:
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    out_LastCluster := 1;
    goto anon61_Else_dummy;

  anon61_Else_dummy:
    goto L_BAF_15;

  L_BAF_15:
    call {:si_unique_call 5198} {:si_old_unique_call 1} out_Tmp_257, out_Tmp_258, out_sdv_124, out_LastCluster, out_FirstLboOfCurrentRun, out_FirstVboOfCurrentRun, out_PriorLbo, out_boogieTmp, out_vslice_dummy_var_603, out_vslice_dummy_var_604 := FatLookupFileAllocation#0_loop_L46(in_BytesOnVolume, out_Tmp_257, in_CurrentLbo, out_Tmp_258, in_Runs, in_Context, out_sdv_124, out_LastCluster, in_Vcb_15, in_FatEntry_1, out_FirstLboOfCurrentRun, out_FirstVboOfCurrentRun, in_CurrentVbo, in_BytesPerCluster_1, out_PriorLbo, in_IrpContext_22, in_FcbOrDcb, in_Vbo, in_EndOnMax, out_boogieTmp, out_vslice_dummy_var_603, out_vslice_dummy_var_604);
    return;

  anon61_Then:
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    havoc out_FirstVboOfCurrentRun;
    assume {:nonnull} in_CurrentLbo != 0;
    assume in_CurrentLbo > 0;
    havoc out_FirstLboOfCurrentRun;
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    goto L_BAF_15;

  anon60_Then:
    assume {:partition} out_FirstLboOfCurrentRun == 0;
    goto L89;

  anon59_Then:
    goto anon59_Then_dummy;

  anon59_Then_dummy:
    goto L_BAF_15;

  anon57_Then:
    assume {:nonnull} in_BytesOnVolume != 0;
    assume in_BytesOnVolume > 0;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L86;

  anon58_Then:
    goto L81;

  L81:
    call {:si_unique_call 5189} FatPopUpFileCorrupt#0(in_IrpContext_22, in_FcbOrDcb);
    assume {:nonnull} in_IrpContext_22 != 0;
    assume in_IrpContext_22 > 0;
    call {:si_unique_call 5190} ExRaiseStatus(-1073741566);
    goto L86;

  anon56_Then:
    goto L81;

  anon65_Then:
    assume {:partition} out_sdv_124 != 4;
    call {:si_unique_call 5194} KeBugCheckEx(35, 132170, 0, 0, 0);
    goto anon65_Then_dummy;

  anon65_Then_dummy:
    goto L_BAF_15;

  anon66_Then:
    assume {:partition} out_sdv_124 == 3;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L103;

  L103:
    out_LastCluster := 1;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} out_FirstLboOfCurrentRun != 0;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    havoc out_Tmp_257;
    assume {:nonnull} in_FcbOrDcb != 0;
    assume in_FcbOrDcb > 0;
    call {:si_unique_call 5195} out_vslice_dummy_var_603 := FatAddMcbEntry(in_Vcb_15, Mcb__FCB(in_FcbOrDcb), out_FirstVboOfCurrentRun, out_FirstLboOfCurrentRun, out_Tmp_257);
    assume {:nonnull} in_Runs != 0;
    assume in_Runs > 0;
    goto L105;

  L105:
    goto anon62_Then;

  anon62_Then:
    assume {:partition} in_Vbo != -2;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} in_EndOnMax != 0;
    assume in_EndOnMax > 0;
    goto anon64_Then;

  anon64_Then:
    goto anon64_Then_dummy;

  anon64_Then_dummy:
    goto L_BAF_15;

  anon63_Then:
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    goto L_BAF_15;

  anon72_Then:
    assume {:partition} out_FirstLboOfCurrentRun == 0;
    goto L105;

  anon55_Then:
    assume {:nonnull} in_EndOnMax != 0;
    assume in_EndOnMax > 0;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto L103;

  anon67_Then:
    assume {:partition} out_sdv_124 == 2;
    goto L76;

  L76:
    call {:si_unique_call 5196} FatPopUpFileCorrupt#0(in_IrpContext_22, in_FcbOrDcb);
    assume {:nonnull} in_IrpContext_22 != 0;
    assume in_IrpContext_22 > 0;
    call {:si_unique_call 5197} ExRaiseStatus(-1073741566);
    goto L76_dummy;

  L76_dummy:
    goto L_BAF_15;

  anon68_Then:
    assume {:partition} out_sdv_124 == 1;
    goto L76;

  anon54_Then:
    assume {:partition} out_sdv_124 == 0;
    goto L76;
}



procedure {:LoopProcedure} FatLookupFileAllocation#0_loop_L46(in_BytesOnVolume: int, in_Tmp_257: int, in_CurrentLbo: int, in_Tmp_258: int, in_Runs: int, in_Context: int, in_sdv_124: int, in_LastCluster: int, in_Vcb_15: int, in_FatEntry_1: int, in_FirstLboOfCurrentRun: int, in_FirstVboOfCurrentRun: int, in_CurrentVbo: int, in_BytesPerCluster_1: int, in_PriorLbo: int, in_IrpContext_22: int, in_FcbOrDcb: int, in_Vbo: int, in_EndOnMax: int, in_boogieTmp: int, in_vslice_dummy_var_603: int, in_vslice_dummy_var_604: int) returns (out_Tmp_257: int, out_Tmp_258: int, out_sdv_124: int, out_LastCluster: int, out_FirstLboOfCurrentRun: int, out_FirstVboOfCurrentRun: int, out_PriorLbo: int, out_boogieTmp: int, out_vslice_dummy_var_603: int, out_vslice_dummy_var_604: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} out_sdv_124 == 4 || out_sdv_124 == 1 || out_sdv_124 == 2 || out_sdv_124 == 3 || out_sdv_124 == 0 || out_sdv_124 == in_sdv_124;
  free ensures {:va_keep} out_LastCluster == 1 || out_LastCluster == in_LastCluster;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatLookupFileAllocation#1_loop_L46(in_BytesOnVolume: int, in_Tmp_257: int, in_CurrentLbo: int, in_Tmp_258: int, in_Runs: int, in_Context: int, in_sdv_124: int, in_LastCluster: int, in_Vcb_15: int, in_FatEntry_1: int, in_FirstLboOfCurrentRun: int, in_FirstVboOfCurrentRun: int, in_CurrentVbo: int, in_BytesPerCluster_1: int, in_PriorLbo: int, in_IrpContext_22: int, in_FcbOrDcb: int, in_Vbo: int, in_EndOnMax: int, in_boogieTmp: int, in_vslice_dummy_var_606: int, in_vslice_dummy_var_607: int) returns (out_Tmp_257: int, out_Tmp_258: int, out_sdv_124: int, out_LastCluster: int, out_FirstLboOfCurrentRun: int, out_FirstVboOfCurrentRun: int, out_PriorLbo: int, out_boogieTmp: int, out_vslice_dummy_var_606: int, out_vslice_dummy_var_607: int)
{
  var vslice_dummy_var_1844: int;
  var vslice_dummy_var_1845: int;

  entry:
    out_Tmp_257, out_Tmp_258, out_sdv_124, out_LastCluster, out_FirstLboOfCurrentRun, out_FirstVboOfCurrentRun, out_PriorLbo, out_boogieTmp, out_vslice_dummy_var_606, out_vslice_dummy_var_607 := in_Tmp_257, in_Tmp_258, in_sdv_124, in_LastCluster, in_FirstLboOfCurrentRun, in_FirstVboOfCurrentRun, in_PriorLbo, in_boogieTmp, in_vslice_dummy_var_606, in_vslice_dummy_var_607;
    goto L46, exit;

  exit:
    return;

  L46:
    goto anon52_Then;

  anon52_Then:
    assume {:partition} out_LastCluster == 0;
    assume {:nonnull} in_FatEntry_1 != 0;
    assume in_FatEntry_1 > 0;
    havoc vslice_dummy_var_1844;
    call {:si_unique_call 5202} FatLookupFatEntry(in_IrpContext_22, in_Vcb_15, vslice_dummy_var_1844, in_FatEntry_1, in_Context);
    assume {:nonnull} in_CurrentLbo != 0;
    assume in_CurrentLbo > 0;
    havoc out_PriorLbo;
    assume {:nonnull} in_CurrentLbo != 0;
    assume in_CurrentLbo > 0;
    call {:si_unique_call 5203} out_boogieTmp := corral_nondet();
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    assume {:nonnull} in_FatEntry_1 != 0;
    assume in_FatEntry_1 > 0;
    havoc vslice_dummy_var_1845;
    call {:si_unique_call 5204} out_sdv_124 := FatInterpretClusterType(in_Vcb_15, vslice_dummy_var_1845);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} out_sdv_124 != 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} out_sdv_124 != 1;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} out_sdv_124 != 2;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_sdv_124 != 3;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} out_sdv_124 == 4;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} in_BytesOnVolume != 0;
    assume in_BytesOnVolume > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L86;

  L86:
    assume {:nonnull} in_CurrentLbo != 0;
    assume in_CurrentLbo > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_FirstLboOfCurrentRun != 0;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    havoc out_Tmp_258;
    assume {:nonnull} in_FcbOrDcb != 0;
    assume in_FcbOrDcb > 0;
    call {:si_unique_call 5199} out_vslice_dummy_var_607 := FatAddMcbEntry(in_Vcb_15, Mcb__FCB(in_FcbOrDcb), out_FirstVboOfCurrentRun, out_FirstLboOfCurrentRun, out_Tmp_258);
    assume {:nonnull} in_Runs != 0;
    assume in_Runs > 0;
    goto L89;

  L89:
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    out_LastCluster := 1;
    goto anon61_Else_dummy;

  anon61_Else_dummy:
    goto L_BAF_16;

  L_BAF_16:
    call {:si_unique_call 5209} {:si_old_unique_call 1} out_Tmp_257, out_Tmp_258, out_sdv_124, out_LastCluster, out_FirstLboOfCurrentRun, out_FirstVboOfCurrentRun, out_PriorLbo, out_boogieTmp, out_vslice_dummy_var_606, out_vslice_dummy_var_607 := FatLookupFileAllocation#1_loop_L46(in_BytesOnVolume, out_Tmp_257, in_CurrentLbo, out_Tmp_258, in_Runs, in_Context, out_sdv_124, out_LastCluster, in_Vcb_15, in_FatEntry_1, out_FirstLboOfCurrentRun, out_FirstVboOfCurrentRun, in_CurrentVbo, in_BytesPerCluster_1, out_PriorLbo, in_IrpContext_22, in_FcbOrDcb, in_Vbo, in_EndOnMax, out_boogieTmp, out_vslice_dummy_var_606, out_vslice_dummy_var_607);
    return;

  anon61_Then:
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    havoc out_FirstVboOfCurrentRun;
    assume {:nonnull} in_CurrentLbo != 0;
    assume in_CurrentLbo > 0;
    havoc out_FirstLboOfCurrentRun;
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    goto L_BAF_16;

  anon60_Then:
    assume {:partition} out_FirstLboOfCurrentRun == 0;
    goto L89;

  anon59_Then:
    goto anon59_Then_dummy;

  anon59_Then_dummy:
    goto L_BAF_16;

  anon57_Then:
    assume {:nonnull} in_BytesOnVolume != 0;
    assume in_BytesOnVolume > 0;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L86;

  anon58_Then:
    goto L81;

  L81:
    call {:si_unique_call 5200} FatPopUpFileCorrupt#1(in_IrpContext_22, in_FcbOrDcb);
    assume {:nonnull} in_IrpContext_22 != 0;
    assume in_IrpContext_22 > 0;
    call {:si_unique_call 5201} ExRaiseStatus(-1073741566);
    goto L86;

  anon56_Then:
    goto L81;

  anon65_Then:
    assume {:partition} out_sdv_124 != 4;
    call {:si_unique_call 5205} KeBugCheckEx(35, 132170, 0, 0, 0);
    goto anon65_Then_dummy;

  anon65_Then_dummy:
    goto L_BAF_16;

  anon66_Then:
    assume {:partition} out_sdv_124 == 3;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L103;

  L103:
    out_LastCluster := 1;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} out_FirstLboOfCurrentRun != 0;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    havoc out_Tmp_257;
    assume {:nonnull} in_FcbOrDcb != 0;
    assume in_FcbOrDcb > 0;
    call {:si_unique_call 5206} out_vslice_dummy_var_606 := FatAddMcbEntry(in_Vcb_15, Mcb__FCB(in_FcbOrDcb), out_FirstVboOfCurrentRun, out_FirstLboOfCurrentRun, out_Tmp_257);
    assume {:nonnull} in_Runs != 0;
    assume in_Runs > 0;
    goto L105;

  L105:
    goto anon62_Then;

  anon62_Then:
    assume {:partition} in_Vbo != -2;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} in_EndOnMax != 0;
    assume in_EndOnMax > 0;
    goto anon64_Then;

  anon64_Then:
    goto anon64_Then_dummy;

  anon64_Then_dummy:
    goto L_BAF_16;

  anon63_Then:
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    goto L_BAF_16;

  anon72_Then:
    assume {:partition} out_FirstLboOfCurrentRun == 0;
    goto L105;

  anon55_Then:
    assume {:nonnull} in_EndOnMax != 0;
    assume in_EndOnMax > 0;
    assume {:nonnull} in_CurrentVbo != 0;
    assume in_CurrentVbo > 0;
    goto L103;

  anon67_Then:
    assume {:partition} out_sdv_124 == 2;
    goto L76;

  L76:
    call {:si_unique_call 5207} FatPopUpFileCorrupt#1(in_IrpContext_22, in_FcbOrDcb);
    assume {:nonnull} in_IrpContext_22 != 0;
    assume in_IrpContext_22 > 0;
    call {:si_unique_call 5208} ExRaiseStatus(-1073741566);
    goto L76_dummy;

  L76_dummy:
    goto L_BAF_16;

  anon68_Then:
    assume {:partition} out_sdv_124 == 1;
    goto L76;

  anon54_Then:
    assume {:partition} out_sdv_124 == 0;
    goto L76;
}



procedure {:LoopProcedure} FatLookupFileAllocation#1_loop_L46(in_BytesOnVolume: int, in_Tmp_257: int, in_CurrentLbo: int, in_Tmp_258: int, in_Runs: int, in_Context: int, in_sdv_124: int, in_LastCluster: int, in_Vcb_15: int, in_FatEntry_1: int, in_FirstLboOfCurrentRun: int, in_FirstVboOfCurrentRun: int, in_CurrentVbo: int, in_BytesPerCluster_1: int, in_PriorLbo: int, in_IrpContext_22: int, in_FcbOrDcb: int, in_Vbo: int, in_EndOnMax: int, in_boogieTmp: int, in_vslice_dummy_var_606: int, in_vslice_dummy_var_607: int) returns (out_Tmp_257: int, out_Tmp_258: int, out_sdv_124: int, out_LastCluster: int, out_FirstLboOfCurrentRun: int, out_FirstVboOfCurrentRun: int, out_PriorLbo: int, out_boogieTmp: int, out_vslice_dummy_var_606: int, out_vslice_dummy_var_607: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} out_sdv_124 == 4 || out_sdv_124 == 1 || out_sdv_124 == 2 || out_sdv_124 == 3 || out_sdv_124 == 0 || out_sdv_124 == in_sdv_124;
  free ensures {:va_keep} out_LastCluster == 1 || out_LastCluster == in_LastCluster;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFullFileNameInFcb#0_loop_L53(in_TmpFcb: int, in_Lfn_8: int, in_Tmp_2254: int, in_StopFcb: int, in_TmpBuffer: int, in_IrpContext_140: int) returns (out_TmpFcb: int, out_Tmp_2254: int)
{

  entry:
    out_TmpFcb, out_Tmp_2254 := in_TmpFcb, in_Tmp_2254;
    goto L53, exit;

  exit:
    return;

  L53:
    goto anon21_Else;

  anon21_Else:
    assume {:partition} out_TmpFcb != in_StopFcb;
    call {:si_unique_call 5210} FatGetUnicodeNameFromFcb#0(in_IrpContext_140, out_TmpFcb, in_Lfn_8);
    assume {:nonnull} in_Lfn_8 != 0;
    assume in_Lfn_8 > 0;
    havoc out_Tmp_2254;
    call {:si_unique_call 5211} sdv_RtlCopyMemory(0, 0, out_Tmp_2254);
    assume {:nonnull} in_TmpBuffer != 0;
    assume in_TmpBuffer > 0;
    assume {:nonnull} out_TmpFcb != 0;
    assume out_TmpFcb > 0;
    havoc out_TmpFcb;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 5212} {:si_old_unique_call 1} out_TmpFcb, out_Tmp_2254 := FatSetFullFileNameInFcb#0_loop_L53(out_TmpFcb, in_Lfn_8, out_Tmp_2254, in_StopFcb, in_TmpBuffer, in_IrpContext_140);
    return;
}



procedure {:LoopProcedure} FatSetFullFileNameInFcb#0_loop_L53(in_TmpFcb: int, in_Lfn_8: int, in_Tmp_2254: int, in_StopFcb: int, in_TmpBuffer: int, in_IrpContext_140: int) returns (out_TmpFcb: int, out_Tmp_2254: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFullFileNameInFcb#0_loop_L17(in_PathLength: int, in_TmpFcb: int, in_Tmp_2256: int, in_Fcb_56: int) returns (out_PathLength: int, out_TmpFcb: int, out_Tmp_2256: int)
{

  entry:
    out_PathLength, out_TmpFcb, out_Tmp_2256 := in_PathLength, in_TmpFcb, in_Tmp_2256;
    goto L17, exit;

  exit:
    return;

  L17:
    assume {:nonnull} in_Fcb_56 != 0;
    assume in_Fcb_56 > 0;
    havoc out_Tmp_2256;
    assume {:nonnull} out_Tmp_2256 != 0;
    assume out_Tmp_2256 > 0;
    goto anon24_Else;

  anon24_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} out_TmpFcb != in_Fcb_56;
    assume {:nonnull} out_TmpFcb != 0;
    assume out_TmpFcb > 0;
    goto anon20_Then;

  anon20_Then:
    goto L20;

  L20:
    assume {:nonnull} out_TmpFcb != 0;
    assume out_TmpFcb > 0;
    havoc out_PathLength;
    assume {:nonnull} out_TmpFcb != 0;
    assume out_TmpFcb > 0;
    havoc out_TmpFcb;
    goto L20_dummy;

  L20_dummy:
    call {:si_unique_call 5213} {:si_old_unique_call 1} out_PathLength, out_TmpFcb, out_Tmp_2256 := FatSetFullFileNameInFcb#0_loop_L17(out_PathLength, out_TmpFcb, out_Tmp_2256, in_Fcb_56);
    return;

  anon19_Then:
    assume {:partition} out_TmpFcb == in_Fcb_56;
    goto L20;
}



procedure {:LoopProcedure} FatSetFullFileNameInFcb#0_loop_L17(in_PathLength: int, in_TmpFcb: int, in_Tmp_2256: int, in_Fcb_56: int) returns (out_PathLength: int, out_TmpFcb: int, out_Tmp_2256: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFullFileNameInFcb#1_loop_L53(in_TmpFcb: int, in_Lfn_8: int, in_Tmp_2254: int, in_StopFcb: int, in_TmpBuffer: int, in_IrpContext_140: int) returns (out_TmpFcb: int, out_Tmp_2254: int)
{

  entry:
    out_TmpFcb, out_Tmp_2254 := in_TmpFcb, in_Tmp_2254;
    goto L53, exit;

  exit:
    return;

  L53:
    goto anon21_Else;

  anon21_Else:
    assume {:partition} out_TmpFcb != in_StopFcb;
    call {:si_unique_call 5214} FatGetUnicodeNameFromFcb#1(in_IrpContext_140, out_TmpFcb, in_Lfn_8);
    assume {:nonnull} in_Lfn_8 != 0;
    assume in_Lfn_8 > 0;
    havoc out_Tmp_2254;
    call {:si_unique_call 5215} sdv_RtlCopyMemory(0, 0, out_Tmp_2254);
    assume {:nonnull} in_TmpBuffer != 0;
    assume in_TmpBuffer > 0;
    assume {:nonnull} out_TmpFcb != 0;
    assume out_TmpFcb > 0;
    havoc out_TmpFcb;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 5216} {:si_old_unique_call 1} out_TmpFcb, out_Tmp_2254 := FatSetFullFileNameInFcb#1_loop_L53(out_TmpFcb, in_Lfn_8, out_Tmp_2254, in_StopFcb, in_TmpBuffer, in_IrpContext_140);
    return;
}



procedure {:LoopProcedure} FatSetFullFileNameInFcb#1_loop_L53(in_TmpFcb: int, in_Lfn_8: int, in_Tmp_2254: int, in_StopFcb: int, in_TmpBuffer: int, in_IrpContext_140: int) returns (out_TmpFcb: int, out_Tmp_2254: int);
  modifies alloc, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatSetFullFileNameInFcb#1_loop_L17(in_PathLength: int, in_TmpFcb: int, in_Tmp_2256: int, in_Fcb_56: int) returns (out_PathLength: int, out_TmpFcb: int, out_Tmp_2256: int)
{

  entry:
    out_PathLength, out_TmpFcb, out_Tmp_2256 := in_PathLength, in_TmpFcb, in_Tmp_2256;
    goto L17, exit;

  exit:
    return;

  L17:
    assume {:nonnull} in_Fcb_56 != 0;
    assume in_Fcb_56 > 0;
    havoc out_Tmp_2256;
    assume {:nonnull} out_Tmp_2256 != 0;
    assume out_Tmp_2256 > 0;
    goto anon24_Else;

  anon24_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} out_TmpFcb != in_Fcb_56;
    assume {:nonnull} out_TmpFcb != 0;
    assume out_TmpFcb > 0;
    goto anon20_Then;

  anon20_Then:
    goto L20;

  L20:
    assume {:nonnull} out_TmpFcb != 0;
    assume out_TmpFcb > 0;
    havoc out_PathLength;
    assume {:nonnull} out_TmpFcb != 0;
    assume out_TmpFcb > 0;
    havoc out_TmpFcb;
    goto L20_dummy;

  L20_dummy:
    call {:si_unique_call 5217} {:si_old_unique_call 1} out_PathLength, out_TmpFcb, out_Tmp_2256 := FatSetFullFileNameInFcb#1_loop_L17(out_PathLength, out_TmpFcb, out_Tmp_2256, in_Fcb_56);
    return;

  anon19_Then:
    assume {:partition} out_TmpFcb == in_Fcb_56;
    goto L20;
}



procedure {:LoopProcedure} FatSetFullFileNameInFcb#1_loop_L17(in_PathLength: int, in_TmpFcb: int, in_Tmp_2256: int, in_Fcb_56: int) returns (out_PathLength: int, out_TmpFcb: int, out_Tmp_2256: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatLocateDirent#0_loop_L132(in_Ordinal: int, in_LfnIndex: int, in_Tmp_2425: int, in_LfnSize: int, in_Tmp_2431: int, in_CheckTail: int, in_Tmp_2456: int, in_Tmp_2461: int, in_LongFileName: int) returns (out_LfnIndex: int, out_Tmp_2425: int, out_LfnSize: int, out_Tmp_2431: int, out_CheckTail: int, out_Tmp_2456: int, out_Tmp_2461: int)
{

  entry:
    out_LfnIndex, out_Tmp_2425, out_LfnSize, out_Tmp_2431, out_CheckTail, out_Tmp_2456, out_Tmp_2461 := in_LfnIndex, in_Tmp_2425, in_LfnSize, in_Tmp_2431, in_CheckTail, in_Tmp_2456, in_Tmp_2461;
    goto L132, exit;

  exit:
    return;

  L132:
    goto anon147_Else;

  anon147_Else:
    assume {:partition} out_LfnIndex != in_Ordinal * 13;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} out_CheckTail != 0;
    out_Tmp_2456 := out_LfnIndex;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2461;
    assume {:nonnull} out_Tmp_2461 != 0;
    assume out_Tmp_2461 > 0;
    goto anon184_Else;

  anon184_Else:
    goto L137;

  L137:
    out_LfnIndex := out_LfnIndex + 1;
    goto L137_dummy;

  L137_dummy:
    call {:si_unique_call 5218} {:si_old_unique_call 1} out_LfnIndex, out_Tmp_2425, out_LfnSize, out_Tmp_2431, out_CheckTail, out_Tmp_2456, out_Tmp_2461 := FatLocateDirent#0_loop_L132(in_Ordinal, out_LfnIndex, out_Tmp_2425, out_LfnSize, out_Tmp_2431, out_CheckTail, out_Tmp_2456, out_Tmp_2461, in_LongFileName);
    return;

  anon149_Then:
    assume {:partition} out_CheckTail == 0;
    out_Tmp_2431 := out_LfnIndex;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2425;
    assume {:nonnull} out_Tmp_2425 != 0;
    assume out_Tmp_2425 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    out_LfnSize := out_LfnIndex;
    out_CheckTail := 1;
    goto L137;

  anon185_Then:
    goto L137;
}



procedure {:LoopProcedure} FatLocateDirent#0_loop_L132(in_Ordinal: int, in_LfnIndex: int, in_Tmp_2425: int, in_LfnSize: int, in_Tmp_2431: int, in_CheckTail: int, in_Tmp_2456: int, in_Tmp_2461: int, in_LongFileName: int) returns (out_LfnIndex: int, out_Tmp_2425: int, out_LfnSize: int, out_Tmp_2431: int, out_CheckTail: int, out_Tmp_2456: int, out_Tmp_2461: int);
  free ensures {:va_keep} out_CheckTail == 1 || out_CheckTail == in_CheckTail;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatLocateDirent#0_loop_L42(in_LfnInProgress: int, in_Tmp_2408: int, in_Ordinal: int, in_LfnByteOffset_4: int, in_Tmp_2409: int, in_Tmp_2410: int, in_Tmp_2411: int, in_Tmp_2412: int, in_Tmp_2413: int, in_Tmp_2415: int, in_Tmp_2416: int, in_LfnChecksum: int, in_Tmp_2417: int, in_Tmp_2420: int, in_Tmp_2421: int, in_Tmp_2422: int, in_Tmp_2423: int, in_Tmp_2424: int, in_LfnIndex: int, in_Tmp_2425: int, in_Tmp_2426: int, in_LfnSize: int, in_Lfn_11: int, in_sdv_1450: int, in_Tmp_2427: int, in_Tmp_2428: int, in_Tmp_2430: int, in_Tmp_2431: int, in_Status_60: int, in_Tmp_2432: int, in_Tmp_2433: int, in_Tmp_2434: int, in_sdv_1451: int, in_Tmp_2435: int, in_Tmp_2436: int, in_Tmp_2439: int, in_Tmp_2441: int, in_CheckTail: int, in_Tmp_2442: int, in_Tmp_2444: int, in_UpcasedLfn: int, in_Tmp_2445: int, in_Tmp_2446: int, in_sdv_1453: int, in_Tmp_2447: int, in_Tmp_2448: int, in_Tmp_2449: int, in_FoundValidLfn: int, in_Tmp_2450: int, in_sdv_1454: int, in_sdv_1455: int, in_Tmp_2451: int, in_Tmp_2452: int, in_Tmp_2453: int, in_Tmp_2456: int, in_Tmp_2458: int, in_Tmp_2459: int, in_Tmp_2460: int, in_Tmp_2461: int, in_Tmp_2462: int, in_Tmp_2464: int, in_Tmp_2466: int, in_Name_3: int, in_Tmp_2467: int, in_Tmp_2468: int, in_Tmp_2469: int, in_Tmp_2470: int, in_Tmp_2472: int, in_Tmp_2473: int, in_IrpContext_153: int, in_ParentDirectory: int, in_Ccb_32: int, in_Dirent_29: int, in_Bcb_17: int, in_ByteOffset_3: int, in_LongFileName: int, in_boogieTmp: int) returns (out_LfnInProgress: int, out_Tmp_2408: int, out_Ordinal: int, out_LfnByteOffset_4: int, out_Tmp_2409: int, out_Tmp_2410: int, out_Tmp_2411: int, out_Tmp_2412: int, out_Tmp_2413: int, out_Tmp_2415: int, out_Tmp_2416: int, out_LfnChecksum: int, out_Tmp_2417: int, out_Tmp_2420: int, out_Tmp_2421: int, out_Tmp_2422: int, out_Tmp_2423: int, out_Tmp_2424: int, out_LfnIndex: int, out_Tmp_2425: int, out_Tmp_2426: int, out_LfnSize: int, out_Lfn_11: int, out_sdv_1450: int, out_Tmp_2427: int, out_Tmp_2428: int, out_Tmp_2430: int, out_Tmp_2431: int, out_Tmp_2432: int, out_Tmp_2433: int, out_Tmp_2434: int, out_sdv_1451: int, out_Tmp_2435: int, out_Tmp_2436: int, out_Tmp_2439: int, out_Tmp_2441: int, out_CheckTail: int, out_Tmp_2442: int, out_Tmp_2444: int, out_Tmp_2445: int, out_Tmp_2446: int, out_sdv_1453: int, out_Tmp_2447: int, out_Tmp_2448: int, out_Tmp_2449: int, out_FoundValidLfn: int, out_Tmp_2450: int, out_sdv_1454: int, out_sdv_1455: int, out_Tmp_2451: int, out_Tmp_2452: int, out_Tmp_2453: int, out_Tmp_2456: int, out_Tmp_2458: int, out_Tmp_2459: int, out_Tmp_2460: int, out_Tmp_2461: int, out_Tmp_2462: int, out_Tmp_2464: int, out_Tmp_2466: int, out_Tmp_2467: int, out_Tmp_2468: int, out_Tmp_2469: int, out_Tmp_2470: int, out_Tmp_2472: int, out_Tmp_2473: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1846: int;
  var vslice_dummy_var_1847: int;

  entry:
    out_LfnInProgress, out_Tmp_2408, out_Ordinal, out_LfnByteOffset_4, out_Tmp_2409, out_Tmp_2410, out_Tmp_2411, out_Tmp_2412, out_Tmp_2413, out_Tmp_2415, out_Tmp_2416, out_LfnChecksum, out_Tmp_2417, out_Tmp_2420, out_Tmp_2421, out_Tmp_2422, out_Tmp_2423, out_Tmp_2424, out_LfnIndex, out_Tmp_2425, out_Tmp_2426, out_LfnSize, out_Lfn_11, out_sdv_1450, out_Tmp_2427, out_Tmp_2428, out_Tmp_2430, out_Tmp_2431, out_Tmp_2432, out_Tmp_2433, out_Tmp_2434, out_sdv_1451, out_Tmp_2435, out_Tmp_2436, out_Tmp_2439, out_Tmp_2441, out_CheckTail, out_Tmp_2442, out_Tmp_2444, out_Tmp_2445, out_Tmp_2446, out_sdv_1453, out_Tmp_2447, out_Tmp_2448, out_Tmp_2449, out_FoundValidLfn, out_Tmp_2450, out_sdv_1454, out_sdv_1455, out_Tmp_2451, out_Tmp_2452, out_Tmp_2453, out_Tmp_2456, out_Tmp_2458, out_Tmp_2459, out_Tmp_2460, out_Tmp_2461, out_Tmp_2462, out_Tmp_2464, out_Tmp_2466, out_Tmp_2467, out_Tmp_2468, out_Tmp_2469, out_Tmp_2470, out_Tmp_2472, out_Tmp_2473, out_boogieTmp := in_LfnInProgress, in_Tmp_2408, in_Ordinal, in_LfnByteOffset_4, in_Tmp_2409, in_Tmp_2410, in_Tmp_2411, in_Tmp_2412, in_Tmp_2413, in_Tmp_2415, in_Tmp_2416, in_LfnChecksum, in_Tmp_2417, in_Tmp_2420, in_Tmp_2421, in_Tmp_2422, in_Tmp_2423, in_Tmp_2424, in_LfnIndex, in_Tmp_2425, in_Tmp_2426, in_LfnSize, in_Lfn_11, in_sdv_1450, in_Tmp_2427, in_Tmp_2428, in_Tmp_2430, in_Tmp_2431, in_Tmp_2432, in_Tmp_2433, in_Tmp_2434, in_sdv_1451, in_Tmp_2435, in_Tmp_2436, in_Tmp_2439, in_Tmp_2441, in_CheckTail, in_Tmp_2442, in_Tmp_2444, in_Tmp_2445, in_Tmp_2446, in_sdv_1453, in_Tmp_2447, in_Tmp_2448, in_Tmp_2449, in_FoundValidLfn, in_Tmp_2450, in_sdv_1454, in_sdv_1455, in_Tmp_2451, in_Tmp_2452, in_Tmp_2453, in_Tmp_2456, in_Tmp_2458, in_Tmp_2459, in_Tmp_2460, in_Tmp_2461, in_Tmp_2462, in_Tmp_2464, in_Tmp_2466, in_Tmp_2467, in_Tmp_2468, in_Tmp_2469, in_Tmp_2470, in_Tmp_2472, in_Tmp_2473, in_boogieTmp;
    goto L42, exit;

  exit:
    return;

  L42:
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    assume {:nonnull} in_ParentDirectory != 0;
    assume in_ParentDirectory > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} in_Status_60 != 0;
    assume in_Status_60 > 0;
    assume {:nonnull} in_Bcb_17 != 0;
    assume in_Bcb_17 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:nonnull} in_Bcb_17 != 0;
    assume in_Bcb_17 > 0;
    goto L46;

  L46:
    assume {:nonnull} in_Status_60 != 0;
    assume in_Status_60 > 0;
    goto anon135_Then;

  anon135_Then:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2409 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2409 != 0;
    assume out_Tmp_2409 > 0;
    havoc out_Tmp_2460;
    assume {:nonnull} out_Tmp_2460 != 0;
    assume out_Tmp_2460 > 0;
    goto anon178_Else;

  anon178_Else:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2428 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2428 != 0;
    assume out_Tmp_2428 > 0;
    havoc out_Tmp_2444;
    assume {:nonnull} out_Tmp_2444 != 0;
    assume out_Tmp_2444 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    out_LfnInProgress := 0;
    goto L67;

  L67:
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_29] := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    goto L67_dummy;

  L67_dummy:
    call {:si_unique_call 5238} {:si_old_unique_call 1} out_LfnInProgress, out_Tmp_2408, out_Ordinal, out_LfnByteOffset_4, out_Tmp_2409, out_Tmp_2410, out_Tmp_2411, out_Tmp_2412, out_Tmp_2413, out_Tmp_2415, out_Tmp_2416, out_LfnChecksum, out_Tmp_2417, out_Tmp_2420, out_Tmp_2421, out_Tmp_2422, out_Tmp_2423, out_Tmp_2424, out_LfnIndex, out_Tmp_2425, out_Tmp_2426, out_LfnSize, out_Lfn_11, out_sdv_1450, out_Tmp_2427, out_Tmp_2428, out_Tmp_2430, out_Tmp_2431, out_Tmp_2432, out_Tmp_2433, out_Tmp_2434, out_sdv_1451, out_Tmp_2435, out_Tmp_2436, out_Tmp_2439, out_Tmp_2441, out_CheckTail, out_Tmp_2442, out_Tmp_2444, out_Tmp_2445, out_Tmp_2446, out_sdv_1453, out_Tmp_2447, out_Tmp_2448, out_Tmp_2449, out_FoundValidLfn, out_Tmp_2450, out_sdv_1454, out_sdv_1455, out_Tmp_2451, out_Tmp_2452, out_Tmp_2453, out_Tmp_2456, out_Tmp_2458, out_Tmp_2459, out_Tmp_2460, out_Tmp_2461, out_Tmp_2462, out_Tmp_2464, out_Tmp_2466, out_Tmp_2467, out_Tmp_2468, out_Tmp_2469, out_Tmp_2470, out_Tmp_2472, out_Tmp_2473, out_boogieTmp := FatLocateDirent#0_loop_L42(out_LfnInProgress, out_Tmp_2408, out_Ordinal, out_LfnByteOffset_4, out_Tmp_2409, out_Tmp_2410, out_Tmp_2411, out_Tmp_2412, out_Tmp_2413, out_Tmp_2415, out_Tmp_2416, out_LfnChecksum, out_Tmp_2417, out_Tmp_2420, out_Tmp_2421, out_Tmp_2422, out_Tmp_2423, out_Tmp_2424, out_LfnIndex, out_Tmp_2425, out_Tmp_2426, out_LfnSize, out_Lfn_11, out_sdv_1450, out_Tmp_2427, out_Tmp_2428, out_Tmp_2430, out_Tmp_2431, in_Status_60, out_Tmp_2432, out_Tmp_2433, out_Tmp_2434, out_sdv_1451, out_Tmp_2435, out_Tmp_2436, out_Tmp_2439, out_Tmp_2441, out_CheckTail, out_Tmp_2442, out_Tmp_2444, in_UpcasedLfn, out_Tmp_2445, out_Tmp_2446, out_sdv_1453, out_Tmp_2447, out_Tmp_2448, out_Tmp_2449, out_FoundValidLfn, out_Tmp_2450, out_sdv_1454, out_sdv_1455, out_Tmp_2451, out_Tmp_2452, out_Tmp_2453, out_Tmp_2456, out_Tmp_2458, out_Tmp_2459, out_Tmp_2460, out_Tmp_2461, out_Tmp_2462, out_Tmp_2464, out_Tmp_2466, in_Name_3, out_Tmp_2467, out_Tmp_2468, out_Tmp_2469, out_Tmp_2470, out_Tmp_2472, out_Tmp_2473, in_IrpContext_153, in_ParentDirectory, in_Ccb_32, in_Dirent_29, in_Bcb_17, in_ByteOffset_3, in_LongFileName, out_boogieTmp);
    return;

  anon179_Then:
    goto anon137_Then, anon137_Else;

  anon137_Else:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} in_LongFileName != 0;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2451 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2451 != 0;
    assume out_Tmp_2451 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Lfn_11 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} out_LfnInProgress != 0;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L78;

  L78:
    out_LfnInProgress := 0;
    goto L75;

  L75:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} out_LfnInProgress == 0;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2411;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} 20 >= out_Tmp_2411;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    out_CheckTail := 0;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Ordinal;
    goto anon183_Else;

  anon183_Else:
    assume {:partition} out_Ordinal != 0;
    goto L112;

  L112:
    out_LfnIndex := (out_Ordinal - 1) * 13;
    call {:si_unique_call 5233} out_Tmp_2421 := corral_nondet();
    call {:si_unique_call 5234} FatEnsureStringBufferEnough(in_LongFileName, out_Tmp_2421);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2446;
    out_Tmp_2422 := out_LfnIndex + 0;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2450;
    call {:si_unique_call 5235} sdv_RtlCopyMemory(0, 0, 10);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2470;
    out_Tmp_2458 := out_LfnIndex + 5;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2413;
    call {:si_unique_call 5236} sdv_RtlCopyMemory(0, 0, 12);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2432;
    out_Tmp_2462 := out_LfnIndex + 11;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2467;
    call {:si_unique_call 5237} sdv_RtlCopyMemory(0, 0, 4);
    goto L132;

  L132:
    call {:si_unique_call 5232} out_LfnIndex, out_Tmp_2425, out_LfnSize, out_Tmp_2431, out_CheckTail, out_Tmp_2456, out_Tmp_2461 := FatLocateDirent#0_loop_L132(out_Ordinal, out_LfnIndex, out_Tmp_2425, out_LfnSize, out_Tmp_2431, out_CheckTail, out_Tmp_2456, out_Tmp_2461, in_LongFileName);
    goto L132_last;

  L132_last:
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} out_LfnIndex != out_Ordinal * 13;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} out_CheckTail != 0;
    out_Tmp_2456 := out_LfnIndex;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2461;
    assume {:nonnull} out_Tmp_2461 != 0;
    assume out_Tmp_2461 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L137;

  L137:
    out_LfnIndex := out_LfnIndex + 1;
    assume false;
    return;

  anon184_Then:
    goto L133;

  L133:
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} out_LfnIndex == out_Ordinal * 13;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} out_CheckTail != 0;
    goto L143;

  L143:
    out_LfnIndex := out_LfnIndex - 13;
    out_LfnInProgress := 1;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_LfnChecksum;
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    havoc out_LfnByteOffset_4;
    goto L67;

  anon150_Then:
    assume {:partition} out_CheckTail == 0;
    out_LfnSize := out_LfnIndex;
    goto L143;

  anon148_Then:
    assume {:partition} out_LfnIndex != out_Ordinal * 13;
    goto L67;

  anon149_Then:
    assume {:partition} out_CheckTail == 0;
    out_Tmp_2431 := out_LfnIndex;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2425;
    assume {:nonnull} out_Tmp_2425 != 0;
    assume out_Tmp_2425 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    out_LfnSize := out_LfnIndex;
    out_CheckTail := 1;
    goto L137;

  anon185_Then:
    goto L137;

  anon147_Then:
    assume {:partition} out_LfnIndex == out_Ordinal * 13;
    goto L133;

  anon146_Then:
    goto L67;

  anon182_Then:
    assume {:partition} out_Tmp_2411 > 20;
    goto L67;

  anon145_Then:
    goto L67;

  anon139_Then:
    assume {:partition} out_LfnInProgress != 0;
    goto L67;

  anon140_Then:
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    out_LfnIndex := out_LfnIndex - 13;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2433;
    out_Tmp_2430 := out_LfnIndex + 0;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2412;
    call {:si_unique_call 5229} sdv_RtlCopyMemory(0, 0, 10);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2426;
    out_Tmp_2472 := out_LfnIndex + 5;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2435;
    call {:si_unique_call 5230} sdv_RtlCopyMemory(0, 0, 12);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2449;
    out_Tmp_2434 := out_LfnIndex + 11;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2417;
    call {:si_unique_call 5231} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Ordinal;
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    havoc out_LfnByteOffset_4;
    goto L75;

  anon144_Then:
    goto L78;

  anon143_Then:
    goto L78;

  anon142_Then:
    goto L78;

  anon141_Then:
    goto L78;

  anon181_Then:
    assume {:partition} out_LfnInProgress == 0;
    goto L75;

  anon180_Then:
    goto L69;

  L69:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2415 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2415 != 0;
    assume out_Tmp_2415 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon152_Else;

  anon152_Else:
    goto L67;

  anon186_Then:
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} out_LfnInProgress != 0;
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} out_LfnIndex == 0;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    call {:si_unique_call 5220} out_sdv_1450 := FatComputeLfnChecksum(Mem_T.P_PACKED_DIRENT[in_Dirent_29]);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} out_sdv_1450 == out_LfnChecksum;
    out_FoundValidLfn := 1;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    goto L164;

  L164:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon156_Else;

  anon156_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    goto L168;

  L168:
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} out_FoundValidLfn != 0;
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    goto L172;

  L172:
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc vslice_dummy_var_1847;
    call {:si_unique_call 5226} FatEnsureStringBufferEnough(in_UpcasedLfn, vslice_dummy_var_1847);
    assume {:nonnull} in_Status_60 != 0;
    assume in_Status_60 > 0;
    call {:si_unique_call 5227} out_boogieTmp := RtlUpcaseUnicodeString(0, 0, 0);
    assume {:nonnull} in_Status_60 != 0;
    assume in_Status_60 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    goto L181;

  L181:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    call {:si_unique_call 5228} out_sdv_1453 := FsRtlIsNameInExpression(0, 0, 1, 0);
    goto anon165_Else;

  anon165_Else:
    assume {:partition} out_sdv_1453 == 0;
    goto L169;

  L169:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} out_FoundValidLfn != 0;
    out_FoundValidLfn := 0;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    goto L67;

  anon160_Then:
    assume {:partition} out_FoundValidLfn == 0;
    goto L67;

  anon164_Then:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc out_Tmp_2442;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} out_Tmp_2442 == 0;
    out_Tmp_2439 := 0;
    goto L387;

  L387:
    call {:si_unique_call 5223} out_sdv_1455 := FsRtlAreNamesEqual(0, 0, out_Tmp_2439, 0);
    goto anon166_Else;

  anon166_Else:
    assume {:partition} out_sdv_1455 == 0;
    goto L169;

  anon187_Then:
    assume {:partition} out_Tmp_2442 != 0;
    out_Tmp_2439 := 1;
    goto L387;

  anon163_Then:
    assume {:nonnull} in_IrpContext_153 != 0;
    assume in_IrpContext_153 > 0;
    assume {:nonnull} in_Status_60 != 0;
    assume in_Status_60 > 0;
    call {:si_unique_call 5224} out_sdv_1454 := corral_nondet();
    call {:si_unique_call 5225} ExRaiseStatus(out_sdv_1454);
    goto L181;

  anon161_Then:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    out_FoundValidLfn := 0;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    goto L67;

  anon162_Then:
    goto L172;

  anon159_Then:
    assume {:partition} out_FoundValidLfn == 0;
    goto L169;

  anon157_Then:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    call {:si_unique_call 5222} Fat8dot3ToString(in_IrpContext_153, Mem_T.P_PACKED_DIRENT[in_Dirent_29], 0, in_Name_3);
    assume {:nonnull} in_Name_3 != 0;
    assume in_Name_3 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} in_Name_3 != 0;
    assume in_Name_3 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} in_Name_3 != 0;
    assume in_Name_3 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} in_Name_3 != 0;
    assume in_Name_3 > 0;
    goto L210;

  L210:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc vslice_dummy_var_1846;
    call {:si_unique_call 5221} out_sdv_1451 := FatIsNameInExpression(in_IrpContext_153, vslice_dummy_var_1846, in_Name_3);
    goto anon171_Then;

  anon171_Then:
    assume {:partition} out_sdv_1451 == 0;
    goto L168;

  anon170_Then:
    goto L210;

  anon169_Then:
    goto L210;

  anon168_Then:
    goto L210;

  anon167_Then:
    goto L210;

  anon158_Then:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2448 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2448 != 0;
    assume out_Tmp_2448 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc out_Tmp_2453;
    out_Tmp_2424 := out_Tmp_2453;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2466 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2466 != 0;
    assume out_Tmp_2466 > 0;
    havoc out_Tmp_2469;
    out_Tmp_2423 := out_Tmp_2469;
    assume {:nonnull} out_Tmp_2423 != 0;
    assume out_Tmp_2423 > 0;
    assume {:nonnull} out_Tmp_2424 != 0;
    assume out_Tmp_2424 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc out_Tmp_2459;
    out_Tmp_2408 := out_Tmp_2459 + 4 * 4;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2427 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2427 != 0;
    assume out_Tmp_2427 > 0;
    havoc out_Tmp_2436;
    out_Tmp_2447 := out_Tmp_2436 + 4 * 4;
    assume {:nonnull} out_Tmp_2408 != 0;
    assume out_Tmp_2408 > 0;
    assume {:nonnull} out_Tmp_2447 != 0;
    assume out_Tmp_2447 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc out_Tmp_2441;
    out_Tmp_2452 := out_Tmp_2441 + 8 * 4;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2464 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2464 != 0;
    assume out_Tmp_2464 > 0;
    havoc out_Tmp_2416;
    out_Tmp_2420 := out_Tmp_2416 + 8 * 4;
    assume {:nonnull} out_Tmp_2420 != 0;
    assume out_Tmp_2420 > 0;
    assume {:nonnull} out_Tmp_2452 != 0;
    assume out_Tmp_2452 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc out_Tmp_2410;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2473 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2473 != 0;
    assume out_Tmp_2473 > 0;
    havoc out_Tmp_2445;
    assume {:nonnull} out_Tmp_2410 != 0;
    assume out_Tmp_2410 > 0;
    assume {:nonnull} out_Tmp_2445 != 0;
    assume out_Tmp_2445 > 0;
    goto anon192_Then;

  anon192_Then:
    goto L168;

  anon191_Then:
    goto L168;

  anon190_Then:
    goto L168;

  anon189_Then:
    goto L168;

  anon188_Then:
    goto L168;

  anon155_Then:
    assume {:partition} out_sdv_1450 != out_LfnChecksum;
    goto L155;

  L155:
    out_FoundValidLfn := 0;
    goto L164;

  anon154_Then:
    assume {:partition} out_LfnIndex != 0;
    goto L155;

  anon153_Then:
    goto L155;

  anon151_Then:
    assume {:partition} out_LfnInProgress == 0;
    goto L155;

  anon138_Then:
    assume {:partition} in_LongFileName == 0;
    goto L69;

  anon137_Then:
    goto L69;

  anon177_Then:
    goto L46;

  anon133_Then:
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} in_Bcb_17 != 0;
    assume in_Bcb_17 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    goto L228;

  L228:
    assume {:nonnull} in_Bcb_17 != 0;
    assume in_Bcb_17 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} in_Bcb_17 != 0;
    assume in_Bcb_17 > 0;
    goto L230;

  L230:
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    havoc out_Tmp_2468;
    call {:si_unique_call 5219} FatReadDirectoryFile#0(in_IrpContext_153, in_ParentDirectory, out_Tmp_2468, 4096, 0, in_Bcb_17, in_Dirent_29, in_Status_60);
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_29] := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    goto L46;

  anon174_Then:
    goto L230;

  anon175_Then:
    goto L46;

  anon134_Then:
    goto L228;
}



procedure {:LoopProcedure} FatLocateDirent#0_loop_L42(in_LfnInProgress: int, in_Tmp_2408: int, in_Ordinal: int, in_LfnByteOffset_4: int, in_Tmp_2409: int, in_Tmp_2410: int, in_Tmp_2411: int, in_Tmp_2412: int, in_Tmp_2413: int, in_Tmp_2415: int, in_Tmp_2416: int, in_LfnChecksum: int, in_Tmp_2417: int, in_Tmp_2420: int, in_Tmp_2421: int, in_Tmp_2422: int, in_Tmp_2423: int, in_Tmp_2424: int, in_LfnIndex: int, in_Tmp_2425: int, in_Tmp_2426: int, in_LfnSize: int, in_Lfn_11: int, in_sdv_1450: int, in_Tmp_2427: int, in_Tmp_2428: int, in_Tmp_2430: int, in_Tmp_2431: int, in_Status_60: int, in_Tmp_2432: int, in_Tmp_2433: int, in_Tmp_2434: int, in_sdv_1451: int, in_Tmp_2435: int, in_Tmp_2436: int, in_Tmp_2439: int, in_Tmp_2441: int, in_CheckTail: int, in_Tmp_2442: int, in_Tmp_2444: int, in_UpcasedLfn: int, in_Tmp_2445: int, in_Tmp_2446: int, in_sdv_1453: int, in_Tmp_2447: int, in_Tmp_2448: int, in_Tmp_2449: int, in_FoundValidLfn: int, in_Tmp_2450: int, in_sdv_1454: int, in_sdv_1455: int, in_Tmp_2451: int, in_Tmp_2452: int, in_Tmp_2453: int, in_Tmp_2456: int, in_Tmp_2458: int, in_Tmp_2459: int, in_Tmp_2460: int, in_Tmp_2461: int, in_Tmp_2462: int, in_Tmp_2464: int, in_Tmp_2466: int, in_Name_3: int, in_Tmp_2467: int, in_Tmp_2468: int, in_Tmp_2469: int, in_Tmp_2470: int, in_Tmp_2472: int, in_Tmp_2473: int, in_IrpContext_153: int, in_ParentDirectory: int, in_Ccb_32: int, in_Dirent_29: int, in_Bcb_17: int, in_ByteOffset_3: int, in_LongFileName: int, in_boogieTmp: int) returns (out_LfnInProgress: int, out_Tmp_2408: int, out_Ordinal: int, out_LfnByteOffset_4: int, out_Tmp_2409: int, out_Tmp_2410: int, out_Tmp_2411: int, out_Tmp_2412: int, out_Tmp_2413: int, out_Tmp_2415: int, out_Tmp_2416: int, out_LfnChecksum: int, out_Tmp_2417: int, out_Tmp_2420: int, out_Tmp_2421: int, out_Tmp_2422: int, out_Tmp_2423: int, out_Tmp_2424: int, out_LfnIndex: int, out_Tmp_2425: int, out_Tmp_2426: int, out_LfnSize: int, out_Lfn_11: int, out_sdv_1450: int, out_Tmp_2427: int, out_Tmp_2428: int, out_Tmp_2430: int, out_Tmp_2431: int, out_Tmp_2432: int, out_Tmp_2433: int, out_Tmp_2434: int, out_sdv_1451: int, out_Tmp_2435: int, out_Tmp_2436: int, out_Tmp_2439: int, out_Tmp_2441: int, out_CheckTail: int, out_Tmp_2442: int, out_Tmp_2444: int, out_Tmp_2445: int, out_Tmp_2446: int, out_sdv_1453: int, out_Tmp_2447: int, out_Tmp_2448: int, out_Tmp_2449: int, out_FoundValidLfn: int, out_Tmp_2450: int, out_sdv_1454: int, out_sdv_1455: int, out_Tmp_2451: int, out_Tmp_2452: int, out_Tmp_2453: int, out_Tmp_2456: int, out_Tmp_2458: int, out_Tmp_2459: int, out_Tmp_2460: int, out_Tmp_2461: int, out_Tmp_2462: int, out_Tmp_2464: int, out_Tmp_2466: int, out_Tmp_2467: int, out_Tmp_2468: int, out_Tmp_2469: int, out_Tmp_2470: int, out_Tmp_2472: int, out_Tmp_2473: int, out_boogieTmp: int);
  modifies Mem_T.P_PACKED_DIRENT, alloc;
  free ensures {:va_keep} out_LfnInProgress == 0 || out_LfnInProgress == 1 || out_LfnInProgress == in_LfnInProgress;
  free ensures {:va_keep} out_Tmp_2439 == 0 || out_Tmp_2439 == 1 || out_Tmp_2439 == in_Tmp_2439;
  free ensures {:va_keep} out_CheckTail == 1 || out_CheckTail == 0 || out_CheckTail == in_CheckTail;
  free ensures {:va_keep} out_sdv_1453 == 0 || out_sdv_1453 == 1 || out_sdv_1453 == in_sdv_1453;
  free ensures {:va_keep} out_FoundValidLfn == 0 || out_FoundValidLfn == 1 || out_FoundValidLfn == in_FoundValidLfn;
  free ensures {:va_keep} out_sdv_1454 == in_sdv_1454;
  free ensures {:va_keep} out_sdv_1455 == 0 || out_sdv_1455 == 1 || out_sdv_1455 == in_sdv_1455;
  free ensures {:va_keep} out_boogieTmp == -1073741675 || out_boogieTmp == 0 || out_boogieTmp == in_boogieTmp;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatLocateDirent#1_loop_L132(in_Ordinal: int, in_LfnIndex: int, in_Tmp_2425: int, in_LfnSize: int, in_Tmp_2431: int, in_CheckTail: int, in_Tmp_2456: int, in_Tmp_2461: int, in_LongFileName: int) returns (out_LfnIndex: int, out_Tmp_2425: int, out_LfnSize: int, out_Tmp_2431: int, out_CheckTail: int, out_Tmp_2456: int, out_Tmp_2461: int)
{

  entry:
    out_LfnIndex, out_Tmp_2425, out_LfnSize, out_Tmp_2431, out_CheckTail, out_Tmp_2456, out_Tmp_2461 := in_LfnIndex, in_Tmp_2425, in_LfnSize, in_Tmp_2431, in_CheckTail, in_Tmp_2456, in_Tmp_2461;
    goto L132, exit;

  exit:
    return;

  L132:
    goto anon147_Else;

  anon147_Else:
    assume {:partition} out_LfnIndex != in_Ordinal * 13;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} out_CheckTail != 0;
    out_Tmp_2456 := out_LfnIndex;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2461;
    assume {:nonnull} out_Tmp_2461 != 0;
    assume out_Tmp_2461 > 0;
    goto anon184_Else;

  anon184_Else:
    goto L137;

  L137:
    out_LfnIndex := out_LfnIndex + 1;
    goto L137_dummy;

  L137_dummy:
    call {:si_unique_call 5239} {:si_old_unique_call 1} out_LfnIndex, out_Tmp_2425, out_LfnSize, out_Tmp_2431, out_CheckTail, out_Tmp_2456, out_Tmp_2461 := FatLocateDirent#1_loop_L132(in_Ordinal, out_LfnIndex, out_Tmp_2425, out_LfnSize, out_Tmp_2431, out_CheckTail, out_Tmp_2456, out_Tmp_2461, in_LongFileName);
    return;

  anon149_Then:
    assume {:partition} out_CheckTail == 0;
    out_Tmp_2431 := out_LfnIndex;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2425;
    assume {:nonnull} out_Tmp_2425 != 0;
    assume out_Tmp_2425 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    out_LfnSize := out_LfnIndex;
    out_CheckTail := 1;
    goto L137;

  anon185_Then:
    goto L137;
}



procedure {:LoopProcedure} FatLocateDirent#1_loop_L132(in_Ordinal: int, in_LfnIndex: int, in_Tmp_2425: int, in_LfnSize: int, in_Tmp_2431: int, in_CheckTail: int, in_Tmp_2456: int, in_Tmp_2461: int, in_LongFileName: int) returns (out_LfnIndex: int, out_Tmp_2425: int, out_LfnSize: int, out_Tmp_2431: int, out_CheckTail: int, out_Tmp_2456: int, out_Tmp_2461: int);
  free ensures {:va_keep} out_CheckTail == 1 || out_CheckTail == in_CheckTail;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatLocateDirent#1_loop_L42(in_LfnInProgress: int, in_Tmp_2408: int, in_Ordinal: int, in_LfnByteOffset_4: int, in_Tmp_2409: int, in_Tmp_2410: int, in_Tmp_2411: int, in_Tmp_2412: int, in_Tmp_2413: int, in_Tmp_2415: int, in_Tmp_2416: int, in_LfnChecksum: int, in_Tmp_2417: int, in_Tmp_2420: int, in_Tmp_2421: int, in_Tmp_2422: int, in_Tmp_2423: int, in_Tmp_2424: int, in_LfnIndex: int, in_Tmp_2425: int, in_Tmp_2426: int, in_LfnSize: int, in_Lfn_11: int, in_sdv_1450: int, in_Tmp_2427: int, in_Tmp_2428: int, in_Tmp_2430: int, in_Tmp_2431: int, in_Status_60: int, in_Tmp_2432: int, in_Tmp_2433: int, in_Tmp_2434: int, in_sdv_1451: int, in_Tmp_2435: int, in_Tmp_2436: int, in_Tmp_2439: int, in_Tmp_2441: int, in_CheckTail: int, in_Tmp_2442: int, in_Tmp_2444: int, in_UpcasedLfn: int, in_Tmp_2445: int, in_Tmp_2446: int, in_sdv_1453: int, in_Tmp_2447: int, in_Tmp_2448: int, in_Tmp_2449: int, in_FoundValidLfn: int, in_Tmp_2450: int, in_sdv_1454: int, in_sdv_1455: int, in_Tmp_2451: int, in_Tmp_2452: int, in_Tmp_2453: int, in_Tmp_2456: int, in_Tmp_2458: int, in_Tmp_2459: int, in_Tmp_2460: int, in_Tmp_2461: int, in_Tmp_2462: int, in_Tmp_2464: int, in_Tmp_2466: int, in_Name_3: int, in_Tmp_2467: int, in_Tmp_2468: int, in_Tmp_2469: int, in_Tmp_2470: int, in_Tmp_2472: int, in_Tmp_2473: int, in_IrpContext_153: int, in_ParentDirectory: int, in_Ccb_32: int, in_Dirent_29: int, in_Bcb_17: int, in_ByteOffset_3: int, in_LongFileName: int, in_boogieTmp: int) returns (out_LfnInProgress: int, out_Tmp_2408: int, out_Ordinal: int, out_LfnByteOffset_4: int, out_Tmp_2409: int, out_Tmp_2410: int, out_Tmp_2411: int, out_Tmp_2412: int, out_Tmp_2413: int, out_Tmp_2415: int, out_Tmp_2416: int, out_LfnChecksum: int, out_Tmp_2417: int, out_Tmp_2420: int, out_Tmp_2421: int, out_Tmp_2422: int, out_Tmp_2423: int, out_Tmp_2424: int, out_LfnIndex: int, out_Tmp_2425: int, out_Tmp_2426: int, out_LfnSize: int, out_Lfn_11: int, out_sdv_1450: int, out_Tmp_2427: int, out_Tmp_2428: int, out_Tmp_2430: int, out_Tmp_2431: int, out_Tmp_2432: int, out_Tmp_2433: int, out_Tmp_2434: int, out_sdv_1451: int, out_Tmp_2435: int, out_Tmp_2436: int, out_Tmp_2439: int, out_Tmp_2441: int, out_CheckTail: int, out_Tmp_2442: int, out_Tmp_2444: int, out_Tmp_2445: int, out_Tmp_2446: int, out_sdv_1453: int, out_Tmp_2447: int, out_Tmp_2448: int, out_Tmp_2449: int, out_FoundValidLfn: int, out_Tmp_2450: int, out_sdv_1454: int, out_sdv_1455: int, out_Tmp_2451: int, out_Tmp_2452: int, out_Tmp_2453: int, out_Tmp_2456: int, out_Tmp_2458: int, out_Tmp_2459: int, out_Tmp_2460: int, out_Tmp_2461: int, out_Tmp_2462: int, out_Tmp_2464: int, out_Tmp_2466: int, out_Tmp_2467: int, out_Tmp_2468: int, out_Tmp_2469: int, out_Tmp_2470: int, out_Tmp_2472: int, out_Tmp_2473: int, out_boogieTmp: int)
{
  var vslice_dummy_var_1848: int;
  var vslice_dummy_var_1849: int;

  entry:
    out_LfnInProgress, out_Tmp_2408, out_Ordinal, out_LfnByteOffset_4, out_Tmp_2409, out_Tmp_2410, out_Tmp_2411, out_Tmp_2412, out_Tmp_2413, out_Tmp_2415, out_Tmp_2416, out_LfnChecksum, out_Tmp_2417, out_Tmp_2420, out_Tmp_2421, out_Tmp_2422, out_Tmp_2423, out_Tmp_2424, out_LfnIndex, out_Tmp_2425, out_Tmp_2426, out_LfnSize, out_Lfn_11, out_sdv_1450, out_Tmp_2427, out_Tmp_2428, out_Tmp_2430, out_Tmp_2431, out_Tmp_2432, out_Tmp_2433, out_Tmp_2434, out_sdv_1451, out_Tmp_2435, out_Tmp_2436, out_Tmp_2439, out_Tmp_2441, out_CheckTail, out_Tmp_2442, out_Tmp_2444, out_Tmp_2445, out_Tmp_2446, out_sdv_1453, out_Tmp_2447, out_Tmp_2448, out_Tmp_2449, out_FoundValidLfn, out_Tmp_2450, out_sdv_1454, out_sdv_1455, out_Tmp_2451, out_Tmp_2452, out_Tmp_2453, out_Tmp_2456, out_Tmp_2458, out_Tmp_2459, out_Tmp_2460, out_Tmp_2461, out_Tmp_2462, out_Tmp_2464, out_Tmp_2466, out_Tmp_2467, out_Tmp_2468, out_Tmp_2469, out_Tmp_2470, out_Tmp_2472, out_Tmp_2473, out_boogieTmp := in_LfnInProgress, in_Tmp_2408, in_Ordinal, in_LfnByteOffset_4, in_Tmp_2409, in_Tmp_2410, in_Tmp_2411, in_Tmp_2412, in_Tmp_2413, in_Tmp_2415, in_Tmp_2416, in_LfnChecksum, in_Tmp_2417, in_Tmp_2420, in_Tmp_2421, in_Tmp_2422, in_Tmp_2423, in_Tmp_2424, in_LfnIndex, in_Tmp_2425, in_Tmp_2426, in_LfnSize, in_Lfn_11, in_sdv_1450, in_Tmp_2427, in_Tmp_2428, in_Tmp_2430, in_Tmp_2431, in_Tmp_2432, in_Tmp_2433, in_Tmp_2434, in_sdv_1451, in_Tmp_2435, in_Tmp_2436, in_Tmp_2439, in_Tmp_2441, in_CheckTail, in_Tmp_2442, in_Tmp_2444, in_Tmp_2445, in_Tmp_2446, in_sdv_1453, in_Tmp_2447, in_Tmp_2448, in_Tmp_2449, in_FoundValidLfn, in_Tmp_2450, in_sdv_1454, in_sdv_1455, in_Tmp_2451, in_Tmp_2452, in_Tmp_2453, in_Tmp_2456, in_Tmp_2458, in_Tmp_2459, in_Tmp_2460, in_Tmp_2461, in_Tmp_2462, in_Tmp_2464, in_Tmp_2466, in_Tmp_2467, in_Tmp_2468, in_Tmp_2469, in_Tmp_2470, in_Tmp_2472, in_Tmp_2473, in_boogieTmp;
    goto L42, exit;

  exit:
    return;

  L42:
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    assume {:nonnull} in_ParentDirectory != 0;
    assume in_ParentDirectory > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} in_Status_60 != 0;
    assume in_Status_60 > 0;
    assume {:nonnull} in_Bcb_17 != 0;
    assume in_Bcb_17 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:nonnull} in_Bcb_17 != 0;
    assume in_Bcb_17 > 0;
    goto L46;

  L46:
    assume {:nonnull} in_Status_60 != 0;
    assume in_Status_60 > 0;
    goto anon135_Then;

  anon135_Then:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2409 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2409 != 0;
    assume out_Tmp_2409 > 0;
    havoc out_Tmp_2460;
    assume {:nonnull} out_Tmp_2460 != 0;
    assume out_Tmp_2460 > 0;
    goto anon178_Else;

  anon178_Else:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2428 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2428 != 0;
    assume out_Tmp_2428 > 0;
    havoc out_Tmp_2444;
    assume {:nonnull} out_Tmp_2444 != 0;
    assume out_Tmp_2444 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    out_LfnInProgress := 0;
    goto L67;

  L67:
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_29] := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    goto L67_dummy;

  L67_dummy:
    call {:si_unique_call 5261} {:si_old_unique_call 1} out_LfnInProgress, out_Tmp_2408, out_Ordinal, out_LfnByteOffset_4, out_Tmp_2409, out_Tmp_2410, out_Tmp_2411, out_Tmp_2412, out_Tmp_2413, out_Tmp_2415, out_Tmp_2416, out_LfnChecksum, out_Tmp_2417, out_Tmp_2420, out_Tmp_2421, out_Tmp_2422, out_Tmp_2423, out_Tmp_2424, out_LfnIndex, out_Tmp_2425, out_Tmp_2426, out_LfnSize, out_Lfn_11, out_sdv_1450, out_Tmp_2427, out_Tmp_2428, out_Tmp_2430, out_Tmp_2431, out_Tmp_2432, out_Tmp_2433, out_Tmp_2434, out_sdv_1451, out_Tmp_2435, out_Tmp_2436, out_Tmp_2439, out_Tmp_2441, out_CheckTail, out_Tmp_2442, out_Tmp_2444, out_Tmp_2445, out_Tmp_2446, out_sdv_1453, out_Tmp_2447, out_Tmp_2448, out_Tmp_2449, out_FoundValidLfn, out_Tmp_2450, out_sdv_1454, out_sdv_1455, out_Tmp_2451, out_Tmp_2452, out_Tmp_2453, out_Tmp_2456, out_Tmp_2458, out_Tmp_2459, out_Tmp_2460, out_Tmp_2461, out_Tmp_2462, out_Tmp_2464, out_Tmp_2466, out_Tmp_2467, out_Tmp_2468, out_Tmp_2469, out_Tmp_2470, out_Tmp_2472, out_Tmp_2473, out_boogieTmp := FatLocateDirent#1_loop_L42(out_LfnInProgress, out_Tmp_2408, out_Ordinal, out_LfnByteOffset_4, out_Tmp_2409, out_Tmp_2410, out_Tmp_2411, out_Tmp_2412, out_Tmp_2413, out_Tmp_2415, out_Tmp_2416, out_LfnChecksum, out_Tmp_2417, out_Tmp_2420, out_Tmp_2421, out_Tmp_2422, out_Tmp_2423, out_Tmp_2424, out_LfnIndex, out_Tmp_2425, out_Tmp_2426, out_LfnSize, out_Lfn_11, out_sdv_1450, out_Tmp_2427, out_Tmp_2428, out_Tmp_2430, out_Tmp_2431, in_Status_60, out_Tmp_2432, out_Tmp_2433, out_Tmp_2434, out_sdv_1451, out_Tmp_2435, out_Tmp_2436, out_Tmp_2439, out_Tmp_2441, out_CheckTail, out_Tmp_2442, out_Tmp_2444, in_UpcasedLfn, out_Tmp_2445, out_Tmp_2446, out_sdv_1453, out_Tmp_2447, out_Tmp_2448, out_Tmp_2449, out_FoundValidLfn, out_Tmp_2450, out_sdv_1454, out_sdv_1455, out_Tmp_2451, out_Tmp_2452, out_Tmp_2453, out_Tmp_2456, out_Tmp_2458, out_Tmp_2459, out_Tmp_2460, out_Tmp_2461, out_Tmp_2462, out_Tmp_2464, out_Tmp_2466, in_Name_3, out_Tmp_2467, out_Tmp_2468, out_Tmp_2469, out_Tmp_2470, out_Tmp_2472, out_Tmp_2473, in_IrpContext_153, in_ParentDirectory, in_Ccb_32, in_Dirent_29, in_Bcb_17, in_ByteOffset_3, in_LongFileName, out_boogieTmp);
    return;

  anon179_Then:
    goto anon137_Then, anon137_Else;

  anon137_Else:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} in_LongFileName != 0;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2451 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2451 != 0;
    assume out_Tmp_2451 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Lfn_11 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} out_LfnInProgress != 0;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L78;

  L78:
    out_LfnInProgress := 0;
    goto L75;

  L75:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} out_LfnInProgress == 0;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2411;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} 20 >= out_Tmp_2411;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    out_CheckTail := 0;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Ordinal;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} out_Ordinal != 0;
    goto L112;

  L112:
    out_LfnIndex := (out_Ordinal - 1) * 13;
    call {:si_unique_call 5254} out_Tmp_2421 := corral_nondet();
    call {:si_unique_call 5255} FatEnsureStringBufferEnough(in_LongFileName, out_Tmp_2421);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2446;
    out_Tmp_2422 := out_LfnIndex + 0;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2450;
    call {:si_unique_call 5256} sdv_RtlCopyMemory(0, 0, 10);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2470;
    out_Tmp_2458 := out_LfnIndex + 5;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2413;
    call {:si_unique_call 5257} sdv_RtlCopyMemory(0, 0, 12);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2432;
    out_Tmp_2462 := out_LfnIndex + 11;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2467;
    call {:si_unique_call 5258} sdv_RtlCopyMemory(0, 0, 4);
    goto L132;

  L132:
    call {:si_unique_call 5253} out_LfnIndex, out_Tmp_2425, out_LfnSize, out_Tmp_2431, out_CheckTail, out_Tmp_2456, out_Tmp_2461 := FatLocateDirent#1_loop_L132(out_Ordinal, out_LfnIndex, out_Tmp_2425, out_LfnSize, out_Tmp_2431, out_CheckTail, out_Tmp_2456, out_Tmp_2461, in_LongFileName);
    goto L132_last;

  L132_last:
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} out_LfnIndex != out_Ordinal * 13;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} out_CheckTail != 0;
    out_Tmp_2456 := out_LfnIndex;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2461;
    assume {:nonnull} out_Tmp_2461 != 0;
    assume out_Tmp_2461 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L137;

  L137:
    out_LfnIndex := out_LfnIndex + 1;
    assume false;
    return;

  anon184_Then:
    goto L133;

  L133:
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} out_LfnIndex == out_Ordinal * 13;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} out_CheckTail != 0;
    goto L143;

  L143:
    out_LfnIndex := out_LfnIndex - 13;
    out_LfnInProgress := 1;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_LfnChecksum;
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    havoc out_LfnByteOffset_4;
    goto L67;

  anon150_Then:
    assume {:partition} out_CheckTail == 0;
    out_LfnSize := out_LfnIndex;
    goto L143;

  anon148_Then:
    assume {:partition} out_LfnIndex != out_Ordinal * 13;
    goto L67;

  anon149_Then:
    assume {:partition} out_CheckTail == 0;
    out_Tmp_2431 := out_LfnIndex;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2425;
    assume {:nonnull} out_Tmp_2425 != 0;
    assume out_Tmp_2425 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    out_LfnSize := out_LfnIndex;
    out_CheckTail := 1;
    goto L137;

  anon185_Then:
    goto L137;

  anon147_Then:
    assume {:partition} out_LfnIndex == out_Ordinal * 13;
    goto L133;

  anon183_Then:
    assume {:partition} out_Ordinal == 0;
    call {:si_unique_call 5259} FatPopUpFileCorrupt#0(in_IrpContext_153, in_ParentDirectory);
    assume {:nonnull} in_IrpContext_153 != 0;
    assume in_IrpContext_153 > 0;
    call {:si_unique_call 5260} ExRaiseStatus(-1073741566);
    goto L112;

  anon146_Then:
    goto L67;

  anon182_Then:
    assume {:partition} out_Tmp_2411 > 20;
    goto L67;

  anon145_Then:
    goto L67;

  anon139_Then:
    assume {:partition} out_LfnInProgress != 0;
    goto L67;

  anon140_Then:
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    out_LfnIndex := out_LfnIndex - 13;
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2433;
    out_Tmp_2430 := out_LfnIndex + 0;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2412;
    call {:si_unique_call 5250} sdv_RtlCopyMemory(0, 0, 10);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2426;
    out_Tmp_2472 := out_LfnIndex + 5;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2435;
    call {:si_unique_call 5251} sdv_RtlCopyMemory(0, 0, 12);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Tmp_2449;
    out_Tmp_2434 := out_LfnIndex + 11;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc out_Tmp_2417;
    call {:si_unique_call 5252} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} out_Lfn_11 != 0;
    assume out_Lfn_11 > 0;
    havoc out_Ordinal;
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    havoc out_LfnByteOffset_4;
    goto L75;

  anon144_Then:
    goto L78;

  anon143_Then:
    goto L78;

  anon142_Then:
    goto L78;

  anon141_Then:
    goto L78;

  anon181_Then:
    assume {:partition} out_LfnInProgress == 0;
    goto L75;

  anon180_Then:
    goto L69;

  L69:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2415 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2415 != 0;
    assume out_Tmp_2415 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon152_Else;

  anon152_Else:
    goto L67;

  anon186_Then:
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} out_LfnInProgress != 0;
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} out_LfnIndex == 0;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    call {:si_unique_call 5241} out_sdv_1450 := FatComputeLfnChecksum(Mem_T.P_PACKED_DIRENT[in_Dirent_29]);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} out_sdv_1450 == out_LfnChecksum;
    out_FoundValidLfn := 1;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    goto L164;

  L164:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon156_Else;

  anon156_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    goto L168;

  L168:
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} out_FoundValidLfn != 0;
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    goto L172;

  L172:
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    havoc vslice_dummy_var_1849;
    call {:si_unique_call 5247} FatEnsureStringBufferEnough(in_UpcasedLfn, vslice_dummy_var_1849);
    assume {:nonnull} in_Status_60 != 0;
    assume in_Status_60 > 0;
    call {:si_unique_call 5248} out_boogieTmp := RtlUpcaseUnicodeString(0, 0, 0);
    assume {:nonnull} in_Status_60 != 0;
    assume in_Status_60 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    goto L181;

  L181:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    call {:si_unique_call 5249} out_sdv_1453 := FsRtlIsNameInExpression(0, 0, 1, 0);
    goto anon165_Else;

  anon165_Else:
    assume {:partition} out_sdv_1453 == 0;
    goto L169;

  L169:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} out_FoundValidLfn != 0;
    out_FoundValidLfn := 0;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    goto L67;

  anon160_Then:
    assume {:partition} out_FoundValidLfn == 0;
    goto L67;

  anon164_Then:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc out_Tmp_2442;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} out_Tmp_2442 == 0;
    out_Tmp_2439 := 0;
    goto L387;

  L387:
    call {:si_unique_call 5244} out_sdv_1455 := FsRtlAreNamesEqual(0, 0, out_Tmp_2439, 0);
    goto anon166_Else;

  anon166_Else:
    assume {:partition} out_sdv_1455 == 0;
    goto L169;

  anon187_Then:
    assume {:partition} out_Tmp_2442 != 0;
    out_Tmp_2439 := 1;
    goto L387;

  anon163_Then:
    assume {:nonnull} in_IrpContext_153 != 0;
    assume in_IrpContext_153 > 0;
    assume {:nonnull} in_Status_60 != 0;
    assume in_Status_60 > 0;
    call {:si_unique_call 5245} out_sdv_1454 := corral_nondet();
    call {:si_unique_call 5246} ExRaiseStatus(out_sdv_1454);
    goto L181;

  anon161_Then:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    out_FoundValidLfn := 0;
    assume {:nonnull} in_LongFileName != 0;
    assume in_LongFileName > 0;
    goto L67;

  anon162_Then:
    goto L172;

  anon159_Then:
    assume {:partition} out_FoundValidLfn == 0;
    goto L169;

  anon157_Then:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    call {:si_unique_call 5243} Fat8dot3ToString(in_IrpContext_153, Mem_T.P_PACKED_DIRENT[in_Dirent_29], 0, in_Name_3);
    assume {:nonnull} in_Name_3 != 0;
    assume in_Name_3 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} in_Name_3 != 0;
    assume in_Name_3 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} in_Name_3 != 0;
    assume in_Name_3 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} in_Name_3 != 0;
    assume in_Name_3 > 0;
    goto L210;

  L210:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc vslice_dummy_var_1848;
    call {:si_unique_call 5242} out_sdv_1451 := FatIsNameInExpression(in_IrpContext_153, vslice_dummy_var_1848, in_Name_3);
    goto anon171_Then;

  anon171_Then:
    assume {:partition} out_sdv_1451 == 0;
    goto L168;

  anon170_Then:
    goto L210;

  anon169_Then:
    goto L210;

  anon168_Then:
    goto L210;

  anon167_Then:
    goto L210;

  anon158_Then:
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2448 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2448 != 0;
    assume out_Tmp_2448 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc out_Tmp_2453;
    out_Tmp_2424 := out_Tmp_2453;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2466 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2466 != 0;
    assume out_Tmp_2466 > 0;
    havoc out_Tmp_2469;
    out_Tmp_2423 := out_Tmp_2469;
    assume {:nonnull} out_Tmp_2423 != 0;
    assume out_Tmp_2423 > 0;
    assume {:nonnull} out_Tmp_2424 != 0;
    assume out_Tmp_2424 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc out_Tmp_2459;
    out_Tmp_2408 := out_Tmp_2459 + 4 * 4;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2427 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2427 != 0;
    assume out_Tmp_2427 > 0;
    havoc out_Tmp_2436;
    out_Tmp_2447 := out_Tmp_2436 + 4 * 4;
    assume {:nonnull} out_Tmp_2408 != 0;
    assume out_Tmp_2408 > 0;
    assume {:nonnull} out_Tmp_2447 != 0;
    assume out_Tmp_2447 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc out_Tmp_2441;
    out_Tmp_2452 := out_Tmp_2441 + 8 * 4;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2464 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2464 != 0;
    assume out_Tmp_2464 > 0;
    havoc out_Tmp_2416;
    out_Tmp_2420 := out_Tmp_2416 + 8 * 4;
    assume {:nonnull} out_Tmp_2420 != 0;
    assume out_Tmp_2420 > 0;
    assume {:nonnull} out_Tmp_2452 != 0;
    assume out_Tmp_2452 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} in_Ccb_32 != 0;
    assume in_Ccb_32 > 0;
    havoc out_Tmp_2410;
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    out_Tmp_2473 := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    assume {:nonnull} out_Tmp_2473 != 0;
    assume out_Tmp_2473 > 0;
    havoc out_Tmp_2445;
    assume {:nonnull} out_Tmp_2410 != 0;
    assume out_Tmp_2410 > 0;
    assume {:nonnull} out_Tmp_2445 != 0;
    assume out_Tmp_2445 > 0;
    goto anon192_Then;

  anon192_Then:
    goto L168;

  anon191_Then:
    goto L168;

  anon190_Then:
    goto L168;

  anon189_Then:
    goto L168;

  anon188_Then:
    goto L168;

  anon155_Then:
    assume {:partition} out_sdv_1450 != out_LfnChecksum;
    goto L155;

  L155:
    out_FoundValidLfn := 0;
    goto L164;

  anon154_Then:
    assume {:partition} out_LfnIndex != 0;
    goto L155;

  anon153_Then:
    goto L155;

  anon151_Then:
    assume {:partition} out_LfnInProgress == 0;
    goto L155;

  anon138_Then:
    assume {:partition} in_LongFileName == 0;
    goto L69;

  anon137_Then:
    goto L69;

  anon177_Then:
    goto L46;

  anon133_Then:
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} in_Bcb_17 != 0;
    assume in_Bcb_17 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    goto L228;

  L228:
    assume {:nonnull} in_Bcb_17 != 0;
    assume in_Bcb_17 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} in_Bcb_17 != 0;
    assume in_Bcb_17 > 0;
    goto L230;

  L230:
    assume {:nonnull} in_ByteOffset_3 != 0;
    assume in_ByteOffset_3 > 0;
    havoc out_Tmp_2468;
    call {:si_unique_call 5240} FatReadDirectoryFile#1(in_IrpContext_153, in_ParentDirectory, out_Tmp_2468, 4096, 0, in_Bcb_17, in_Dirent_29, in_Status_60);
    assume {:nonnull} in_Dirent_29 != 0;
    assume in_Dirent_29 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_29] := Mem_T.P_PACKED_DIRENT[in_Dirent_29];
    goto L46;

  anon174_Then:
    goto L230;

  anon175_Then:
    goto L46;

  anon134_Then:
    goto L228;
}



procedure {:LoopProcedure} FatLocateDirent#1_loop_L42(in_LfnInProgress: int, in_Tmp_2408: int, in_Ordinal: int, in_LfnByteOffset_4: int, in_Tmp_2409: int, in_Tmp_2410: int, in_Tmp_2411: int, in_Tmp_2412: int, in_Tmp_2413: int, in_Tmp_2415: int, in_Tmp_2416: int, in_LfnChecksum: int, in_Tmp_2417: int, in_Tmp_2420: int, in_Tmp_2421: int, in_Tmp_2422: int, in_Tmp_2423: int, in_Tmp_2424: int, in_LfnIndex: int, in_Tmp_2425: int, in_Tmp_2426: int, in_LfnSize: int, in_Lfn_11: int, in_sdv_1450: int, in_Tmp_2427: int, in_Tmp_2428: int, in_Tmp_2430: int, in_Tmp_2431: int, in_Status_60: int, in_Tmp_2432: int, in_Tmp_2433: int, in_Tmp_2434: int, in_sdv_1451: int, in_Tmp_2435: int, in_Tmp_2436: int, in_Tmp_2439: int, in_Tmp_2441: int, in_CheckTail: int, in_Tmp_2442: int, in_Tmp_2444: int, in_UpcasedLfn: int, in_Tmp_2445: int, in_Tmp_2446: int, in_sdv_1453: int, in_Tmp_2447: int, in_Tmp_2448: int, in_Tmp_2449: int, in_FoundValidLfn: int, in_Tmp_2450: int, in_sdv_1454: int, in_sdv_1455: int, in_Tmp_2451: int, in_Tmp_2452: int, in_Tmp_2453: int, in_Tmp_2456: int, in_Tmp_2458: int, in_Tmp_2459: int, in_Tmp_2460: int, in_Tmp_2461: int, in_Tmp_2462: int, in_Tmp_2464: int, in_Tmp_2466: int, in_Name_3: int, in_Tmp_2467: int, in_Tmp_2468: int, in_Tmp_2469: int, in_Tmp_2470: int, in_Tmp_2472: int, in_Tmp_2473: int, in_IrpContext_153: int, in_ParentDirectory: int, in_Ccb_32: int, in_Dirent_29: int, in_Bcb_17: int, in_ByteOffset_3: int, in_LongFileName: int, in_boogieTmp: int) returns (out_LfnInProgress: int, out_Tmp_2408: int, out_Ordinal: int, out_LfnByteOffset_4: int, out_Tmp_2409: int, out_Tmp_2410: int, out_Tmp_2411: int, out_Tmp_2412: int, out_Tmp_2413: int, out_Tmp_2415: int, out_Tmp_2416: int, out_LfnChecksum: int, out_Tmp_2417: int, out_Tmp_2420: int, out_Tmp_2421: int, out_Tmp_2422: int, out_Tmp_2423: int, out_Tmp_2424: int, out_LfnIndex: int, out_Tmp_2425: int, out_Tmp_2426: int, out_LfnSize: int, out_Lfn_11: int, out_sdv_1450: int, out_Tmp_2427: int, out_Tmp_2428: int, out_Tmp_2430: int, out_Tmp_2431: int, out_Tmp_2432: int, out_Tmp_2433: int, out_Tmp_2434: int, out_sdv_1451: int, out_Tmp_2435: int, out_Tmp_2436: int, out_Tmp_2439: int, out_Tmp_2441: int, out_CheckTail: int, out_Tmp_2442: int, out_Tmp_2444: int, out_Tmp_2445: int, out_Tmp_2446: int, out_sdv_1453: int, out_Tmp_2447: int, out_Tmp_2448: int, out_Tmp_2449: int, out_FoundValidLfn: int, out_Tmp_2450: int, out_sdv_1454: int, out_sdv_1455: int, out_Tmp_2451: int, out_Tmp_2452: int, out_Tmp_2453: int, out_Tmp_2456: int, out_Tmp_2458: int, out_Tmp_2459: int, out_Tmp_2460: int, out_Tmp_2461: int, out_Tmp_2462: int, out_Tmp_2464: int, out_Tmp_2466: int, out_Tmp_2467: int, out_Tmp_2468: int, out_Tmp_2469: int, out_Tmp_2470: int, out_Tmp_2472: int, out_Tmp_2473: int, out_boogieTmp: int);
  modifies Mem_T.P_PACKED_DIRENT, alloc;
  free ensures {:va_keep} out_LfnInProgress == 0 || out_LfnInProgress == 1 || out_LfnInProgress == in_LfnInProgress;
  free ensures {:va_keep} out_Tmp_2439 == 0 || out_Tmp_2439 == 1 || out_Tmp_2439 == in_Tmp_2439;
  free ensures {:va_keep} out_CheckTail == 1 || out_CheckTail == 0 || out_CheckTail == in_CheckTail;
  free ensures {:va_keep} out_sdv_1453 == 0 || out_sdv_1453 == 1 || out_sdv_1453 == in_sdv_1453;
  free ensures {:va_keep} out_FoundValidLfn == 0 || out_FoundValidLfn == 1 || out_FoundValidLfn == in_FoundValidLfn;
  free ensures {:va_keep} out_sdv_1454 == in_sdv_1454;
  free ensures {:va_keep} out_sdv_1455 == 0 || out_sdv_1455 == 1 || out_sdv_1455 == in_sdv_1455;
  free ensures {:va_keep} out_boogieTmp == -1073741675 || out_boogieTmp == 0 || out_boogieTmp == in_boogieTmp;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatGetEaFile#0_loop_L210(in_CurrentIndex_2: int, in_Index_7: int) returns (out_Index_7: int)
{

  entry:
    out_Index_7 := in_Index_7;
    goto L210, exit;

  exit:
    return;

  L210:
    goto anon64_Else;

  anon64_Else:
    assume {:partition} out_Index_7 != 0;
    assume {:nonnull} in_CurrentIndex_2 != 0;
    assume in_CurrentIndex_2 > 0;
    out_Index_7 := out_Index_7 - 1;
    goto anon64_Else_dummy;

  anon64_Else_dummy:
    havoc out_Index_7;
    return;
}



procedure {:LoopProcedure} FatGetEaFile#0_loop_L210(in_CurrentIndex_2: int, in_Index_7: int) returns (out_Index_7: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatGetEaFile#0_loop_L204(in_CurrentIndex_2: int, in_AllocatedClusters: int, in_Index_7: int) returns (out_Index_7: int)
{

  entry:
    out_Index_7 := in_Index_7;
    goto L204, exit;

  exit:
    return;

  L204:
    assume {:CounterLoop 240} {:Counter "Index_7"} true;
    goto anon63_Else;

  anon63_Else:
    assume {:partition} out_Index_7 != 0;
    assume {:nonnull} in_CurrentIndex_2 != 0;
    assume in_CurrentIndex_2 > 0;
    out_Index_7 := out_Index_7 - 1;
    goto anon63_Else_dummy;

  anon63_Else_dummy:
    havoc out_Index_7;
    return;
}



procedure {:LoopProcedure} FatGetEaFile#0_loop_L204(in_CurrentIndex_2: int, in_AllocatedClusters: int, in_Index_7: int) returns (out_Index_7: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatGetEaFile#1_loop_L210(in_CurrentIndex_2: int, in_Index_7: int) returns (out_Index_7: int)
{

  entry:
    out_Index_7 := in_Index_7;
    goto L210, exit;

  exit:
    return;

  L210:
    goto anon64_Else;

  anon64_Else:
    assume {:partition} out_Index_7 != 0;
    assume {:nonnull} in_CurrentIndex_2 != 0;
    assume in_CurrentIndex_2 > 0;
    out_Index_7 := out_Index_7 - 1;
    goto anon64_Else_dummy;

  anon64_Else_dummy:
    havoc out_Index_7;
    return;
}



procedure {:LoopProcedure} FatGetEaFile#1_loop_L210(in_CurrentIndex_2: int, in_Index_7: int) returns (out_Index_7: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatGetEaFile#1_loop_L204(in_CurrentIndex_2: int, in_AllocatedClusters: int, in_Index_7: int) returns (out_Index_7: int)
{

  entry:
    out_Index_7 := in_Index_7;
    goto L204, exit;

  exit:
    return;

  L204:
    assume {:CounterLoop 240} {:Counter "Index_7"} true;
    goto anon63_Else;

  anon63_Else:
    assume {:partition} out_Index_7 != 0;
    assume {:nonnull} in_CurrentIndex_2 != 0;
    assume in_CurrentIndex_2 > 0;
    out_Index_7 := out_Index_7 - 1;
    goto anon63_Else_dummy;

  anon63_Else_dummy:
    havoc out_Index_7;
    return;
}



procedure {:LoopProcedure} FatGetEaFile#1_loop_L204(in_CurrentIndex_2: int, in_AllocatedClusters: int, in_Index_7: int) returns (out_Index_7: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDeleteDirent#0_loop_L31(in_Offset_4: int, in_Dirent_38: int, in_Bcb_24: int, in_DontCare_7: int, in_Tmp_2582: int, in_IrpContext_163: int, in_FcbOrDcb_15: int) returns (out_Offset_4: int, out_Tmp_2582: int)
{
  var vslice_dummy_var_1850: int;

  entry:
    out_Offset_4, out_Tmp_2582 := in_Offset_4, in_Tmp_2582;
    goto L31, exit;

  exit:
    return;

  L31:
    assume {:nonnull} in_FcbOrDcb_15 != 0;
    assume in_FcbOrDcb_15 > 0;
    goto anon32_Else;

  anon32_Else:
    assume {:nonnull} in_FcbOrDcb_15 != 0;
    assume in_FcbOrDcb_15 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L35;

  L35:
    assume {:nonnull} in_Bcb_24 != 0;
    assume in_Bcb_24 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} in_Bcb_24 != 0;
    assume in_Bcb_24 > 0;
    goto L36;

  L36:
    assume {:nonnull} in_FcbOrDcb_15 != 0;
    assume in_FcbOrDcb_15 > 0;
    havoc vslice_dummy_var_1850;
    call {:si_unique_call 5262} FatPrepareWriteDirectoryFile(in_IrpContext_163, vslice_dummy_var_1850, out_Offset_4, 32, in_Bcb_24, in_Dirent_38, 0, 1, in_DontCare_7);
    goto L43;

  L43:
    assume {:nonnull} in_Dirent_38 != 0;
    assume in_Dirent_38 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_38] > 0;
    havoc out_Tmp_2582;
    assume {:nonnull} out_Tmp_2582 != 0;
    assume out_Tmp_2582 > 0;
    out_Offset_4 := out_Offset_4 + 32;
    assume {:nonnull} in_Dirent_38 != 0;
    assume in_Dirent_38 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_38] := Mem_T.P_PACKED_DIRENT[in_Dirent_38];
    goto L43_dummy;

  L43_dummy:
    call {:si_unique_call 5263} {:si_old_unique_call 1} out_Offset_4, out_Tmp_2582 := FatDeleteDirent#0_loop_L31(out_Offset_4, in_Dirent_38, in_Bcb_24, in_DontCare_7, out_Tmp_2582, in_IrpContext_163, in_FcbOrDcb_15);
    return;

  anon35_Then:
    goto L36;

  anon33_Then:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} BAND(out_Offset_4, 4095) != 0;
    goto L43;

  anon34_Then:
    assume {:partition} BAND(out_Offset_4, 4095) == 0;
    goto L35;
}



procedure {:LoopProcedure} FatDeleteDirent#0_loop_L31(in_Offset_4: int, in_Dirent_38: int, in_Bcb_24: int, in_DontCare_7: int, in_Tmp_2582: int, in_IrpContext_163: int, in_FcbOrDcb_15: int) returns (out_Offset_4: int, out_Tmp_2582: int);
  modifies Mem_T.P_PACKED_DIRENT, alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatDeleteDirent#1_loop_L31(in_Offset_4: int, in_Dirent_38: int, in_Bcb_24: int, in_DontCare_7: int, in_Tmp_2582: int, in_IrpContext_163: int, in_FcbOrDcb_15: int) returns (out_Offset_4: int, out_Tmp_2582: int)
{
  var vslice_dummy_var_1851: int;

  entry:
    out_Offset_4, out_Tmp_2582 := in_Offset_4, in_Tmp_2582;
    goto L31, exit;

  exit:
    return;

  L31:
    assume {:nonnull} in_FcbOrDcb_15 != 0;
    assume in_FcbOrDcb_15 > 0;
    goto anon32_Else;

  anon32_Else:
    assume {:nonnull} in_FcbOrDcb_15 != 0;
    assume in_FcbOrDcb_15 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L35;

  L35:
    assume {:nonnull} in_Bcb_24 != 0;
    assume in_Bcb_24 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} in_Bcb_24 != 0;
    assume in_Bcb_24 > 0;
    goto L36;

  L36:
    assume {:nonnull} in_FcbOrDcb_15 != 0;
    assume in_FcbOrDcb_15 > 0;
    havoc vslice_dummy_var_1851;
    call {:si_unique_call 5264} FatPrepareWriteDirectoryFile(in_IrpContext_163, vslice_dummy_var_1851, out_Offset_4, 32, in_Bcb_24, in_Dirent_38, 0, 1, in_DontCare_7);
    goto L43;

  L43:
    assume {:nonnull} in_Dirent_38 != 0;
    assume in_Dirent_38 > 0;
    assume {:nonnull} Mem_T.P_PACKED_DIRENT[in_Dirent_38] != 0;
    assume Mem_T.P_PACKED_DIRENT[in_Dirent_38] > 0;
    havoc out_Tmp_2582;
    assume {:nonnull} out_Tmp_2582 != 0;
    assume out_Tmp_2582 > 0;
    out_Offset_4 := out_Offset_4 + 32;
    assume {:nonnull} in_Dirent_38 != 0;
    assume in_Dirent_38 > 0;
    Mem_T.P_PACKED_DIRENT[in_Dirent_38] := Mem_T.P_PACKED_DIRENT[in_Dirent_38];
    goto L43_dummy;

  L43_dummy:
    call {:si_unique_call 5265} {:si_old_unique_call 1} out_Offset_4, out_Tmp_2582 := FatDeleteDirent#1_loop_L31(out_Offset_4, in_Dirent_38, in_Bcb_24, in_DontCare_7, out_Tmp_2582, in_IrpContext_163, in_FcbOrDcb_15);
    return;

  anon35_Then:
    goto L36;

  anon33_Then:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} BAND(out_Offset_4, 4095) != 0;
    goto L43;

  anon34_Then:
    assume {:partition} BAND(out_Offset_4, 4095) == 0;
    goto L35;
}



procedure {:LoopProcedure} FatDeleteDirent#1_loop_L31(in_Offset_4: int, in_Dirent_38: int, in_Bcb_24: int, in_DontCare_7: int, in_Tmp_2582: int, in_IrpContext_163: int, in_FcbOrDcb_15: int) returns (out_Offset_4: int, out_Tmp_2582: int);
  modifies Mem_T.P_PACKED_DIRENT, alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatFspClose#0_loop_L14(in_sdv_1648: int, in_sdv_1649: int, in_LastVcb: int, in_FreeContext: int, in_CurrentVcb: int, in_Tmp_2948: int, in_sdv_1653: int, in_LoopsWithVcbHeld: int, in_CloseContext_1: int, in_Vcb_112: int, in_vslice_dummy_var_643: int, in_vslice_dummy_var_644: int, in_vslice_dummy_var_645: int) returns (out_sdv_1648: int, out_sdv_1649: int, out_LastVcb: int, out_FreeContext: int, out_CurrentVcb: int, out_Tmp_2948: int, out_sdv_1653: int, out_LoopsWithVcbHeld: int, out_CloseContext_1: int, out_vslice_dummy_var_643: int, out_vslice_dummy_var_644: int, out_vslice_dummy_var_645: int)
{
  var vslice_dummy_var_1852: int;
  var vslice_dummy_var_1853: int;
  var vslice_dummy_var_1854: int;

  entry:
    out_sdv_1648, out_sdv_1649, out_LastVcb, out_FreeContext, out_CurrentVcb, out_Tmp_2948, out_sdv_1653, out_LoopsWithVcbHeld, out_CloseContext_1, out_vslice_dummy_var_643, out_vslice_dummy_var_644, out_vslice_dummy_var_645 := in_sdv_1648, in_sdv_1649, in_LastVcb, in_FreeContext, in_CurrentVcb, in_Tmp_2948, in_sdv_1653, in_LoopsWithVcbHeld, in_CloseContext_1, in_vslice_dummy_var_643, in_vslice_dummy_var_644, in_vslice_dummy_var_645;
    goto L14, exit;

  exit:
    return;

  L14:
    call {:si_unique_call 5266} out_CloseContext_1 := FatRemoveClose(in_Vcb_112, out_LastVcb);
    goto anon29_Else;

  anon29_Else:
    assume {:partition} out_CloseContext_1 != 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} in_Vcb_112 != 0;
    goto L22;

  L22:
    out_LastVcb := out_CurrentVcb;
    assume {:nonnull} out_CloseContext_1 != 0;
    assume out_CloseContext_1 > 0;
    havoc out_FreeContext;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} out_FreeContext != 0;
    out_Tmp_2948 := 0;
    goto L29;

  L29:
    assume {:nonnull} out_CloseContext_1 != 0;
    assume out_CloseContext_1 > 0;
    havoc vslice_dummy_var_1852;
    havoc vslice_dummy_var_1853;
    havoc vslice_dummy_var_1854;
    call {:si_unique_call 5268} out_vslice_dummy_var_643 := FatCommonClose#0(vslice_dummy_var_1852, vslice_dummy_var_1853, out_Tmp_2948, vslice_dummy_var_1854, 1, 0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} out_FreeContext != 0;
    call {:si_unique_call 5267} sdv_ExFreePool(0);
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    goto L_BAF_17;

  L_BAF_17:
    call {:si_unique_call 5278} {:si_old_unique_call 1} out_sdv_1648, out_sdv_1649, out_LastVcb, out_FreeContext, out_CurrentVcb, out_Tmp_2948, out_sdv_1653, out_LoopsWithVcbHeld, out_CloseContext_1, out_vslice_dummy_var_643, out_vslice_dummy_var_644, out_vslice_dummy_var_645 := FatFspClose#0_loop_L14(out_sdv_1648, out_sdv_1649, out_LastVcb, out_FreeContext, out_CurrentVcb, out_Tmp_2948, out_sdv_1653, out_LoopsWithVcbHeld, out_CloseContext_1, in_Vcb_112, out_vslice_dummy_var_643, out_vslice_dummy_var_644, out_vslice_dummy_var_645);
    return;

  anon33_Then:
    assume {:partition} out_FreeContext == 0;
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    goto L_BAF_17;

  anon40_Then:
    assume {:partition} out_FreeContext == 0;
    call {:si_unique_call 5269} out_sdv_1649 := sdv_containing_record(out_CloseContext_1, 12);
    out_Tmp_2948 := out_sdv_1649;
    goto L29;

  anon31_Then:
    assume {:partition} in_Vcb_112 == 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} out_CurrentVcb != 0;
    call {:si_unique_call 5270} ExReleaseResourceLite(0);
    out_CurrentVcb := 0;
    goto L22;

  anon35_Then:
    assume {:partition} out_CurrentVcb == 0;
    goto L22;

  anon32_Then:
    assume {:nonnull} out_CloseContext_1 != 0;
    assume out_CloseContext_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    out_LoopsWithVcbHeld := 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} out_CurrentVcb != 0;
    call {:si_unique_call 5277} ExReleaseResourceLite(0);
    goto L53;

  L53:
    assume {:nonnull} out_CloseContext_1 != 0;
    assume out_CloseContext_1 > 0;
    havoc out_CurrentVcb;
    call {:si_unique_call 5272} out_vslice_dummy_var_645 := ExAcquireResourceExclusiveLite(0, 1);
    goto L60;

  L60:
    assume {:nonnull} out_CurrentVcb != 0;
    assume out_CurrentVcb > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 5271} ExReleaseResourceLite(0);
    out_CurrentVcb := 0;
    goto L22;

  anon36_Then:
    goto L22;

  anon41_Then:
    assume {:partition} out_CurrentVcb == 0;
    goto L53;

  anon34_Then:
    out_LoopsWithVcbHeld := out_LoopsWithVcbHeld + 1;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} out_LoopsWithVcbHeld >= 20;
    call {:si_unique_call 5275} out_sdv_1653 := ExGetSharedWaiterCount(0);
    call {:si_unique_call 5276} out_sdv_1648 := ExGetExclusiveWaiterCount(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} out_sdv_1653 + out_sdv_1648 != 0;
    call {:si_unique_call 5273} ExReleaseResourceLite(0);
    call {:si_unique_call 5274} out_vslice_dummy_var_644 := ExAcquireResourceExclusiveLite(0, 1);
    goto L72;

  L72:
    out_LoopsWithVcbHeld := 0;
    goto L60;

  anon37_Then:
    assume {:partition} out_sdv_1653 + out_sdv_1648 == 0;
    goto L72;

  anon42_Then:
    assume {:partition} 20 > out_LoopsWithVcbHeld;
    goto L60;
}



procedure {:LoopProcedure} FatFspClose#0_loop_L14(in_sdv_1648: int, in_sdv_1649: int, in_LastVcb: int, in_FreeContext: int, in_CurrentVcb: int, in_Tmp_2948: int, in_sdv_1653: int, in_LoopsWithVcbHeld: int, in_CloseContext_1: int, in_Vcb_112: int, in_vslice_dummy_var_643: int, in_vslice_dummy_var_644: int, in_vslice_dummy_var_645: int) returns (out_sdv_1648: int, out_sdv_1649: int, out_LastVcb: int, out_FreeContext: int, out_CurrentVcb: int, out_Tmp_2948: int, out_sdv_1653: int, out_LoopsWithVcbHeld: int, out_CloseContext_1: int, out_vslice_dummy_var_643: int, out_vslice_dummy_var_644: int, out_vslice_dummy_var_645: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_1649 == in_sdv_1649;
  free ensures {:va_keep} out_Tmp_2948 == 0 || out_Tmp_2948 == in_Tmp_2948;
  free ensures {:va_keep} out_CloseContext_1 == 0 || out_CloseContext_1 == in_CloseContext_1;
  free ensures {:va_keep} out_vslice_dummy_var_643 == 0 || out_vslice_dummy_var_643 == 259 || out_vslice_dummy_var_643 == in_vslice_dummy_var_643;
  free ensures {:va_keep} out_vslice_dummy_var_644 == 0 || out_vslice_dummy_var_644 == 1 || out_vslice_dummy_var_644 == in_vslice_dummy_var_644;
  free ensures {:va_keep} out_vslice_dummy_var_645 == 0 || out_vslice_dummy_var_645 == 1 || out_vslice_dummy_var_645 == in_vslice_dummy_var_645;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatFspClose#1_loop_L14(in_sdv_1648: int, in_sdv_1649: int, in_LastVcb: int, in_FreeContext: int, in_CurrentVcb: int, in_Tmp_2948: int, in_sdv_1653: int, in_LoopsWithVcbHeld: int, in_CloseContext_1: int, in_Vcb_112: int, in_vslice_dummy_var_647: int, in_vslice_dummy_var_648: int, in_vslice_dummy_var_649: int) returns (out_sdv_1648: int, out_sdv_1649: int, out_LastVcb: int, out_FreeContext: int, out_CurrentVcb: int, out_Tmp_2948: int, out_sdv_1653: int, out_LoopsWithVcbHeld: int, out_CloseContext_1: int, out_vslice_dummy_var_647: int, out_vslice_dummy_var_648: int, out_vslice_dummy_var_649: int)
{
  var vslice_dummy_var_1855: int;
  var vslice_dummy_var_1856: int;
  var vslice_dummy_var_1857: int;

  entry:
    out_sdv_1648, out_sdv_1649, out_LastVcb, out_FreeContext, out_CurrentVcb, out_Tmp_2948, out_sdv_1653, out_LoopsWithVcbHeld, out_CloseContext_1, out_vslice_dummy_var_647, out_vslice_dummy_var_648, out_vslice_dummy_var_649 := in_sdv_1648, in_sdv_1649, in_LastVcb, in_FreeContext, in_CurrentVcb, in_Tmp_2948, in_sdv_1653, in_LoopsWithVcbHeld, in_CloseContext_1, in_vslice_dummy_var_647, in_vslice_dummy_var_648, in_vslice_dummy_var_649;
    goto L14, exit;

  exit:
    return;

  L14:
    call {:si_unique_call 5279} out_CloseContext_1 := FatRemoveClose(in_Vcb_112, out_LastVcb);
    goto anon29_Else;

  anon29_Else:
    assume {:partition} out_CloseContext_1 != 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} in_Vcb_112 != 0;
    goto L22;

  L22:
    out_LastVcb := out_CurrentVcb;
    assume {:nonnull} out_CloseContext_1 != 0;
    assume out_CloseContext_1 > 0;
    havoc out_FreeContext;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} out_FreeContext != 0;
    out_Tmp_2948 := 0;
    goto L29;

  L29:
    assume {:nonnull} out_CloseContext_1 != 0;
    assume out_CloseContext_1 > 0;
    havoc vslice_dummy_var_1855;
    havoc vslice_dummy_var_1856;
    havoc vslice_dummy_var_1857;
    call {:si_unique_call 5281} out_vslice_dummy_var_647 := FatCommonClose#1(vslice_dummy_var_1855, vslice_dummy_var_1856, out_Tmp_2948, vslice_dummy_var_1857, 1, 0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} out_FreeContext != 0;
    call {:si_unique_call 5280} sdv_ExFreePool(0);
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    goto L_BAF_18;

  L_BAF_18:
    call {:si_unique_call 5291} {:si_old_unique_call 1} out_sdv_1648, out_sdv_1649, out_LastVcb, out_FreeContext, out_CurrentVcb, out_Tmp_2948, out_sdv_1653, out_LoopsWithVcbHeld, out_CloseContext_1, out_vslice_dummy_var_647, out_vslice_dummy_var_648, out_vslice_dummy_var_649 := FatFspClose#1_loop_L14(out_sdv_1648, out_sdv_1649, out_LastVcb, out_FreeContext, out_CurrentVcb, out_Tmp_2948, out_sdv_1653, out_LoopsWithVcbHeld, out_CloseContext_1, in_Vcb_112, out_vslice_dummy_var_647, out_vslice_dummy_var_648, out_vslice_dummy_var_649);
    return;

  anon33_Then:
    assume {:partition} out_FreeContext == 0;
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    goto L_BAF_18;

  anon40_Then:
    assume {:partition} out_FreeContext == 0;
    call {:si_unique_call 5282} out_sdv_1649 := sdv_containing_record(out_CloseContext_1, 12);
    out_Tmp_2948 := out_sdv_1649;
    goto L29;

  anon31_Then:
    assume {:partition} in_Vcb_112 == 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} out_CurrentVcb != 0;
    call {:si_unique_call 5283} ExReleaseResourceLite(0);
    out_CurrentVcb := 0;
    goto L22;

  anon35_Then:
    assume {:partition} out_CurrentVcb == 0;
    goto L22;

  anon32_Then:
    assume {:nonnull} out_CloseContext_1 != 0;
    assume out_CloseContext_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    out_LoopsWithVcbHeld := 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} out_CurrentVcb != 0;
    call {:si_unique_call 5290} ExReleaseResourceLite(0);
    goto L53;

  L53:
    assume {:nonnull} out_CloseContext_1 != 0;
    assume out_CloseContext_1 > 0;
    havoc out_CurrentVcb;
    call {:si_unique_call 5285} out_vslice_dummy_var_649 := ExAcquireResourceExclusiveLite(0, 1);
    goto L60;

  L60:
    assume {:nonnull} out_CurrentVcb != 0;
    assume out_CurrentVcb > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 5284} ExReleaseResourceLite(0);
    out_CurrentVcb := 0;
    goto L22;

  anon36_Then:
    goto L22;

  anon41_Then:
    assume {:partition} out_CurrentVcb == 0;
    goto L53;

  anon34_Then:
    out_LoopsWithVcbHeld := out_LoopsWithVcbHeld + 1;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} out_LoopsWithVcbHeld >= 20;
    call {:si_unique_call 5288} out_sdv_1653 := ExGetSharedWaiterCount(0);
    call {:si_unique_call 5289} out_sdv_1648 := ExGetExclusiveWaiterCount(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} out_sdv_1653 + out_sdv_1648 != 0;
    call {:si_unique_call 5286} ExReleaseResourceLite(0);
    call {:si_unique_call 5287} out_vslice_dummy_var_648 := ExAcquireResourceExclusiveLite(0, 1);
    goto L72;

  L72:
    out_LoopsWithVcbHeld := 0;
    goto L60;

  anon37_Then:
    assume {:partition} out_sdv_1653 + out_sdv_1648 == 0;
    goto L72;

  anon42_Then:
    assume {:partition} 20 > out_LoopsWithVcbHeld;
    goto L60;
}



procedure {:LoopProcedure} FatFspClose#1_loop_L14(in_sdv_1648: int, in_sdv_1649: int, in_LastVcb: int, in_FreeContext: int, in_CurrentVcb: int, in_Tmp_2948: int, in_sdv_1653: int, in_LoopsWithVcbHeld: int, in_CloseContext_1: int, in_Vcb_112: int, in_vslice_dummy_var_647: int, in_vslice_dummy_var_648: int, in_vslice_dummy_var_649: int) returns (out_sdv_1648: int, out_sdv_1649: int, out_LastVcb: int, out_FreeContext: int, out_CurrentVcb: int, out_Tmp_2948: int, out_sdv_1653: int, out_LoopsWithVcbHeld: int, out_CloseContext_1: int, out_vslice_dummy_var_647: int, out_vslice_dummy_var_648: int, out_vslice_dummy_var_649: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_1649 == in_sdv_1649;
  free ensures {:va_keep} out_Tmp_2948 == 0 || out_Tmp_2948 == in_Tmp_2948;
  free ensures {:va_keep} out_CloseContext_1 == 0 || out_CloseContext_1 == in_CloseContext_1;
  free ensures {:va_keep} out_vslice_dummy_var_647 == 0 || out_vslice_dummy_var_647 == 259 || out_vslice_dummy_var_647 == in_vslice_dummy_var_647;
  free ensures {:va_keep} out_vslice_dummy_var_648 == 0 || out_vslice_dummy_var_648 == 1 || out_vslice_dummy_var_648 == in_vslice_dummy_var_648;
  free ensures {:va_keep} out_vslice_dummy_var_649 == 0 || out_vslice_dummy_var_649 == 1 || out_vslice_dummy_var_649 == in_vslice_dummy_var_649;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonClose#0_loop_L142(in_ParentDcb_7: int, in_CurrentDcb: int, in_Tmp_2959: int, in_IrpContext_205: int, in_sdv_1670: int, in_Vcb_113: int, in_vslice_dummy_var_654: int, in_vslice_dummy_var_655: int) returns (out_ParentDcb_7: int, out_CurrentDcb: int, out_Tmp_2959: int, out_sdv_1670: int, out_vslice_dummy_var_654: int, out_vslice_dummy_var_655: int)
{

  entry:
    out_ParentDcb_7, out_CurrentDcb, out_Tmp_2959, out_sdv_1670, out_vslice_dummy_var_654, out_vslice_dummy_var_655 := in_ParentDcb_7, in_CurrentDcb, in_Tmp_2959, in_sdv_1670, in_vslice_dummy_var_654, in_vslice_dummy_var_655;
    goto L142, exit;

  exit:
    return;

  L142:
    out_Tmp_2959 := out_ParentDcb_7;
    assume {:nonnull} out_Tmp_2959 != 0;
    assume out_Tmp_2959 > 0;
    goto anon118_Else;

  anon118_Else:
    call {:si_unique_call 5295} out_sdv_1670 := sdv_IsListEmpty(0);
    goto anon96_Else;

  anon96_Else:
    assume {:partition} out_sdv_1670 != 0;
    assume {:nonnull} out_ParentDcb_7 != 0;
    assume out_ParentDcb_7 > 0;
    goto anon97_Else;

  anon97_Else:
    assume {:nonnull} out_ParentDcb_7 != 0;
    assume out_ParentDcb_7 > 0;
    goto anon98_Else;

  anon98_Else:
    assume {:nonnull} out_ParentDcb_7 != 0;
    assume out_ParentDcb_7 > 0;
    call {:si_unique_call 5293} out_vslice_dummy_var_654 := corral_nondet();
    assume {:nonnull} out_ParentDcb_7 != 0;
    assume out_ParentDcb_7 > 0;
    call {:si_unique_call 5294} out_vslice_dummy_var_655 := sdv_ObDereferenceObject(0);
    assume {:nonnull} out_ParentDcb_7 != 0;
    assume out_ParentDcb_7 > 0;
    goto anon99_Else;

  anon99_Else:
    out_CurrentDcb := out_ParentDcb_7;
    assume {:nonnull} out_CurrentDcb != 0;
    assume out_CurrentDcb > 0;
    havoc out_ParentDcb_7;
    assume {:nonnull} in_Vcb_113 != 0;
    assume in_Vcb_113 > 0;
    call {:si_unique_call 5292} FatDeleteFcb_Real(in_IrpContext_205, out_CurrentDcb);
    goto anon99_Else_dummy;

  anon99_Else_dummy:
    call {:si_unique_call 5296} {:si_old_unique_call 1} out_ParentDcb_7, out_CurrentDcb, out_Tmp_2959, out_sdv_1670, out_vslice_dummy_var_654, out_vslice_dummy_var_655 := FatCommonClose#0_loop_L142(out_ParentDcb_7, out_CurrentDcb, out_Tmp_2959, in_IrpContext_205, out_sdv_1670, in_Vcb_113, out_vslice_dummy_var_654, out_vslice_dummy_var_655);
    return;
}



procedure {:LoopProcedure} FatCommonClose#0_loop_L142(in_ParentDcb_7: int, in_CurrentDcb: int, in_Tmp_2959: int, in_IrpContext_205: int, in_sdv_1670: int, in_Vcb_113: int, in_vslice_dummy_var_654: int, in_vslice_dummy_var_655: int) returns (out_ParentDcb_7: int, out_CurrentDcb: int, out_Tmp_2959: int, out_sdv_1670: int, out_vslice_dummy_var_654: int, out_vslice_dummy_var_655: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_1670 == 1 || out_sdv_1670 == 0 || out_sdv_1670 == in_sdv_1670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation FatCommonClose#1_loop_L142(in_ParentDcb_7: int, in_CurrentDcb: int, in_Tmp_2959: int, in_IrpContext_205: int, in_sdv_1670: int, in_Vcb_113: int, in_vslice_dummy_var_667: int, in_vslice_dummy_var_668: int) returns (out_ParentDcb_7: int, out_CurrentDcb: int, out_Tmp_2959: int, out_sdv_1670: int, out_vslice_dummy_var_667: int, out_vslice_dummy_var_668: int)
{

  entry:
    out_ParentDcb_7, out_CurrentDcb, out_Tmp_2959, out_sdv_1670, out_vslice_dummy_var_667, out_vslice_dummy_var_668 := in_ParentDcb_7, in_CurrentDcb, in_Tmp_2959, in_sdv_1670, in_vslice_dummy_var_667, in_vslice_dummy_var_668;
    goto L142, exit;

  exit:
    return;

  L142:
    out_Tmp_2959 := out_ParentDcb_7;
    assume {:nonnull} out_Tmp_2959 != 0;
    assume out_Tmp_2959 > 0;
    goto anon118_Else;

  anon118_Else:
    call {:si_unique_call 5300} out_sdv_1670 := sdv_IsListEmpty(0);
    goto anon96_Else;

  anon96_Else:
    assume {:partition} out_sdv_1670 != 0;
    assume {:nonnull} out_ParentDcb_7 != 0;
    assume out_ParentDcb_7 > 0;
    goto anon97_Else;

  anon97_Else:
    assume {:nonnull} out_ParentDcb_7 != 0;
    assume out_ParentDcb_7 > 0;
    goto anon98_Else;

  anon98_Else:
    assume {:nonnull} out_ParentDcb_7 != 0;
    assume out_ParentDcb_7 > 0;
    call {:si_unique_call 5298} out_vslice_dummy_var_667 := corral_nondet();
    assume {:nonnull} out_ParentDcb_7 != 0;
    assume out_ParentDcb_7 > 0;
    call {:si_unique_call 5299} out_vslice_dummy_var_668 := sdv_ObDereferenceObject(0);
    assume {:nonnull} out_ParentDcb_7 != 0;
    assume out_ParentDcb_7 > 0;
    goto anon99_Else;

  anon99_Else:
    out_CurrentDcb := out_ParentDcb_7;
    assume {:nonnull} out_CurrentDcb != 0;
    assume out_CurrentDcb > 0;
    havoc out_ParentDcb_7;
    assume {:nonnull} in_Vcb_113 != 0;
    assume in_Vcb_113 > 0;
    call {:si_unique_call 5297} FatDeleteFcb_Real(in_IrpContext_205, out_CurrentDcb);
    goto anon99_Else_dummy;

  anon99_Else_dummy:
    call {:si_unique_call 5301} {:si_old_unique_call 1} out_ParentDcb_7, out_CurrentDcb, out_Tmp_2959, out_sdv_1670, out_vslice_dummy_var_667, out_vslice_dummy_var_668 := FatCommonClose#1_loop_L142(out_ParentDcb_7, out_CurrentDcb, out_Tmp_2959, in_IrpContext_205, out_sdv_1670, in_Vcb_113, out_vslice_dummy_var_667, out_vslice_dummy_var_668);
    return;
}



procedure {:LoopProcedure} FatCommonClose#1_loop_L142(in_ParentDcb_7: int, in_CurrentDcb: int, in_Tmp_2959: int, in_IrpContext_205: int, in_sdv_1670: int, in_Vcb_113: int, in_vslice_dummy_var_667: int, in_vslice_dummy_var_668: int) returns (out_ParentDcb_7: int, out_CurrentDcb: int, out_Tmp_2959: int, out_sdv_1670: int, out_vslice_dummy_var_667: int, out_vslice_dummy_var_668: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_1670 == 1 || out_sdv_1670 == 0 || out_sdv_1670 == in_sdv_1670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



procedure fakeMain() returns (Tmp_1315: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error, Mem_T.P_PACKED_DIRENT;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 1 || old(markedPending) == 0;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 1 || old(stack_location) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 1 || stack_location == 0;



implementation {:entrypoint} fakeMain() returns (Tmp_1315: int, dup_assertVar: bool)
{

  start:
    call Tmp_1315, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


